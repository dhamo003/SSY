@model SSY.Models.RegistartionForUser
@{
    ViewBag.Title = "ExistngUserEdit";
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/Common.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<script>
    var Messeage = @Html.Raw(Json.Encode(ViewBag.Message))
    var Userid = @Html.Raw(Json.Encode(ViewBag.Userid))
    var RegistrationType = @Html.Raw(Json.Encode(ViewBag.RegistrationType))
    var Code = @Html.Raw(Json.Encode(ViewBag.Code))



</script>
<style>
    #exisdob {
        z-index: 1000;
    }

    body {
        color: black !important;
        font-weight: 100 !important;
    }

    .content-back {
        margin: auto;
        padding-top: 5px;
        background: #ffffff;
        height: 630px;
        overflow-y: auto;
        overflow-x: hidden;
    }

        .content-back::-webkit-scrollbar-track {
            background: #ffffff;
        }

        .content-back::-webkit-scrollbar {
            width: 8px;
        }

        .content-back::-webkit-scrollbar-thumb {
            background-color: #ffffff;
        }

    .overlay-black {
        background: rgba(0,0,0,0.6);
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
    }

    .leg-sty {
        color: black;
    }

    .footer {
        position: absolute;
        left: 0;
        bottom: 0;
        right: 0;
    }

        .footer p {
            line-height: 0px;
            color: #fff !important;
        }

    b {
        font-weight: 100 !important;
    }

    .block-left {
        height: 100%;
        position: fixed;
        text-align: center;
    }

    legend {
        border-bottom: none !important;
        padding-left: 20px;
        font-weight: 100 !important;
    }

    .custom-border {
    }

    input, select {
    }

    header {
        z-index: 99;
    }

    footer p {
        margin-bottom: 5px !important;
    }

    label {
        color: #000000 !important;
        font-weight: 100 !important;
    }

    .label-data {
        font-weight: bold !important;
        margin-left: 15px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
    }

    .fileUpload {
        position: relative;
        overflow: hidden;
        margin: 10px;
    }

        .fileUpload input.upload {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            filter: alpha(opacity=0);
        }

    .input-label {
        min-width: 128px;
    }

    .input-select {
        width: 250px;
    }

    fieldset.custom-border {
        border: 1px groove blue !important;
        padding: 0 1.4em 1.4em 1.4em !important;
        -webkit-box-shadow: 0px 0px 0px 0px #f00;
        box-shadow: 0px 0px 0px 0px #f00;
        border-radius: 6px;
    }

    legend.custom-border {
        font-size: 1.1em !important;
        font-weight: bold !important;
        text-align: left !important;
        width: auto;
        padding: 0 10px;
        border-bottom: none;
    }

    .selectboxit-container .selectboxit, .selectboxit-container .selectboxit-options {
        width: 600px;
        border-radius: 0;
        max-height: 240px;
    }

    .selectboxit-options .selectboxit-option .selectboxit-option-anchor {
        white-space: normal;
        min-height: 30px;
        height: auto;
    }

    table.table-bordered.tblNaminee tbody tr td {
        vertical-align: middle !important;
    }

    .modal-backdrop {
        display: none !important;
    }
</style>
<script>
    var validation = @Html.Raw(Json.Encode(ViewBag.validachck))
    var valMes = @Html.Raw(Json.Encode(ViewBag.valMes))
</script>

@using (Html.BeginForm("ExistngUserEdit", "Registration", FormMethod.Post, new { onsubmit = "return FinalExistSubmit()", enctype = "multipart/form-data" }))
{
    <br />
    <br />
    <br />
    <div class="container-fluid" id="divexist">
        @*<a href="/Registration/BenificiaryReg" id="FrstBackbtn" class="btn btn-primary pull-right btnback" style="margin-right:10px;display:none;"> <span class="glyphicon glyphicon-backward" style="font-size:15px !important"></span> Back</a>*@
        <div class="row" style="display:none;">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="input-group extra-space">
                        <span class="input-group-addon input-label">First Name<span style="color: red"> *</span></span>
                        @Html.TextBoxFor(m => m.existfirstname, null, new { @class = "form-control  valid checkstring", maxlength = "50", placeholder = "First Name", onkeypress = "return onlyAlphabets(event,this)", req = "Req", message = "Please Enter First Name" })
                    </div>
                </div>
            </div>
            <div class="col-md-4"></div>
        </div>
        <div class="row" style="display:none;">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="input-group extra-space">
                        <span class="input-group-addon input-label">Last Name <span style="color: red">*</span></span>
                        @Html.TextBoxFor(m => m.existlstname, null, new { @class = "form-control  valid", placeholder = "Last Name", maxlength = "50", req = "Req", onkeypress = "return onlyAlphabets(event,this)", message = "Please Enter Last Name" })
                    </div>
                </div>
            </div>
            <div class="col-md-4"></div>
        </div>
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="input-group extra-space">
                        <span class="input-group-addon input-label">Registration No<span style="color: red">*</span></span>
                        @Html.TextBoxFor(m => m.existregno, null, new { @class = "form-control  valid", placeholder = "Registration No", maxlength = "16", req = "Req", message = "Please Enter Last Name" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="input-group extra-space">
                        <span class="input-group-addon input-label">Father Name </span>
                        @Html.TextBoxFor(m => m.existfathername, null, new { @class = "form-control  valid checkstring", placeholder = "Father Name", maxlength = "50", onkeypress = "return onlyAlphabets(event,this)", req = "Req", message = "Please Enter Last Name" })
                    </div>
                </div>
            </div>
            <div class="col-md-4"></div>
        </div>
        <div class="row">
            <div class="col-md-4"></div>
      
            <div class="col-md-4">
                <div class="form-group">
                    <div class="input-group extra-space">
                        <span class="input-group-addon input-label">Date of Birth <span style="color: red">*</span></span>
                        @Html.TextBoxFor(m => m.exisdob, new { @class = "form-control exDob", placeholder = "DD-MM-YYYY", @readonly = "readonly" })
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4" style="margin-left:160px;">
                <a class="btn btn-primary" onclick="GetDetail()">Submit</a>
            </div>

        </div>
   
    </div>

    <form role="form">
        <div class="container-fluid" id="divexistdata" style="display:none">
            <a href="#" class="btn btn-primary pull-right" id="DBack" style="display:none;"><span class="glyphicon glyphicon-backward" style="font-size:15px !important"></span>Back</a>
            <center><h3><b>Samajik Suraksha Yojana</b></h3></center>
            <div class="container-fluid" id="benefiary">
                <fieldset class="custom-border">
                    <legend class="custom-border">Beneficiary Details</legend>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label id="lblregDate">Registration Date<span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.Regdate, new { @class = "form-control regdate", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label style="">First Name <span style="color: red">*</span></label>

                                @*<div class="col-md-3" style="padding-right: 0px !important;">
                                        @Html.DropDownList("ddlfrstname", new List<SelectListItem>
                                        {
                                             new SelectListItem{ Text="--Select Salutation--", Value = "0" },
                                            new SelectListItem{ Text="Mr.", Value = "Mr." },
                                            new SelectListItem{ Text="Ms.", Value = "Ms." },
                                              new SelectListItem{ Text="Mrs.", Value = "Mrs." }
                                        }, new { @class = "col-md-2 pull-left form-control custtext Salutation" })
                                    </div>*@

                                @Html.TextBoxFor(m => m.FirstName, new { @class = "col-md-10 form-control checkstring", @maxlength = 25, onkeypress = "return onlyAlphabets(event,this)" })


                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Middle Name </label>
                                @Html.TextBoxFor(m => m.Middlename, new { @class = "form-control checkstring", @maxlength = 25, onkeypress = "return onlyAlphabets(event,this)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Last Name <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.lstname, new { @class = "form-control checkstring", onkeypress = "return onlyAlphabets(event,this)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label style="">Father Name <span style="color: red">*</span></label>
                                <div class="row">
                                    <div class="col-md-3">
                                        @Html.DropDownList("ddlfathrsname", new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Mr.", Value = "Mr." },
                                            new SelectListItem{ Text="Late.", Value = "Late." }
                                        }, new { @class = "col-md-2 pull-left form-control custtext Salutation" })
                                    </div>
                                    <div class="col-md-9" style="padding-left: 0px !important;">
                                        @Html.TextBoxFor(m => m.FatherName, new { style = "margin-left: 0px;", @class = "col-md-10 form-control checkstring", @maxlength = 50, onkeypress = "return onlyAlphabets(event,this)" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">Mother Name <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.MotherName, new { @class = "form-control checkstring", @maxlength = 50, onkeypress = "return onlyAlphabets(event,this)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Date of Birth <span style="color: red">*</span></label>
                                <div class="row">
                                    <div class="col-md-4" style="padding-right: 0px !important;">
                                        @Html.DropDownList("ddlyr", new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Year", Value = "0" }
                                        }, new { @class = "col-md-4 pull-left form-control custtext Salutation" })
                                    </div>
                                    <div class="col-md-4" style="padding-left: 0px !important; padding-right: 0px !important;">
                                        @Html.DropDownList("ddlmnth", new List<SelectListItem>
                                        {
                                           new SelectListItem{ Text="Month", Value = "0" }
                                        }, new { @class = "col-md-4 pull-left form-control custtext Salutation" })
                                    </div>
                                    <div class="col-md-4" style="padding-left: 0px !important;">
                                        @Html.DropDownList("ddlday", new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Day", Value = "0" }
                                        }, new { @class = "col-md-4 pull-left form-control custtext Salutation" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Age <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.age, new { @class = "form-control", @maxlength = 3, @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Gender <span style="color: red">*</span></label>
                                <br class="clearfix" />
                                <input type="radio" id="gndrmale" name="bengender" class="bengender" value="Male"><label id="lblmale"> Male</label>
                                <input type="radio" id="gndrfemale" name="bengender" class="bengender" value="Female"><label id="lblfemale"> Female</label>
                                <input type="radio" id="gndrother" name="bengender" class="bengender" value="Others"><label> Others</label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Marital Status <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.maritalid, new SelectList(Model.maritalstatus, "Value", "Text"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Husband Name <span style="color: red">*</span></label>
                                <div class="row">
                                    <div class="col-md-3" style="padding-right: 0px !important;">
                                        @Html.DropDownList("ddlhusname", new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Mr.", Value = "Mr." }
                                        }, new { @class = "col-md-2 pull-left form-control custtext Salutation" })
                                    </div>
                                    <div class="col-md-9" style="padding-left: 0px !important;">
                                        @Html.TextBoxFor(m => m.HusbandName, new { @class = "form-control checkstring", @maxlength = 50, onkeypress = "return onlyAlphabets(event,this)", @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Email </label>
                                @Html.TextBoxFor(m => m.email, new { @class = "form-control", @onchange = "validateEmail()" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Religion <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.relgid, new SelectList(Model.religion, "Value", "Text"), new { @class = "form-control " })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Social Category <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.socatid, new SelectList(Model.socategry, "Value", "Text"), new { @class = "form-control " })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>BPL Status <span style="color: red">*</span></label>
                                <br class="clearfix" />
                                <input type="radio" class="bplst" name="bplstatus" value="1">
                                <label>Yes</label>
                                <input type="radio" class="bplst" name="bplstatus" value="0">
                                <label>No</label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>BPL No. <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.bplno, new { @class = "form-control", @maxlength = "23", onkeypress = "return IsAplhanumericwithHypenandSlash(event)", style = "text-transform:uppercase", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4" style="display:none">
                            <div class="form-group">
                                <label>Occupation <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.Occupation, new { @class = "form-control", @maxlength = 20, @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Mobile no <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.mobno, new { @class = "form-control", @maxlength = 10, onkeypress = "return onlynumber(event,this)", @onchange = "validateMobilenum()" })
                            </div>
                        </div>
                    </div>
                    @*Change 3*@
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">Aadhar Card No</label>
                                @Html.TextBoxFor(m => m.Aadharcard, new { @class = "form-control", @maxlength = 12, onkeypress = "return onlynumber(event,this)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">Upload <font size="1">(Photo copy of Aadhar Card)</font></label>
                                <input type="file" multiple="multiple" name="files[5]" class="form-control" id="Aadharcardprof" />
                                <font size="2"> &nbsp;&nbsp;&nbsp;&nbsp; Aadhar Card limit is upto 2MB, JPEG/PNG/PDF</font>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class=""></label>
                            <a href="#" id="clearAadhar"><span class="glyphicon glyphicon-remove-circle" style="margin-left:-24px;margin-top:30px;"></span></a>
                        </div>
                        <div class="col-md-4" style="margin-top:-56px;">
                            <label class=""></label>
                            <input type="checkbox" name="AadharYN" id="IdAadharYN" value="AadharYN" style="margin-top:34px;"> If you do not  have Aadhar card tick here
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">Epic Card </label>
                                @Html.TextBoxFor(m => m.epiccard, new { @class = "form-control", @maxlength = 16, @onchange = "validateEpic()", onkeydown = "return IsAlphaNumaricWithSpecialCharecter(event)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">Upload <font size="1">(Photo copy of Epic Card)</font></label>
                                <input type="file" multiple="multiple" name="files[1]" class="form-control" id="Idproof" />
                                <font size="2"> &nbsp; ID Proof limit is upto 2MB, JPEG/PNG/PDF</font>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class=""></label>
                            <a href="#" id="clearEpic"><span class="glyphicon glyphicon-remove-circle" style="margin-left:-24px;margin-top:30px;"></span></a>
                        </div>
                    </div>

                </fieldset>
                <br class="clearfix" />
                <div class="">
                    <fieldset class="custom-border">
                        <legend class="custom-border color-white"><span class="leg-sty">Bank Details</span></legend>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>District <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.disid, new SelectList(Model.district, "Value", "Text"), new { @class = "form-control bankdistid", id = "bankdistid" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Bank Name <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.bnk, new SelectList(Model.bankname, "Value", "Text"), new { @class = "form-control ", id = "bank" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Account Number <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.actnumber, null, new { @class = "form-control", @maxlength = 16, onkeypress = "return onlynumber(event,this)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Location <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.locnumber, new SelectList(Model.locname, "Value", "Text"), new { @class = "form-control loca", id = "loc" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Branch Name <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.brnch, new SelectList(Model.branchname, "Value", "Text"), new { @class = "form-control ", id = "brnch" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">Address</label>
                                <textarea name="test_field" id="branchaddress" readonly style="width: 339px;height: 64px;"></textarea>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>IFSC Code</label>
                                @Html.TextBoxFor(m => m.ifsccode, null, new { @class = "form-control", @maxlength = 11, onkeydown = "return IsAlphaNumaric(event,this)", style = "text-transform:uppercase" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">Reason</label>
                                @Html.TextBoxFor(m => m.txtreason, null, new { @class = "form-control", @maxlength = 11, onkeypress = "return IsAlphaNumaric(event,this)" })
                                <font size="2">(If IFSC code is not mentioned,then please give reason for that)</font>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="">Upload <font size="1">(Photo copy of bank passbook first page) <span style="color: red">*</span></font></label>
                                    <input type="file" multiple="multiple" name="files[0]" class="form-control" id="Bank" />
                                    <font size="2"> &nbsp;&nbsp;&nbsp;&nbsp; Passbook limit is upto 2MB, JPEG/PNG/PDF</font>
                                    <a href="#" id="clearBank"><span class="glyphicon glyphicon-remove-circle"></span></a>
                                </div>
                            </div>

                        </div>

                    </fieldset>
                </div>
                <fieldset class="custom-border">
                    <legend class="custom-border">Permanent Address</legend>
                    <div class="row">
                        <div class="col-md-4" style="display:none;">
                            <div class="form-group">
                                <label>PermanetId</label>
                                @Html.TextBox("permid", "", new { })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>State <span style="color: red">*</span></label>
                                @Html.TextBox("state", "West Bengal", new { text = "", @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>District <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.disid, new SelectList(Model.district, "Value", "Text"), new { @class = "form-control paddistid", id = "perdistid" })


                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Sub Division <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.subdivid, new SelectList(Model.subdivision, "Value", "Text"), new { @class = "form-control persubdivid", id = "persubdivid" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label style="" class="">Block/Municipality/Corporation <span style="color: red">*</span></label>
                                @Html.DropDownList("ddlBMC", new List<SelectListItem>
                                        {
                                             new SelectListItem{ Text="-- Select Type --", Value = "0" },
                                            new SelectListItem{ Text="Block", Value = "1" },
                                            new SelectListItem{ Text="Muncipality", Value = "2" },
                                            new SelectListItem{ Text="Corporation", Value = "3" },
                                        }, new { @class = "col-md-2 pull-left form-control", id = "peraddBMC" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Name of Block/Municiplaity/Corporation <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.muncorp, new SelectList(Model.muncorpname, "Value", "Text"), new { @class = "form-control peraddblock", id = "peraddblock" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>P.S <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.ps, new SelectList(Model.psname, "Value", "Text"), new { @class = "form-control perpsid", id = "perpsid" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>P.O <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.po, new SelectList(Model.poname, "Value", "Text"), new { @class = "form-control perPOid", id = "perPOid" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>PIN code <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.pincode, null, new { @class = "form-control", @maxlength = 6, onkeypress = "return onlynumber(event,this)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">GP/Ward <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.ward, new SelectList(Model.wardname, "Value", "Text"), new { @class = "form-control ward", id = "ward" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Village/Street/Road <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.vlge1, null, new { @class = "form-control", @maxlength = 50 })
                            </div>
                        </div>
                    </div>
                </fieldset>
                <br class="clearfix" />
                <div class="row bene">
                    <input type="checkbox" id="presauto" name="peraddr" value="permntaddr"> Same as Permanent Address
                    <br class="clearfix" />
                    <fieldset class="custom-border">
                        <legend class="custom-border color-white"><span class="leg-sty">Present Address</span></legend>
                        <div class="col-md-4" style="display:none;">
                            <div class="form-group">
                                <label>PresentId</label>
                                @Html.TextBox("presid", "", new { })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>State <span style="color: red">*</span></label>
                                @Html.TextBox("state2", "West Bengal", new { text = "", @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>District <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.disid, new SelectList(Model.district, "Value", "Text"), new { @class = "form-control PreAddrdistid", id = "PreAddrdistid" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Sub Division <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.subdivid, new SelectList(Model.subdivision, "Value", "Text"), new { @class = "form-control preAddrsubdiv", id = "preAddrsubdiv" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label style="" class="">Block/Municipality/Corporation <span style="color: red">*</span></label>
                                @Html.DropDownList("ddlBMC", new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="-- Select Type --", Value = "0" },
                                            new SelectListItem{ Text="Block", Value = "1" },
                                            new SelectListItem{ Text="Muncipality", Value = "2" },
                                            new SelectListItem{ Text="Corporation", Value = "3" },
                                        }, new { @class = "col-md-2 pull-left form-control ", id = "preaddBMC" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Name of Block/Municiplaity/Corporation <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.muncorp, new SelectList(Model.muncorpname, "Value", "Text"), new { @class = "form-control preaddBlock", id = "preaddBlock" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>P.S <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.ps, new SelectList(Model.psname, "Value", "Text"), new { @class = "form-control preaddPS", id = "preaddPS" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>P.O <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.po, new SelectList(Model.poname, "Value", "Text"), new { @class = "form-control preaddPO", id = "preaddPO" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>PIN code <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.pincode2, null, new { @class = "form-control", @maxlength = 6, onkeypress = "return onlynumber(event,this)" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">GP/Ward <span style="color: red">*</span></label>
                                @Html.DropDownListFor(m => m.ward, new SelectList(Model.wardname, "Value", "Text"), new { @class = "form-control ward2", id = "ward2" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Village/Street/Road <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.vlge2, null, new { @class = "form-control", @maxlength = 50 })
                            </div>
                        </div>
                    </fieldset>
                </div>
                <br class="clearfix" />
                <div class="row">
                </div>
            </div>
            <div class="container-fluid" id="Dependntdet">
                <div class="row">
                    <fieldset class="custom-border">
                        <label class="">Do you want to provide Dependent Details</label>
                        <input type="radio" class="depenlst" name="dependentdet" value="Yes" id="depyes">
                        <label>Yes</label>
                        <input type="radio" class="depenlst" name="dependentdet" value="No" id="depno">
                        <label>No</label>
                        <legend class="custom-border">Dependent Details</legend>
                        <table class="table table-bordered tblfamily">
                            <thead>
                                <tr style="background: #333; color: white; font-size: 14px; font-weight: 700;">
                                    <th style="display:none">DepId</th>
                                    <th>S.No</th>
                                    <th style="width: 50px;">Whether Registered under SASPFUW/BOCW/WBTWSS. If yes, then provide Registration No. </th>
                                    <th>Dependent Name</th>
                                    <th>Relationship</th>
                                    <th>Gender</th>
                                    <th>DOB</th>
                                    <th>Age (Years)</th>
                                    <th>Aadhaar No, if any</th>
                                    <th class="">Scheme PassBook</th>
                                    <th></th>
                                    <th class="" style="display:none;"></th>
                                </tr>
                            </thead>
                        </table>
                        <div class="pull-right btndepen">
                            <a onclick="AddFamilyRow()" class="btn btn-primary">Add</a>
                        </div>
                    </fieldset>
                    <br class="clearfix" />
                    <fieldset class="custom-border">
                        <legend class="custom-border color-white"><span class="leg-sty">Nominee Details </span></legend>
                        <label class="">Do you want to provide Nominee Details</label>
                        <input type="radio" class="nomineelst" name="nomineedet" value="Yes" id="nomiyes">
                        <label>Yes</label>
                        <input type="radio" class="nomineelst" name="nomineedet" value="No" id="nomino">
                        <label>No</label>
                        <table class="table table-bordered tblNaminee">
                            <thead>
                                <tr style="background: #333; color: white; font-size: 14px; font-weight: 700;">
                                    <th style="display:none">NomiId</th>
                                    <th>S.No</th>
                                    <th>Name</th>
                                    <th>Relationship with applicant</th>
                                    <th>Gender</th>
                                    <th>DOB</th>
                                    <th>Age (Years)</th>
                                    <th>Share Allocation</th>
                                    <th>You have account number</th>
                                    <th>Bank Name</th>
                                    <th>Bank Account No.</th>
                                    <th>Branch Name</th>
                                    <th>IFSC Code</th>
                                    <th></th>
                                </tr>
                            </thead>
                        </table>
                        <div class="pull-right btnnom">
                            <a onclick="NamineeAdd()" class="btn btn-primary">Add</a>
                        </div>
                    </fieldset>
                </div>
                <br class="clearfix" />
                <fieldset class="custom-border">
                    <legend class="custom-border">Form 1</legend>
                    <div class="row">
                        <div class="col-md-12">
                            <label>Do you have Application Form under SSY-2017 <span style="color: red">*</span></label>
                            <input type="radio" class="formlst" name="formstatus" value="Yes" id="frmyes">
                            <label>Yes</label>
                            <input type="radio" class="formlst" name="formstatus" value="No" id="frmno">
                            <label>No</label>
                        </div>
                    </div>
                    <div class="row" id="Benform" style="display:none;">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Form 1 <span style="color: red">*</span></label>
                                <input type="file" multiple="multiple" name="files[4]" class="form-control" id="BenForm1" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Issuing Authority</label>
                                @Html.DropDownListFor(m => m.issueauth, new SelectList(Model.issueAuthName, "Value", "Text"), new { @class = "form-control ", @disabled = "true", @required = "required", @readonly = "" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Name of the area of certificate issuing authority</label>
                                @Html.TextBoxFor(m => m.authloc, null, new { @class = "form-control", @maxlength = 50, onkeypress = "return onlyAlphabets(event,this)", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Full Name of the certificate issuing authority</label>
                                @Html.TextBoxFor(m => m.authname, null, new { @class = "form-control", @maxlength = 75, onkeypress = "return onlyAlphabets(event,this)", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </fieldset>
                <br class="clearfix" />
                <fieldset class="custom-border">
                    <legend class="custom-border">Upload Documents</legend>
                    <div class="row">
                        <table>
                            <tr>
                                <td>Photo of the Applicant <span style="color: red">*</span></td>
                                <td>
                                    <input type="file" multiple="multiple" name="files[2]" class="form-control" id="Photo" style="margin-left: 102px; width: 309px;" />
                                </td>
                                <td class=""><font size="2"> &nbsp; Photo limit is upto 2MB, JPEG/PNG</font></td>
                            </tr>
                        </table>
                        <br />
                        <table>
                            <tr>
                                <td>Signature of the Applicant <span style="color: red">*</span></td>
                                <td>
                                    <input type="file" multiple="multiple" name="files[3]" class="form-control" id="Signature" style="margin-left: 78px; width: 309px;" />
                                </td>
                                <td class=""><font size="2"> &nbsp; Signature limit is upto 2MB, JPEG/PNG</font></td>
                            </tr>
                        </table>
                        <br />
                        <table>
                            <tr>
                                <td class="">Front page of the pass book under SASPFUW/ Identity Card issued to the construction worker/ Identity Card issued to the transport worker<span style="color: red">*</span></td>

                            </tr>
                            <tr>
                                <td>

                                    <input type="file" multiple="multiple" name="files[6]" class="form-control" id="idschemecert" onchange="readSchemeCertURL(this)" style=" width: 309px;  margin-top: 15px;" />
                                    <font size="2" > &nbsp; Scheme Certificate limit is upto 2MB, JPEG/PNG/PDF</font>
                                </td>

                            </tr>
                        </table>
                        <table style="margin-top:20px;">
                            <tr>
                                <td class="">Any Other Document</td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="file" multiple="multiple" name="files[10]" class="form-control" id="OtherDoc" style="margin-top:10px; width: 309px;" />
                                    <font size="2"> &nbsp; Document limit is upto 2MB, JPEG/PNG/PDF</font>
                           
                                </td>
                                
                            </tr>
                        </table>
                        <br />
                        <br />
                    </div>
                </fieldset>
            </div>
            <div class="container-fluid" id="AdditionalAffirmation">
                <div class="row">
                    <fieldset class="custom-border">
                        <legend class="custom-border color-white">PF/ESI Details</legend>
                        <div class="form-group" id="divpfesidet" style="margin-bottom: -33px;margin-left: 40px;">
                            <label><input type="checkbox" id="chkpf" class="pfesilst" name="pfesidet" value="PF">PF under EPF & MP Act 1952</label>
                        </div>
                        <div class="form-group" id="divesidet" style="margin-left: 458px;">
                            <label><input type="checkbox" id="chkesi" class="clschkesi" name="esidet" value="ESI">ESI under ESI Act 1948</label>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>PF Number</label>
                                @Html.TextBoxFor(m => m.esinum, null, new { style = "width: 260px; text-transform:uppercase", @class = "form-control", @maxlength = "17", onkeypress = "return IsAlphaNumaric(event)", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>ESI Number</label>
                                @Html.TextBoxFor(m => m.esi, null, new { style = "width: 260px; text-transform:uppercase", @class = "form-control", @maxlength = "17", onkeypress = "return IsAlphaNumaric(event)", @onchange = "checkpf()", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-4" style="width: 100%;display:none;" id="divPFOpt">
                            <div class="form-group">
                                <label class="">I would like to opt PF </label>
                                <input type="radio" class="Pf" name="pfsta" value="1">
                                <label>Yes</label>
                                <input type="radio" class="Pf" name="pfsta" value="0">
                                <label>No</label>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <br class="clearfix" />
                <div class="row">
                    <fieldset class="custom-border">
                        <legend class="custom-border color-white">Employee Type</legend>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Worker Type</label>
                                    &nbsp; &nbsp;
                                    <input type="radio" name="Workertype" class="workerdet" value="ConstructionWorker">
                                    <label>Construction Worker</label>
                                    <input type="radio" name="Workertype" class="workerdet" value="TransportWorker">
                                    <label>Transport Worker</label>
                                    <input type="radio" name="Workertype" class="workerdet" value="Others">
                                    <label>Others</label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div id="divConTrn" style="display:none">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <input type="radio" name="Worktype1" class="Worktype" value="WorktypeEmployed">Work Type List<span style="color: red">*</span>
                                        @Html.DropDownListFor(m => m.WorkType, new SelectList(Model.WorkType, "Value", "Text"), new { @class = "form-control ", @required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="">Other Work Type</label>
                                        @Html.TextBoxFor(m => m.BenOccupationDesc, null, new { @class = "form-control", @maxlength = 200 })
                                        @*Other Work Type <span style="color: red">*</span>
        <input type="text" name="txtWorType" id="txtWorkType" value="" readonly />*@
                                    </div>
                                </div>
                            </div>
                            <div id="divOther" style="display:block">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <input type="radio" name="Emptype" class="Wortype" value="SelfEmployed" disabled><label>Self Employed <span style="color: red">*</span></label>
                                        @Html.DropDownListFor(m => m.selfid, new SelectList(Model.self, "Value", "Text"), new { @class = "form-control ", @disabled = "true", @required = "required", @readonly = "" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <input type="radio" name="Emptype" class="Wortype" value="UnorganisedIndustries" disabled><label>Unorganised Industries <span style="color: red">*</span></label>
                                        @Html.DropDownListFor(m => m.unorgid, new SelectList(Model.unorg, "Value", "Text"), new { @class = "form-control ", @disabled = "true", @required = "required", @readonly = "" })
                                    </div>
                                </div>
                            </div>
                                
                            </div>
                            <div class="col-md-12">
                                <label>I am a Self-Employed Worker engaged in the scheduled unorganised sector under the scheme</label>
                            </div>
                            <br />
                            <br />
                            <div class="col-md-4">
                                <label>Name of my occupation</label>
                                @Html.TextBoxFor(m => m.occu, null, new { @class = "form-control", @maxlength = 20, @readonly = "readonly" })
                            </div>
                            <div class="col-md-4">
                                <label>Self Employment</label>
                                @Html.TextBoxFor(m => m.selfemp, null, new { @class = "form-control", @maxlength = 20, @readonly = "readonly" })
                            </div>
                            <div class="col-md-4">
                                <label>Establishment Address </label>
                                @Html.TextBoxFor(m => m.estbaddress, null, new { @class = "form-control", @maxlength = 150 })
                            </div>
</fieldset>
                </div>
                <br class="clearfix" />
                <div class="row">
					<fieldset class="custom-border">
						<legend class="custom-border color-white">Income Details</legend>
						<div class="col-md-12">
							<div class="form-group">
								<label class="col-md-3">My monthly family income from all sources: <span style="color: red">*</span> Rs. </label>
								<div class="col-md-4">
									@Html.TextBoxFor(m => m.mnthyincme, null, new { @class = " form-control", style = "display:inline-block !important;width:auto !important", @maxlength = 10, onkeypress = "return onlynumber(event,this)" })
								</div>
							</div>
						</div>

						<legend class="custom-border color-white"><label id="lblAdditionalDet">Additional Details For Pension Scheme</label></legend>

						<div class="=row">
							<div class="col-md-12" id="divpensionavailcheck">
								<div class="form-group">
									<label id="Edistlblfrstnoti"> Do you want to avail Pension under WBTWSSS Scheme ? </label>
									<br>
									<input type="radio" name="EdistSchemeAvailrad" class="EdistSchemeAvail" value="Yes">
									<label class="EdistlblFYesAv">Yes</label>
									<input type="radio" name="EdistSchemeAvailrad" value="No" class="EdistSchemeAvail">
									<label class="EdistlblFNoAv">No</label>
								</div>
							</div>
							<div class="col-md-12" id="divpensionavailyes" style="display:none;">
								<div class="form-group">
									<label id="Edistlblfrstnoti"> Are you Already registered under WBTWSSS Scheme ? </label>
									<br>
									<input type="radio" name="Edistenscheme" class="EdistScheme" value="Yes">
									<label class="EdistlblFYes">Yes</label>
									<input type="radio" name="Edistenscheme" value="No" class="EdistScheme">
									<label class="EdistlblFNo">No</label>
								</div>
							</div>
							<div class="col-md-12" id="divResign" style="display:none">
								<div class="col-md-6">
									<div class="form-group">
										<label>
											Please Enter Registration Number/AIN Number/Old Registration No
										</label><span style="color: red"> *</span>
										<input type="text" class="form-control" id="txtRegistration" maxlength="100">
									</div>
								</div>
								<div class="col-md-2" style="margin-top:20px">
									<div class="form-group">
										<center> <button type="button" class="btn btn-primary primarybtn" onclick="submitForm()">Submit</button></center>
									</div>
								</div>
							</div>
							<div class="row" id="pensionedistdetails" style="display:none">
								<div class="row" id="divemploydet" style="margin-left:10px">

									<div class="col-md-4">
										<div class="form-group">
											<label>
												Name Of The Employer 

											</label><span style="color: red"> *</span>
											<input type="text" class="form-control" id="txtEmployerName" name="txtEmployerName" maxlength="50" onkeypress="return onlyAlphabets(event,this)">
										</div>
									</div>
									<div class="col-md-4">
										<div class="form-group">
											<label class="">Rural/Urban</label>
											<select class="form-control" id="ddlRU" name="ddlRU1">
												<option value="0">Select</option>
												<option value="1">Rural</option>
												<option value="2">Uraban</option>

											</select>
										</div>
									</div>
									<div class="col-md-4">
										<div class="form-group">
											<label>
												Address Of The Employer

											</label><span style="color: red"> *</span>
											<input type="text" class="form-control" id="txtEmployerAddress" name="txtEmployerAddress">
										</div>
									</div>
									<div class="col-md-4">
										<div class="form-group">
											<label>
												Registration Number Of The institute

											</label><span style="color: red"> *</span>
											<input type="text" class="form-control" id="txtRegNumberinsti" name="txtRegNumberinsti" maxlength="20">
										</div>
									</div>
									<div class="col-md-4">
										<div class="form-group">
											<label>
												Nature Of The job

											</label><span style="color: red"> *</span>
											<input type="text" class="form-control" id="txtNatureJob" name="txtNatureJob" maxlength="100">
										</div>
									</div>
									<div class="col-md-8">
										<div class="form-group">
											<label>
												Workspace Details & Address
											</label><span style="color: red"> *</span>
											<textarea class="form-control" rows="3" id="txtWorkSpaceDet" name="txtWorkSpaceDet" maxlength="300"></textarea>
										</div>
									</div>
								</div>
								<div class="col-md-4" id="divedistregnumber">
									<div class="form-group">
										<label>
											Registration Number

										</label><span style="color: red"> *</span>
										<input type="text" class="form-control" id="txtRegNumber" name="txtRegNumber">
									</div>
								</div>
								<div class="col-md-4" id="divedistparticulars">
									<div class="form-group">
										<label>
											@*Particulars of documents regarding submission Fees*@
											Particulars of Fee submission documents

										</label><span style="color: red"> *</span>
										<input type="text" class="form-control" id="partdocsubfee" name="partdocsubfee">
									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label>
											Rate Of Subscrption
										</label><span style="color: red"> *</span>
										<input type="text" class="form-control" id="txtRateOfSub" name="txtRateOfSub" maxlength="5" onkeypress="return onlynumber(event,this)">
									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label>
											Status Of Transport Worker
										</label><span style="color: red"> *</span>
										<select class="form-control" id="ddlStatus" name="ddlStatus">
											<option value="0">Select Status</option>
											<option value="1">Self Employed</option>
											<option value="2">Wage Employed</option>

										</select>
									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label style="" class="">Nature Of Vehicle :</label><span style="color: red"> *</span>

										<select class="form-control" id="ddlNatureOfVehicle" name="ddlNatureOfVehicle">
											<option value="0">Select Vehicle</option>
											<option value="1">Bus</option>
											<option value="2">Mini Bus</option>
											<option value="3">Truck</option>
											<option value="4">Auto Rickshaw</option>
											<option value="5">Van Tempo</option>
											<option value="6">Taxi</option>
											<option value="7">Luxury Taxi</option>
											<option value="8">Others</option>

										</select>


									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label style="" class="">Certificate of Identification Attached :</label><span style="color: red"> *</span>

										<select class="form-control" id="certidentattach" name="certidentattach">
											<option value="0">Select</option>
											<option value="1">Yes</option>
											<option value="2">No</option>
										</select>


									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label style="" class="">Nature Of Duties :</label><span style="color: red"> *</span>

										<select class="form-control" id="ddlNatureOfDuties" name="ddlNatureOfDuties">
											<option value="0">Select Dutie</option>
											<option value="1">Driver</option>
											<option value="2">Conductor</option>
											<option value="3">Helper</option>
											<option value="4">Cleaner</option>
											<option value="5">Others</option>
										</select>

									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label>
											Eligilibity Certificate Form
										</label><span style="color: red"> *</span>
										<input type="file" multiple="multiple" name="files[8]" class="form-control" id="docEligibility" accept="image/jpeg,image/jpg,image/png,application/pdf" />

									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label>
											Dependent Passbook
										</label><span style="color: red"> *</span>
										<input type="file" multiple="multiple" name="files[9]" class="form-control" id="docDependent" accept="image/jpeg,image/jpg,image/png,application/pdf" />

									</div>
								</div>
								<div class="col-md-4">
									<div class="form-group">
										<label>
											Driving License
										</label><span style="color: red"> *</span>
										<input type="file" multiple="multiple" name="files[10]" class="form-control" id="docLicencse" accept="image/jpeg,image/jpg,image/png,application/pdf" />

									</div>
								</div>
								<div class="col-md-4" id="rnwlSchemeCertificate">
									<div class="form-group">
										<label>
											Scheme Certificate
										</label><span style="color: red"> *</span>
										<input type="file" multiple="multiple" name="files[11]" class="form-control" id="docSchemeCerti" accept="image/jpeg,image/jpg,image/png,application/pdf" />

									</div>
								</div>
								<div class="row col-md-10" style="margin-left:14px;" id="divrnwlHistory">
									<center><h5><b>Renewal History</b></h5></center>
									<div class="row divHistory">

										<table class="table table-bordered tblPaymentHistory" id="tblPaymentHistory">
											<thead>
												<tr style="background:darkcyan;color:white;">
													<th>S.No</th>
													<th>Year</th>
													<th>Month</th>
													@*<th>Amount</th>*@
													<th>Date Of Collection</th>
													<th>Receipt Book No</th>
													<th>Receipt Page No</th>

													<th></th>
												</tr>
											</thead>
											<tbody>
												<tr>
													<td>1</td>
													<td>
														<select class="form-control ddlyearpayhis" id="ddlyear1">
															<option value="0">Select Year</option>
															<option value="2000">2000</option>
															<option value="2001">2001</option>
															<option value="2002">2002</option>
															<option value="2003">2003</option>
															<option value="2004">2004</option>
															<option value="2005">2005</option>
															<option value="2006">2006</option>
															<option value="2007">2007</option>
															<option value="2008">2008</option>
															<option value="2009">2009</option>
															<option value="2010">2010</option>
															<option value="2011">2011</option>
															<option value="2012">2012</option>
															<option value="2013">2013</option>
															<option value="2014">2014</option>
															<option value="2015">2015</option>
															<option value="2016">2016</option>
															<option value="2017">2017</option>
															<option value="2018">2018</option>
															<option value="2019">2019</option>
														</select>
													</td>
													<td>
														<select class="form-control ddlmnthpayhis" id="ddlmnth1">
															<option value="00">Select Month</option>
															<option value="01">01</option>
															<option value="02">02</option>
															<option value="03">03</option>
															<option value="04">04</option>
															<option value="05">05</option>
															<option value="06">06</option>
															<option value="07">07</option>
															<option value="08">08</option>
															<option value="09">09</option>
															<option value="10">10</option>
															<option value="11">11</option>
															<option value="12">12</option>
														</select>
													</td>
													@*<td>  <input type="text" class="form-control" value="0" id="txtAmount1" ></td>*@
													<td>  <input type="text" class="form-control txtCollectionDate1" id="txtCollectionDate1" readonly="readonly"></td>
													<td>  <input type="text" class="form-control txtReceptBookno1" id="txtReceptBookno1"></td>
													<td>  <input type="text" class="form-control txtReceptPagno1" id="txtReceptPagno1"></td>

													<td><button type="button" class="removefambutton" title="Remove this row">X</button></td>
												</tr>
												<tr>
													<td>2</td>
													<td>
														<select class="form-control ddlyearpayhis" id="ddlyear2">
															<option value="0">Select Year</option>
															<option value="2000">2000</option>
															<option value="2001">2001</option>
															<option value="2002">2002</option>
															<option value="2003">2003</option>
															<option value="2004">2004</option>
															<option value="2005">2005</option>
															<option value="2006">2006</option>
															<option value="2007">2007</option>
															<option value="2008">2008</option>
															<option value="2009">2009</option>
															<option value="2010">2010</option>
															<option value="2011">2011</option>
															<option value="2012">2012</option>
															<option value="2013">2013</option>
															<option value="2014">2014</option>
															<option value="2015">2015</option>
															<option value="2016">2016</option>
															<option value="2017">2017</option>
															<option value="2018">2018</option>
															<option value="2019">2019</option>
														</select>
													</td>
													<td>
														<select class="form-control ddlmnthpayhis" id="ddlmnth2">
															<option value="00">Select Month</option>
															<option value="01">01</option>
															<option value="02">02</option>
															<option value="03">03</option>
															<option value="04">04</option>
															<option value="05">05</option>
															<option value="06">06</option>
															<option value="07">07</option>
															<option value="08">08</option>
															<option value="09">09</option>
															<option value="10">10</option>
															<option value="11">11</option>
															<option value="12">12</option>
														</select>
													</td>
													@*<td><input type="text" class="form-control" value="0" id="txtAmount2"></td>*@
													<td>  <input type="text" class="form-control txtCollectionDate2" id="txtCollectionDate2" readonly="readonly"></td>
													<td>  <input type="text" class="form-control txtReceptBookno2" id="txtReceptBookno2"></td>
													<td>  <input type="text" class="form-control txtReceptPagno2" id="txtReceptPagno2"></td>

													<td><button type="button" class="removefambutton" title="Remove this row">X</button></td>
												</tr>
												<tr>
													<td>3</td>
													<td>
														<select class="form-control ddlyearpayhis" id="ddlyear3">
															<option value="0">Select Year</option>
															<option value="2000">2000</option>
															<option value="2001">2001</option>
															<option value="2002">2002</option>
															<option value="2003">2003</option>
															<option value="2004">2004</option>
															<option value="2005">2005</option>
															<option value="2006">2006</option>
															<option value="2007">2007</option>
															<option value="2008">2008</option>
															<option value="2009">2009</option>
															<option value="2010">2010</option>
															<option value="2011">2011</option>
															<option value="2012">2012</option>
															<option value="2013">2013</option>
															<option value="2014">2014</option>
															<option value="2015">2015</option>
															<option value="2016">2016</option>
															<option value="2017">2017</option>
															<option value="2018">2018</option>
															<option value="2019">2019</option>
														</select>
													</td>
													<td>
														<select class="form-control ddlmnthpayhis" id="ddlmnth3">
															<option value="00">Select Month</option>
															<option value="01">01</option>
															<option value="02">02</option>
															<option value="03">03</option>
															<option value="04">04</option>
															<option value="05">05</option>
															<option value="06">06</option>
															<option value="07">07</option>
															<option value="08">08</option>
															<option value="09">09</option>
															<option value="10">10</option>
															<option value="11">11</option>
															<option value="12">12</option>
														</select>
													</td>
													@*<td><input type="text" class="form-control" value="0" id="txtAmount3"></td>*@
													<td>  <input type="text" class="form-control txtCollectionDate3" id="txtCollectionDate3" readonly="readonly"></td>
													<td>  <input type="text" class="form-control txtReceptBookno3" id="txtReceptBookno3"></td>
													<td>  <input type="text" class="form-control txtReceptPagno3" id="txtReceptPagno3"></td>
													<td><button type="button" class="removefambutton" title="Remove this row">X</button></td>

												</tr>
											</tbody>
										</table>
									</div>
									<div class="row">

										<center> <a class="btn btn-primary addbtn" onclick="AddPaymentRow()">Add</a></center>

									</div>
									<input type="hidden" id="Bensno1" value="1112121231" name="Bensno" />
									<input type="hidden" id="bencollectiondtls" value="1212" name="bencollectiondtls" />
									<input type="hidden" id="BenFamdet1" value="12121" name="BenFamdet" />
									<input type="hidden" id="BenTranspRenwldet" value="1212" name="BenTranspRenwldet" />
									<input type="hidden" id="BenTranspRenwlRowCount" value="0" name="BenTranspRenwlRowCount" />
								</div>

							</div>


						</div>

						<div class="row ">
							<div class="col-sm-12">
								<div class="form-group">
									<input type="checkbox" id="lstcheckagree" name="agree" value="agresamajk">  I agree to abide by the Samajik Suraksha Yojana (Rules and Regulations) 2017
									<br>
								</div>
							</div>
						</div>
					</fieldset>
                    <br class="clearfix" />

                </div>
                <br />
                <ul class="list-inline pull-right">
                    <li>
                        <button type="submit" class="btn btn-primary ">Submit</button>
                    </li>
                </ul>
            </div>
        </div>
        <input type="hidden" id="BenAddress" value="21212" name="BenAddress" />
        <input type="hidden" id="Bennamedet" value="1212" name="Bennamedet" />
        <input type="hidden" id="BenFamdet" value="12121" name="BenFamdet" />
        <input type="hidden" id="NamCount" value="1112121231" name="NamCount" />
        <input type="hidden" id="BankDisId" value="1112121231" name="BankDisId" />
        <input type="hidden" id="FamCount" value="1112121231" name="FamCount" />
        <input type="hidden" id="BankLoca" value="1112121231" name="BankLoca" />
        <input type="hidden" id="Bensno" value="1112121231" name="Bensno" />
        <input type="hidden" id="SelfEmpNo" value="" name="SelfEmpNo" />
        <input type="hidden" id="BenAddressSno" value="1112121231" name="BenAddressSno" />
        <input type="hidden" id="BenFamilyMemSno" value="1112121231" name="BenFamilyMemSno" />
        <input type="hidden" id="BenNomineeSno" value="1112121231" name="BenNomineeSno" />
        <input type="hidden" id="DepUserid" value="" name="DepUserid" />
        <input type="hidden" id="DependentStatus" value="1" name="DependentStatus" />
        <input type="hidden" id="NomineeStatus" value="1" name="NomineeStatus" />
        <input type="hidden" id="CheckPfStatus" value="1" name="CheckPfStatus" />
        <input type="hidden" id="RegType" value="" name="RegType" />
        @*<input type="hidden" id="CheckPfStatus" value="1" name="CheckPfStatus" />*@
    </form>

    <div class="modal fade" id="divConfirmexistng" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header" style="background-color:#1a2c6f;">

                    <h4 class="modal-title" style="color:white;">Samajik Suraksha Yojana</h4>


                </div>
                <div class="modal-body">



                    <div class="form-group">
                        <label class="">Are you sure the details you have entered is correct?</label>
                        <input type="radio" class="conexistreglst" name="conexistregstatus" value="Yes" onclick="ConfirmDet()" tabindex="98">
                        <label>Yes</label>
                        <input type="radio" class="conexistreglst" name="conexistregstatus" value="No" onclick="ConfirmDet()" tabindex="99">
                        <label>No</label>
                    </div>


                </div>
                <div class="modal-footer" style="background-color:lightgray">


                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

    <div class="modal fade" id="divexistng" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header" style="background-color:#1a2c6f;">

                    <h4 class="modal-title" style="color:white;">Samajik Suraksha Yojana</h4>


                </div>
                <div class="modal-body">



                    <div class="form-group">
                        <label class="">Sorry! Your data is not available in the system at present. Please select YES to update your record</label>
                        <input type="radio" class="existreglst" name="existregstatus" value="Yes" onclick="test()" tabindex="98">
                        <label>Yes</label>
                        <input type="radio" class="existreglst" name="existregstatus" value="No" onclick="test()" tabindex="99">
                        <label>No</label>
                    </div>


                </div>
                <div class="modal-footer" style="background-color:lightgray">


                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>




}
<script>
    $(document).ready(function(){

        $(".regdate").datepicker({
            dateFormat: "dd-mm-yy",
            changeYear: true,
            yearRange: "1920:2017",
            maxDate: new Date(2017, 02, 31),
            autoclose: true
        })
        $("#divPFOpt").show();

        $("#RegType").val(RegistrationType);
        // alert(RegistrationType);
        if(RegistrationType =="")
        {
            $("#idhome,#FrstBackbtn,#DBack").show();
        }

        $('#DBack').click(function()
        {
            $("#divexistdata").hide();
            $("#divexist").show();
        })


        if(Messeage !="" && Code =="000")
        {
            alert(Messeage);
            window.location.href = "/Registration/ExistngUserEdit?ID="+Userid;
            return false;
        }
        if(Messeage !="" && Code =="998")
        {
            alert(Messeage);
            window.location.href = "/Registration/ExistngUserEdit?ID="+Userid;
            return false;
        }
        if(Messeage !="" && Code =="999")
        
        {
            alert("Your session is expired...");
            window.top.location.href = "/Home/Index";
            return false;
        }
        $("#DepUserid").val(Userid);
        binddatepicker()
        getdates()
        $("#SahreAlo1").change(Changevalue);
        var WorkerStatus = $("input[name='Workertype']:checked").val()
        $("#Occupation").val(WorkerStatus);
        $("#issueauth") .attr("disabled", true);
        $("#authloc").attr("readonly", "readonly");
        $("#authname").attr("readonly", "readonly");
        $("#FamDob1").change(function () {
            var dob = $("#FamDob1").val();
            var dateAr = dob.split('-');
            var dateofbirth = dateAr[2] +"/"+dateAr[1] +"/"+dateAr[0];
            var age = calculateAge(dateofbirth);
            $("#FamAge1").val(age)
        })
        $("#namdob1").change(function () {
            var dob = $("#namdob1").val();
            var dateAr = dob.split('-');
            var dateofbirth = dateAr[2] +"/"+dateAr[1] +"/"+dateAr[0];
            var age = calculateAge(dateofbirth);
            $("#NamAge1").val(age)
		})

		$("#txtCollectionDate1, #txtCollectionDate2, #txtCollectionDate3").datepicker({
			dateFormat: "dd-mm-yy",
			changeYear: true,
			yearRange: "2000:2017",
			autoclose: true,
			maxDate: new Date()
		})
		var dat = new Date();
		var month = (dat.getMonth() + 1) < 10 ? '0' + (dat.getMonth() + 1) : '' + (dat.getMonth() + 1);
		var day = (dat.getDate()) < 10 ? '0' + (dat.getDate()) : '' + (dat.getDate());
		var today = day + "-" + month + "-" + dat.getFullYear();
		$("#txtCollectionDate1, #txtCollectionDate2, #txtCollectionDate3").val(today);
    })
    function  GetDetail()
    {
        debugger;
        if($("#existregno").val() == "" ||$("#existregno").val() == null)
        {
            alert("Please Enter Registration Number");
            $("#existregno").focus();
            return false;
        }
        if($("#exisdob").val() == "" || $("#exisdob").val() == null)
        {


            if($("#existfathername").val().trim() == "" ||$("#existfathername").val() == null)
            {
                alert("Please Enter Father Name");
                $("#existfathername").val();
                $("#existfathername").focus();
                return false;
            }
        }

        if($("#existfathername").val() == "" || $("#existfathername").val() == null)
        {
            if($("#exisdob").val() == "" ||$("#exisdob").val() == null)
            {
                alert("Please select Date of Birth");
                $("#exisdob").focus();
                return false;
            }
        }





        $("#WaitModal").modal('show');

        $.get('@Url.Action("ExistRegisub", "Registration")', {RegNo : $("#existregno").val(),Fathername : $("#existfathername").val(),Dob:$("#exisdob").val()}, function (dat) {

            $("#WaitModal").modal('hide');

            if(dat > 0)
            {
                $("#divexist").hide();
                $("#divexistdata").show();
                //Getting benificiary Data
                $.get('@Url.Action("GetbenDetails", "Registration")', {bensno : dat}, function (res) {
                    debugger;
                    // alert(res.BenBankBranch);
                    $("#Bensno").val(dat);
                    $("#ddlfrstname").val(res.BenSalutation);
                    $("#FirstName").val(res.BenFirstName);
                    $("#Middlename").val(res.BenMiddleName);
                    $("#lstname").val(res.BenLastName);
                    $("#FatherName").val(res.BenFatherFirstName +' '+ res.BenFatherMiddleName +' '+ res.BenFatherLastName).addClass('label-data');
                    if(res.MotherName =="NA")
                    {
                        $("#MotherName").val("");
                    }
                    else
                    {
                        $("#MotherName").val(res.MotherName);

                    }

                    $(".regdate").val(res.RegDate);
                    debugger;
                    //alert(res.BenDob);
                    if(res.BenDob !='1990-01-01')
                    {

                        var dob = res.BenDob.split('-');
                        $("#ddlyr").val(dob[2]);
                        $("#ddlmnth").val(dob[1]);
                        $("#ddlday").val(dob[0]);
                        getage()
                    }
                    $("input[name=bengender][value=" + res.BenGender + "]").prop('checked', true);
                    $("#maritalid").val(res.BenMaritalStatus);

                    if(res.Email =="NA")
                    {
                        $("#email").val("");

                    }
                    else
                    {
                        $("#email").val(res.Email);

                    }


                    var BGender = res.BenGender;

                    var BMarst =  res.BenMaritalStatus;
                    if(BGender =="Female" && BMarst =="2" || BGender =="Female" && BMarst =="5")
                    {
                        $("#HusbandName").removeAttr("readonly");
                    }
                    
                    if(res.HusbandName =="NA")
                    {
                        $("#HusbandName").val("");

                    }
                    else
                    {
                        $("#HusbandName").val(res.HusbandName);

                    }
                    if(res.BenIdCardType =="1")
                        $("#cards").val(res.BenIdCardNo);
                    else
                        $("#cards").val(res.BenIdCardNo);
                    $("#relgid").val(res.BenReligion);
                    $("#socatid").val(res.BenSocialCategory);
                    var Bplstat="";
                    if(res.BenBplStatus == true)
                    {
                        Bplstat = 1;
                        $("#bplno").removeAttr("readonly");
                    }
                    else
                        Bplstat = 0;
                    $("input[name=bplstatus][value=" + Bplstat + "]").prop('checked', true);
                    $("#bplno").val(res.BenBplNo);
                    $("#lbloccu").val(res.BenOccupation);

                    if(res.BenMobileNo =="NA")
                    {
                        $("#mobno").val("");

                    }
                    else
                    {
                        $("#mobno").val(res.BenMobileNo);

                    }

                    $("input[name=esistatus][value=" + res.BenProvisionType + "]").prop('checked', true);
                   
                    debugger;
                    if(res.BenProvisionNo !=null && res.BenProvisionNo != "")
                    {
                        $("#esinum").removeAttr("readonly");
                        $("#esinum").val(res.BenProvisionNo);
                        $('#chkpf').attr('checked', true);
                    }
                    if(res.BenEsiNumber !=null && res.BenEsiNumber != "")
                    {
                        $("#esi").removeAttr("readonly");
                        $("#esi").val(res.BenEsiNumber);
                        $('#chkesi').attr('checked', true);
                    }
                    // }
                    $("input[name=pfsta][value=" + res.BenPFStatus + "]").prop('checked', true);
                    $("#occu").val(res.BenOccupation);
                    $("input[name=Workertype][value=" + res.BenEmpType + "]").prop('checked', true);


                    if (res.BenEmpType == "Others") {
                        $(".Wortype").attr("disabled", false);

                        if (res.IndType == 1) {
                            $("#selfid").val(res.BenSelfEmployed);
                            $("input[name=Emptype][value=" + "SelfEmployed" + "]").prop('checked', true);
                            $("input[name=Emptype]").attr('disabled', false);
                            $("#selfid").attr("disabled", false);
                            $("#selfid").removeAttr("readonly");
                        }
                        if (res.IndType == 2) {
                            $("#unorgid").val(res.BenSelfEmployed);
                            $("input[name=Emptype][value=" + "UnorganisedIndustries" + "]").prop('checked', true);
                            $("input[name=Emptype]").attr('disabled', false);
                            $("#unorgid").attr("disabled", false);
                            $("#unorgid").removeAttr("readonly");
                        }
                        var getemptype = $("input[name='Emptype']:checked").val()
                        if (getemptype == undefined || getemptype == "UnorganisedIndustries" || getemptype == "SelfEmployed") {
                            if ($("#mnthyincme").val() > 6500) {
                                alert("For 'Others' type of worker category ,monthly income should not be greater than Rs. 6,500/- ");
                                $("#mnthyincme").focus();
                                $("#mnthyincme").val('');
                                return false;
                            }
                        }
                    }
                    else {
                        //$(".Worktype").attr("disabled", false);
                        //$("#WorkType").attr("disabled", false);
                        //$("#WorkType").removeAttr("readonly");

                        $("#divOther").hide();
                        $("#divConTrn").show();

                        $(".Wortype").attr("disabled", true);
                        $("#selfid").attr("disabled", true);
                        $("#divemp").hide();
                        $('#unorgid').val('0');
                        $("#unorgid").attr("disabled", true);
                        $('#selfid').val('0');
                        $('#occu').val('');
                        $('#selfemp').val('');
                        $("#occu").attr("disabled", true);
                        $("#selfemp").attr("disabled", true);
                        $("#occu").removeAttr("readonly");
                        $("#selfemp").removeAttr("readonly");

                        //$(".Worktype").attr("disabled", false);
                        //$("#WorkType").attr("disabled", true);
                        //$("#WorkType").add("readonly");
                        $('#WorkType').val('0');
                        $("#BenOccupationDesc").val(""); 

                        if (res.BenEmpType == "ConstructionWorker") {
                            Contype = "C";
                        }
                        if (res.BenEmpType == "TransportWorker") {
                            Contype = "T";
                        }

                        $.get('@Url.Action("GetWorkType", "Registration")', { ID: Contype }, function (dat) {
                                $("#WorkType").find("option").remove();
		                            $.each(dat, function (i, data) {
			                            debugger;
                                        $("#WorkType").append("<option value=" + data.Value + "> " + data.Text + " </option>");
		                            });
	                            });
                    }

                    if(res.BenEstablishedAddress =="NA")
                    {
                        $("#estbaddress").val("");

                    }
                    else
                    {
                        $("#estbaddress").val(res.BenEstablishedAddress);

                    }



                    if(res.BenMonthlyIncom =="NA")
                    {
                        $("#mnthyincme").val("");

                    }
                    else
                    {
                        $("#mnthyincme").val(res.BenMonthlyIncom);

                    }

                    if(res.BenIssuingAuth == "" || res.BenIssuingAuth == null)
                    {
                        $("#issueauth").val("0");
                    }
                    else
                    {
                        $("#issueauth").val(res.BenIssuingAuth);

                    }

                    if(res.BenIssuingAuthName == "NA")
                    {
                        $("#authname").val("");

                    }
                    else
                    {
                        $("#authname").val(res.BenIssuingAuthName);

                    }

                    if(res.AuthorityLocation == "NA")
                    {
                        $("#authloc").val("");

                    }
                    else
                    {
                        $("#authloc").val(res.AuthorityLocation);

                    }



                    $("#ifsccode").val(res.BenBankIfscCode);
                    $("#bankdistid").val(res.BankDist);
                    $("#bank").val(res.BenBankName);
                    $("#loc").val(res.Location);

                    $("#actnumber").val(res.BenBankAccNo);

                    if(res.AadharCard =="NA"){

                        $("#Aadharcard").val("");
                    }
                    else
                    {
                        $("#Aadharcard").val(res.AadharCard);

                    }


                    if(res.EpicCard =="NA"){

                        $("#epiccard").val("");
                    }
                    else
                    {
                        $("#epiccard").val(res.EpicCard);

                    }


                    //$("#BankAccNo").val(res.BankAccNo);
                    $("#brnch").val(res.BenBankBranch);

                    var ifsc =$("#brnch").val();
                    if(ifsc != null && ifsc != undefined)
                    {

                        var res = ifsc.split("-");
                        $.get('@Url.Action("GetbranchAddrJSON", "Registration")', {ID :res[1]}, function (dat) {
                            $("#branchaddress").val(dat);
                        });
                    }

                    $("#branchaddress").val(res.BankAddress);
                });
                //Getting benificiary Address Data
                $.get('@Url.Action("GetbenAddressDetails", "Registration")',  {bensno :dat}, function (res) {
                    debugger;
                    $.each(res, function (i, data) {
                        debugger;
                        if(data.BenAddressType =="Permanent")
                        {
                            //alert(data.BenAddressSno);
                            $("#permid").val(data.BenAddressSno);
                            $("#perdistid").val(data.BenDistrict);
                            $("#persubdivid").val(data.BenSubDivision);
                            $("#peraddBMC").val(data.LocationType);
                            $("#peraddblock").val(data.BenBmc);
                            $("#perpsid").val(data.BenPs);
                            $("#perPOid").val(data.BenPo);
                            $("#pincode").val(data.BenPincode);
                            if(data.BenGpWard == "0")
                            {
                                $("#ward").find("option").remove();
                                $("#ward").append('<option value=0>All Wards</option>');
                                $("#ward").val(0);
                            }
                            else
                            {
                                $("#ward").val(data.BenGpWard);
                            }
                            if(data.BenGpWard == "9999")
                            {
                                $("#ward").find("option").remove();
                                var BlockName1= $("#peraddblock option:selected").text();
                                $("#ward").append('<option value=9999>'+BlockName1+'</option>');
                                $("#ward").val('9999');
                            }
                            $("#vlge1").val(data.BenVsr);
                        }
                        if(data.BenAddressType =="Present")
                        {
                            // alert(data.BenAddressSno);
                            $("#presid").val(data.BenAddressSno);
                            $("#PreAddrdistid").val(data.BenDistrict);
                            $("#preAddrsubdiv").val(data.BenSubDivision);
                            $("#preaddBMC").val(data.LocationType);
                            $("#preaddBlock").val(data.BenBmc);
                            $("#preaddPS").val(data.BenPs);
                            $("#preaddPO").val(data.BenPo);
                            $("#pincode2").val(data.BenPincode);
                            if(data.BenGpWard == "0")
                            {
                                $("#ward2").find("option").remove();
                                $("#ward2").append('<option value=0>All Wards</option>');
                                $("#ward2").val(0);
                            }
                            else
                            {
                                $("#ward2").val(data.BenGpWard);
                            }
                            if(data.BenGpWard == "9999")
                            {
                                $("#ward2").find("option").remove();
                                var BlockName= $("#preaddBlock option:selected").text();
                                $("#ward2").append('<option value=9999>'+BlockName+'</option>');
                                $("#ward2").val('9999');
                            }
                            $("#vlge2").val(data.BenVsr);
                        }
                    });
                })
                //Getting benificiary Family Data
                $.get('@Url.Action("GetFamilyDetails", "Registration")',  {bensno : dat}, function (res) {
                    $('.tblfamily tbody').empty();
                    if(res =="" || res ==null)
                    {
                        $("input[name=dependentdet][value=" + "No" + "]").prop('checked', true);
                        $('.tblfamily').hide();
                        $('.btndepen').hide();
                    }
                    else
                    {
                        $("input[name=dependentdet][value=" + "Yes" + "]").prop('checked', true);
                    }
                    $.each(res, function (i, data) {
                        var rowCount = $('.tblfamily tr').length;
                        var Age ="0";
                        var Dob = "";
                        if(data.BenFamilyAge != null )
                        {
                            Age = data.BenFamilyAge;
                        }
                        if(data.Dob != null )
                        {
                            Dob = data.Dob;
                        }


                        $('.tblfamily').append('<tr><td style="display:none"><input id="Familyid'+rowCount+'" type="text" value="'+(data.BenFamilyMemSno)+'"  class="form-control" name="Familyid"></td><td><input id="famid'+rowCount+'" type="text"  class="form-control" value="'+rowCount+'" style="width:39px;" readonly="readonly"></td><td><input id="FamWRU'+rowCount+'" type="text"  class="form-control" value="'+(data.BenFamilySchRegNo)+'" name="famiName"  maxlength = 16 onkeypress = "return IsAlphaNumaric(event,this)"></td><td><input id="FamDept'+rowCount+'" type="text"  class="form-control" value="'+(data.BenDependentName)+'" name="FamDept" style="width:112px;" onkeypress = "return onlyAlphabets(event,this)"></td><td><select id="DDLFamRel'+rowCount+'" value="'+(data.RelationshipID)+'" class="form-control" name="DDLFamRel" style="width: 92px;"></select></td><td><select id="DDLFamGender'+rowCount+'" class="form-control"  name="DDLGender" style="width: 92px;"><option value="Male">Male</option><option value="Female">Female</option></select></td><td><input id="FamDob'+rowCount+'" type="text"  name="FamDob" class="form-control notranslate Famdob" value="'+Dob+'"  style="width:130px;"></td><td><input id="FamAge'+rowCount+'"  class="form-control" type="text" value="'+Age+'" name="FamAge" style="width:50px;" onkeypress = "return onlynumber(event,this)" maxlength = 3 readonly="readonly"><td><input id="AdhNoFam'+rowCount+'" type="text" value="'+data.BenFamilyAadhaarNo+'" class="form-control" name="AdhNoFam" maxlength = 12 onkeypress = "return onlynumber(event)" ></td><td><input id="schpassbk'+rowCount+'" type="file" class="form-control" name="files['+(rowCount+6)+']"   style="display:none;"></td><td></td><td style="display:none;"><label id="lblschemechk'+rowCount+'">0</label></td></tr>')
                        $("#FamDob"+rowCount).datepicker({
                            dateFormat: "dd-mm-yy",
                            changeYear: true,
                            yearRange: "1960:2018",
                            autoclose: true,
                            maxDate: new Date()
                        })
                        $.get('@Url.Action("GetRelations", "Home")', {}, function (dat) {

                            //$("#DDLFamRel"+rowCount).val()

                            $("#DDLFamRel"+rowCount).find("option").remove();
                            $.each(dat, function (i, data) {
                                debugger;
                                $("#DDLFamRel"+rowCount).append("<option value=" + data.Value + ">"+data.Text+"</option>");
                            });
                            $("#DDLFamRel"+rowCount).val(data.RelationshipID);
                        });

                        var dat = new Date();
                        var month = (dat.getMonth() + 1) < 10 ? '0' + (dat.getMonth() + 1) : '' + (dat.getMonth() + 1);
                        var day = (dat.getDate()) < 10 ? '0' + (dat.getDate()) : '' + (dat.getDate());
                        var today = day + "-" + month + "-" + dat.getFullYear();
                        $("#DDLFamRel"+rowCount).val(data.BenDependentRelation);
                        $("#DDLFamGender"+rowCount).val(data.BenFamilyGender);
                        $('body').on('change', '#FamDob'+rowCount, function () {
                            var dob = $("#FamDob"+rowCount).val();
                            var dateAr = dob.split('-');
                            var dateofbirth = dateAr[2] +"/"+dateAr[1] +"/"+dateAr[0];
                            var age = calculateAge(dateofbirth);
                            $("#FamAge"+rowCount).val(age)

                            //Son Validation above 21
                            var RelationValidation =   $("#DDLFamRel"+rowCount).val();
            
                           
                            if(RelationValidation == "4" && age > 21)
                            {
                                alert("This dependent will be eligible for the Educational benefit only.");
                            }
                        });

                        $('body').on('keyup', '#FamDept'+rowCount, function () {

                            var  value = $(this).val();
                            if(value.length == 4 || value.length == 5 ||value.length == 6)
                            {
                                //
                                // if()
                                if(value.toLowerCase().indexOf("test") >= 0 || value.toLowerCase().indexOf("edit") >= 0 || value.toLowerCase().indexOf("sample") >= 0 || value.toLowerCase().indexOf("dummy") >= 0 || value.toLowerCase().indexOf("dumy") >= 0 ||value.toLowerCase().indexOf("dammy") >= 0)
                                {
                                    alert("Please Enter  Proper Name.");
                                    $(this).val("");
                                    $(this).focus();
                                    return false;
                                }
                            }
                        });
                        $('body').on('change', '#FamWRU'+rowCount, function () {
                            $('#lblschemechk'+rowCount).text("0");
                            if($("#FamWRU"+rowCount).val() !="")
                            {
                                $.get('@Url.Action("GetBenDetails", "Agent")', { id: $("#FamWRU"+rowCount).val()}, function (dat) {
                                    if(dat == "")
                                    {
                                        alert("No Data Found, Please Enter Data Manually.");
                                        $('#lblschemechk'+rowCount).text("0");
                                        return false;
                                    }
                                    $('#lblschemechk'+rowCount).text("1");
                                    $('#FamDept'+rowCount).val(dat.BenFirstName +' '+ dat.BenMiddleName +' '+ dat.BenLastName);
                                    $('#DDLFamGender'+rowCount).val(dat.BenGender);
                                    $('#FamDob'+rowCount).val(dat.BenDob);
                                    $("#FamAge" +rowCount).val(dat.BenAge);
                                    $("#AdhNoFam"+rowCount).val(dat.AadharCard);
                                    $("#schpassbk"+rowCount).show();
                                });
                            }

                        });
                      
                    });
                });
                //Get Nominee Details
                $.get('@Url.Action("GetNamineeDetails", "Registration")',  {bensno : dat}, function (res) {
                    $('.tblNaminee tbody').empty();
                    if(res =="" || res ==null)
                    {
                        $("input[name=nomineedet][value=" + "No" + "]").prop('checked', true);
                        $("input[name=nomineedet]").prop('checked', true);
                        $('.tblNaminee').hide();
                        $('.btnnom').hide();
                    }
                    else
                    {
                        $("input[name=nomineedet][value=" + "Yes" + "]").prop('checked', true);
                        $('.tblNaminee').show();
                        $('.btnnom').show();
                    }
                    debugger;
                    $.each(res, function (i, data) {
                        var rowCount = $('.tblNaminee tr').length;
                        var NAge ="0";
                        var NDob = "";
                        if(data.BenNomineeAge != null )
                        {
                            NAge = data.BenNomineeAge;
                        }
                        if(data.Dob != null )
                        {
                            NDob = data.Dob;
                        }

                        $('.tblNaminee').append('<tr><td style="display:none"><input id="nomineeid' + rowCount + '" type="text" value="' + (data.BenNomineeSno) + '"  class="form-control" name="nomineeid"></td><td><input id="namid' + rowCount + '" type="text"  class="form-control" value="' + rowCount + '" style="width:39px;" readonly="readonly"></td><td><input id="NamiName' + rowCount + '" type="text"  class="form-control" value="' + (data.BenNomineeName) + '" name="NamiName" style="width:112px;" onkeypress = "return onlyAlphabets(event,this)"></td><td><select id="DDLNamRel' + rowCount + '" value="' + (data.RelationshipID) + '" class="form-control" name="DDLNamRel" style="width: 92px;"></select></td><td><select id="DDLNamGender' + rowCount + '" class="form-control"  name="DDLGender" style="width: 92px;"><option value="Male">Male</option><option value="Female">Female</option><option value="Others">Others</option></select></td><td><input id="namdob' + rowCount + '" type="text"  name="namdob" class="form-control notranslate namdob" value="' + NDob + '"  style="width:130px;"></td><td><input id="NamAge' + rowCount + '"  class="form-control" type="text" value="' + NAge + '" name="NamAge" style="width:50px;" onkeypress = "return onlynumber(event,this)" maxlength = 3 readonly="readonly"></td> <td><input id="SahreAlo' + rowCount + '"  class="form-control" type="text" value="' + data.BenNomineeShareAllocation + '" name="SahreAlo" onkeypress = "return onlynumber(event,this)" maxlength = 3></td><td><input type="radio"  name="nomineeAct' + rowCount + '" class="nomineeAct' + rowCount + '" value="Yes">Yes <br/><input type="radio"  name="nomineeAct' + rowCount + '" class="nomineeAct' + rowCount + '" value="No">No</td><td><input id="Bankname'+rowCount+'"  class="form-control" type="text" name="Bankname" value="'+data.BenNomineeBankName+'"  maxlength = 16 onkeypress = "return onlyAlphabets(event,this)"></td><td><input id="BankActNo'+rowCount+'"   class="form-control" type="text" value="'+data.BenNomineeBankAccNo+'" name="BankActNo"  maxlength = 16 onkeypress = "return onlynumber(event,this)"></td><td><input id="BranchName'+rowCount+'"   class="form-control" type="text" name="BranchName" value="'+data.BenNomineeBankBranch+'" style="width:100px;" maxlength = 25 onkeypress = "return onlyAlphabets(event,this)"></td><td><input id="NamIfscCode'+rowCount+'" type="text" value="'+data.BenNomineeBankIfscCode+'" class="form-control" name="NamIfscCode" style="width:85px;text-transform:uppercase" maxlength = 11 onkeypress = "return IsAlphaNumaric(event)" ></td><td></td></tr>')

                        if (data.BenNomineeBankAccNo != null && data.BenNomineeBankAccNo != "") {
                            $("input[name=nomineeAct" + rowCount + "][value=Yes]").prop('checked', true);
                        }
                       

                        $("#namdob"+rowCount).datepicker({
                            dateFormat: "dd-mm-yy",
                            changeYear: true,
                            yearRange: "1920:2018",
                            autoclose: true,
                            maxDate: new Date()
                        })
                        $.get('@Url.Action("GetRelations", "Home")', {}, function (dat) {

                            //$("#DDLFamRel"+rowCount).val()

                            $("#DDLNamRel"+rowCount).find("option").remove();
                            $.each(dat, function (i, data) {
                                debugger;
                                $("#DDLNamRel"+rowCount).append("<option value=" + data.Value + ">"+data.Text+"</option>");
                            });
                            $("#DDLNamRel"+rowCount).val(data.RelationshipID);
                        });
                        var dat = new Date();
                        var month = (dat.getMonth() + 1) < 10 ? '0' + (dat.getMonth() + 1) : '' + (dat.getMonth() + 1);
                        var day = (dat.getDate()) < 10 ? '0' + (dat.getDate()) : '' + (dat.getDate());
                        var today = day + "-" + month + "-" + dat.getFullYear();
                        $("#DDLNamRel"+rowCount).val(data.BenNomineeRelation);
                        $("#DDLNamGender"+rowCount).val(data.BenNomineeGender);

                        //$('body').on('change', '#DDLNamRel'+rowCount, function () {
                        //    var Checknamrel =  $("#DDLNamRel"+rowCount).val();
                        //    for (i = 1; i < rowCount; i++)
                        //    {
                        //        var rel =  $("#DDLNamRel"+rowCount).val();
                        //        if(rel == "Father" || rel == "Mother"|| rel =="Spouse" )
                        //        {
                        //            if(Checknamrel == rel )
                        //            {
                        //                alert("Invalid Relation");
                        //                return false;
                        //            }
                        //        }
                        //    }
                        //});

                        $('body').on('keyup', '#NamiName'+rowCount, function () {

                            var  value = $(this).val();
                            if(value.length == 4 || value.length == 5 ||value.length == 6)
                            {
                                //
                                // if()
                                if(value.toLowerCase().indexOf("test") >= 0 || value.toLowerCase().indexOf("edit") >= 0 || value.toLowerCase().indexOf("sample") >= 0 || value.toLowerCase().indexOf("dummy") >= 0 || value.toLowerCase().indexOf("dumy") >= 0 ||value.toLowerCase().indexOf("dammy") >= 0)
                                {
                                    alert("Please Enter  Proper Name.");
                                    $(this).val("");
                                    $(this).focus();
                                    return false;
                                }
                            }
                        });
                        $('body').on('change', '#namdob'+rowCount, function () {
                            var dob = $("#namdob"+rowCount).val();
                            var dateAr = dob.split('-');
                            var dateofbirth = dateAr[2] +"/"+dateAr[1] +"/"+dateAr[0];
                            var age = calculateAge(dateofbirth);
                            $("#NamAge"+rowCount).val(age)
                        });
                        $('body').on('change', '#SahreAlo'+rowCount, function () {
                            Changevalue();
                        });
                        //$('body').on('change', '#DDLNamGender'+rowCount, function () {

                        //    var namrel =  $("#DDLFamRel"+rowCount).val();
                        //    var namgen =  $("#DDLFamGender"+rowCount).val();

                        //    //alert(namrel +"=="+ namgen  );
                        //    if(namgen =="Male")
                        //    {
                        //        if(namrel == "Mother" ||namrel == "Daughter")
                        //        {
                        //            alert("Invalid Gender");
                        //            return false;
                        //        }
                        //    }
                        //    if(namgen =="Female")
                        //    {
                        //        if(namrel == "Father" ||namrel == "Son")
                        //        {
                        //            alert("Invalid Gender");
                        //            return false;
                        //        }
                        //    }
                        //});
                        $('body').on('keypress', '#NamIfscCode'+rowCount, function () {
                            var ifscnomval = $(this).val();
                            if(ifscnomval.length == 4)
                            {
                                $(this).val(ifscnomval+"0");
                                return false;
                            }
                        });
                        $('body').on('change', '#BankActNo'+rowCount, function ()
                        {
                            var txtlength = $(this).val();
                            debugger;
                            if(txtlength.length > 16 || txtlength.length < 9)
                            {
                                alert("Invalid Bank Account Number");
                                $(this).focus().val('');
                                return false;
                            }
                        })
                    });
                });
                return false;
            }


            else
            {

                if(dat == "Invalid Data")
                {
                    $('#divConfirmexistng').modal('show');
                    $(".conexistreglst").prop('checked', false);
                }
                else{
                    setTimeout(function() { alert(dat); }, 1500);
                }
                return false;
            }
        });
    }
    //ADD Family Row
    function AddFamilyRow()
    {
        debugger;
        var rowCount = $('.tblfamily tr').length;
        if(rowCount > 6)
        {
            alert("maximum row limit is 6");
            return false;
        }
        else
        {
            $('.tblfamily').append('<tr><td style="display:none"><input id="Familyid'+rowCount+'" type="text" value="0"  class="form-control" name="Familyid"></td><td><input id="FamSno'+rowCount+'" class="form-control" type="text" name="FamSno" value="'+(rowCount)+'" style="width:39px; text-transform:uppercase" readonly="readonly"></td><td><input id="FamWRU'+rowCount+'" class="form-control" type="text" name="FamWRU" maxlength = 16 onkeypress = "return IsAlphaNumaric(event)" style= "text-transform:uppercase"></td><td><input id="FamDept'+rowCount+'" class="form-control" type="text" name="FamDept" maxlength = 25 onkeypress = "return onlyAlphabets(event,this)"></td><td><select id="DDLFamRel'+rowCount+'" class="form-control" name="DDLFamRel"></select></td><td><select id="DDLFamGender'+rowCount+'" class="form-control" name="DDLGender" style="width: 98px;"><option value="Male">Male</option><option value="Female">Female</option></select></td><td><input id="FamDob'+rowCount+'"" type="text" class="form-control notranslate FamDob" name="Dob"  style="width:130px;"></td><td><input id="FamAge'+rowCount+'" type="text" class="form-control" name="FamAge" onkeypress = "return onlynumber(event,this)" maxlength = 3 readonly="readonly" style="width:50px;"></td><td><input id="AdhNoFam'+rowCount+'" type="text" class="form-control" name="AdhNoFam" maxlength = 12, onkeypress = "return onlynumber(event,this)"></td><td><input id="schpassbk'+rowCount+'" type="file" class="form-control" name="files['+(rowCount+6)+']"   ></td><td><button type="button"   class="removefambutton" title="Remove this row">X</button></td></tr>')
            $("#FamDob"+rowCount).datepicker({
                dateFormat: "dd-mm-yy",
                changeYear: true,
                yearRange: "1920:2018",
                autoclose: true,
                maxDate: new Date()
            })
            
            $.get('@Url.Action("GetRelations", "Home")', {}, function (dat) {

                //$("#DDLFamRel"+rowCount).val()

                $("#DDLFamRel"+rowCount).find("option").remove();
                $.each(dat, function (i, data) {
                    debugger;
                    $("#DDLFamRel"+rowCount).append("<option value=" + data.Value + ">"+data.Text+"</option>");
                });

            });
            var dat = new Date();
            var month = (dat.getMonth() + 1) < 10 ? '0' + (dat.getMonth() + 1) : '' + (dat.getMonth() + 1);
            var day = (dat.getDate()) < 10 ? '0' + (dat.getDate()) : '' + (dat.getDate());
            var today = day + "-" + month + "-" + dat.getFullYear();
            $("#FamDob"+rowCount).val(today);

            $('body').on('change', '#FamDob'+rowCount, function () {
                var dob = $("#FamDob"+rowCount).val();
                var dateAr = dob.split('-');
                var dateofbirth = dateAr[2] +"/"+dateAr[1] +"/"+dateAr[0];
                var age = calculateAge(dateofbirth);
                $("#FamAge"+rowCount).val(age)


                var RelationValidation =   $("#DDLFamRel"+rowCount).val();
            
                //Son Validation above 21
                if(RelationValidation == "4" && age > 21)
                {
                    alert("This dependent will be eligible for the Educational benefit only.");
                }
            });

            $('body').on('keyup', '#FamDept'+rowCount, function () {

                var  value = $(this).val();
                if(value.length == 4 || value.length == 5 ||value.length == 6)
                {
                    //
                    // if()
                    if(value.toLowerCase().indexOf("test") >= 0 || value.toLowerCase().indexOf("edit") >= 0 || value.toLowerCase().indexOf("sample") >= 0 || value.toLowerCase().indexOf("dummy") >= 0 || value.toLowerCase().indexOf("dumy") >= 0 ||value.toLowerCase().indexOf("dammy") >= 0)
                    {
                        alert("Please Enter  Proper Name.");
                        $(this).val("");
                        $(this).focus();
                        return false;
                    }
                }
            });

            //$('body').on('change', '#DDLFamGender'+rowCount, function () {

            //    var famrel =  $("#DDLFamRel"+rowCount).val();
            //    var famgen =  $("#DDLFamGender"+rowCount).val();
            //    if(famgen =="Male")
            //    {
            //        if(famrel == "Mother" ||famrel == "Daughter")
            //        {
            //            alert("Invalid Gender");
            //            return false;
            //        }
            //    }
            //    if(famgen =="Female")
            //    {
            //        if(famrel == "Father" ||famrel == "Son")
            //        {
            //            alert("Invalid Gender");
            //            return false;
            //        }
            //    }
            //});




            //$('body').on('change', '#DDLFamRel'+rowCount, function () {
            //    var Checkfamrel =  $("#DDLFamRel"+rowCount).val();
            //    for (i = 1; i < rowCount; i++)
            //    {
            //        var rel =  $("#DDLFamRel"+rowCount).val();
            //        if(rel == "Father" || rel == "Mother"|| rel == "Spouse" )
            //        {
            //            if(Checkfamrel == rel )
            //            {
            //                alert("Invalid Relation");
            //                return false;
            //            }
            //        }
            //    }
            //});


            $('body').on('change', '#FamWRU'+rowCount, function () {

                $('#lblschemechk'+rowCount).text("0");
                if($("#FamWRU"+rowCount).val() !="")
                {
                    $.get('@Url.Action("GetBenDetails", "Agent")', { id: $("#FamWRU"+rowCount).val()}, function (dat) {
                        if(dat == "")
                        {
                            alert("No Data Found, Please Enter Data Manually.");
                            $('#lblschemechk'+rowCount).text("0");
                            return false;
                        }
                        $('#lblschemechk'+rowCount).text("1");
                        $('#FamDept'+rowCount).val(dat.BenFirstName +' '+ dat.BenMiddleName +' '+ dat.BenLastName);
                        $('#DDLFamGender'+rowCount).val(dat.BenGender);
                        $('#FamDob'+rowCount).val(dat.BenDob);
                        $("#FamAge" +rowCount).val(dat.BenAge);
                        $("#AdhNoFam"+rowCount).val(dat.AadharCard);
                        $("#schpassbk"+rowCount).show();
                    });
                }

            });
        }
    }
    function Changevalue()
    {
        debugger;
        var rowCount = $('.tblNaminee tr').length;
        var shreallocationrange = "0";
        for (i = 1;i < rowCount; i++)
        {
            shreallocationrange =  parseInt((shreallocationrange),10)+parseInt(($("#SahreAlo"+i).val()),10);
        }
        if(shreallocationrange > 100)
        {
            alert("Share Allocation Accepts only 100%");
            var n = rowCount-1;
            $("#SahreAlo"+n).focus();
            return false;
        }
    }
    //Add Nominee row
    function NamineeAdd()
    {
        debugger;
        var rowCount = $('.tblNaminee tr').length;
        var shreallocationrange = "0";
        for (i = 1;i < rowCount; i++)
        {
            shreallocationrange =  parseInt((shreallocationrange),10)+parseInt(($("#SahreAlo"+i).val()),10);
        }
        if(shreallocationrange >= 100)
        {
            alert("Share Allocation Already 100%");
            return false;
        }
        if(rowCount > 3)
        {
            alert("Maximum limit is 3");
            return false;
        }
        else
        {
            $('.tblNaminee').append('<tr><td style="display:none"><input id="nomineeid' + rowCount + '" type="text" value="0"  class="form-control" name="nomineeid"></td><td><input id="NamiSno' + rowCount + '" type="text"  class="form-control" name="FamSno" value="' + (rowCount) + '" style="width:39px;" readonly="readonly"></td><td><input id="NamiName' + rowCount + '" type="text"  class="form-control" name="NamiName" style="width:112px;" onkeypress = "return onlyAlphabets(event,this)"></td><td><select id="DDLNamRel' + rowCount + '"  class="form-control" name="DDLNamRel" style="width: 92px;"></select></td><td><select id="DDLNamGender' + rowCount + '" class="form-control"  name="DDLGender" style="width: 92px;"><option value="Male">Male</option><option value="Female">Female</option><option value="Others">Others</option></select></td><td><input id="namdob' + rowCount + '" type="text" name="namdob" class="form-control notranslate namdob"  style="width:130px;"></td><td><input id="NamAge' + rowCount + '"  class="form-control" type="text" name="NamAge" style="width:39px;" onkeypress = "return onlynumber(event,this)" maxlength = 3 readonly="readonly"></td> <td><input id="SahreAlo' + rowCount + '"  class="form-control" type="text" name="SahreAlo" onkeypress = "return onlynumber(event,this)" maxlength = 3 style="width:50px;"></td><td><input type="radio"  name="nomineeAct' + rowCount + '" class="nomineeAct' + rowCount + '" value="Yes">Yes <br/><input type="radio"  name="nomineeAct' + rowCount + '" class="nomineeAct' + rowCount +'" value="No">No</td><td><input id="Bankname'+rowCount+'"   class="form-control" type="text" name="Bankname"  maxlength = 16 onkeypress = "return onlyAlphabets(event,this)"></td><td><input id="BankActNo'+rowCount+'"   class="form-control" type="text" name="BankActNo"  maxlength = 16 onkeypress = "return onlynumber(event,this)"></td><td><input id="BranchName'+rowCount+'"   class="form-control" type="text" name="BranchName" style="width:100px;" maxlength = 25 onkeypress = "return onlyAlphabets(event,this)"></td><td><input id="NamIfscCode'+rowCount+'" type="text"  class="form-control" name="NamIfscCode" style="width:85px;text-transform:uppercase" maxlength = 11 onkeypress = "return IsAlphaNumaric(event)" ></td><td><button type="button"  class="removenambutton" title="Remove this row">X</button></td></tr>')
            $("#namdob"+rowCount).datepicker({
                dateFormat: "dd-mm-yy",
                changeYear: true,
                yearRange: "1920:2018",
                autoclose: true,
                maxDate: new Date()
            })
            $.get('@Url.Action("GetRelations", "Home")', {}, function (dat) {

                //$("#DDLFamRel"+rowCount).val()

                $("#DDLNamRel"+rowCount).find("option").remove();
                $.each(dat, function (i, data) {
                    debugger;
                    $("#DDLNamRel"+rowCount).append("<option value=" + data.Value + ">"+data.Text+"</option>");
                });

            });
            var dat = new Date();
            var month = (dat.getMonth() + 1) < 10 ? '0' + (dat.getMonth() + 1) : '' + (dat.getMonth() + 1);
            var day = (dat.getDate()) < 10 ? '0' + (dat.getDate()) : '' + (dat.getDate());
            var today = day + "-" + month + "-" + dat.getFullYear();
            $("#namdob"+rowCount).val(today);

            //Dob Change
            $('body').on('change', '#namdob'+rowCount, function () {
                var dob = $("#namdob"+rowCount).val();
                var dateAr = dob.split('-');
                var dateofbirth = dateAr[2] +"/"+dateAr[1] +"/"+dateAr[0];
                var age = calculateAge(dateofbirth);
                $("#NamAge"+rowCount).val(age)
            });

            //Check nominee name
            $('body').on('keyup', '#NamiName'+rowCount, function () {

                var  value = $(this).val();
                if(value.length == 4 || value.length == 5 ||value.length == 6)
                {
                    //
                    // if()
                    if(value.toLowerCase().indexOf("test") >= 0 || value.toLowerCase().indexOf("edit") >= 0 || value.toLowerCase().indexOf("sample") >= 0 || value.toLowerCase().indexOf("dummy") >= 0 || value.toLowerCase().indexOf("dumy") >= 0 ||value.toLowerCase().indexOf("dammy") >= 0)
                    {
                        alert("Please Enter  Proper Name.");
                        $(this).val("");
                        $(this).focus();
                        return false;
                    }
                }
            });


            //Share alocation
            $('body').on('change', '#SahreAlo'+rowCount, function () {
                Changevalue();
            });


            ////Change Nominee Relation
            //$('body').on('change', '#DDLNamRel'+rowCount, function () {
            //    var Checknamrel =  $("#DDLNamRel"+rowCount).val();
            //    for (i = 1; i < rowCount; i++)
            //    {
            //        var rel =  $("#DDLNamRel"+rowCount).val();
            //        if(rel == "Father" || rel == "Mother"|| rel =="Spouse" )
            //        {
            //            if(Checknamrel == rel )
            //            {
            //                alert("Invalid Relation");
            //                return false;
            //            }
            //        }
            //    }
            //});

            ////Chnage Nominee Gender
            //$('body').on('change', '#DDLNamGender'+rowCount, function () {
            //    var namrel =  $("#DDLFamRel"+rowCount).val();
            //    var namgen =  $("#DDLFamGender"+rowCount).val();
            //    if(namgen =="Male")
            //    {
            //        if(namrel == "Mother" ||namrel == "Daughter")
            //        {
            //            alert("Invalid Gender");
            //            return false;
            //        }
            //    }
            //    if(namgen =="Female")
            //    {
            //        if(namrel == "Father" ||namrel == "Son")
            //        {
            //            alert("Invalid Gender");
            //            return false;
            //        }
            //    }
            //});

            //Change Nominee Ifsc
            $('body').on('keypress', '#NamIfscCode'+rowCount, function () {
                var ifscnomval = $(this).val();
                if(ifscnomval.length == 4)
                {
                    $(this).val(ifscnomval+"0");
                    return false;
                }
            });

            //Bank Account Validation
            $('body').on('change', '#BankActNo'+rowCount, function ()
            {
                var txtlength = $(this).val();
                debugger;
                if(txtlength.length > 16 || txtlength.length < 9)
                {
                    alert("Invalid Bank Account Number");
                    $(this).focus().val('');
                    return false;
                }
            })
        }
    }
    $("#NamIfscCode1").keypress(function() {
        var ifscnomval = $(this).val();
        if(ifscnomval.length == 4)
        {
            $(this).val(ifscnomval+"0");
            return false;
        }
    });
    $("#BankActNo1").change(function()
    {
        var txtlength = $(this).val();
        debugger;
        if(txtlength.length > 16 || txtlength.length < 9)
        {
            alert("Invalid Bank Account Number");
            $("#BankActNo1").focus().val('');
            return false;
        }
    })
    function getdates()
    {
        $(".FamDob,.namdob,.dob,.exDob").datepicker({
            dateFormat: "dd-mm-yy",
            changeYear: true,
            yearRange: "1900:2020",
            autoclose: true,
            maxDate: new Date()

        })
        var dat = new Date();
        var month = (dat.getMonth() + 1) < 10 ? '0' + (dat.getMonth() + 1) : '' + (dat.getMonth() + 1);
        var day = (dat.getDate()) < 10 ? '0' + (dat.getDate()) : '' + (dat.getDate());
        var today = day + "-" + month + "-" + dat.getFullYear();
        $(".FamDob,.namdob,.dob").val(today);
    }
    //Remove Cancel button from Family
    $(document).on('click', 'button.removefambutton', function () {
        var famrowCount = $('.tblfamily tr').length;
        var $tr = $(this).closest('tr');
        var myRow = $tr.index();
        if(myRow == famrowCount-2)
        {
            $(this).closest('tr').remove();
            return false;
        }
        else
        {
            alert("Only last row will be deleted");
            return false;
        }
    });
    //Remove Cancel button from Nominee
    $(document).on('click', 'button.removenambutton', function () {
        var namrowCount = $('.tblNaminee tr').length;
        var $tr = $(this).closest('tr');
        var myRow = $tr.index();
        if(myRow ==namrowCount-2)
        {
            $(this).closest('tr').remove();
            return false;
        }
        else
        {
            alert("Only last row will be deleted")
            return false;
        }
    });
    function FinalExistSubmit()
    {
        debugger;
        if ($("#Regdate").val() == "" || $("#Regdate").val() == null) {
            alert("Please Select Registration Date");
            $("#Regdate").focus();
            return false;
        }

        if ($("#FirstName").val().trim() == "" || $("#FirstName").val() == null) {
            alert("Please Enter First Name");
            $("#FirstName").val("");
            $("#FirstName").focus();
            return false;
        }
        if($("#FirstName").val().toLowerCase().indexOf("test") >= 0 || $("#FirstName").val().toLowerCase().indexOf("edit") >= 0 || $("#FirstName").val().toLowerCase().indexOf("sample") >= 0 || $("#FirstName").val().toLowerCase().indexOf("dummy") >= 0 || $("#FirstName").val().toLowerCase().indexOf("dumy") >= 0 ||$("#FirstName").val().toLowerCase().indexOf("dammy") >= 0)
        {
            alert("Please Enter Proper First Name");

            $("#FirstName").focus();
            return false;
        }

        if($("#Middlename").val().length > 0)
        {
            if ($("#Middlename").val().trim() == "") {
                alert("Please Enter Proper Middle Name");
                $("#Middlename").val("");
                $("#Middlename").focus();
                return false;
            }

        }

        if ($("#lstname").val().trim() == "" || $("#lstname").val() == null) {
            alert("Please Enter Last Name");
            $("#lstname").val("");
            $("#lstname").focus();
            return false;
        }

        if($("#lstname").val().toLowerCase().indexOf("test") >= 0 || $("#lstname").val().toLowerCase().indexOf("edit") >= 0 || $("#lstname").val().toLowerCase().indexOf("sample") >= 0 || $("#lstname").val().toLowerCase().indexOf("dummy") >= 0 || $("#lstname").val().toLowerCase().indexOf("dumy") >= 0 ||$("#lstname").val().toLowerCase().indexOf("dammy") >= 0)
        {
            alert("Please Enter Proper Last Name");

            $("#lstname").focus();
            return false;
        }


        var Maritalsta = $("#maritalid").val();
        if(Maritalsta != "2" && Maritalsta != "5")
        {
            if ($("#ddlfathrsname").val().trim() == "" || $("#ddlfathrsname").val() == null || $("#ddlfathrsname").val() == "0") {
                alert("Please Select Salutation");
                $("#ddlfathrsname").focus();
                return false;
            }
            if ($("#FatherName").val().trim() == "" || $("#FatherName").val() == null) {
                alert("Please Enter Father Name");
                $("#FatherName").val("");
                $("#FatherName").focus();
                return false;
            }
            if($("#FatherName").val().toLowerCase().indexOf("test") >= 0 || $("#FatherName").val().toLowerCase().indexOf("edit") >= 0 || $("#FatherName").val().toLowerCase().indexOf("sample") >= 0 || $("#FatherName").val().toLowerCase().indexOf("dummy") >= 0 || $("#FatherName").val().toLowerCase().indexOf("dumy") >= 0 ||$("#FatherName").val().toLowerCase().indexOf("dammy") >= 0)
            {
                alert("Please Enter Proper Father Name");

                $("#FatherName").focus();
                return false;
            }
        }

        if($("#FatherName").val().length > 0)
        {
            if ($("#FatherName").val().trim() == "") {
                alert("Please Enter Proper Father Name");
                $("#FatherName").val("");
                $("#FatherName").focus();
                return false;
            }
            if($("#FatherName").val().toLowerCase().indexOf("test") >= 0 || $("#FatherName").val().toLowerCase().indexOf("edit") >= 0 || $("#FatherName").val().toLowerCase().indexOf("sample") >= 0 || $("#FatherName").val().toLowerCase().indexOf("dummy") >= 0 || $("#FatherName").val().toLowerCase().indexOf("dumy") >= 0 ||$("#FatherName").val().toLowerCase().indexOf("dammy") >= 0)
            {
                alert("Please Enter Proper Father Name");

                $("#FatherName").focus();
                return false;
            }

        }

        if($("#MotherName").val().length > 0)
        {
            if ($("#MotherName").val().trim() == "") {
                alert("Please Enter Proper Mother Name");
                $("#MotherName").val("");
                $("#MotherName").focus();
                return false;
            }
            if($("#MotherName").val().toLowerCase().indexOf("test") >= 0 || $("#MotherName").val().toLowerCase().indexOf("edit") >= 0 || $("#MotherName").val().toLowerCase().indexOf("sample") >= 0 || $("#MotherName").val().toLowerCase().indexOf("dummy") >= 0 || $("#MotherName").val().toLowerCase().indexOf("dumy") >= 0 ||$("#MotherName").val().toLowerCase().indexOf("dammy") >= 0)
            {
                alert("Please Enter Proper Mother Name");

                $("#MotherName").focus();
                return false;
            }
        }


        if ($("#ddlyr").val() == "" || $("#ddlyr").val() == null || $("#ddlyr").val() == "0") {
            alert("Please Select year");
            $("#ddlyr").focus();
            return false;
        }
        if ($("#ddlmnth").val() == "" || $("#ddlmnth").val() == null || $("#ddlmnth").val() == "0") {
            alert("Please Select Month");
            $("#ddlmnth").focus();
            return false;
        }
        if ($("#ddlday").val() == "" || $("#ddlday").val() == null || $("#ddlday").val() == "0") {
            alert("Please Select Day");
            $("#ddlday").focus();
            return false;
        }
        if ($("#age").val() == "" || $("#age").val() == null) {
            alert("Age should not be empty,Please provide correct Date of Birth");
            $("#age").focus();
            return false;
        }
        var age = $("#age").val();
        var agecal = parseInt(age);
        if(agecal > 60 || agecal < 18)
        {
            alert("Age Limit should be 18 to 60 ");
            $("#age").focus();
            return false;
        }
        var Gender = $("input[name='bengender']:checked").val()
        if(Gender == undefined){
            alert("Please Select Gender");
            $(".bengender").focus();
            return false;
        }

        if ($("#maritalid").val() == "" || $("#maritalid").val() == null || $("#maritalid").val() == "0") {
            alert("Please Select Marital Status");
            $("#maritalid").focus();
            return false;
        }
        var Marst =  $('#maritalid').val();
        if(Gender =="Female" && Marst =="2" || Gender =="Female" && Marst =="5")
        {
            if($("#HusbandName").val().trim() == "" ||$("#HusbandName").val() == null)
            {
                alert("Please Enter Husband Name");
                $("#HusbandName").val("");
                $("#HusbandName").focus();
                return false;
            }
        }
        if ($("#relgid").val() == "" || $("#relgid").val() == null || $("#relgid").val() == "0") {
            alert("Please Select Religion");
            $("#relgid").focus();
            return false;
        }
        if ($("#socatid").val() == "" || $("#socatid").val() == null || $("#socatid").val() == "0") {
            alert("Please Select Social Category");
            $("#socatid").focus();
            return false;
        }
        //Bpl Field
        var validBplStatus = $("input[name='bplstatus']:checked").val()
        if(validBplStatus =="1"){
            if ($("#bplno").val() == "" || $("#bplno").val() == null) {
                alert("Please Enter BPL No");
                $("#bplno").focus();
                return false;
            }
        }
        if ( $('#mobno').val().length != 10) {
            alert("Please Enter Valid Mobile Number");
            $("#mobno").focus();
            return false;
        }
        if ($("#mobno").val() == "" || $("#mobno").val() == null) {
            alert("Please Enter Mobile Number");
            $("#mobno").focus();
            return false;
        }

        var res = $("#IdAadharYN").is(':checked');
        if (res == false) {
            var Aadharcard = $("#Aadharcard").val();
            if(Aadharcard =="" ||Aadharcard == null)
            {
                alert("Please Enter Aadhaar Card Number");
                $("#Aadharcard").focus()
                return false;
            }
            if(Aadharcard.length != 12)
            {
                alert("Please Enter 12 digits correct Aadhaar Card Number");
                $("#Aadharcard").focus();
                return false;
            }

            $.get('@Url.Action("ValidateAadhaar", "Registration")', {ValidateAadhaar : $("#Aadharcard").val() }, function (dat) {
                if(dat > 0)
                {
                    alert("This Aadhaar number is already exists");
                    $("#Aadharcard").val("");
                    $("#Aadharcard").focus();
                    return false;
                }
            });
            if ($("#Aadharcardprof").val() == "" || $("#Aadharcardprof").val() == null || $("#Aadharcardprof").val() == 0) {
                debugger;
                alert("Please Choose Aadhar Card");
                $("#Aadharcardprof").focus();
                return false;
            }
        }
        if (res == true) {
            var EpicCard = $("#epiccard").val();
            if(EpicCard =="" ||EpicCard == null)
            {
                alert("Please Enter Epic Card Number");
                $("#epiccard").focus()
                return false;
            }
            if( EpicCard.length > 16 || EpicCard.length < 5)
            {
                alert("Please enter correct Epic Card Number");
                $("#epiccard").focus();
                return false;
            }

            $.get('@Url.Action("ValidateEpic", "Registration")', {EpicNo : $("#epiccard").val() }, function (dat) {
                if(dat > 0)
                {
                    alert("This Epic number is already exists");
                    $("#epiccard").val("");
                    $("#epiccard").focus();
                    return false;
                }
            });
            if ($("#Idproof").val() == "" || $("#Idproof").val() == null || $("#Idproof").val() == 0) {
                alert("Please Choose ID proof");
                $("#Idproof").focus();
                return false;
            }


        }

        if($("#epiccard").val() !="" && $("#epiccard").val() != null)
        {
            if ($("#Idproof").val() == "" || $("#Idproof").val() == null || $("#Idproof").val() == 0) {
                alert("Please Choose ID proof");
                $("#Idproof").focus();
                return false;
            }
        }

        if ($("#bankdistid").val() == "" || $("#bankdistid").val() == null || $("#bankdistid").val() == 0) {
            alert("Please Select Bank District");
            $("#bankdistid").focus();
            return false;
        }
        if ($("#bank").val() == "" || $("#bank").val() == null || $("#bank").val() == 0) {
            alert("Please Select Bank Name");
            $("#bank").focus();
            return false;
        }
        if ($("#actnumber").val() == "" || $("#actnumber").val() == null) {
            alert("Please Enter Account Number");
            $("#actnumber").focus();
            return false;
        }
        if ($("#loc").val() == "" || $("#loc").val() == null || $("#loc").val() == 0) {
            alert("Please Select Location");
            $("#loc").focus();
            return false;
        }
        if ($("#brnch").val() == "" || $("#brnch").val() == null || $("#brnch").val() == 0) {
            alert("Please Select Branch");
            $("#brnch").focus();
            return false;
        }
        if ($("#txtreason").val() == "" || $("#txtreason").val() == null) {
            if ($("#ifsccode").val() == "")
            {
                alert("Please Enter IFSC Code");
                $("#ifsccode").focus();
                return false;
            }
        }


        if ($("#Bank").val() == "" || $("#Bank").val() == null || $("#Bank").val() == 0) {
            alert("Please Choose Bank Passbook");
            $("#Bank").focus();
            return false;
        }



        if ($("#perdistid").val() == "" || $("#perdistid").val() == null || $("#perdistid").val() == 0) {
            alert("Please Select District");
            $("#perdistid").focus();
            return false;
        }
        if ($("#persubdivid").val() == "" || $("#persubdivid").val() == null || $("#persubdivid").val() == 0) {
            alert("Please Select Sub Division");
            $("#persubdivid").focus();
            return false;
        }
        if ($("#peraddBMC").val() == "" || $("#peraddBMC").val() == null || $("#peraddBMC").val() == 0) {
            alert("Please Select Block");
            $("#peraddBMC").focus();
            return false;
        }
        if ($("#peraddblock").val() == "" || $("#peraddblock").val() == null || $("#peraddblock").val() == 0) {
            alert("Please Select Block");
            $("#peraddblock").focus();
            return false;
        }
        if ($("#perpsid").val() == "" || $("#perpsid").val() == null ||  $("#perpsid").val() == 0) {
            alert("Please Select PS");
            $("#perpsid").focus();
            return false;
        }
        if ($("#perPOid").val() == "" || $("#perPOid").val() == null ||  $("#perPOid").val() == 0) {
            alert("Please Select PO");
            $("#perPOid").focus();
            return false;
        }
        if ($("#pincode").val() == "" || $("#pincode").val() == null) {
            alert("Please Enter Pincode");
            $("#pincode").focus();
            return false;
        }
        if ( $('#pincode').val().length != 6) {
            alert("Please Enter 6 digits Pincode number");
            $("#pincode").focus();
            return false;
        }
        var Dist1 = $("#perdistid").val();
        var Blk1 = $("#peraddBMC").val();
        //if(Dist1 !=12)
       // {
            //if(Blk1 == 1)
            //{
                if ($("#ward").val() == "" || $("#ward").val() == null ||  $("#ward").val() == 0) {
                    alert("Please Select GP");
                    $("#ward").focus();
                    return false;
                }
            //}
        //}
        if ($("#vlge1").val() == "" || $("#vlge1").val() == null) {
            alert("Please Enter Village/Street/Road");
            $("#vlge1").focus();
            return false;
        }
        //Present
        if ($("#PreAddrdistid").val() == "" || $("#PreAddrdistid").val() == null || $("#PreAddrdistid").val() == 0) {
            alert("Please Select District");
            $("#PreAddrdistid").focus();
            return false;
        }
        if ($("#preAddrsubdiv").val() == "" || $("#preAddrsubdiv").val() == null || $("#preAddrsubdiv").val() == 0) {
            alert("Please Select Sub Division");
            $("#preAddrsubdiv").focus();
            return false;
        }
        if ($("#preaddBMC").val() == "" || $("#preaddBMC").val() == null || $("#preaddBMC").val() == 0) {
            alert("Please Select Block");
            $("#preaddBMC").focus();
            return false;
        }
        if ($("#preaddBlock").val() == "" || $("#preaddBlock").val() == null || $("#preaddBlock").val() == 0) {
            alert("Please Select Block");
            $("#preaddBlock").focus();
            return false;
        }
        if ($("#preaddPS").val() == "" || $("#preaddPS").val() == null ||  $("#preaddPS").val() == 0) {
            alert("Please Select PS");
            $("#preaddPS").focus();
            return false;
        }
        if ($("#preaddPO").val() == "" || $("#preaddPO").val() == null ||  $("#preaddPO").val() == 0) {
            alert("Please Select PO");
            $("#preaddPO").focus();
            return false;
        }
        if ($("#pincode2").val() == "" || $("#pincode2").val() == null) {
            alert("Please Enter Pincode");
            $("#pincode2").focus();
            return false;
        }
        var Dists = $("#PreAddrdistid").val();
        var Blks = $("#preaddBMC").val();
     //   if(Dists !=12)
      //  {
           // if(Blks == 1)
          //  {
                if ($("#ward2").val() == "" || $("#ward2").val() == null ||  $("#ward2").val() == 0) {
                    alert("Please Select GP");
                    $("#ward2").focus();
                    return false;
                }
          //  }
      //  }
        if ($("#vlge2").val() == "" || $("#vlge2").val() == null) {
            alert("Please Enter Village/Street/Road");
            $("#vlge2").focus();
            return false;
        }
        //Perminent address
        var adddoc  =  "Permanent" +"$"; //1
        adddoc +=  $("#state").val()+"$";//2
        adddoc += $("#perdistid").val()+"$";//3
        adddoc +=  $("#persubdivid").val()+ "$";//4
        adddoc +=  $("#peraddblock").val()+ "$" ;//5
        adddoc +=  $("#perpsid").val()+"$";//6
        var po1 = $("#perPOid").val();
        var post1 =   po1.split("-");
        adddoc +=  post1[1]+"$";//7
        adddoc +=  $("#pincode").val()+"$";//8
        adddoc += $("#ward").val()+ "$";//9
        adddoc += $("#vlge1").val()+"$" ;//10
        //present address
        adddoc +=  "Present"+ "$";//11
        adddoc += $("#state2").val()+"$";//12
        adddoc += $(".PreAddrdistid").val()+"$";//13
        adddoc += $(".preAddrsubdiv").val()+ "$";//14
        adddoc +=  $("#preaddBlock").val()+"$";//15
        adddoc +=   $("#preaddPS").val()+ "$";//16
        var po2 = $("#preaddPO").val();
        var post2 =   po2.split("-");
        adddoc +=  post2[1]+"$";//17
        adddoc +=  $("#pincode2").val()+ "$";//18
        adddoc += $("#ward2").val()+ "$";//19
        adddoc += $("#vlge2").val()+ "$";//20
        adddoc += $("#peraddBMC").val()+"$" ;//21
        adddoc += $("#preaddBMC").val()+ "$";//22
        adddoc += $("#permid").val()+"$" ;//23
        adddoc += $("#presid").val()+ "$";//24
        $("#BenAddress").val(adddoc);
        var famrowCount = $('.tblfamily tr').length;
        var namrowCount = $('.tblNaminee tr').length;
        $("#NamCount").val(namrowCount);
        $("#FamCount").val(famrowCount);
        var doc = "";
        var DependentStatus = $("input[name='dependentdet']:checked").val();
        if(DependentStatus == undefined)
        {
            alert("Please Select Yes/No For Dependent Details");
            $("#depyes").focus();
            return false;
        }
        $("#DependentStatus").val(DependentStatus);
        var FamFatherCount = 0;
        var FamMotherCount = 0;
        var FamSpouseCount = 0;
        if(DependentStatus =="Yes")
        {
            for (i = 1;i < famrowCount; i++)
            {
                debugger;
                if($("#FamDept"+i).val() =="" ||$("#FamDept"+i).val() ==null)
                {
                    alert("Please Enter Dependent Name");
                    $("#FamDept"+i).focus();
                    return false;
                }
                if($("#FamDob"+i).val() =="" ||$("#FamDob"+i).val() ==null)
                {
                    alert("Please Enter Date Of Birth");
                    $("#FamDob"+i).focus();
                    return false;
                }
                if($("#FamAge"+i).val() =="" ||$("#FamAge"+i).val() ==null)
                {
                    alert("Please Enter Age");
                    $("#FamAge"+i).focus();
                    return false;
                }
                if ($("#AdhNoFam"+i).val().length != 12 && $("#AdhNoFam"+i).val().length > 1) {
                    alert("Please Enter Valid Aadhaar Number");
                    $("#AdhNoFam" + i).focus();
                    return false;
                }
                var schempbk = $("#lblschemechk"+i).text();
                if(schempbk == 1)
                {
                    if($("#schpassbk"+i).val() =="" ||$("#schpassbk"+i).val() ==null)
                    {
                        alert("Please select Scheme Passbook");
                        $("#schpassbk" + i).focus();
                        return false;
                    }
                }
                var famrel =  $("#DDLFamRel"+i+" option:selected").text();
                if(famrel =="Father")
                    FamFatherCount = FamFatherCount + 1;
                if(famrel =="Mother")
                    FamMotherCount = FamMotherCount + 1;
                if(famrel =="Spouse")
                    FamSpouseCount = FamSpouseCount + 1;
                if(FamFatherCount > 1 ||FamMotherCount > 1 ||FamSpouseCount >1)
                {
                    alert("Invalid Relation");
                    return false;
                }

                var FamGender = $("#DDLFamGender"+i).val();

                if(FamGender == "Male")
                {
                    if(famrel == "Mother" ||famrel == "Daughter" )
                    {
                        alert("Invalid Gender");
                        $("#DDLFamGender"+i).focus();
                        return false;
                    }
                }

                if(FamGender == "Female")
                {
                    if(famrel == "Father" ||famrel =="Son" )
                    {
                        alert("Invalid Gender");
                        $("#DDLFamGender"+i).focus();
                        return false;
                    }
                }


                doc += $("#FamWRU"+i).val() + "$";
                doc +=$("#FamDept"+i).val() + "$";
                doc +=$("#DDLFamRel"+i+" option:selected").text() + "$";   
                doc +=$("#DDLFamGender"+i).val() + "$";
                doc +=$("#FamDob"+i).val() +"$";
                doc +=$("#FamAge"+i).val() + "$";
                doc +=$("#AdhNoFam"+i).val() + "$";
                doc +=$("#Familyid"+i).val() + "$";
                doc +=$("#DDLFamRel"+i).val() + "~";
            }
        }
        doc += "";
        $("#BenFamdet").val(doc);
        var doc1 = "";
        var shreallocation = "0";
        var NomineeStatus = $("input[name='nomineedet']:checked").val();
        if(NomineeStatus == undefined)
        {
            alert("Please Select Yes/No For Nominee  Details");
            $("#nomiyes").focus();
            return false;
        }
        var NamFather = 0;
        var Nammother = 0;
        var NamSpouse = 0;
        $("#NomineeStatus").val(NomineeStatus);
        if(NomineeStatus == "Yes")
        {
            for (i = 1;i < namrowCount; i++)
            {
                if($("#NamiName"+i).val() =="" ||$("#NamiName"+i).val() ==null)
                {
                    alert("Please Enter Nominee Name");
                    $("#NamiName"+i).focus();
                    return false;
                }
                if($("#DDLNamRel"+i).val() =="" ||$("#DDLNamRel"+i).val() ==null)
                {
                    alert("Please Enter Nominee  Relation");
                    $("#DDLNamRel"+i).focus();
                    return false;
                }
                if($("#namdob"+i).val() =="" ||$("#namdob"+i).val() ==null)
                {
                    alert("Please Enter Nominee  Date Of Birth");
                    $("#namdob"+i).focus();
                    return false;
                }
                if($("#NamAge"+i).val() =="" ||$("#NamAge"+i).val() ==null)
                {
                    alert("Please Enter Nominee  Age");
                    $("#NamAge"+i).focus();
                    return false;
                }
                if($("#SahreAlo"+i).val() =="" ||$("#SahreAlo"+i).val() ==null)
                {
                    alert("Please Enter Nominee  Share Allocation");
                    $("#SahreAlo"+i).focus();
                    return false;
                }
                var namrel =  $("#DDLNamRel"+i+" option:selected").text();
                if(namrel =="Father")
                    NamFather  = NamFather  + 1;
                if(namrel =="Mother")
                    Nammother  = Nammother  + 1;
                if(namrel =="Spouse")
                    NamSpouse  = NamSpouse  + 1;
                if(NamFather > 1 ||Nammother > 1 ||NamSpouse >1)
                {
                    alert("Invalid Relation");
                    return false;
                }
                var agevalid = $("#NamAge" + i).val();


                var bnkValidation = $("input[name=nomineeAct" + i + "]:checked").val();

                if (bnkValidation == null || bnkValidation == undefined) {
                    alert("Please select  account number yes/no");
                    $(".nomineeAct" + i).focus();
                    return false;
                }

                if (bnkValidation == "Yes")
                {
                    if($("#Bankname"+i).val() =="" ||$("#Bankname"+i).val() ==null)
                    {
                        alert("Please Enter Nominee  Bank Name");
                        $("#Bankname"+i).focus();
                        return false;
                    }
                    if($("#BankActNo"+i).val() =="" ||$("#BankActNo"+i).val() ==null)
                    {
                        alert("Please Enter Nominee  Bank Account No");
                        $("#BankActNo"+i).focus();
                        return false;
                    }
                    if($("#BranchName"+i).val() =="" ||$("#BranchName"+i).val() ==null)
                    {
                        alert("Please Enter Nominee  Branch Name");
                        $("#BranchName"+i).focus();
                        return false;
                    }
                    if($("#NamIfscCode"+i).val() =="" ||$("#NamIfscCode"+i).val() ==null)
                    {
                        alert("Please Enter Nominee  IFSC Code");
                        $("#NamIfscCode"+i).focus();
                        return false;
                    }
                    if ($("#NamIfscCode"+i).val().length != 11) {
                        alert("Please Enter Valid IFSC Code");
                        $("#NamIfscCode" + i).focus();
                        return false;
                    }
                }

                var NomiGender = $("#DDLNamGender"+i).val();

                if(NomiGender == "Male")
                {
                    if(namrel == "Mother" ||namrel == "Daughter" )
                    {
                        alert("Invalid Gender");
                        $("#DDLNamGender"+i).focus();
                        return false;
                    }
                }

                if(NomiGender == "Female")
                {
                    if(namrel == "Father" ||namrel =="Son" )
                    {
                        alert("Invalid Gender");
                        $("#DDLNamGender"+i).focus();
                        return false;
                    }
                }


                shreallocation =  parseInt((shreallocation),10)+parseInt(($("#SahreAlo"+i).val()),10);
                doc1 +=  $("#NamiName"+i).val() + "$";
                doc1 +=$("#DDLNamRel"+i+" option:selected").text() + "$";      
                doc1 +=  $("#DDLNamGender"+i).val() + "$";
                doc1 +=  $("#NamAge"+i).val() + "$";
                doc1 +=  $("#namdob"+i).val() + "$";
                doc1 +=  $("#SahreAlo"+i).val() + "$";
                doc1 +=  $("#BranchName"+i).val() + "$";
                doc1 +=   $("#NamIfscCode"+i).val() + "$";
                doc1 +=  $("#BankActNo"+i).val() + "$";
                doc1 +=  $("#nomineeid"+i).val() + "$";
                doc1 +=  $("#Bankname"+i).val() + "$";
                doc1 +=  $("#DDLNamRel"+i).val() + "~";
            }
        }
        doc1 += "";
        $("#Bennamedet").val(doc1);
        if(NomineeStatus == "Yes")
        {
            if(shreallocation >100)
            {
                var i = namrowCount-1;
                alert("The Shareallocation value Should not exceed 100");
                $("#SahreAlo"+1).focus();
                return false;
            }
            if(shreallocation < 100)
            {
                var i = namrowCount-1;
                alert("The Shareallocation value Should not be less than 100");
                $("#SahreAlo"+i).focus();
                return false;
            }
        }
        var validformlistStatus = $("input[name='formstatus']:checked").val()
        if(validformlistStatus == undefined)
        {
            alert("Please Select Yes or No in Form1");
            $("#frmyes").focus();
            return false;
        }
        if(validformlistStatus == "Yes")
        {
            if ($("#BenForm1").val() == "" || $("#BenForm1").val() == null || $("#BenForm1").val() == 0) {
                alert("Please Choose Form");
                $("#BenForm1").focus();
                return false;
            }
           // alert($("#issueauth").val());
            if ($("#issueauth").val() == "" || $("#issueauth").val() == null || $("#issueauth").val() == 0) {
                alert("Please Select Issuing Authority");
                $("#issueauth").focus();
                return false;
            }
            if ($("#authname").val() == "" || $("#authname").val() == null) {
                alert("Please Enter Authority Name");
                $("#authname").focus();
                return false;
            }
        }
        if(validformlistStatus == "No")
        {
            alert("For further process,Please select Yes ,if you have Form1 details");
            $("#frmyes").focus();
            return false;
        }
        if ($("#Photo").val() == "" || $("#Photo").val() == null || $("#Photo").val() == 0) {
            alert("Please Choose Photo");
            $("#Photo").focus();
            return false;
        }
        if ($("#Signature").val() == "" || $("#Signature").val() == null || $("#Signature").val() == 0) {
            alert("Please Choose Signature");
            $("#Signature").focus();
            return false;
        }
        if ($("#idschemecert").val() == "" || $("#idschemecert").val() == null || $("#idschemecert").val() == 0) {
            alert("Please Choose Scheme Certificate");
            $("#idschemecert").focus();
            return false;
        }
        var ValidPfEsiDet = $("input[name='pfesidet']:checked").val()
    
        var validEsiStatus = $("input[name='esistatus']:checked").val()
     
        var ValidEsiStatus = $("input[name='esidet']:checked").val()
        var validPFSta = $("input[name='pfsta']:checked").val()

        if(ValidPfEsiDet == undefined && ValidEsiStatus == undefined )
        {
            if(validPFSta == undefined)
            {
                alert("Please Select Yes / No in PF ");
                $(".Pf").focus();
                return false;
            }
        }

        if(  (ValidEsiStatus == "ESI" ))
        {
            if($("#esi").val() == "" || $("#esi").val() ==null)
            {
                alert("Please Enter ESI Number");
                $("#esi").focus();
                return false;
            }
        }
        if(  (ValidPfEsiDet == "PF"))
        {
            if($("#esinum").val() == "" || $("#esinum").val() ==null)
            {
                alert("Please Enter PF Number");
                $("#esinum").focus();
                return false;
            }
            if($("#esinum").val() == "" ||$("#esinum").val() == null)
            {
                if (validPFSta == undefined) {
                    alert("Please Select Yes / No in PF ");
                    $(".Pf").focus();
                    return false;
                }
            }
        }
        if(validPFSta == undefined)
        {
            $("#CheckPfStatus").val("0");
        }
        var getuwtype = $("input[name='Workertype']:checked").val()
        if (getuwtype == undefined) {
            alert("Please Select Worker Type");
            $(".workerdet").focus();
            return false;
        }
        var esino  = $('#esi').val();
        if (getuwtype == "Others") {
            var getemptype = $("input[name='Emptype']:checked").val()
            if (getemptype == undefined) {
                alert("Please Select Employee Type");
                $(".Wortype").focus();
                return false;
            }
            if (getemptype == "SelfEmployed") {
                if ($("#selfid").val() == "0") {
                    alert("Please Select Self Employed");
                    $("#selfid").focus();
                    $("#unorgid").val('');
                    return false;
                }
            }
            if (getemptype == "UnorganisedIndustries") {
                if ($("#unorgid").val() == "0") {
                    alert("Please Select Unorganised Industries");
                    $("#unorgid").focus();
                    $("#selfid").val('');
                    return false;
                }
            }
        }

        /*if ((getuwtype == "TransportWorker") || (getuwtype == "ConstructionWorker")) {
            var getemptype = $("input[name='Worktype1']:checked").val()
            if (getemptype == undefined) {
                alert("Please Select Work Type");
                $(".Worktype").focus();
                return false;
            }

            if ($("#WorkType").val() == "0") {
                alert("Please Select Work Type List");
                $("#WorkType").focus();
                return false;
            }

            if (($("#WorkType").val() == "7") || ($("#WorkType").val() == "11")) {
                if ($("#BenOccupationDesc").val() == "" || $("#BenOccupationDesc").val() == null) {
                    alert("Please Enter Work Type");
                    $("#BenOccupationDesc").focus();
                    return false;
                }
            }
        }*/

        if ($("#mnthyincme").val() == "" || $("#mnthyincme").val() == null) {
            alert("Please Enter Monthly Income");
            $("#mnthyincme").focus();
            return false;
        }
        if (getuwtype == "Others") {
            var getemptype = $("input[name='Emptype']:checked").val()
            if (getemptype == undefined || getemptype == "UnorganisedIndustries" || getemptype == "SelfEmployed") {
                if ($("#mnthyincme").val() > 6500 ) {
                    alert("For 'Others' type of worker category ,monthly income should not be greater than Rs. 6,500/- ");
                    $("#mnthyincme").focus();
                    $("#mnthyincme").val('');
                    return false;
                }
            }
        }


        var lstcheckagree = $("#lstcheckagree").is(':checked');
        if(lstcheckagree ==false)
        {
            alert("Please Select Checkbox for Rules and Regulations ");
            $("#lstcheckagree").focus();
            return false;
        }
        $("#BankLoca").val($("#loc").val());
        $("#BankDisId").val($("#bankdistid").val());
    }
    //Date Of Birth validations
    $('#ddlyr').change(function() {
        $("#age").val("");
    });
    $('#ddlmnth').change(function() {
        $("#age").val("");
    });
    //$("#ddlfrstname").change(function(){
    //    debugger;
    //    var DDLFirstname = $('#ddlfrstname').val();
    //    if(DDLFirstname == "Mr.")
    //    {
    //        $('#gndrfemale').hide();
    //        $('#lblfemale').hide();
    //    }
    //    else
    //    {
    //        $('#gndrfemale').show();
    //        $('#lblfemale').show();
    //    }
    //    if(DDLFirstname == "Ms." || DDLFirstname == "Mrs.")
    //    {
    //        $('#gndrmale').hide();
    //        $('#lblmale').hide();
    //    }
    //    else
    //    {
    //        $('#gndrmale').show();
    //        $('#lblmale').show();
    //    }
    //});
    $('.bengender').change(function() {
        debugger;
        var Gender = $("input[name='bengender']:checked").val()
        var Marst =  $('#maritalid').val();
        $("#maritalid").val(0)
        $("#HusbandName").attr("readonly", "readonly");
        // var salutation = $('#ddlfrstname').val();
        //if(Gender =="Female")
        //{
        //    debugger;
        //    if(salutation =="Mr.")
        //    {
        //        alert("Invalid Gender");
        //        $("#gndrfemale").focus();
        //        return false;
        //    }
        //}
        //if(Gender =="Male")
        //{
        //    if(salutation == "Ms." || salutation =="Mrs.")
        //    {
        //        alert("Invalid Gender");
        //        $("#gndrmale").focus();
        //        return false;
        //    }
        //}
        if(Gender =="Female" && Marst =="2" || Gender =="Female" && Marst =="5")
        {
            $("#HusbandName").removeAttr("readonly");
            $("#HusbandName").focus();
        }
        else
        {
            $("#HusbandName").attr("readonly", "readonly");
            $("#HusbandName").val("");
        }
        if(Gender =="Female" && Marst =="5")
        {
            $("#ddlhusname").Show('Late');
            $("#HusbandName").removeAttr("readonly");
        }
        if(Marst !="5")
        {
            $("#ddlhusname option:contains(Late)").remove();
        }
    })
    $('#maritalid').change(function() {
        var Gender = $("input[name='bengender']:checked").val()
        var Marst =  $('#maritalid').val();
        if(Gender =="Female" && Marst =="2" || Gender =="Female" && Marst =="5")
        {
            $("#HusbandName").removeAttr("readonly");
            $("#HusbandName").focus();
        }
        else
        {
            $("#HusbandName").attr("readonly", "readonly");
            $("#HusbandName").val("");
        }
        if(Gender =="Female" && Marst =="5")
        {
            $("#ddlhusname").append('<option value=Late>Late</option>');
            $("#ddlhusname option:contains(Mr.)").remove();

            $("#HusbandName").removeAttr("readonly");
        }
        if(Marst !="5")
        {
            $("#ddlhusname option:contains(Late)").remove();
            $("#ddlhusname option:contains(Mr.)").remove();
            $("#ddlhusname").append('<option value=Mr.>Mr.</option>');
        }
        if(Gender =="Female" && Marst =="2" || Gender =="Female" && Marst =="5")
        {
            alert("Husband Name is mandatory");
            $("#HusbandName").focus();
        }
    });
    $('.bplst').change(function() {
        debugger;
        var BplStatus = $("input[name='bplstatus']:checked").val()
        if(BplStatus =="1"){
            $("#bplys").show();
            $("#bplno").focus();
            $("#bplno").removeAttr("readonly");
        }
        if(BplStatus =="0"){
            $("#bplno").attr("readonly", "readonly");
            $("#bplno").val('');
        }
    });
    //Change Event
    $('.pfesilst').change(function() {
        debugger;
        var PfEsiDet = $("input[name='pfesidet']:checked").val()
        if(PfEsiDet == "PF")
        {
            $("#esinum").removeAttr("readonly");
            $("#esinum").focus();
            $("#divPFOpt").hide();
        }
        else
        {
            $("#esinum").attr("readonly", "readonly");
            $("#esinum").val('');
            $("#esi").focus();
            $("#divPFOpt").show();
        }
    })
    $('.clschkesi').change(function() {
        debugger;
        var EsiDet = $("input[name='esidet']:checked").val()
        var pfval = $("input[name='pfesidet']:checked").val()
        if(EsiDet == "ESI")
        {
            $("#esi").removeAttr("readonly");
            $("#esi").val('');
            $("#esi").focus();
            $("#divPFOpt").hide();
            if(pfval == undefined)
            {
                $("#divPFOpt").show();
            }
        }
        else
        {
            $("#esi").attr("readonly", "readonly");
            $("#esi").val('');
            $("#divPFOpt").show();
            if(pfval == "PF")
            {
                $("#divPFOpt").hide();
            }
        }
    })
    $('.esilst').change(function() {
        var EsiStatus = $("input[name='esistatus']:checked").val()
        debugger;
        $('#chkpf').attr('checked', false);
        $('#chkesi').attr('checked', false);
        $(".Pf").attr("checked" , false );
        if(EsiStatus == "1"){
            $("#divpfesidet").show();
            $("#divesidet").show();
            debugger;

            $("#divPFOpt").hide();
        }
        else
        {
            $("#esinum").attr("readonly", "readonly");
            $("#esi").attr("readonly", "readonly");
            $("#esinum").val('');
            $("#esi").val('');
            $("#divpfesidet").hide();
            $("#divesidet").hide();
            $("#divPFOpt").show();
        }
    });
    $('.workerdet').change(function() {
        debugger;
        var validEsiStatus = $("input[name='esistatus']:checked").val()
        var validPFSta = $("input[name='pfsta']:checked").val()
        var WorkerStatus = $("input[name='Workertype']:checked").val()
        var esino = $('#esi').val();
       
        var Contype = "C";
        $('.Wortype').attr('checked', false);
       // $('.Worktype').attr('checked', false);

        $("#divOther").hide();
        $("#divConTrn").hide();

        if(WorkerStatus == "Others")
        {
            $("#divOther").show();
            $("#divConTrn").hide();
            $('.Worktype').attr('checked', false);
            //$(".Worktype").attr("disabled", true);
            //$("#WorkType").attr("disabled", true);
            //$("#WorkType").add("readonly");
            $('#WorkType').val('0');
            $("#BenOccupationDesc").val(""); 
        }
        if ((WorkerStatus == "ConstructionWorker") || (WorkerStatus == "TransportWorker"))
        {
            $("#divOther").hide();
            $("#divConTrn").show();

            $(".Wortype").attr("disabled", true);
            $("#selfid").attr("disabled", true);
            $("#divemp").hide();
            $('#unorgid').val('0');
            $("#unorgid").attr("disabled", true);
            $('#selfid').val('0');
            $('#occu').val('');
            $('#selfemp').val('');
            $("#occu").attr("disabled", true);
            $("#selfemp").attr("disabled", true);
            $("#occu").removeAttr("readonly");
            $("#selfemp").removeAttr("readonly");
            $('.Worktype').attr('checked', true);
            //$(".Worktype").attr("disabled", false);
            //$("#WorkType").attr("disabled", true);
            //$("#WorkType").add("readonly");
            $('#WorkType').val('0');
            $("#BenOccupationDesc").val(""); 

            if (WorkerStatus == "ConstructionWorker") {
                Contype = "C";
            }
            if (WorkerStatus == "TransportWorker") {
                Contype = "T";
            }

            $.get('@Url.Action("GetWorkType", "Registration")', { ID: Contype }, function (dat) {
                    $("#WorkType").find("option").remove();
		                $.each(dat, function (i, data) {
			                debugger;
                            $("#WorkType").append("<option value=" + data.Value + "> " + data.Text + " </option>");
		                });
	                });

        }
        else
        {
            $(".Wortype").attr("disabled", false);
            $("#divemp").show();
        }
        $("#Occupation").val(WorkerStatus);
    });

    $('#WorkType').change(function () {
        var TypCode = $("#WorkType").val();
        $("#BenOccupationDesc").val("");
        if ((TypCode == "7") || (TypCode == "11")) {
            //$("#BenOccupationDesc").removeAttr("readonly");
        }
        else {
            //$("#BenOccupationDesc").attr("readonly", "readonly");
        }
    });

    $('.Worktype').change(function () {
        debugger;
        var Workertype = $("input[name='Worktype1']:checked").val()
        $("#WorkType").val("0");
        //$("#WorkType").attr("disabled", false);
        //$("#WorkType").removeAttr("readonly");
        $("#BenOccupationDesc").val("");
    });

    $('.Wortype').change(function() {
        var Workertype = $("input[name='Emptype']:checked").val()
        $("#selfid").val("0");
        $("#unorgid").val("0");
        if(Workertype =="SelfEmployed")
        {
            $("#selfid").attr("disabled", false);
            $("#selfid").removeAttr("readonly");
            $("#unorgid").attr("disabled", true);
            $("#unorgid").add("readonly");
        }
        if(Workertype =="UnorganisedIndustries")
        {
            $("#unorgid").attr("disabled", false);
            $("#unorgid").removeAttr("readonly");
            $("#selfid").attr("disabled", true);
            $("#selfid").add("readonly");
        }
    });
    $('#selfid').change(function() {
        $("#selfemp").val($("#selfid option:selected").text());
        $("#SelfEmpNo").val($("#selfid").val());
        $("#occu").removeAttr("readonly");
        $("#selfemp").removeAttr("readonly");
        $('#unorgid').val('');
        $('#occu').val('');
    });
    $('#unorgid').change(function() {
        $("#occu").val($("#unorgid option:selected").text());
        $("#SelfEmpNo").val($("#unorgid").val());
        $('#selfid').val('');
        $('#selfemp').val('');
        $("#occu").removeAttr("readonly");
        $("#selfemp").removeAttr("readonly");
    });
    $('#brnch').change(function() {
        debugger;
        var ifsc =$("#brnch").val();
        var res = ifsc.split("-");
       // var ifsc =$("#brnch").val();
       // var res = ifsc.split("-");
        $.get('@Url.Action("GetbranchAddrJSON", "Registration")', {ID :res[1]}, function (dat) {
            $("#branchaddress").val(dat);
        });
    });
    $('#perPOid').change(function() {
        var pincode =$("#perPOid").val();
        var res = pincode.split("-");
        $("#pincode").val(res[0]);
    });
    $('#preaddPO').change(function() {
        var pincode =$("#preaddPO").val();
        var res = pincode.split("-");
        $("#pincode2").val(res[0]);
    });
    $('.formlst').change(function() {
        var FormStatus = $("input[name='formstatus']:checked").val()
        if(FormStatus == "Yes"){
            $("#Benform").show();
            $("#issueauth").focus();
            $("#issueauth").attr("disabled", false);
            $("#issueauth").removeAttr("readonly");
            $("#authloc").removeAttr("readonly");
            $("#authname").removeAttr("readonly");
        }
        else
        {
            $("#Benform").hide();
            $("#issueauth") .attr("disabled", true);
            $("#authloc").attr("readonly", "readonly");
            $("#authname").attr("readonly", "readonly");
            alert("If you do not have Form1 details,you are Registration cannot be Processed");
        }
    });
    $('#presauto').change(function() {
        var res = $(this).is(':checked');
        if(res ==true)
        {
            debugger;
            $("#state2").val($("#state").val());
            $("#PreAddrdistid").val($("#perdistid").val());
            $("#PreAddrdistid").attr("readonly", "readonly");
            $("#PreAddrdistid").attr("disabled", true);
            $("#preAddrsubdiv").val($("#persubdivid").val());
            $("#preAddrsubdiv").attr("readonly", "readonly");
            $("#preAddrsubdiv").attr("disabled", true);
            $("#preaddBMC").val($("#peraddBMC").val());
            $("#preaddBMC").attr("readonly", "readonly");
            $("#preaddBMC").attr("disabled", true);
            $("#preaddBlock").val($("#peraddblock").val());
            $("#preaddBlock").attr("readonly", "readonly");
            $("#preaddBlock").attr("disabled", true);
            $("#preaddPS").val($("#perpsid").val());
            $("#preaddPS").attr("readonly", "readonly");
            $("#preaddPS").attr("disabled", true);
            $("#preaddPO").val($("#perPOid").val());
            $("#preaddPO").attr("readonly", "readonly");
            $("#preaddPO").attr("disabled", true);
            $("#pincode2").val($("#pincode").val());
            $("#pincode2").attr("readonly", "readonly");
            var selward =   $("#ward option:selected").text();
            if(selward == "-- Select GP --")
            {
                $("#ward2 option:contains(All Wards)").remove();
                $("#ward2").val($("#ward").val());
            }
            else
            {
                $("#ward2 option[value ='0']").remove();
                $("#ward2").append('<option value=0>All Wards</option>');
                $("#ward2").val($("#ward").val());
            }
            $("#ward2").attr("readonly", "readonly");
            $("#ward2").attr("disabled", true);
            $("#vlge2").val($("#vlge1").val());
            $("#vlge2").attr("readonly", "readonly");
        }
        else
        {
            $("#PreAddrdistid").val("0");
            $("#PreAddrdistid").removeAttr("readonly");
            $("#PreAddrdistid").attr("disabled", false);
            $("#preAddrsubdiv").val("0");
            $("#preAddrsubdiv").removeAttr("readonly");
            $("#preAddrsubdiv").attr("disabled", false);
            $("#preaddBMC").val("0");
            $("#preaddBMC").removeAttr("readonly");
            $("#preaddBMC").attr("disabled", false);
            $("#preaddBlock").val("0");
            $("#preaddBlock").removeAttr("readonly");
            $("#preaddBlock").attr("disabled", false);
            $("#preaddPS").val("0");
            $("#preaddPS").removeAttr("readonly");
            $("#preaddPS").attr("disabled", false);
            $("#preaddPO").val("0");
            $("#preaddPO").removeAttr("readonly");
            $("#preaddPO").attr("disabled", false);
            $("#pincode2").val("");
            $("#pincode2").removeAttr("readonly");
            $("#ward2 option[value ='0']").remove();
            $("#ward2").append('<option value=0>-- Select GP --</option>');
            $("#ward2").val("0");
            $("#ward2").removeAttr("readonly");
            $("#ward2").attr("disabled", false);
            $("#vlge2").val("");
            $("#vlge2").removeAttr("readonly");
        }
    });
    $("#ddlday").change(getage);
    $("#ddlmnth").change(getage);
    $("#ddlyr").change(getage);
    function getage(){
        debugger;
        if( $("#ddlday").val() != "0")
        {
            if($("#ddlyr").val() != "0" && $("#ddlmnth").val() != "0" && $("#ddlday").val() != "0")
            {
                var getage = calculateAge($("#ddlyr").val()+"-"+$("#ddlmnth").val()+"-"+$("#ddlday").val());
                $("#age").val(getage);
            }
        }
    }
    $("#ddlcards").change(LoadNumber);
    function LoadNumber() {
        $("#cards").val("");
        $("#cards").focus();
        //Aadhaar
        if( $("#ddlcards").val()=="1")
        {
            $("#cards").attr('maxlength','12');
            $("#cards").attr('onkeydown','return IsNumericOnly(event)');
        }
        //Epic
        if( $("#ddlcards").val()=="2")
        {
            $("#cards").attr('maxlength','15');
            $("#cards").attr('onkeydown','return IsAlphaNumaric(event)');
        }
        if( $("#ddlcards").val()=="3")
        {
            $("#cards").attr('maxlength','20');
            $("#cards").attr('onkeydown','return IsAlphaNumaric(event)');
        }
    };
    //1
    $("#loc").change(loadbranchdet);
    function loadbranchdet() {
        $.get('@Url.Action("GetBranchJSON", "Registration")', {ID :$("#loc").val()}, function (dat) {
            $("#brnch").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#brnch").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    //2
    $("#bank").change(loadLocdet);
    function loadLocdet() {
        $.get('@Url.Action("GetLocationJSON", "Registration")', {ID :$("#bank").val(),distID :$("#bankdistid").val()}, function (dat) {
            $("#loc").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#loc").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    //3
    //Bank
    $("#bankdistid").change(loadbankdet);
    function loadbankdet() {
        $("#bank").val("0");
        $("#loc").val("0");
        $("#brnch").val("0");
        $("#ifsccode").val("");
        $("#actnumber").val("");
        $.get('@Url.Action("GetBankJSON", "Registration")', {ID :$("#bankdistid").val()}, function (dat) {
            $("#bank").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#bank").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    $("#PreAddrdistid").change(loadprePO);
    function loadprePO() {
        $.get('@Url.Action("GetPOJSON", "Registration")', {ID :$("#PreAddrdistid").val()}, function (dat) {
            $("#preaddPO").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preaddPO").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    $("#preaddBMC").change(loadpreBlock);
    function loadpreBlock() {
        $.get('@Url.Action("GetblockJSON", "Registration")', {ID :$("#preAddrsubdiv").val(),typedata :$("#preaddBMC").val()}, function (dat) {
            $("#preaddBlock").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preaddBlock").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
        var Dist = $("#PreAddrdistid").val();
        var Blk = $("#preaddBMC").val();
        if( Blk == "2"|| Blk == "3")
        {

            //$("#ward2").find("option").remove();
            //$("#ward2").append('<option value=0>All Wards</option>');

            $.get('@Url.Action("GetGPJSON", "Registration")', {ID :0}, function (dat) {
                $("#ward2").find("option").remove();
                $.each(dat, function (i, data) {
                    debugger;
                    $("#ward2").append("<option value=" + data.Value + ">"+data.Text+"</option>");
                });
            });
        }
        else
        {
            loadGPre();
        }
    }
    $("#PreAddrdistid").change(loadpreSubdiv);
    function loadpreSubdiv() {
        $("#preAddrsubdiv").val("0");
        $("#preaddBMC").val("0");
        $("#preaddBlock").val("0");
        $("#preaddPS").val("0");
        $("#preaddPO").val("0");
        $("#pincode2").val("");
        $("#ward2").val("0");
        $("#vlge2").val("");
        loadGPre()
        loadpreBlock()
        $.get('@Url.Action("GetSubdivisionJSON", "Registration")', {ID :$("#PreAddrdistid").val()}, function (dat) {
            $("#preAddrsubdiv").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preAddrsubdiv").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }

    //Load SubDivisions
    $("#perdistid").change(loadSubdiv);
    function loadSubdiv() {
        $("#persubdivid").val("0");
        $("#peraddBMC").val("0");
        $("#peraddblock").val("0");
        $("#perpsid").val("0");
        $("#perPOid").val("0");
        $("#pincode").val("");
        $("#ward").val("0");
        $("#vlge1").val("");
        loadGP()
        loadBlock()
        $.get('@Url.Action("GetSubdivisionJSON", "Registration")', {ID :$("#perdistid").val()}, function (dat) {
            $("#persubdivid").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#persubdivid").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
            //Present Address
            $("#preAddrsubdiv").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preAddrsubdiv").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    $("#peraddBMC").change(loadBlock);
    function loadBlock() {
        $.get('@Url.Action("GetblockJSON", "Registration")', {ID :$("#persubdivid").val(),typedata : $("#peraddBMC").val()}, function (dat) {
            debugger;
            $("#peraddblock").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#peraddblock").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
            //Present Address Block
            $("#preaddBlock").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preaddBlock").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
        var perDist = $("#perdistid").val();
        var perBlk = $("#peraddBMC").val();
        if( perBlk == "2" ||  perBlk == "3")
        {
            //$("#ward").find("option").remove();
            //$("#ward").append('<option value=0>All Wards</option>');
            //$("#ward2").find("option").remove();
            //$("#ward2").append('<option value=0>All Wards</option>');

            $.get('@Url.Action("GetGPJSON", "Registration")', {ID :0}, function (dat) {
                $("#ward2").find("option").remove();
                $("#ward").find("option").remove();
                $.each(dat, function (i, data) {
                    debugger;
                    $("#ward2").append("<option value=" + data.Value + ">"+data.Text+"</option>");
                    $("#ward").append("<option value=" + data.Value + ">"+data.Text+"</option>");
                });
            });
        }
        else
        {
            loadGP();
        }
    }
    //For Present Address
    $("#preaddBlock").change(loadGPKolkata);
    function loadGPKolkata(){
        var DistGPK = $("#PreAddrdistid").val();
        var BlkGPK = $("#preaddBMC").val();
        //if(DistGPK == "12" && BlkGPK == "3")
        //{
        //    $("#ward2").find("option").remove();
        //    var BlockName= $("#preaddBlock option:selected").text();
        //    $("#ward2").append('<option value=9999>'+BlockName+'</option>');
        //    $("#ward2").val('9999');
        //}
    }
    //Permanent
    $("#peraddblock").change(loadGPKolkataPer);
    function loadGPKolkataPer(){
        var DistGPPer = $("#perdistid").val();
        var BlkGPPer = $("#peraddBMC").val();
        //if(DistGPPer == "12" && BlkGPPer == "3")
        //{
        //    $("#ward").find("option").remove();
        //    var BlockName= $("#peraddblock option:selected").text();
        //    $("#ward").append('<option value=9999>'+BlockName+'</option>');
        //    $("#ward").val('9999');
        //    //Present
        //    $("#ward2").find("option").remove();
        //    $("#ward2").append('<option value=9999>'+BlockName+'</option>');
        //    $("#ward2").val('9999');
        //}
       // else
       // {
            loadGPKolkata();
      //  }
    }
    $("#PreAddrdistid").change(loadprePS);
    function loadprePS() {
        $.get('@Url.Action("GetPSJSON", "Registration")', {ID :$("#PreAddrdistid").val()}, function (dat) {
            $("#preaddPS").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preaddPS").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    $("#perdistid").change(loadPS);
    function loadPS() {
        $.get('@Url.Action("GetPSJSON", "Registration")', {ID :$("#perdistid").val()}, function (dat) {
            $("#perpsid").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#perpsid").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
            //present Address Block
            $("#preaddPS").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preaddPS").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    $("#perdistid").change(loadperPO);
    function loadperPO() {
        $.get('@Url.Action("GetPOJSON", "Registration")', {ID :$("#perdistid").val()}, function (dat) {
            $("#perPOid").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#perPOid").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
            //Present
            $("#preaddPO").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#preaddPO").append("<option value=" + data.Value + "> " + data.Text + " </option>");
            });
        });
    }
    //GP list
    $("#persubdivid").change(loadGP);
    debugger;
    function loadGP() {
        $.get('@Url.Action("GetGPJSON", "Registration")', {ID :$("#persubdivid").val()}, function (dat) {
            $("#ward").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#ward").append("<option value=" + data.Value + ">"+data.Text+"</option>");
            });
            //Present Address
            $("#ward2").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#ward2").append("<option value=" + data.Value + ">"+data.Text+"</option>");
            });
        });
    }
    function validateEmail() {
        var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (!expr.test($("#email").val())) {
            alert("Invalid email address.");
            $("#email").focus();
            return false;
        }
    }
    function onlynumber(e, t) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    }
    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || (charCode == 46) || (charCode == 32))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }
    function IsNumericOnly(e) {
        var value = $(e.target).val();
        var n = value.indexOf(".");
        if (n > 0) {
            if ((e.keyCode == 65) || (e.keyCode == 66) || (e.keyCode >= 68 && e.keyCode <= 85) || e.keyCode == 89 || e.keyCode == 87 || e.keyCode == 90 || (e.keyCode == 86 && e.ctrlKey == false) || (e.keyCode == 67 && e.ctrlKey == false) || (e.keyCode == 88 && e.ctrlKey == false) || e.keyCode == 187 || (e.keyCode == 189 && e.shiftKey == true) || e.keyCode == 190 || e.keyCode == 191 || e.keyCode == 107 || e.keyCode == 109 || e.keyCode == 111 || e.keyCode == 189 || e.keyCode == 110 || e.keyCode == 186 || e.keyCode == 188 || (e.keyCode == 61 && e.shiftKey == false) || (e.keyCode == 173 && e.shiftKey == true) || e.keyCode == 192 || (e.keyCode == 191 && e.shiftKey == true) || (e.keyCode >= 219 && e.keyCode <= 222) || e.keyCode == 106 || e.keyCode == 59 || (e.keyCode >= 48 && e.keyCode <= 57 && e.shiftKey == true))
                return false;
        } else {
            if ((e.keyCode == 65) || (e.keyCode == 66) || (e.keyCode >= 68 && e.keyCode <= 85) || e.keyCode == 89 || e.keyCode == 87 || e.keyCode == 90 || (e.keyCode == 86 && e.ctrlKey == false) || (e.keyCode == 67 && e.ctrlKey == false) || (e.keyCode == 88 && e.ctrlKey == false) || e.keyCode == 187 || (e.keyCode == 189 && e.shiftKey == true) || (e.keyCode == 190 && e.shiftKey == true) || e.keyCode == 191 || e.keyCode == 107 || e.keyCode == 109 || e.keyCode == 111 || e.keyCode == 189 || e.keyCode == 186 || e.keyCode == 188 || (e.keyCode == 61 && e.shiftKey == false) || (e.keyCode == 173 && e.shiftKey == true) || e.keyCode == 192 || (e.keyCode == 191 && e.shiftKey == true) || (e.keyCode >= 219 && e.keyCode <= 222) || e.keyCode == 106 || e.keyCode == 59 || (e.keyCode >= 48 && e.keyCode <= 57 && e.shiftKey == true))
                return false;
        }
    }
    function IsAlphaNumaric(e) {
        if ((e.keyCode >= 186 && e.keyCode <= 188) || (e.keyCode == 190) || e.keyCode == 191 ||
    e.keyCode == 192 || e.keyCode == 109 || (e.keyCode >= 219 && e.keyCode <= 222) || (e.keyCode >= 110 && e.keyCode <= 111) ||
    (e.keyCode >= 106 && e.keyCode <= 107) || e.keyCode == 59 || e.keyCode == 189 || e.keyCode == 61 || e.keyCode == 173 ||
    ((e.keyCode >= 48 && e.keyCode <= 57)  && e.shiftKey == true)) {
            return false;
        }
    }
    function IsAplhanumericwithHypenandSlash(e){
        var keyCode = event.keyCode || event.which
        var regex = new RegExp("^[a-zA-Z0-9\-/\]+$");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);

        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    }
    function IsAlphaNumaricWithSpecialCharecter(e) {

        if ((e.keyCode >= 186 && e.keyCode <= 188) || (e.keyCode == 190)  ||
    e.keyCode == 192 || e.keyCode == 109 || (e.keyCode >= 219 && e.keyCode <= 222) || (e.keyCode >= 110 && e.keyCode <= 111) ||
    (e.keyCode >= 106 && e.keyCode <= 107) || e.keyCode == 59 || e.keyCode == 189 || e.keyCode == 61 || e.keyCode == 173 ||
    ((e.keyCode >= 48 && e.keyCode <= 57)  && e.shiftKey == true)) {
            return false;
        }
    }
    $("#IdAadharYN").change(function(){
        var res = $("#IdAadharYN").is(':checked');
        if (res == true) {
            $("#Aadharcard").val('');
            $("#Aadharcardprof").val('');
            alert("Epic Card is Mandatory");
            $("#epiccard").focus();

        }
    })
    $("#Aadharcard").change(function()
    {
        var txtlength = $("#Aadharcard").val();
        debugger;

        if(txtlength.length != 12 && txtlength.length > 0)
        {
            alert("Invalid Aadhar Number");
            $("#Aadharcard").focus();
            return false;
        }

        $.get('@Url.Action("ValidateAadhaar", "Registration")', {ValidateAadhaar : $("#Aadharcard").val() }, function (dat) {
            if(dat > 0)
            {
                alert("This Aadhaar number is already exists");
                $("#Aadharcard").val("");
                $("#Aadharcard").focus();
                return false;
            }
        });
    })
    //For Bank details Account Number
    $("#actnumber").change(function()
    {
        var txtlength = $("#actnumber").val();
        debugger;
        if(txtlength.length > 16 || txtlength.length < 9)
        {
            alert("Invalid Account Number");
            $("#actnumber").focus();
            return false;
        }
    })
    $('#mnthyincme').change(function() {
        var getuwtype = $("input[name='Workertype']:checked").val()
        debugger;
        if (getuwtype == "Others") {
            var getemptype = $("input[name='Emptype']:checked").val()
            if (getemptype == undefined || getemptype == "UnorganisedIndustries" || getemptype == "SelfEmployed") {
                if ($("#mnthyincme").val() > 6500 ) {
                    alert("For 'Others' type of worker category ,monthly income should not be greater than Rs. 6,500/- ");
                    $("#mnthyincme").focus();
                    $("#mnthyincme").val('');
                    return false;
                }
            }
        }
    });
    function checkpf()
    {
        var esinum = $("#esinum").val();
        var checkPfEsiDet = $("input[name='pfesidet']:checked").val()
        if((checkPfEsiDet == undefined) && (esinum == "" || esinum == null))
        {
            $("#divPFOpt").show();

        }
        else
        {
            $("#divPFOpt").hide();
        }
    }
    function test()
    {
        debugger;
        var existreg = $("input[name='existregstatus']:checked").val()
        if(existreg == "Yes")
        {
            window.location.href = "/Registration/BeniRegistrationPart1?Status="+existreg+"&Id="+"&CreatedBy="+Userid;

            // new Change

            // window.location.href = "/Registration/Registration?Status="+existreg+"&Id="+"&Type=OldReg";

        }
        else
        {
            $('#divexistng').modal('hide');
        }
    }
    function ConfirmDet()
    {
        var conexistreg = $("input[name='conexistregstatus']:checked").val()
        if(conexistreg == "Yes")
        {
            $('#divConfirmexistng').modal('hide');
            $(".existreglst").prop('checked', false);
            $('#divexistng').modal('show');
        }
        else
        {
            $('#divConfirmexistng').modal('hide');
        }
    }
    //For Uploading File
    $('INPUT[type="file"]').change(function () {
        debugger;

        var fname  =  "";

        if(this.id == "Photo")
        {
            fname ="photo";
        }
        if(this.id == "Signature")
        {
            fname ="signature";
        }
        if(this.id == "BenForm1")
        {
            fname ="form";
        }
        if(this.id == "Aadharcardprof")
        {
            fname ="aadharcard";
        }
        if(this.id == "Idproof")
        {
            fname ="idproof";
        }
        if(this.id == "Bank")
        {
            fname ="bank";
        }

        if(this.id == "schpassbk0" || this.id == "schpassbk1"|| this.id == "schpassbk2" || this.id == "schpassbk3" || this.id == "schpassbk4"|| this.id == "schpassbk5"||this.id == "schpassbk6")
        {
            fname = "dependency scheme passBook";
        }
        //this.value.replace(/C:\\fakepath\\/i, '');
        if(this.id == "idschemecert")
        {
            fname ="Scheme Certificate";
        }



        if(this.id == "Photo"  || this.id == "Signature")
        {
            if (this.files[0].size < 2000000) {
				//var ext = this.value.match(/\.(.+)$/)[1];
				var ext = this.value.match(/\.(.+)$/)[1];
				var ext2 = this.value.substr((this.value.lastIndexOf('.') + 1));
                switch (ext2) {
                    case 'jpg':
                    case 'jpeg':
                    case 'png':
                    case 'JPG':
                    case 'JPEG':
                    case 'PNG':
                        break;
                    default:

                        alert('Please choose ' + fname + ' only jpg,jpeg or png,pdf File');

                        this.value = '';
                        this.focus();
                }
            }
            else {
                alert('Please choose size of ' + fname + ' file below 2MB');
                this.value = '';
                this.focus();
            }
        }
        else{
            if (this.files[0].size < 2000000) {
				//var ext = this.value.match(/\.(.+)$/)[1];
				var ext = this.value.match(/\.(.+)$/)[1];
				var ext2 = this.value.substr((this.value.lastIndexOf('.') + 1));
                switch (ext2) {
                    case 'jpg':
                    case 'jpeg':
                    case 'png':
                    case 'pdf':
                    case 'JPG':
                    case 'JPEG':
                    case 'PNG':
                    case 'PDF':
                        break;
                    default:
                        alert('Please choose ' + fname + ' only jpg,jpeg or png,pdf File');
                        this.value = '';
                        this.focus();
                }
            }

            else {
                alert('Please choose size of ' + fname + ' file below 2MB');
                this.value = '';
                this.focus();
            }
        }
    });
    $("#Aadharcardprof").click(function(){
        var AadhNo = $("#Aadharcard").val();
        if(AadhNo == "" || AadhNo == null)
        {
            alert("Without Aadhar Card No,You cannot Choose a file");
            return false;
        }
    })
    $("#Idproof").click(function(){
        var epiccard = $("#epiccard").val();
        if(epiccard == "" || epiccard == null)
        {
            alert("Without Epic Card No ,You cannot Choose a file");
            return false;
        }
    })

    //check mobile number Avl
    function validateMobilenum(){
        debugger;
        var x = $("#mobno").val();
        if(x[0] !="6" && x[0] !="7" && x[0] !="8" && x[0] !="9" && x[0] !="5"  )
        {
            alert("Invalid Mobile Number");
            $("#mobno").val("");
            $("#mobno").focus();
            return false;
        }
    }

    //Dependent Change
    $('.depenlst').change(function() {
        var DependentStatus = $("input[name='dependentdet']:checked").val();
        var rowCount = $('.tblfamily tr').length;
        if(rowCount == 1)
        {
            AddFamilyRow()
        }
        if(DependentStatus =="Yes")
        {
            $(".tblfamily").show();
            $(".btndepen").show();
        }
        if(DependentStatus =="No")
        {
            $(".tblfamily").hide();
            $(".btndepen").hide();
        }
    });
    //Nominee Change
    $('.nomineelst').change(function() {
        var nomineedet = $("input[name='nomineedet']:checked").val();
        var rowCount = $('.tblNaminee tr').length;
        if(rowCount == 1)
        {
            NamineeAdd()
        }
        if(nomineedet =="Yes")
        {
            $(".tblNaminee").show();
            $(".btnnom").show();
        }
        if(nomineedet =="No")
        {
            $(".tblNaminee").hide();
            $(".btnnom").hide();
        }
    });
    $("#perdistid,#persubdivid,#peraddBMC,#peraddblock,#perpsid,#perPOid,#pincode,#ward,#vlge1" ).on( "change", function() {
        $("#presauto").attr('checked', false);
        $("#PreAddrdistid,#preAddrsubdiv,#preaddBMC,#preaddBlock,#preaddPS,#preaddPO,#ward2").val("0");
        $("#pincode2,#vlge2").val('');
    });
    $("#ifsccode").keypress(function() {

        var ifscval = $(this).val();
        if(ifscval.length == 4)
        {
            $(this).val(ifscval+"0");
            return false;
        }
    });
    $("#clearAadhar").click(function(){
        $("#Aadharcardprof").val("");
    });
    $("#clearEpic").click(function(){
        $("#Idproof").val("");
    });
    $("#clearBank").click(function(){
        $("#Bank").val("");
    });
    $('.checkstring').keyup(function (e) {
        var  value = $(this).val();
        if(value.length == 4 || value.length == 5 ||value.length == 6)
        {

            if(value.toLowerCase().indexOf("test") >= 0 || value.toLowerCase().indexOf("edit") >= 0 || value.toLowerCase().indexOf("sample") >= 0 || value.toLowerCase().indexOf("dummy") >= 0 || value.toLowerCase().indexOf("dumy") >= 0 ||value.toLowerCase().indexOf("dammy") >= 0)
            {
                alert("Please Enter  Proper Name.");
                $(this).val("");
                $(this).focus();
                return false;
            }
        }
    });
    //Gp List for Present Address
    $("#preAddrsubdiv").change(loadGPre);
    function loadGPre() {
        $.get('@Url.Action("GetGPJSON", "Registration")', {ID :$("#preAddrsubdiv").val()}, function (dat) {
            $("#ward2").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#ward2").append("<option value=" + data.Value + ">"+data.Text+"</option>");
            });
        });
    }
    //GP list
    $("#persubdivid").change(loadGP);
    debugger;
    function loadGP() {
        $.get('@Url.Action("GetGPJSON", "Registration")', {ID :$("#persubdivid").val()}, function (dat) {
            $("#ward").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#ward").append("<option value=" + data.Value + ">"+data.Text+"</option>");
            });
            //Present Address
            $("#ward2").find("option").remove();
            $.each(dat, function (i, data) {
                debugger;
                $("#ward2").append("<option value=" + data.Value + ">"+data.Text+"</option>");
            });
        });
    }

    function validateEpic(){

        $.get('@Url.Action("ValidateEpic", "Registration")', {EpicNo : $("#epiccard").val() }, function (dat) {
            if(dat > 0)
            {
                alert("This Epic number is already exists");
                $("#epiccard").val("");
                $("#epiccard").focus();
                return false;
            }
        });
    }
    //  checkstring
    $('.checkstring').keyup(function (e) {
        var  value = $(this).val();
        if(value.length == 4 || value.length == 5 ||value.length == 6)
        {
            //
            // if()
            if(value.toLowerCase().indexOf("test") >= 0 || value.toLowerCase().indexOf("edit") >= 0 || value.toLowerCase().indexOf("sample") >= 0 || value.toLowerCase().indexOf("dummy") >= 0 || value.toLowerCase().indexOf("dumy") >= 0 ||value.toLowerCase().indexOf("dammy") >= 0)
            {
                alert("Please Enter  Proper Name.");
                $(this).val("");
                $(this).focus();
                return false;
            }
        }
    });

    function CheckString()
    {

	}


	var WorkerStatus1 = $("input[name='Workertype']:checked").val()
	if (WorkerStatus1 == "Transport Worker" || WorkerStatus1 == "Construction Worker") {
		$("pensionmodule").show();
	}
	else
		$("pensionmodule").hide();

	$(".EdistSchemeAvail").change(function () {
		debugger;
		var EnrolScheAvail = $("input[name='EdistSchemeAvailrad']:checked").val()
		debugger;
		if (EnrolScheAvail == "No") {
			$("#divpensionavailyes").hide();
			$("#pensionedistdetails").hide();
			$("#divemploydet").hide();
			$("#divrnwlHistory").hide();
			$("#rnwlSchemeCertificate").hide();
			//window.location.href = "/Registration/TransportNewAdditionalDet"; //?ID=" + userId; //New eDist User
		}
		if (EnrolScheAvail == "Yes") {
			$("#divpensionavailyes").show();
		}
	});

	$(".EdistScheme").change(function () {
		//alert("11");
		var EnrolSche = $("input[name='Edistenscheme']:checked").val()
		debugger;
		if (EnrolSche == "No") {
			$("#divResign").hide();
			$("#pensionedistdetails").show();
			$("#divemploydet").show();
			$("#divrnwlHistory").hide();


			$("#divedistregnumber").hide();
			$("#divedistparticulars").hide();
			$("#rnwlSchemeCertificate").hide();
			//window.location.href = "/Registration/TransportNewAdditionalDet"; //?ID=" + userId; //New eDist User
		}
		if (EnrolSche == "Yes") {
			$("#divResign").show();

			$("#pensionedistdetails").hide();
			$("#divemploydet").hide();
			$("#txtRegistration").val('');
		}
	});
	function submitForm() {

		if ($("#txtRegistration").val() == "" || $("#txtRegistration").val() == null) {
			alert("Please Enter Registration Number.");
			$("#txtRegistration").focus();
			return false;
		}

		var regid = $("#txtRegistration").val();

		//window.location.href = "/Registration/TransportExiAdditionalDet?ID=" + regid;
		if (regid == "TP21180002271" || regid == "905081712008807") {


			alert("Data Available");

			//$("#txtRegNumber").val(regId).addClass('label-data');
			//$("#ddlNatureOfVehicle").val(1).addClass('label-data');
			//$("#ddlNatureOfDuties").val(2).addClass('label-data');
			//$("#certidentattach").val(3).addClass('label-data');
			$("#pensionedistdetails").show();
			$("#divemploydet").show();
			$("#divrnwlHistory").show();
			$("#rnwlSchemeCertificate").show();
		}
		else {

			var Ok = confirm("Unfortunately, we couldn't find your records in our system.\n Do you want to update your details now ?");
			if (Ok == true) {
				//document.location.href = URL;
				//window.location.href = "/Registration/TransportNewAdditionalDet";
				$("#divemploydet").show();
				$("#pensionedistdetails").show();
				$("#divrnwlHistory").show();
				$("#rnwlSchemeCertificate").show();
			}
			else {
				//window.location.href = "/Registration/TransportWorkerEDistCheck";
				$("#divemploydet").hide();
				$("#pensionedistdetails").hide();
				$("#divrnwlHistory").hide();
				$("#rnwlSchemeCertificate").hide();
			}
		}

	}

	function AddPaymentRow() {
		debugger;
		var rowCount = $('#tblPaymentHistory tr').length;



		$('#tblPaymentHistory').append('<tr><td>' + rowCount + '</td><td><select class= "form-control ddlyearpayhis" id = "ddlyear' + rowCount + '" ><option value="0">Select Year</option><option value = "2000"> 2000</option><option value="2001">2001</option><option value="2002">2002</option><option value="2003">2003</option><option value="2004">2004</option><option value="2005">2005</option><option value="2006">2006</option><option value="2007">2007</option><option value="2008">2008</option><option value="2009">2009</option><option value="2010">2010</option><option value="2011">2011</option><option value="2012">2012</option><option value="2013">2013</option><option value="2014">2014</option><option value="2015">2015</option><option value="2016">2016</option><option value="2017">2017</option><option value="2018">2018</option><option value="2019">2019</option></select ></td><td><select class="form-control ddlmnthpayhis" id="ddlmnth' + rowCount + '"><option value="00">Select Month</option><option value ="01"> 01</option><option value="02">02</option><option value="03">03</option><option value="04">04</option><option value="05">05</option><option value="06">06</option><option value="07">07</option><option value="08">08</option><option value="09">09</option><option value="10">10</option><option value="11">11</option><option value="12">12</option></select></td><td>  <input type="text" class="form-control txtCollectionDate" id="txtCollectionDate' + rowCount + '"></td><td><input type="text" class="form-control txtReceptBookno" id="txtReceptBookno' + rowCount + '"></td><td>  <input type="text" class="form-control txtReceptPagno" id="txtReceptPagno' + rowCount + '"></td><td><button type="button"   class="removefambutton" title="Remove this row">X</button></td></tr>')
		//<td><input type="text" class="form-control" value="0" id="txtAmount' + rowCount + '"></td>  --TxtAmount
		$("#txtCollectionDate" + rowCount).datepicker({
			dateFormat: "dd-mm-yy",
			changeYear: true,
			yearRange: "2000:2017",
			autoclose: true,
			maxDate: new Date()
		})
		$("#txtCollectionDate1, #txtCollectionDate2, #txtCollectionDate3").datepicker({
			dateFormat: "dd-mm-yy",
			changeYear: true,
			yearRange: "2000:2017",
			autoclose: true,
			maxDate: new Date()
		})
		var dat = new Date();
		var month = (dat.getMonth() + 1) < 10 ? '0' + (dat.getMonth() + 1) : '' + (dat.getMonth() + 1);
		var day = (dat.getDate()) < 10 ? '0' + (dat.getDate()) : '' + (dat.getDate());
		var today = day + "-" + month + "-" + dat.getFullYear();
		$("#txtCollectionDate1, #txtCollectionDate2, #txtCollectionDate3, #txtCollectionDate" + rowCount).val(today);
		//$('body').on('change', '#txtCollectionDate' + rowCount, function () {
		//	var dob = $("#txtCollectionDate" + rowCount).val();
		//	var dateAr = dob.split('-');
		//	var dateofbirth = dateAr[2] + "/" + dateAr[1] + "/" + dateAr[0];
		//	var age = calculateAge(dateofbirth);
		//	$("#NamAge" + rowCount).val(age)
		//});

		binddatepickerWithid(rowCount);
	}

	$(document).on('click', 'button.removefambutton', function () { // <-- changes
		debugger;
		var famrowCount = $('.tblPaymentHistory tr').length;
		var $tr = $(this).closest('tr');
		var myRow = $tr.index();
		if (myRow == famrowCount - 2) {
			$(this).closest('tr').remove();
			return false;
		}
		else {
			alert("Only last row will be deleted");
			return false;
		}
	});


</script>
