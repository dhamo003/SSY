{"version":3,"sources":["webpack:///./src/app/pfconfig/benefitconfiguration/benefitconfiguration.component.css","webpack:///./src/app/pfconfig/benefitconfiguration/benefitconfiguration.component.html","webpack:///./src/app/pfconfig/benefitconfiguration/benefitconfiguration.component.ts","webpack:///./src/app/pfconfig/deathconfiguration/deathconfiguration.component.css","webpack:///./src/app/pfconfig/deathconfiguration/deathconfiguration.component.html","webpack:///./src/app/pfconfig/deathconfiguration/deathconfiguration.component.ts","webpack:///./src/app/pfconfig/deathconfigurationlist/deathconfigurationlist.component.css","webpack:///./src/app/pfconfig/deathconfigurationlist/deathconfigurationlist.component.html","webpack:///./src/app/pfconfig/deathconfigurationlist/deathconfigurationlist.component.ts","webpack:///./src/app/pfconfig/disabilityconfiguration/disabilityconfiguration.component.css","webpack:///./src/app/pfconfig/disabilityconfiguration/disabilityconfiguration.component.html","webpack:///./src/app/pfconfig/disabilityconfiguration/disabilityconfiguration.component.ts","webpack:///./src/app/pfconfig/disabilityconfigurationlist/disabilityconfigurationlist.component.css","webpack:///./src/app/pfconfig/disabilityconfigurationlist/disabilityconfigurationlist.component.html","webpack:///./src/app/pfconfig/disabilityconfigurationlist/disabilityconfigurationlist.component.ts","webpack:///./src/app/pfconfig/educationconfiguration/educationconfiguration.component.css","webpack:///./src/app/pfconfig/educationconfiguration/educationconfiguration.component.html","webpack:///./src/app/pfconfig/educationconfiguration/educationconfiguration.component.ts","webpack:///./src/app/pfconfig/educationconfigurationlist/educationconfigurationlist.component.css","webpack:///./src/app/pfconfig/educationconfigurationlist/educationconfigurationlist.component.html","webpack:///./src/app/pfconfig/educationconfigurationlist/educationconfigurationlist.component.ts","webpack:///./src/app/pfconfig/healthfamilyconfiguration/healthfamilyconfiguration.component.css","webpack:///./src/app/pfconfig/healthfamilyconfiguration/healthfamilyconfiguration.component.html","webpack:///./src/app/pfconfig/healthfamilyconfiguration/healthfamilyconfiguration.component.ts","webpack:///./src/app/pfconfig/healthfamilyconfigurationlist/healthfamilyconfigurationlist.component.css","webpack:///./src/app/pfconfig/healthfamilyconfigurationlist/healthfamilyconfigurationlist.component.html","webpack:///./src/app/pfconfig/healthfamilyconfigurationlist/healthfamilyconfigurationlist.component.ts","webpack:///./src/app/pfconfig/pfcommissionconfig/pfcommissionconfig.component.css","webpack:///./src/app/pfconfig/pfcommissionconfig/pfcommissionconfig.component.html","webpack:///./src/app/pfconfig/pfcommissionconfig/pfcommissionconfig.component.ts","webpack:///./src/app/pfconfig/pfcommissionconfiglist/pfcommissionconfiglist.component.css","webpack:///./src/app/pfconfig/pfcommissionconfiglist/pfcommissionconfiglist.component.html","webpack:///./src/app/pfconfig/pfcommissionconfiglist/pfcommissionconfiglist.component.ts","webpack:///./src/app/pfconfig/pfconfig.module.ts","webpack:///./src/app/pfconfig/pfconfiglanding.component.css","webpack:///./src/app/pfconfig/pfconfiglanding.component.html","webpack:///./src/app/pfconfig/pfconfiglanding.component.ts","webpack:///./src/app/pfconfig/pfconfiguration/pfconfiguration.component.css","webpack:///./src/app/pfconfig/pfconfiguration/pfconfiguration.component.html","webpack:///./src/app/pfconfig/pfconfiguration/pfconfiguration.component.ts","webpack:///./src/app/pfconfig/pfconfigurationlist/pfconfigurationlist.component.css","webpack:///./src/app/pfconfig/pfconfigurationlist/pfconfigurationlist.component.html","webpack:///./src/app/pfconfig/pfconfigurationlist/pfconfigurationlist.component.ts","webpack:///./src/app/pfconfig/pfinterestconfiglist/pfinterestconfiglist.component.css","webpack:///./src/app/pfconfig/pfinterestconfiglist/pfinterestconfiglist.component.html","webpack:///./src/app/pfconfig/pfinterestconfiglist/pfinterestconfiglist.component.ts","webpack:///./src/app/pfconfig/pfintertconfig/pfintertconfig.component.css","webpack:///./src/app/pfconfig/pfintertconfig/pfintertconfig.component.html","webpack:///./src/app/pfconfig/pfintertconfig/pfintertconfig.component.ts","webpack:///./src/app/pfconfig/receiptbook/receiptbook.component.css","webpack:///./src/app/pfconfig/receiptbook/receiptbook.component.html","webpack:///./src/app/pfconfig/receiptbook/receiptbook.component.ts","webpack:///./src/app/pfconfig/receiptbooklist/receiptbooklist.component.css","webpack:///./src/app/pfconfig/receiptbooklist/receiptbooklist.component.html","webpack:///./src/app/pfconfig/receiptbooklist/receiptbooklist.component.ts","webpack:///./src/app/pfconfig/services/api-dictionary.ts","webpack:///./src/app/pfconfig/services/pfconfig-data.services.ts"],"names":[],"mappings":"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","file":"pfconfig-pfconfig-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Benefit Conguration</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        Configuration\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Benefit Name\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Description\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Status\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let calim of claimConfig\\\">\\r\\n                                    <td>\\r\\n                                        <a (click)=\\\"onEditClick(calim)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onHistoryClick(calim)\\\" title=\\\"History\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-list\\\" style=\\\"font-size:larger\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{calim.claimName}}</td>\\r\\n                                    <td>{{calim.claimDescription}}</td>\\r\\n                                    <td>{{calim.statusName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Router } from '@angular/router';\r\nimport { ClaimTypes } from 'src/app/models/ClaimTypes.model';\r\nimport { ClaimConstants } from 'src/app/claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-benefitconfiguration',\r\n  templateUrl: './benefitconfiguration.component.html',\r\n  styleUrls: ['./benefitconfiguration.component.css']\r\n})\r\nexport class BenefitconfigurationComponent implements OnInit {\r\n\r\n    public claimConfig: ClaimTypes[] = [];\r\n\r\n    constructor(public router: Router, private dataService: PFConfigDataService) { }\r\n\r\n    ngOnInit() {\r\n        \r\n        this.GetBenefitConfigDetails();\r\n  }\r\n    GetBenefitConfigDetails() {\r\n        debugger;\r\n        this.dataService\r\n            .GetBenefitConfigDetails()\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.claimConfig = data;\r\n            });\r\n    }\r\n\r\n    onEditClick(item: any) {\r\n        switch (item.claimMasterId) {\r\n            case ClaimConstants.PF: {\r\n                this.router.navigate(['pfconfig/pfconfiguration', { pfConfigurationId: 0, mode: \"edit\"}], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.Education: {\r\n                this.router.navigate(['pfconfig/educationconfiguration', { rowId: 0, status: true, mode: \"edit\", noofTimesId: 0 }], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.HealthFamily: {\r\n                this.router.navigate(['pfconfig/healthfamilyconfiguration', { rowId: 0, status: true, mode: \"edit\", noofTimesId: 0}], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.Death: {\r\n                this.router.navigate(['pfconfig/deathconfiguration', { rowId: 0, status: true, mode: \"edit\", noofTimesId: 0 }], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.Disability: {\r\n                this.router.navigate(['pfconfig/disabilityconfiguration', { rowId: 0, status: true, mode: \"edit\", noofTimesId: 0 }], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    }\r\n    onHistoryClick(item: any) {\r\n        switch (item.claimMasterId) {\r\n            case ClaimConstants.PF: {\r\n                this.router.navigate(['pfconfig/pfconfigurationlist'], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.Education: {\r\n                this.router.navigate(['pfconfig/educationconfigurationlist'], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.HealthFamily: {\r\n                this.router.navigate(['pfconfig/healthfamilyconfigurationlist'], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.Death: {\r\n                this.router.navigate(['pfconfig/deathconfigurationlist'], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            case ClaimConstants.Disability: {\r\n                this.router.navigate(['pfconfig/disabilityconfigurationlist'], { skipLocationChange: true });\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n        \r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Death Configuration</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <header>Date of Death Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic\\\" [(ngModel)]=\\\"eduConfig.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"eduConfig.value\\\"\\r\\n                                                   #value=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value.invalid && ( !valueValid || value.touched ),\\r\\n                                                        'valid-data': valueValid && value.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value.invalid && (!valueValid || value.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"eduConfig.ruleName\\\"\\r\\n                                                   #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid || interestCode.touched ),\\r\\n                                                        'valid-data': ruleValid && interestCode.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"interestCode.invalid && (!ruleValid || interestCode.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                                        </div>\\r\\n                                    </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"eduConfig.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <!--<div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"eduConfig.dateEffectiveFrom\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"eduConfig.dateEffectiveTo\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>-->\\r\\n                            </fieldset>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid2?'red':''\\\"><b>*</b></span> </label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"eduConfig.dateEffectiveFrom\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid2), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid2}\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid2)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"eduConfig.dateEffectiveTo\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"getHistoryData()\\\">History</a>\\r\\n                                <a class=\\\"btn btn-default\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"clearData()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"saveDeathConfigData(eduConfig)\\\">Save</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { BsDatepickerConfig, ModalDirective } from \"ngx-bootstrap\";\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { BenefitConfigData } from 'src/app/models/benefitConfigData.model';\r\n\r\n@Component({\r\n  selector: 'app-deathconfiguration',\r\n  templateUrl: './deathconfiguration.component.html',\r\n  styleUrls: ['./deathconfiguration.component.css']\r\n})\r\nexport class DeathconfigurationComponent implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    private route$: Subscription;\r\n\r\n    //ruleValid: boolean = false;\r\n    logicValid: boolean = false;\r\n    valueValid: boolean = false;\r\n    effectiveFromDateValid2: boolean = false;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    deathBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    eduConfig: BenefitConfigData = {} as BenefitConfigData;\r\n    isSaveVisible: boolean = true;\r\n    successMessage: string;\r\n    rowId: number = 0;\r\n    noofTimesId: number = 0;\r\n    mode: string;\r\n    status: any;\r\n    nextId: number;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.logicValid = this.valueValid = true;\r\n        this.effectiveFromDateValid2 = true;\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.rowId = params[\"rowId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.status = params[\"status\"];\r\n                this.noofTimesId = Number(params[\"noofTimesId\"]);\r\n                if (this.mode == \"view\") {\r\n                    this.isSaveVisible = false;\r\n                }\r\n                else {\r\n                    this.isSaveVisible = true;\r\n                }\r\n                if (this.noofTimesId > 0) {\r\n                    this.getDeathConfigDetailsById(this.noofTimesId);\r\n                    this.nextId = this.noofTimesId + 1;\r\n                }\r\n                else {\r\n                    if (this.mode == \"edit\") {\r\n                        this.getDeathConfigDetailsById(this.noofTimesId);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    clearData() {\r\n        this.logicValid = this.valueValid = true;\r\n       this.effectiveFromDateValid2 = true;\r\n        if (this.mode == \"edit\") {\r\n            this.getDeathConfigDetailsById(this.noofTimesId);\r\n        }\r\n        else {\r\n            this.eduConfig = {} as BenefitConfigData;\r\n        }\r\n    }\r\n\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n\r\n    validateDeathConfigData(eduConfig: BenefitConfigData): boolean {\r\n        let isValid = true;\r\n        this.logicValid = this.valueValid = true;\r\n        this.effectiveFromDateValid2 = true;\r\n\r\n        if (eduConfig.logic == undefined) { this.logicValid = isValid = false }\r\n        \r\n        if (eduConfig.value == undefined) { this.valueValid = isValid = false }\r\n       \r\n        if (eduConfig.dateEffectiveFrom == undefined) { this.effectiveFromDateValid2 = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    saveDeathConfigData(eduConfig: BenefitConfigData) {\r\n        let isValid = true;\r\n\r\n        if (this.validateDeathConfigData(eduConfig)) {\r\n\r\n            this.successMessage = \"\";\r\n            debugger;\r\n            eduConfig.noofTimes = this.nextId;\r\n            eduConfig.ruleName = \"Date of Death Exceeding\";\r\n            eduConfig.status = true;\r\n            eduConfig.dateEffectiveFrom = new Date(eduConfig.dateEffectiveFrom);\r\n            eduConfig.dateEffectiveTo = new Date(eduConfig.dateEffectiveTo);\r\n\r\n            this.deathBenefitConfigDetails[0] = eduConfig;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .SaveDeathConfigData(this.deathBenefitConfigDetails)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"Death Configuration was saved successfully\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    okClick() {\r\n        window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n\r\n    getHistoryData() {\r\n        window.location.href = \"PFConfig/deathconfigurationlist\";\r\n    }\r\n\r\n    getDeathConfigDetailsById(noofTimesId: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetDeathConfigDetailsById(noofTimesId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.deathBenefitConfigDetails = data;\r\n\r\n                if (this.deathBenefitConfigDetails != null && this.deathBenefitConfigDetails.length > 0) {\r\n                    this.eduConfig = this.deathBenefitConfigDetails[0];\r\n                }\r\n\r\n                this.eduConfig.dateEffectiveFrom = new Date(this.eduConfig.dateEffectiveFrom);\r\n                this.eduConfig.dateEffectiveTo = new Date(this.eduConfig.dateEffectiveTo);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Death Conguration History </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Action</th>\\r\\n                                    <th>\\r\\n                                        Rule Name\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Condition\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Value\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Description\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective From Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective To Date\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let deathConfig of deathConfigList\\\">\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"deathConfig.status == 1\\\" (click)=\\\"onEditClick(deathConfig)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClick(deathConfig)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{deathConfig.ruleName}}</td>\\r\\n                                    <td>{{deathConfig.logic}}</td>\\r\\n                                    <td>{{deathConfig.value}}</td>\\r\\n                                    <td>{{deathConfig.description}}</td>\\r\\n                                    <td>{{deathConfig.dateEffectiveFromString}}</td>\\r\\n                                    <td>{{deathConfig.dateEffectiveToString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <div *ngIf=\\\"deathConfigList.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changePage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <footer class=\\\"modal-footer\\\">\\r\\n                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                        </footer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { pagination } from 'src/app/claim/pipes/constnts.model';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Router } from '@angular/router';\r\nimport { BenefitConfigRowWiseData } from 'src/app/models/benefitConfigRowWiseData.model';\r\n\r\n@Component({\r\n  selector: 'app-deathconfigurationlist',\r\n  templateUrl: './deathconfigurationlist.component.html',\r\n  styleUrls: ['./deathconfigurationlist.component.css']\r\n})\r\nexport class DeathconfigurationlistComponent implements OnInit {\r\n\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    public deathConfigList: BenefitConfigRowWiseData[] = [];\r\n\r\n    constructor(public router: Router, private dataService: PFConfigDataService) { }\r\n\r\n    ngOnInit() {\r\n        this.GetDeathConfigDetails(this.page, this.pageSize);\r\n    }\r\n    GetDeathConfigDetails(pageNo: any, pageSize: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetDeathConfigDetails(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.deathConfigList = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changePage(page) {\r\n        this.GetDeathConfigDetails(page, this.pageSize);\r\n    }\r\n    onEditClick(item: any) {\r\n        this.router.navigate(['pfconfig/deathconfiguration', { rowId: item.id, status: item.status, mode: \"edit\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    onViewClick(item: any) {\r\n        this.router.navigate(['pfconfig/deathconfiguration', { rowId: item.id, status: item.status, mode: \"view\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Disability Configuration</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <header>Date of Release Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic\\\" [(ngModel)]=\\\"disConfig.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"disConfig.value\\\"\\r\\n                                                   #value=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value.invalid && ( !valueValid || value.touched ),\\r\\n                                                        'valid-data': valueValid && value.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value.invalid && (!valueValid || value.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"disConfig.ruleName\\\"\\r\\n                                                   #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid || interestCode.touched ),\\r\\n                                                        'valid-data': ruleValid && interestCode.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"interestCode.invalid && (!ruleValid || interestCode.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                                        </div>\\r\\n                                    </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"disConfig.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <!--<div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ disConfig.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"disConfig.dateEffectiveFrom\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ disConfig.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"disConfig.dateEffectiveTo\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>-->\\r\\n                            </fieldset>\\r\\n                            <header>Reason For Delay Submission</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid1?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic1\\\" [(ngModel)]=\\\"disConfig1.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid1\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid1?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value1\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"disConfig1.value\\\"\\r\\n                                                   #value1=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value1.invalid && ( !valueValid1 || value1.touched ),\\r\\n                                                        'valid-data': valueValid1 && value1.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value1.invalid && (!valueValid1 || value1.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid1?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"disConfig1.ruleName\\\"\\r\\n                                                   #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid1 || interestCode.touched ),\\r\\n                                                        'valid-data': ruleValid1 && interestCode.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"interestCode.invalid && (!ruleValid1 || interestCode.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                                        </div>\\r\\n                                    </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"disConfig1.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <!--<div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid1?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ disConfig1.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"disConfig1.dateEffectiveFrom\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid1), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid1}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid1)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ disConfig1.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"disConfig1.dateEffectiveTo\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>-->\\r\\n                            </fieldset>\\r\\n                           \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid2?'red':''\\\"><b>*</b></span> </label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ disConfig.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"disConfig.dateEffectiveFrom\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid2), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid2}\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid2)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ disConfig.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"disConfig.dateEffectiveTo\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"getHistoryData()\\\">History</a>\\r\\n                                <a class=\\\"btn btn-default\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"clearData()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"saveDisabilityConfigData(disConfig,disConfig1)\\\">Save</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { BsDatepickerConfig, ModalDirective } from \"ngx-bootstrap\";\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { BenefitConfigData } from 'src/app/models/benefitConfigData.model';\r\n\r\n@Component({\r\n  selector: 'app-disabilityconfiguration',\r\n  templateUrl: './disabilityconfiguration.component.html',\r\n  styleUrls: ['./disabilityconfiguration.component.css']\r\n})\r\nexport class DisabilityconfigurationComponent implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    private route$: Subscription;\r\n\r\n    //ruleValid: boolean = false;\r\n    logicValid: boolean = false;\r\n    valueValid: boolean = false;\r\n    //effectiveFromDateValid: boolean = false;\r\n    //ruleValid1: boolean = false;\r\n    logicValid1: boolean = false;\r\n    valueValid1: boolean = false;\r\n    \r\n    effectiveFromDateValid2: boolean = false;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    disabilityBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    disConfig: BenefitConfigData = {} as BenefitConfigData;\r\n    disConfig1: BenefitConfigData = {} as BenefitConfigData;\r\n    \r\n    isSaveVisible: boolean = true;\r\n    successMessage: string;\r\n    rowId: number = 0;\r\n    noofTimesId: number = 0;\r\n    mode: string;\r\n    status: any;\r\n    nextId: number;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.effectiveFromDateValid2 = true;\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.rowId = params[\"rowId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.status = params[\"status\"];\r\n                this.noofTimesId = Number(params[\"noofTimesId\"]);\r\n                if (this.mode == \"view\") {\r\n                    this.isSaveVisible = false;\r\n                }\r\n                else {\r\n                    this.isSaveVisible = true;\r\n                }\r\n                if (this.noofTimesId > 0) {\r\n                    this.getDisabilityConfigDetailsById(this.noofTimesId);\r\n                    this.nextId = this.noofTimesId + 1;\r\n                }\r\n                else {\r\n                    if (this.mode == \"edit\") {\r\n                        this.getDisabilityConfigDetailsById(this.noofTimesId);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    clearData() {\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.effectiveFromDateValid2 = true;\r\n        if (this.mode == \"edit\") {\r\n            this.getDisabilityConfigDetailsById(this.noofTimesId);\r\n        }\r\n        else {\r\n            this.disConfig = {} as BenefitConfigData;\r\n            this.disConfig1 = {} as BenefitConfigData;\r\n        }\r\n    }\r\n\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n\r\n    validateDisabilityConfigData(disConfig: BenefitConfigData, disConfig1: BenefitConfigData): boolean {\r\n        let isValid = true;\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.effectiveFromDateValid2 = true;\r\n\r\n        if (disConfig.logic == undefined) { this.logicValid = isValid = false }\r\n        if (disConfig1.logic == undefined) { this.logicValid1 = isValid = false }\r\n        \r\n        if (disConfig.value == undefined) { this.valueValid = isValid = false }\r\n        if (disConfig1.value == undefined) { this.valueValid1 = isValid = false }\r\n        \r\n        if (disConfig.dateEffectiveFrom == undefined) { this.effectiveFromDateValid2 = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    saveDisabilityConfigData(disConfig: BenefitConfigData, disConfig1: BenefitConfigData) {\r\n        let isValid = true;\r\n\r\n        if (this.validateDisabilityConfigData(disConfig, disConfig1)) {\r\n\r\n            this.successMessage = \"\";\r\n            debugger;\r\n            disConfig.noofTimes = this.nextId;\r\n            disConfig.ruleName = \"Date of Release Exceeding\";\r\n            disConfig.status = true;\r\n            disConfig.dateEffectiveFrom = new Date(disConfig.dateEffectiveFrom);\r\n            disConfig.dateEffectiveTo = new Date(disConfig.dateEffectiveTo);\r\n\r\n            disConfig1.noofTimes = this.nextId;\r\n            disConfig1.ruleName = \"Reason For Delay Submission\";\r\n            disConfig1.status = true;\r\n            disConfig1.dateEffectiveFrom = new Date(disConfig.dateEffectiveFrom);\r\n            disConfig1.dateEffectiveTo = new Date(disConfig.dateEffectiveTo);\r\n\r\n            this.disabilityBenefitConfigDetails[0] = disConfig;\r\n            this.disabilityBenefitConfigDetails[1] = disConfig1;\r\n\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .SaveDisabilityConfigData(this.disabilityBenefitConfigDetails)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"Disability Configuration was saved successfully\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    okClick() {\r\n        window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n\r\n    getHistoryData() {\r\n        window.location.href = \"PFConfig/disabilityconfigurationlist\";\r\n    }\r\n\r\n    getDisabilityConfigDetailsById(noofTimesId: any) {\r\n        this.dataService\r\n            .GetDisabilityConfigDetailsById(noofTimesId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.disabilityBenefitConfigDetails = data;\r\n\r\n                if (this.disabilityBenefitConfigDetails != null && this.disabilityBenefitConfigDetails.length > 0) {\r\n                    this.disConfig = this.disabilityBenefitConfigDetails[0];\r\n                    this.disConfig1 = this.disabilityBenefitConfigDetails[1];\r\n                }\r\n\r\n                this.disConfig.dateEffectiveFrom = new Date(this.disConfig.dateEffectiveFrom);\r\n                this.disConfig.dateEffectiveTo = new Date(this.disConfig.dateEffectiveTo);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Disability Conguration History </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Action</th>\\r\\n                                    <th>\\r\\n                                        Rule Name\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Condition\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Value\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Description\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective From Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective To Date\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let disConfig of disConfigList\\\">\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"disConfig.status == 1\\\" (click)=\\\"onEditClick(disConfig)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClick(disConfig)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{disConfig.ruleName}}</td>\\r\\n                                    <td>{{disConfig.logic}}</td>\\r\\n                                    <td>{{disConfig.value}}</td>\\r\\n                                    <td>{{disConfig.description}}</td>\\r\\n                                    <td>{{disConfig.dateEffectiveFromString}}</td>\\r\\n                                    <td>{{disConfig.dateEffectiveToString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <div *ngIf=\\\"disConfigList.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changePage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <footer class=\\\"modal-footer\\\">\\r\\n                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                        </footer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { pagination } from 'src/app/claim/pipes/constnts.model';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Router } from '@angular/router';\r\nimport { BenefitConfigRowWiseData } from 'src/app/models/benefitConfigRowWiseData.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-disabilityconfigurationlist',\r\n  templateUrl: './disabilityconfigurationlist.component.html',\r\n  styleUrls: ['./disabilityconfigurationlist.component.css']\r\n})\r\nexport class DisabilityconfigurationlistComponent implements OnInit {\r\n\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    public disConfigList: BenefitConfigRowWiseData[] = [];\r\n\r\n    constructor(public router: Router, private dataService: PFConfigDataService) { }\r\n\r\n    ngOnInit() {\r\n        this.GetDisabilityConfigDetails(this.page, this.pageSize);\r\n    }\r\n    GetDisabilityConfigDetails(pageNo: any, pageSize: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetDisabilityConfigDetails(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.disConfigList = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changePage(page) {\r\n        this.GetDisabilityConfigDetails(page, this.pageSize);\r\n    }\r\n    onEditClick(item: any) {\r\n        this.router.navigate(['pfconfig/disabilityconfiguration', { rowId: item.id, status: item.status, mode: \"edit\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    onViewClick(item: any) {\r\n        this.router.navigate(['pfconfig/disabilityconfiguration', { rowId: item.id, status: item.status, mode: \"view\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Education Configuration</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <header>Date of Admission Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic\\\" [(ngModel)]=\\\"eduConfig.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"eduConfig.value\\\"\\r\\n                                                   #value=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value.invalid && ( !valueValid || value.touched ),\\r\\n                                                        'valid-data': valueValid && value.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value.invalid && (!valueValid || value.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"eduConfig.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid || interestCode.touched ),\\r\\n                                'valid-data': ruleValid && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"eduConfig.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <!--<div class=\\\"row\\\">\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"eduConfig.dateEffectiveFrom\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid}\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                </div>\\r\\n            </section>\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"eduConfig.dateEffectiveTo\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n            </section>\\r\\n        </div>-->\\r\\n                            </fieldset>\\r\\n                            <header>Son Age Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid1?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic1\\\" [(ngModel)]=\\\"eduConfig1.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid1\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid1?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value1\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"eduConfig1.value\\\"\\r\\n                                                   #value1=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value1.invalid && ( !valueValid1 || value1.touched ),\\r\\n                                                        'valid-data': valueValid1 && value1.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value1.invalid && (!valueValid1 || value1.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid1?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"eduConfig1.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid1 || interestCode.touched ),\\r\\n                                'valid-data': ruleValid1 && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid1 || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"eduConfig1.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <!--<div class=\\\"row\\\">\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid1?'red':''\\\"><b>*</b></span> </label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig1.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"eduConfig1.dateEffectiveFrom\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid1), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid1}\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid1)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                </div>\\r\\n            </section>\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig1.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"eduConfig1.dateEffectiveTo\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n            </section>\\r\\n        </div>-->\\r\\n                            </fieldset>\\r\\n                            <header>Max Limit Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid2?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic2\\\" [(ngModel)]=\\\"eduConfig2.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid2\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid2?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value2\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"eduConfig2.value\\\"\\r\\n                                                   #value2=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value2.invalid && ( !valueValid2 || value2.touched ),\\r\\n                                                        'valid-data': valueValid2 && value2.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value2.invalid && (!valueValid2 || value2.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid2?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"eduConfig2.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid2 || interestCode.touched ),\\r\\n                                'valid-data': ruleValid2 && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid2 || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"eduConfig2.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid2?'red':''\\\"><b>*</b></span> </label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig2.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"eduConfig2.dateEffectiveFrom\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid2), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid2}\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid2)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ eduConfig2.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"eduConfig2.dateEffectiveTo\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"getHistoryData()\\\">History</a>\\r\\n                                <a class=\\\"btn btn-default\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"clearData()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"saveEducationConfigData(eduConfig,eduConfig1,eduConfig2)\\\">Save</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { BsDatepickerConfig, ModalDirective } from \"ngx-bootstrap\";\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { BenefitConfigData } from 'src/app/models/benefitConfigData.model';\r\n\r\n@Component({\r\n    selector: 'app-educationconfiguration',\r\n    templateUrl: './educationconfiguration.component.html',\r\n    styleUrls: ['./educationconfiguration.component.css']\r\n})\r\nexport class EducationconfigurationComponent implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    private route$: Subscription;\r\n\r\n    //ruleValid: boolean = false;\r\n    logicValid: boolean = false;\r\n    valueValid: boolean = false;\r\n    //effectiveFromDateValid: boolean = false;\r\n    //ruleValid1: boolean = false;\r\n    logicValid1: boolean = false;\r\n    valueValid1: boolean = false;\r\n    //effectiveFromDateValid1: boolean = false;\r\n    //ruleValid2: boolean = false;\r\n    logicValid2: boolean = false;\r\n    valueValid2: boolean = false;\r\n    effectiveFromDateValid2: boolean = false;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    educationBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    eduConfig: BenefitConfigData = {} as BenefitConfigData;\r\n    eduConfig1: BenefitConfigData = {} as BenefitConfigData;\r\n    eduConfig2: BenefitConfigData = {} as BenefitConfigData;\r\n    isSaveVisible: boolean = true;\r\n    successMessage: string;\r\n    rowId: number = 0;\r\n    noofTimesId: number = 0;\r\n    mode: string;\r\n    status: any;\r\n    nextId: number;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.logicValid2 = this.valueValid2 = this.effectiveFromDateValid2 = true;\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.rowId = params[\"rowId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.status = params[\"status\"];\r\n                this.noofTimesId = Number(params[\"noofTimesId\"]);\r\n                if (this.mode == \"view\") {\r\n                    this.isSaveVisible = false;\r\n                }\r\n                else {\r\n                    this.isSaveVisible = true;\r\n                }\r\n                if (this.noofTimesId > 0) {\r\n                    this.getEducationConfigDetailsById(this.noofTimesId);\r\n                    this.nextId = this.noofTimesId + 1;\r\n                }\r\n                else {\r\n                    if (this.mode == \"edit\") {\r\n                        this.getEducationConfigDetailsById(this.noofTimesId);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    clearData() {\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.logicValid2 = this.valueValid2 = this.effectiveFromDateValid2 = true;\r\n        if (this.mode == \"edit\") {\r\n            this.getEducationConfigDetailsById(this.noofTimesId);\r\n        }\r\n        else {\r\n        this.eduConfig = {} as BenefitConfigData;\r\n        this.eduConfig1 = {} as BenefitConfigData;\r\n        this.eduConfig2 = {} as BenefitConfigData;\r\n         }\r\n    }\r\n\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n\r\n    validateEducationConfigData(eduConfig: BenefitConfigData, eduConfig1: BenefitConfigData, eduConfig2: BenefitConfigData): boolean {\r\n        let isValid = true;\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.logicValid2 = this.valueValid2 = this.effectiveFromDateValid2 = true;\r\n\r\n        if (eduConfig.logic == undefined) { this.logicValid = isValid = false }\r\n        if (eduConfig1.logic == undefined) { this.logicValid1 = isValid = false }\r\n        if (eduConfig2.logic == undefined) { this.logicValid2 = isValid = false }\r\n        if (eduConfig.value == undefined) { this.valueValid = isValid = false }\r\n        if (eduConfig1.value == undefined) { this.valueValid1 = isValid = false }\r\n        if (eduConfig2.value == undefined) { this.valueValid2 = isValid = false }\r\n        if (eduConfig2.dateEffectiveFrom == undefined) { this.effectiveFromDateValid2 = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    saveEducationConfigData(eduConfig: BenefitConfigData, eduConfig1: BenefitConfigData, eduConfig2: BenefitConfigData) {\r\n        let isValid = true;\r\n\r\n        if (this.validateEducationConfigData(eduConfig, eduConfig1, eduConfig2)) {\r\n\r\n            this.successMessage = \"\";\r\n            debugger;\r\n            eduConfig.noofTimes = this.nextId;\r\n            eduConfig.ruleName = \"Date of Admission Exceeding\";\r\n            eduConfig.status = true;\r\n            eduConfig.dateEffectiveFrom = new Date(eduConfig2.dateEffectiveFrom);\r\n            eduConfig.dateEffectiveTo = new Date(eduConfig2.dateEffectiveTo);\r\n\r\n            eduConfig1.noofTimes = this.nextId;\r\n            eduConfig1.ruleName = \"Son Age Exceeding\";\r\n            eduConfig1.status = true;\r\n            eduConfig1.dateEffectiveFrom = new Date(eduConfig2.dateEffectiveFrom);\r\n            eduConfig1.dateEffectiveTo = new Date(eduConfig2.dateEffectiveTo);\r\n\r\n            eduConfig2.noofTimes = this.nextId;\r\n            eduConfig2.ruleName = \"MaxLimitExceeded\";\r\n            eduConfig2.status = true;\r\n            eduConfig2.dateEffectiveFrom = new Date(eduConfig2.dateEffectiveFrom);\r\n            eduConfig2.dateEffectiveTo = new Date(eduConfig2.dateEffectiveTo);\r\n\r\n            this.educationBenefitConfigDetails[0] = eduConfig;\r\n            this.educationBenefitConfigDetails[1] = eduConfig1;\r\n            this.educationBenefitConfigDetails[2] = eduConfig2;\r\n\r\n            debugger;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .SaveEducationConfigData(this.educationBenefitConfigDetails)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"Education Configuration was saved successfully\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    okClick() {\r\n        window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n\r\n    getHistoryData() {\r\n        window.location.href = \"PFConfig/educationconfigurationlist\";\r\n    }\r\n\r\n    getEducationConfigDetailsById(noofTimesId: any) {\r\n        this.dataService\r\n            .GetEducationConfigDetailsById(noofTimesId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.educationBenefitConfigDetails = data;\r\n\r\n                if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                    this.eduConfig = this.educationBenefitConfigDetails[0];\r\n                    this.eduConfig1 = this.educationBenefitConfigDetails[1];\r\n                    this.eduConfig2 = this.educationBenefitConfigDetails[2];\r\n                }\r\n\r\n                this.eduConfig2.dateEffectiveFrom = new Date(this.eduConfig2.dateEffectiveFrom);\r\n                this.eduConfig2.dateEffectiveTo = new Date(this.eduConfig2.dateEffectiveTo);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Education Conguration History </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Action</th>\\r\\n                                    <th>\\r\\n                                        Rule Name\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Condition\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Value\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Description\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective From Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective To Date\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let eduConfig of eduConfigList\\\">\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"eduConfig.status == 1\\\" (click)=\\\"onEditClick(eduConfig)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClick(eduConfig)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{eduConfig.ruleName}}</td>\\r\\n                                    <td>{{eduConfig.logic}}</td>\\r\\n                                    <td>{{eduConfig.value}}</td>\\r\\n                                    <td>{{eduConfig.description}}</td>\\r\\n                                    <td>{{eduConfig.dateEffectiveFromString}}</td>\\r\\n                                    <td>{{eduConfig.dateEffectiveToString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <div *ngIf=\\\"eduConfigList.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changePage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <footer class=\\\"modal-footer\\\">\\r\\n                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                        </footer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { pagination } from 'src/app/claim/pipes/constnts.model';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Router } from '@angular/router';\r\nimport { BenefitConfigRowWiseData } from 'src/app/models/benefitConfigRowWiseData.model';\r\n\r\n@Component({\r\n  selector: 'app-educationconfigurationlist',\r\n  templateUrl: './educationconfigurationlist.component.html',\r\n  styleUrls: ['./educationconfigurationlist.component.css']\r\n})\r\nexport class EducationconfigurationlistComponent implements OnInit {\r\n\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    public eduConfigList: BenefitConfigRowWiseData[] = [];\r\n\r\n    constructor(public router: Router, private dataService: PFConfigDataService) { }\r\n\r\n    ngOnInit() {\r\n        this.GetEducationConfigDetails(this.page, this.pageSize);\r\n    }\r\n    GetEducationConfigDetails(pageNo: any, pageSize: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetEducationConfigDetails(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.eduConfigList = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changePage(page) {\r\n        this.GetEducationConfigDetails(page, this.pageSize);\r\n    }\r\n    onEditClick(item: any) {\r\n        this.router.navigate(['pfconfig/educationconfiguration', { rowId: item.id, status: item.status, mode: \"edit\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    onViewClick(item: any) {\r\n        this.router.navigate(['pfconfig/educationconfiguration', { rowId: item.id, status: item.status, mode: \"view\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Health&Family Configuration</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <header>Date of First Appointment Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic\\\" [(ngModel)]=\\\"helConfig.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"helConfig.value\\\"\\r\\n                                                   #value=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value.invalid && ( !valueValid || value.touched ),\\r\\n                                                        'valid-data': valueValid && value.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value.invalid && (!valueValid || value.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"helConfig.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid || interestCode.touched ),\\r\\n                                'valid-data': ruleValid && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"helConfig.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <!--<div class=\\\"row\\\">\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ helConfig.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"helConfig.dateEffectiveFrom\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid}\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                </div>\\r\\n            </section>\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ helConfig.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"helConfig.dateEffectiveTo\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n            </section>\\r\\n        </div>-->\\r\\n                            </fieldset>\\r\\n                            <header>Date of Discharge Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid1?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic1\\\" [(ngModel)]=\\\"helConfig1.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid1\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid1?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value1\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"helConfig1.value\\\"\\r\\n                                                   #value1=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value1.invalid && ( !valueValid1 || value1.touched ),\\r\\n                                                        'valid-data': valueValid1 && value1.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value1.invalid && (!valueValid1 || value1.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid1?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"helConfig1.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid1 || interestCode.touched ),\\r\\n                                'valid-data': ruleValid1 && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid1 || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"helConfig1.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <!--<div class=\\\"row\\\">\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid1?'red':''\\\"><b>*</b></span> </label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ helConfig1.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"helConfig1.dateEffectiveFrom\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid1), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid1}\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid1)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                </div>\\r\\n            </section>\\r\\n            <section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                    <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                           placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ helConfig1.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                           [(ngModel)]=\\\"helConfig1.dateEffectiveTo\\\" readonly\\r\\n                           #effectiveFromDate=\\\"ngModel\\\"\\r\\n                           required>\\r\\n                </label>\\r\\n            </section>\\r\\n        </div>-->\\r\\n                            </fieldset>\\r\\n                            <header>Loss Of Employment Date Differnce</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid2?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic2\\\" [(ngModel)]=\\\"helConfig2.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid2\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid2?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value2\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"helConfig2.value\\\"\\r\\n                                                   #value2=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value2.invalid && ( !valueValid2 || value2.touched ),\\r\\n                                                        'valid-data': valueValid2 && value2.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value2.invalid && (!valueValid2 || value2.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid2?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"helConfig2.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid2 || interestCode.touched ),\\r\\n                                'valid-data': ruleValid2 && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid2 || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"helConfig2.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <header>Loss Of Employment Amount Exceeding</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid3?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic3\\\" [(ngModel)]=\\\"helConfig3.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid3\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid3?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value3\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"helConfig3.value\\\"\\r\\n                                                   #value3=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value3.invalid && ( !valueValid3 || value3.touched ),\\r\\n                                                        'valid-data': valueValid3 && value3.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value3.invalid && (!valueValid3 || value3.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid3?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"helConfig3.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid3 || interestCode.touched ),\\r\\n                                'valid-data': ruleValid3 && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid3 || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"helConfig3.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <header>Reason For Delay Submission</header>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Condition:<span [style.color]=\\\"!logicValid4?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic4\\\" [(ngModel)]=\\\"helConfig4.logic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logicValid4\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Logic is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Value:<span [style.color]=\\\"!valueValid4?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"value4\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"helConfig4.value\\\"\\r\\n                                                   #value4=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': value4.invalid && ( !valueValid4 || value4.touched ),\\r\\n                                                        'valid-data': valueValid4 && value4.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"value4.invalid && (!valueValid4 || value4.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Value is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\">Rule:<span [style.color]=\\\"!ruleValid4?'red':''\\\"><b>*</b></span></label>\\r\\n                <label class=\\\"input\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Rule\\\" [(ngModel)]=\\\"helConfig4.ruleName\\\"\\r\\n                           #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !ruleValid4 || interestCode.touched ),\\r\\n                                'valid-data': ruleValid4 && interestCode.valid  }\\\" required>\\r\\n                </label>\\r\\n                <div *ngIf=\\\"interestCode.invalid && (!ruleValid4 || interestCode.touched)\\\">\\r\\n                    <span style=\\\"color: red;\\\">Rule is required </span>\\r\\n                </div>\\r\\n            </section>-->\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"helConfig4.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid2?'red':''\\\"><b>*</b></span> </label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ helConfig2.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"helConfig2.dateEffectiveFrom\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid2), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid2}\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid2)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                               placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ helConfig2.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [(ngModel)]=\\\"helConfig2.dateEffectiveTo\\\" readonly\\r\\n                                               #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                               required>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"getHistoryData()\\\">History</a>\\r\\n                                <a class=\\\"btn btn-default\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"clearData()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"saveHealthFamilyConfigData(helConfig,helConfig1,helConfig2,helConfig3,helConfig4)\\\">Save</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { BsDatepickerConfig, ModalDirective } from \"ngx-bootstrap\";\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { BenefitConfigData } from 'src/app/models/benefitConfigData.model';\r\n\r\n@Component({\r\n  selector: 'app-healthfamilyconfiguration',\r\n  templateUrl: './healthfamilyconfiguration.component.html',\r\n  styleUrls: ['./healthfamilyconfiguration.component.css']\r\n})\r\nexport class HealthfamilyconfigurationComponent implements OnInit {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    private route$: Subscription;\r\n\r\n    //ruleValid: boolean = false;\r\n    logicValid: boolean = false;\r\n    valueValid: boolean = false;\r\n    //effectiveFromDateValid: boolean = false;\r\n    //ruleValid1: boolean = false;\r\n    logicValid1: boolean = false;\r\n    valueValid1: boolean = false;\r\n    //effectiveFromDateValid1: boolean = false;\r\n    //ruleValid2: boolean = false;\r\n    logicValid2: boolean = false;\r\n    valueValid2: boolean = false;\r\n    logicValid3: boolean = false;\r\n    valueValid3: boolean = false;\r\n    logicValid4: boolean = false;\r\n    valueValid4: boolean = false;\r\n    effectiveFromDateValid2: boolean = false;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    healthBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    helConfig: BenefitConfigData = {} as BenefitConfigData;\r\n    helConfig1: BenefitConfigData = {} as BenefitConfigData;\r\n    helConfig2: BenefitConfigData = {} as BenefitConfigData;\r\n    helConfig3: BenefitConfigData = {} as BenefitConfigData;\r\n    helConfig4: BenefitConfigData = {} as BenefitConfigData;\r\n    isSaveVisible: boolean = true;\r\n    successMessage: string;\r\n    rowId: number = 0;\r\n    noofTimesId: number = 0;\r\n    mode: string;\r\n    status: any;\r\n    nextId: number;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.logicValid2 = this.valueValid2 = this.effectiveFromDateValid2 = true;\r\n        this.logicValid3 = this.valueValid3 = true;\r\n        this.logicValid4 = this.valueValid4 = true;\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.rowId = params[\"rowId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.status = params[\"status\"];\r\n                this.noofTimesId = Number(params[\"noofTimesId\"]);\r\n                if (this.mode == \"view\") {\r\n                    this.isSaveVisible = false;\r\n                }\r\n                else {\r\n                    this.isSaveVisible = true;\r\n                }\r\n                if (this.noofTimesId > 0) {\r\n                    this.getHealthFamilyConfigDetailsById(this.noofTimesId);\r\n                    this.nextId = this.noofTimesId + 1;\r\n                }\r\n                else {\r\n                    if (this.mode == \"edit\") {\r\n                        this.getHealthFamilyConfigDetailsById(this.noofTimesId);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    clearData() {\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.logicValid2 = this.valueValid2 = this.effectiveFromDateValid2 = true;\r\n        this.logicValid3 = this.valueValid3 = true;\r\n        this.logicValid4 = this.valueValid4 = true;\r\n        if (this.mode == \"edit\") {\r\n            this.getHealthFamilyConfigDetailsById(this.noofTimesId);\r\n        }\r\n        else {\r\n            this.helConfig = {} as BenefitConfigData;\r\n            this.helConfig1 = {} as BenefitConfigData;\r\n            this.helConfig2 = {} as BenefitConfigData;\r\n            this.helConfig3 = {} as BenefitConfigData;\r\n            this.helConfig4 = {} as BenefitConfigData;\r\n         }\r\n    }\r\n\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n\r\n    validateHealthFamilyConfigData(helConfig: BenefitConfigData, helConfig1: BenefitConfigData, helConfig2: BenefitConfigData, helConfig3: BenefitConfigData, helConfig4: BenefitConfigData): boolean {\r\n        let isValid = true;\r\n        this.logicValid = this.valueValid = true;\r\n        this.logicValid1 = this.valueValid1 = true;\r\n        this.logicValid2 = this.valueValid2 = this.effectiveFromDateValid2 = true;\r\n        this.logicValid3 = this.valueValid3 = true;\r\n        this.logicValid4 = this.valueValid4 = true;\r\n\r\n        if (helConfig.logic == undefined) { this.logicValid = isValid = false }\r\n        if (helConfig1.logic == undefined) { this.logicValid1 = isValid = false }\r\n        if (helConfig2.logic == undefined) { this.logicValid2 = isValid = false }\r\n        if (helConfig3.logic == undefined) { this.logicValid3 = isValid = false }\r\n        if (helConfig4.logic == undefined) { this.logicValid4 = isValid = false }\r\n\r\n        if (helConfig.value == undefined) { this.valueValid = isValid = false }\r\n        if (helConfig1.value == undefined) { this.valueValid1 = isValid = false }\r\n        if (helConfig2.value == undefined) { this.valueValid2 = isValid = false }\r\n        if (helConfig3.value == undefined) { this.valueValid3 = isValid = false }\r\n        if (helConfig4.value == undefined) { this.valueValid4 = isValid = false }\r\n        if (helConfig2.dateEffectiveFrom == undefined) { this.effectiveFromDateValid2 = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    saveHealthFamilyConfigData(helConfig: BenefitConfigData, helConfig1: BenefitConfigData, helConfig2: BenefitConfigData, helConfig3: BenefitConfigData, helConfig4: BenefitConfigData) {\r\n        let isValid = true;\r\n\r\n        if (this.validateHealthFamilyConfigData(helConfig, helConfig1, helConfig2, helConfig3, helConfig4)) {\r\n\r\n            this.successMessage = \"\";\r\n            debugger;\r\n            helConfig.noofTimes = this.nextId;\r\n            helConfig.ruleName = \"Date of First Appointment Exceeding\";\r\n            helConfig.status = true;\r\n            helConfig.dateEffectiveFrom = new Date(helConfig2.dateEffectiveFrom);\r\n            helConfig.dateEffectiveTo = new Date(helConfig2.dateEffectiveTo);\r\n\r\n            helConfig1.noofTimes = this.nextId;\r\n            helConfig1.ruleName = \"Date of Discharge Exceeding\";\r\n            helConfig1.status = true;\r\n            helConfig1.dateEffectiveFrom = new Date(helConfig2.dateEffectiveFrom);\r\n            helConfig1.dateEffectiveTo = new Date(helConfig2.dateEffectiveTo);\r\n\r\n            helConfig2.noofTimes = this.nextId;\r\n            helConfig2.ruleName = \"Loss Of Employment Date Differnce\";\r\n            helConfig2.status = true;\r\n            helConfig2.dateEffectiveFrom = new Date(helConfig2.dateEffectiveFrom);\r\n            helConfig2.dateEffectiveTo = new Date(helConfig2.dateEffectiveTo);\r\n\r\n            helConfig3.noofTimes = this.nextId;\r\n            helConfig3.ruleName = \"Loss Of Employment Amount Exceeding\";\r\n            helConfig3.status = true;\r\n            helConfig3.dateEffectiveFrom = new Date(helConfig2.dateEffectiveFrom);\r\n            helConfig3.dateEffectiveTo = new Date(helConfig2.dateEffectiveTo);\r\n\r\n            helConfig4.noofTimes = this.nextId;\r\n            helConfig4.ruleName = \"Reason For Delay Submission\";\r\n            helConfig4.status = true;\r\n            helConfig4.dateEffectiveFrom = new Date(helConfig2.dateEffectiveFrom);\r\n            helConfig4.dateEffectiveTo = new Date(helConfig2.dateEffectiveTo);\r\n\r\n            this.healthBenefitConfigDetails[0] = helConfig;\r\n            this.healthBenefitConfigDetails[1] = helConfig1;\r\n            this.healthBenefitConfigDetails[2] = helConfig2;\r\n            this.healthBenefitConfigDetails[3] = helConfig3;\r\n            this.healthBenefitConfigDetails[4] = helConfig4;\r\n\r\n            debugger;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .SaveHealthFamilyConfigData(this.healthBenefitConfigDetails)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"Health&Family Configuration was saved successfully\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    okClick() {\r\n        window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n\r\n    getHistoryData() {\r\n        window.location.href = \"PFConfig/healthfamilyconfigurationlist\";\r\n    }\r\n\r\n    getHealthFamilyConfigDetailsById(noofTimesId: any) {\r\n        this.dataService\r\n            .GetHealthFamilyConfigDetailsById(noofTimesId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.healthBenefitConfigDetails = data;\r\n\r\n                if (this.healthBenefitConfigDetails != null && this.healthBenefitConfigDetails.length > 0) {\r\n                    this.helConfig = this.healthBenefitConfigDetails[0];\r\n                    this.helConfig1 = this.healthBenefitConfigDetails[1];\r\n                    this.helConfig2 = this.healthBenefitConfigDetails[2];\r\n                    this.helConfig3 = this.healthBenefitConfigDetails[3];\r\n                    this.helConfig4 = this.healthBenefitConfigDetails[4];\r\n                }\r\n\r\n                this.helConfig2.dateEffectiveFrom = new Date(this.helConfig2.dateEffectiveFrom);\r\n                this.helConfig2.dateEffectiveTo = new Date(this.helConfig2.dateEffectiveTo);\r\n            });\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Health&Family Conguration History </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Action</th>\\r\\n                                    <th>\\r\\n                                        Rule Name\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Condition\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Value\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Description\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective From Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective To Date\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let helConfig of helConfigList\\\">\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"helConfig.status == 1\\\" (click)=\\\"onEditClick(helConfig)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClick(helConfig)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{helConfig.ruleName}}</td>\\r\\n                                    <td>{{helConfig.logic}}</td>\\r\\n                                    <td>{{helConfig.value}}</td>\\r\\n                                    <td>{{helConfig.description}}</td>\\r\\n                                    <td>{{helConfig.dateEffectiveFromString}}</td>\\r\\n                                    <td>{{helConfig.dateEffectiveToString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <div *ngIf=\\\"helConfigList.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changePage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <footer class=\\\"modal-footer\\\">\\r\\n                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                        </footer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { pagination } from 'src/app/claim/pipes/constnts.model';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Router } from '@angular/router';\r\nimport { BenefitConfigRowWiseData } from 'src/app/models/benefitConfigRowWiseData.model';\r\n\r\n@Component({\r\n  selector: 'app-healthfamilyconfigurationlist',\r\n  templateUrl: './healthfamilyconfigurationlist.component.html',\r\n  styleUrls: ['./healthfamilyconfigurationlist.component.css']\r\n})\r\nexport class HealthfamilyconfigurationlistComponent implements OnInit {\r\n\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    public helConfigList: BenefitConfigRowWiseData[] = [];\r\n\r\n    constructor(public router: Router, private dataService: PFConfigDataService) { }\r\n\r\n    ngOnInit() {\r\n        this.GetHealthFamilyConfigDetails(this.page, this.pageSize);\r\n    }\r\n    GetHealthFamilyConfigDetails(pageNo: any, pageSize: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetHealthFamilyConfigDetails(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.helConfigList = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changePage(page) {\r\n        this.GetHealthFamilyConfigDetails(page, this.pageSize);\r\n    }\r\n    onEditClick(item: any) {\r\n        this.router.navigate(['pfconfig/healthfamilyconfiguration', { rowId: item.id, status: item.status, mode: \"edit\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    onViewClick(item: any) {\r\n        this.router.navigate(['pfconfig/healthfamilyconfiguration', { rowId: item.id, status: item.status, mode: \"view\", noofTimesId: item.noofTimes }], { skipLocationChange: true });\r\n    }\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>PF Commission Configuration</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <fieldset>\\r\\n\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Commission Code:<span [style.color]=\\\"!commissionCodeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"commissionCode\\\" placeholder=\\\"Commission Code\\\" [(ngModel)]=\\\"pfConfig.commissionCode\\\"\\r\\n                                                   #commissionCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': commissionCode.invalid && ( !commissionCodeValid || commissionCode.touched ),\\r\\n                                                        'valid-data': commissionCodeValid && commissionCode.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"commissionCode.invalid && (!commissionCodeValid || commissionCode.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Commission Code is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    \\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Commission Type:<span [style.color]=\\\"!commissionTypeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"commissionType\\\" [(ngModel)]=\\\"pfConfig.commissionType\\\" #commissionType=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': commissionType.invalid && ( !commissionTypeValid || commissionType.touched ),\\r\\n                                        'valid-data': commissionTypeValid && commissionType.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\"Registration\\\">Registration</option>\\r\\n                                            <option value=\\\"Ledger\\\">Ledger</option>\\r\\n                                            <option value=\\\"Ledger\\\">Ledger</option>\\r\\n                                        </select><i></i>\\r\\n                                        <div *ngIf=\\\"commissionType.invalid && (!commissionTypeValid || commissionType.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Commission Type </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Agent Type:<span [style.color]=\\\"!agentTypeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <select class=\\\"form-control select\\\" name=\\\"agentType\\\" [(ngModel)]=\\\"pfConfig.agentType\\\" #agentType=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': agentType.invalid && ( !agentTypeValid || agentType.touched ),\\r\\n                                        'valid-data': agentTypeValid && agentType.valid  }\\\"\\r\\n                                                required>\\r\\n                                                <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                                <option value=\\\"1\\\">CA</option>\\r\\n                                                <option value=\\\"2\\\">SLO</option>\\r\\n                                                <option value=\\\"3\\\">RP</option>\\r\\n                                            </select>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"agentType.invalid && (!agentTypeValid || agentType.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select an Agent Type </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Percentage On Normal Amount:<span [style.color]=\\\"!percentageOnNormalAmountValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"percentageOnNormalAmount\\\" placeholder=\\\"Percentage On Normal Amount\\\" [(ngModel)]=\\\"pfConfig.percentageOnNormalAmount\\\"\\r\\n                                                   #percentageOnNormalAmount=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': percentageOnNormalAmount.invalid && ( !percentageOnNormalAmountValid || percentageOnNormalAmount.touched ),\\r\\n                                                        'valid-data': percentageOnNormalAmountValid && percentageOnNormalAmount.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"percentageOnNormalAmount.invalid && (!percentageOnNormalAmountValid || percentageOnNormalAmount.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Percentage On Normal Amount is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Percentage On Arrear Amount:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"percentageOnArrearAmount\\\" placeholder=\\\"Percentage On Arrear Amount\\\" [(ngModel)]=\\\"pfConfig.percentageOnArrearAmount\\\"\\r\\n                                                   #percentageOnArrearAmount=\\\"ngModel\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Fixed Normal Amount:<span [style.color]=\\\"!fixedNormalAmountValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"fixedNormalAmount\\\" placeholder=\\\"Fixed Normal Amount\\\" [(ngModel)]=\\\"pfConfig.fixedNormalAmount\\\"\\r\\n                                                   #fixedNormalAmount=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': fixedNormalAmount.invalid && ( !fixedNormalAmountValid || fixedNormalAmount.touched ),\\r\\n                                                        'valid-data': fixedNormalAmountValid && fixedNormalAmount.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"fixedNormalAmount.invalid && (!fixedNormalAmountValid || fixedNormalAmount.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Fixed Normal Amount is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Fixed Arrear Amount:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"fixedArrearAmount\\\" placeholder=\\\"Fixed Arrear Amount\\\" [(ngModel)]=\\\"pfConfig.fixedArrearAmount\\\"\\r\\n                                                   #fixedArrearAmount=\\\"ngModel\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveDateFromValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveDateFrom\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ pfConfig.effectiveDateFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"pfConfig.effectiveDateFrom\\\" readonly\\r\\n                                                   #effectiveDateFrom=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveDateFrom.invalid && (!effectiveDateFromValid), 'valid-data': effectiveDateFrom.valid && effectiveDateFromValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveDateFrom.invalid && (!effectiveDateFromValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective To Date:<span [style.color]=\\\"!effectiveDateToValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveDateTo\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ pfConfig.effectiveToDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"pfConfig.effectiveDateTo\\\" readonly\\r\\n                                                   #effectiveDateTo=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveDateTo.invalid && (!effectiveDateToValid), 'valid-data': effectiveDateTo.valid && effectiveDateToValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveDateTo.invalid && (!effectiveDateToValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective To Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </fieldset>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"getHistoryData()\\\">History</a>\\r\\n                                <a class=\\\"btn btn-default\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"clearData()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"saveClaimsData(pfConfig)\\\">Save</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { BsDatepickerConfig, ModalDirective } from \"ngx-bootstrap\";\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { PFCommissionConfig } from 'src/app/models/pfCommissionConfig.model';\r\n\r\n@Component({\r\n  selector: 'app-pfcommissionconfig',\r\n  templateUrl: './pfcommissionconfig.component.html',\r\n  styleUrls: ['./pfcommissionconfig.component.css']\r\n})\r\nexport class PfcommissionconfigComponent implements OnInit, OnDestroy {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    private route$: Subscription;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    pfConfig: PFCommissionConfig = {} as PFCommissionConfig;\r\n    commissionCodeValid: boolean = false;\r\n    percentageOnNormalAmountValid: boolean = false;\r\n    fixedNormalAmountValid: boolean = false;\r\n    effectiveDateFromValid: boolean = false;\r\n    effectiveDateToValid: boolean = false;\r\n    commissionTypeValid: boolean = false;\r\n    agentTypeValid: boolean = false;\r\n    successMessage: string;\r\n    commissionConfigId: number = 0;\r\n    mode: string = \"add\";\r\n    isSaveVisible: boolean = true;\r\n   \r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.commissionConfigId = params[\"commissionConfigId\"];\r\n                this.mode = params[\"mode\"];\r\n                if (this.mode == \"view\") {\r\n                    this.isSaveVisible = false;\r\n                }\r\n                else {\r\n                    this.isSaveVisible = true;\r\n                }\r\n                if (this.commissionConfigId > 0) {\r\n\r\n                    this.getPFCommissionConfigDetailsById(this.commissionConfigId);\r\n                }\r\n            }\r\n        );\r\n        this.commissionCodeValid = this.percentageOnNormalAmountValid = this.fixedNormalAmountValid = this.effectiveDateFromValid = this.effectiveDateToValid = this.commissionTypeValid = this.agentTypeValid= true;\r\n    }\r\n\r\n    clearData() {\r\n        this.commissionCodeValid = this.percentageOnNormalAmountValid = this.fixedNormalAmountValid = this.effectiveDateFromValid = this.effectiveDateToValid = this.commissionTypeValid = this.agentTypeValid = true;\r\n        if (this.mode == \"edit\") {\r\n            this.getPFCommissionConfigDetailsById(this.commissionConfigId);\r\n        }\r\n        else {\r\n            this.pfConfig = {} as PFCommissionConfig;\r\n        }\r\n    }\r\n\r\n    validatePFCommissionConfigData(pfConfigData: PFCommissionConfig): boolean {\r\n        let isValid = true;\r\n        this.commissionCodeValid = this.percentageOnNormalAmountValid = this.fixedNormalAmountValid = this.effectiveDateFromValid = this.effectiveDateToValid = true;\r\n\r\n        if (pfConfigData.commissionCode == undefined) { this.commissionCodeValid = isValid = false }\r\n        if (pfConfigData.percentageOnNormalAmount <= 0 || pfConfigData.percentageOnNormalAmount == undefined) { this.percentageOnNormalAmountValid = isValid = false }\r\n        if (pfConfigData.fixedNormalAmount <= 0 || pfConfigData.fixedNormalAmount == undefined) { this.fixedNormalAmountValid = isValid = false }\r\n        if (pfConfigData.effectiveDateFrom == undefined) { this.effectiveDateFromValid = isValid = false }\r\n        if (pfConfigData.effectiveDateTo == undefined) { this.effectiveDateToValid = isValid = false }\r\n        if (pfConfigData.commissionType == undefined) { this.commissionTypeValid = isValid = false }\r\n        if (pfConfigData.agentType == undefined) { this.agentTypeValid = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n    saveClaimsData(pfConfigData: PFCommissionConfig) {\r\n        let isValid = true;\r\n\r\n        if (this.validatePFCommissionConfigData(pfConfigData)) {\r\n\r\n            this.successMessage = \"\";\r\n            //  console.log(pfConfigData);\r\n\r\n            pfConfigData.status = 1;\r\n\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .SavePFCommissionConfigData(pfConfigData)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"PF Commission Configuration was saved successfully\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    okClick() {\r\n        //this.successModal.hide();\r\n\r\n        window.location.href = \"PFConfig/pfcommissionconfig\";\r\n\r\n    }\r\n\r\n    getHistoryData() {\r\n        window.location.href = \"PFConfig/pfcommissionconfiglist\";\r\n    }\r\n\r\n    getPFCommissionConfigDetailsById(id: any) {\r\n        this.dataService\r\n            .GetPFCommissionConfigDetailsById(id)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfConfig = data;\r\n\r\n                this.pfConfig.effectiveDateFrom = new Date(this.pfConfig.effectiveDateFrom);\r\n                this.pfConfig.effectiveDateTo = new Date(this.pfConfig.effectiveDateTo);\r\n            });\r\n    }\r\n\r\n    cancelClick() {\r\n        window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Commission Conguration History </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <!--<thead>\\r\\n                                <tr>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssI_Number\\\">Commission Code</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benFullName\\\">Percentage On Normal Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"receiptNo\\\">Percentage On Arrear Amount</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"bookNo\\\">Fixed Normal Amount</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"collectionDateString\\\">Fixed Arrear Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paidFromMonth\\\">Commission Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paidToMonth\\\">Effective From Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"collectionAmount\\\">Effective To Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>-->\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Action</th>\\r\\n                                    <th>\\r\\n                                        Commission Code\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Percentage On Normal Amount\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Percentage On Arrear Amount\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Fixed Normal Amount\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Fixed Arrear Amount\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Commission Type\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective From Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective To Date\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let pfConfig of pfConfigList\\\">\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"pfConfig.status == 1\\\" (click)=\\\"onEditClick(pfConfig)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClick(pfConfig)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{pfConfig.commissionCode}}</td>\\r\\n                                    <td>{{pfConfig.percentageOnNormalAmount}}</td>\\r\\n                                    <td>{{pfConfig.percentageOnArrearAmount}}</td>\\r\\n                                    <td>{{pfConfig.fixedNormalAmount}}</td>\\r\\n                                    <td>{{pfConfig.fixedArrearAmount}}</td>\\r\\n                                    <td>{{pfConfig.commissionType}}</td>\\r\\n                                    <td>{{pfConfig.effectiveDateFromString}}</td>\\r\\n                                    <td>{{pfConfig.effectiveDateToString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"pfConfigList.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changePage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { pagination } from 'src/app/claim/pipes/constnts.model';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { PFCommissionConfig } from 'src/app/models/pfCommissionConfig.model';\r\n\r\n@Component({\r\n  selector: 'app-pfcommissionconfiglist',\r\n  templateUrl: './pfcommissionconfiglist.component.html',\r\n  styleUrls: ['./pfcommissionconfiglist.component.css']\r\n})\r\nexport class PfcommissionconfiglistComponent implements OnInit {\r\n\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    public pfConfigList: PFCommissionConfig[] = [];\r\n\r\n    constructor(public router: Router, private dataService: PFConfigDataService) { }\r\n\r\n    ngOnInit() {\r\n        this.GetPFCommissionConfigDetails(this.page, this.pageSize);\r\n    }\r\n    GetPFCommissionConfigDetails(pageNo: any, pageSize: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetPFCommissionConfigDetails(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfConfigList = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changePage(page) {\r\n        this.GetPFCommissionConfigDetails(page, this.pageSize);\r\n    }\r\n    onEditClick(item: any) {\r\n        this.router.navigate(['pfconfig/pfcommissionconfig', { commissionConfigId: item.commissionConfigId, mode: \"edit\" }], { skipLocationChange: true });\r\n    }\r\n    onViewClick(item: any) {\r\n        this.router.navigate(['pfconfig/pfcommissionconfig', { commissionConfigId: item.commissionConfigId, mode: \"view\" }], { skipLocationChange: true });\r\n    }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ModalModule, AccordionModule, BsDatepickerModule } from \"ngx-bootstrap\";\r\nimport { DataTableModule } from \"angular-6-datatable\";\r\nimport { GrdFilterPipe } from '../claim/pipes/grd-filter.pipe';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { PfconfiglandingComponent } from './pfconfiglanding.component';\r\nimport { PFConfigDataService } from \"./services/pfconfig-data.services\";\r\nimport { PfintertconfigComponent } from './pfintertconfig/pfintertconfig.component';\r\nimport { PfinterestconfiglistComponent } from './pfinterestconfiglist/pfinterestconfiglist.component';\r\nimport { PfcommissionconfigComponent } from './pfcommissionconfig/pfcommissionconfig.component';\r\nimport { PfcommissionconfiglistComponent } from './pfcommissionconfiglist/pfcommissionconfiglist.component';\r\nimport { PfconfigurationComponent } from './pfconfiguration/pfconfiguration.component';\r\nimport { PfconfigurationlistComponent } from './pfconfigurationlist/pfconfigurationlist.component';\r\nimport { ReceiptbookComponent } from './receiptbook/receiptbook.component';\r\nimport { ReceiptbooklistComponent } from './receiptbooklist/receiptbooklist.component';\r\nimport { EducationconfigurationComponent } from './educationconfiguration/educationconfiguration.component';\r\nimport { EducationconfigurationlistComponent } from './educationconfigurationlist/educationconfigurationlist.component';\r\nimport { HealthfamilyconfigurationlistComponent } from './healthfamilyconfigurationlist/healthfamilyconfigurationlist.component';\r\nimport { HealthfamilyconfigurationComponent } from './healthfamilyconfiguration/healthfamilyconfiguration.component';\r\nimport { DisabilityconfigurationlistComponent } from './disabilityconfigurationlist/disabilityconfigurationlist.component';\r\nimport { DisabilityconfigurationComponent } from './disabilityconfiguration/disabilityconfiguration.component';\r\nimport { DeathconfigurationComponent } from './deathconfiguration/deathconfiguration.component';\r\nimport { DeathconfigurationlistComponent } from './deathconfigurationlist/deathconfigurationlist.component';\r\nimport { BenefitconfigurationComponent } from './benefitconfiguration/benefitconfiguration.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: PfconfiglandingComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'pfinterestconfig', pathMatch: 'full' },\r\n            { path: 'pfinterestconfig', component: PfintertconfigComponent },\r\n            { path: 'pfinterestconfiglist', component: PfinterestconfiglistComponent },\r\n            { path: 'pfcommissionconfig', component: PfcommissionconfigComponent },\r\n            { path: 'pfcommissionconfiglist', component: PfcommissionconfiglistComponent },\r\n            { path: 'pfconfiguration', component: PfconfigurationComponent },\r\n            { path: 'pfconfigurationlist', component: PfconfigurationlistComponent },\r\n            { path: 'receiptbook', component: ReceiptbookComponent },\r\n            { path: 'receiptbooklist', component: ReceiptbooklistComponent },\r\n            { path: 'educationconfiguration', component: EducationconfigurationComponent },\r\n            { path: 'educationconfigurationlist', component: EducationconfigurationlistComponent },\r\n            { path: 'healthfamilyconfiguration', component: HealthfamilyconfigurationComponent },\r\n            { path: 'healthfamilyconfigurationlist', component: HealthfamilyconfigurationlistComponent },\r\n            { path: 'disabilityconfiguration', component: DisabilityconfigurationComponent },\r\n            { path: 'disabilityconfigurationlist', component: DisabilityconfigurationlistComponent },\r\n            { path: 'deathconfiguration', component: DeathconfigurationComponent },\r\n            { path: 'deathconfigurationlist', component: DeathconfigurationlistComponent },\r\n            { path: 'benefitconfiguration', component: BenefitconfigurationComponent },\r\n        ]\r\n    },\r\n];\r\n@NgModule({\r\n\r\n    imports: [\r\n        CommonModule, FormsModule, ReactiveFormsModule, BsDatepickerModule, ModalModule.forRoot(), NgbModule,\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    providers: [PFConfigDataService],\r\n    declarations: [PfconfiglandingComponent, PfintertconfigComponent, PfinterestconfiglistComponent, PfcommissionconfigComponent, PfcommissionconfiglistComponent, PfconfigurationComponent, PfconfigurationlistComponent, ReceiptbookComponent, ReceiptbooklistComponent, EducationconfigurationComponent, EducationconfigurationlistComponent, HealthfamilyconfigurationlistComponent, HealthfamilyconfigurationComponent, DisabilityconfigurationlistComponent, DisabilityconfigurationComponent, DeathconfigurationComponent, DeathconfigurationlistComponent, BenefitconfigurationComponent]\r\n})\r\nexport class PfconfigModule { }\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pfconfiglanding',\r\n  templateUrl: './pfconfiglanding.component.html',\r\n  styleUrls: ['./pfconfiglanding.component.css']\r\n})\r\nexport class PfconfiglandingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>PF Configuration</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form\\\">\\r\\n                            <header>Contribution</header>\\r\\n                            <fieldset id=\\\"contribution\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective From Date <span [style.color]=\\\"!effectiveFromDateValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ configuration.dateEffectiveFrom | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"configuration.dateEffectiveFrom\\\"\\r\\n                                                   readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\" required\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid}\\\" />\\r\\n                                            <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective To Date <span [style.color]=\\\"!effectiveToDateValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ configuration.dateEffectiveTo | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"configuration.dateEffectiveTo\\\"\\r\\n                                                   readonly\\r\\n                                                   #effectiveToDate=\\\"ngModel\\\" required\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveToDate.invalid && (!effectiveToDateValid), 'valid-data': effectiveToDate.valid && effectiveToDateValid}\\\" />\\r\\n                                            <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveToDate.invalid && (!effectiveToDateValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective To Date is required </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Beneficiary Monthly Contribution <span [style.color]=\\\"!benMonthlyContributionValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"benMonthlyContribution\\\" placeholder=\\\"Beneficiary Monthly Contribution\\\" NumbersOnly [(ngModel)]=\\\"configuration.beneficiaryPFContribution\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!benMonthlyContributionValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Beneficiary Monthly Contribution is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n\\r\\n                                        <label class=\\\"label\\\">Government Monthly Contribution <span [style.color]=\\\"!govMonthlyContributionValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"govMonthlyContribution\\\" placeholder=\\\"Government Monthly Contribution\\\" NumbersOnly [(ngModel)]=\\\"configuration.governmentPFContribution\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!govMonthlyContributionValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Government Monthly Contribution is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"beneficiaryEligibilityFS\\\">\\r\\n                                <header>Beneficiary Eligibility</header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Minimum Age in year <span [style.color]=\\\"!minAgeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"minAge\\\" placeholder=\\\"Minimum Age in year\\\" NumbersOnly [(ngModel)]=\\\"configuration.minAge\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!minAgeValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Minimum Age in year is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Maximum Age in year <span [style.color]=\\\"!maxAgeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"maxAge\\\" placeholder=\\\"Maximum Age in year\\\" NumbersOnly [(ngModel)]=\\\"configuration.maxAge\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!maxAgeValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Maximum Age in year is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Maximum Average Monthly Family Income <span [style.color]=\\\"!avgFamilyIncomeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"avgFamilyIncome\\\" placeholder=\\\"Maximum Average Monthly Family Income\\\" NumbersOnly [(ngModel)]=\\\"configuration.averageMonthlyIncome\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!avgFamilyIncomeValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Maximum Average Monthly Family Income is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"closureFS\\\">\\r\\n                                <header>Closure/Maturity </header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Lock in Period (Months) <span [style.color]=\\\"!lockPeriodValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"lockPeriod\\\" placeholder=\\\"Lock in Period (Months)\\\" NumbersOnly [(ngModel)]=\\\"configuration.pfLockingPeriodMonths\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!lockPeriodValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Lock in Period is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Inactive Period (months)  <span [style.color]=\\\"!inactivePeriodValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"inactivePeriod\\\" placeholder=\\\"Inactive Period (months) \\\" NumbersOnly [(ngModel)]=\\\"configuration.inActivePeriodMonths\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!inactivePeriodValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Inactive Period is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">A/c Maturity Age (Years) <span [style.color]=\\\"!maturityAgeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"maturityAge\\\" placeholder=\\\"A/c Maturity Age (Years)\\\" NumbersOnly [(ngModel)]=\\\"configuration.maturityAge\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!maturityAgeValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">A/c Maturity Age is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">A/c Maturity Age Condition:<span [style.color]=\\\"!logic2Valid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control\\\" name=\\\"logic\\\" [(ngModel)]=\\\"configuration.maturityAgeLogic\\\">\\r\\n                                            <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                            <option value=\\\">\\\">></option>\\r\\n                                            <option value=\\\"<\\\"><</option>\\r\\n                                            <option value=\\\">=\\\">>=</option>\\r\\n                                            <option value=\\\"<=\\\"><=</option>\\r\\n                                            <option value=\\\"==\\\">==</option>\\r\\n                                        </select>\\r\\n                                        <div *ngIf=\\\"!logic2Valid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">A/c Maturity Age Condition is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"interestFS\\\">\\r\\n                                <header>Interest </header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Collection CutOff:<span [style.color]=\\\"!collectionCutOffValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"collectionCutOff\\\" placeholder=\\\"Collection CutOff\\\" [(ngModel)]=\\\"configuration.collectionCutoff\\\"\\r\\n                                                   #collectionCutOff=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': collectionCutOff.invalid && ( !collectionCutOffValid || collectionCutOff.touched ),\\r\\n                                                        'valid-data': collectionCutOffValid && collectionCutOff.valid  }\\\" required max=\\\"30\\\" min=\\\"1\\\" maxlength=\\\"2\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"collectionCutOff.invalid && (!collectionCutOffValid || collectionCutOff.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Collection CutOff is required </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!collectionCutOffRange\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Collection CutOff should be in the (1-30) range </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Interest Rate(%):<span [style.color]=\\\"!interestRateValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"interestRate\\\" placeholder=\\\"Interest Rate\\\" [(ngModel)]=\\\"configuration.pfInterestRate\\\"\\r\\n                                                   #interestRate=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestRate.invalid && ( !interestRateValid || interestRate.touched ),\\r\\n                                                        'valid-data': interestRateValid && interestRate.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"interestRate.invalid && (!interestRateValid || interestRate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Interest Rate is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"agentFS\\\">\\r\\n                                <header>Agent Collection Limit </header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Agent Collection Limit:<span [style.color]=\\\"!agentCollectionLimitValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"agentCollectionLimit\\\" placeholder=\\\"Agent Collection Limit\\\" [(ngModel)]=\\\"configuration.agentCollectionLimit\\\"\\r\\n                                                   #agentCollectionLimit=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': agentCollectionLimit.invalid && ( !agentCollectionLimitValid || agentCollectionLimit.touched ),\\r\\n                                                        'valid-data': agentCollectionLimitValid && agentCollectionLimit.valid  }\\\" required >\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"agentCollectionLimit.invalid && (!agentCollectionLimitValid || agentCollectionLimit.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Agent Collection Limit is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <footer>\\r\\n                                <a *ngIf=\\\"mode != 'view'\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveContribution(configuration)\\\">Submit</a>\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"showHistory()\\\">History</a>\\r\\n                                <a *ngIf=\\\"mode != 'view'\\\" class=\\\"btn btn-default\\\" (click)=\\\"clearContribution()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\">Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--<div bsModal #historyModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"historyModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Configuration List</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px; overflow-x:scroll\\\">\\r\\n                    <table class=\\\"table table-striped\\\" [mfData]=\\\"configurationData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"effectiveFromDateString\\\">Effective From Date</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"effectiveToDateString\\\">Effective To Date</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"beneficiaryPFContribution\\\">Beneficiary PF Contribution</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"governmentPFContribution\\\">Government PF Contribution</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"pfLockingPeriodMonths\\\">Lock in Period (Months)</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"inActivePeriodMonths\\\">InActive Period</mfDefaultSorter>\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let config of mf.data|grdFilter: {effectiveFromDateString: searchText,effectiveToDateString: searchText, beneficiaryPFContribution: searchText,\\r\\n       governmentPFContribution: searchText, pfLockingPeriodMonths: searchText, inActivePeriodMonths:searchText,  maturityAge: searchText, averageMonthlyIncome: searchText}; let i=index;\\\">\\r\\n                                <td class=\\\"\\\">\\r\\n                                    <a (click)=\\\"onEditClick(config)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                    <a (click)=\\\"onViewClick(config)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                </td>\\r\\n                                <td>{{config.effectiveFromDateString}}</td>\\r\\n                                <td>{{config.effectiveToDateString}}</td>\\r\\n                                <td>{{config.beneficiaryPFContribution}}</td>\\r\\n                                <td>{{config.governmentPFContribution}}</td>\\r\\n                                <td>{{config.pfLockingPeriodMonths}}</td>\\r\\n                                <td>{{config.inActivePeriodMonths}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                    </table>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitClick()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>-->\"","import { Component, OnInit, ViewChild, OnDestroy, ElementRef } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute, Data } from '@angular/router';\r\nimport { PFConfigurationModel } from '../../models/pfconfiguration.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { Subscription } from 'rxjs';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { BsDatepickerConfig } from \"ngx-bootstrap\";\r\n\r\n@Component({\r\n    selector: 'app-pfconfiguration',\r\n    templateUrl: './pfconfiguration.component.html',\r\n    styleUrls: ['./pfconfiguration.component.css']\r\n})\r\nexport class PfconfigurationComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    //@ViewChild('historyModal') public historyModal: ModalDirective;\r\n    route$: Subscription;\r\n    effectiveFromDateValid: boolean = true;\r\n    effectiveToDateValid: boolean = true;\r\n\r\n    benMonthlyContributionValid: boolean = true;\r\n    govMonthlyContributionValid: boolean = true;\r\n    minAgeValid: boolean = true;\r\n    maxAgeValid: boolean = true;\r\n    avgFamilyIncomeValid: boolean = true;\r\n    lockPeriodValid: boolean = true;\r\n    inactivePeriodValid: boolean = true;\r\n    maturityAgeValid: boolean = true;\r\n    logic2Valid: boolean = true;\r\n    collectionCutOffValid: boolean = true;\r\n    interestRateValid: boolean = true;\r\n    collectionCutOffRange: boolean = true;\r\n    agentCollectionLimitValid: boolean = true;\r\n\r\n    configuration: PFConfigurationModel = {} as PFConfigurationModel;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    successMessage: string;\r\n    pfConfigurationId: number;\r\n    mode: string = \"add\";\r\n    maxDate: Date;\r\n    //public configurationData: PFConfigurationModel[] = [];\r\n    totalRows: any;\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService) {\r\n        this.maxDate = new Date();\r\n        //this.mode = \"add\";\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.pfConfigurationId = params[\"pfConfigurationId\"] != null ? Number(params[\"pfConfigurationId\"]) : 0;\r\n                this.mode = params[\"mode\"] == undefined ? 'add' : params[\"mode\"];\r\n                if (this.mode == \"edit\" || this.mode == \"view\")\r\n                    this.getConfigurationDetails(this.pfConfigurationId);\r\n            }\r\n        );\r\n        //console.log(this.configuration);\r\n    }\r\n    getConfigurationDetails(id: any) {\r\n        this.dataService\r\n            .getPFConfigurationDetails(id)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.configuration = data;\r\n\r\n                this.configuration.dateEffectiveFrom = new Date(this.configuration.dateEffectiveFrom);\r\n                this.configuration.dateEffectiveTo = new Date(this.configuration.dateEffectiveTo);\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n\r\n    saveContribution(configurationModel: PFConfigurationModel) {\r\n        if (this.validateConfiguration()) {\r\n            if (this.mode != \"view\") {\r\n                if (confirm(\"Are you sure to proceed \")) {\r\n                    this.dataService\r\n                        .savePFConfiguration(this.configuration)\r\n                        .then((data: any) => {\r\n                            this.successMessage = \"Configuration updated successfully\";\r\n                            this.successModal.show();\r\n                        });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    validateConfiguration() {\r\n        let isValid = true;\r\n        this.effectiveFromDateValid = this.effectiveToDateValid = this.benMonthlyContributionValid = this.govMonthlyContributionValid = true;\r\n        this.minAgeValid = this.maxAgeValid = this.avgFamilyIncomeValid = this.lockPeriodValid = this.inactivePeriodValid = this.maturityAgeValid = true;\r\n        this.logic2Valid = this.collectionCutOffValid = this.collectionCutOffRange = this.interestRateValid = true;\r\n\r\n        if (this.configuration.dateEffectiveFrom == undefined) { this.effectiveFromDateValid = isValid = false }\r\n        if (this.configuration.dateEffectiveTo == undefined) { this.effectiveToDateValid = isValid = false }\r\n        if (this.configuration.beneficiaryPFContribution == undefined) { this.benMonthlyContributionValid = isValid = false }\r\n        if (this.configuration.governmentPFContribution == undefined) { this.govMonthlyContributionValid = isValid = false }\r\n        if (this.configuration.minAge == undefined) { this.minAgeValid = isValid = false }\r\n        if (this.configuration.maxAge == undefined) { this.maxAgeValid = isValid = false }\r\n        if (this.configuration.averageMonthlyIncome == undefined) { this.avgFamilyIncomeValid = isValid = false }\r\n        if (this.configuration.pfLockingPeriodMonths == undefined) { this.lockPeriodValid = isValid = false }\r\n        if (this.configuration.inActivePeriodMonths == undefined) { this.inactivePeriodValid = isValid = false }\r\n        if (this.configuration.maturityAge == undefined) { this.maturityAgeValid = isValid = false }\r\n        if (this.configuration.maturityAgeLogic == undefined) { this.logic2Valid = isValid = false }\r\n        debugger;\r\n        if (this.configuration.collectionCutoff == undefined) { this.collectionCutOffValid = isValid = false }\r\n        else if (this.configuration.collectionCutoff < 1 || this.configuration.collectionCutoff > 30) { this.collectionCutOffRange = isValid = false }\r\n\r\n        if (this.configuration.pfInterestRate == undefined) { this.interestRateValid = isValid = false }\r\n        if (this.configuration.agentCollectionLimit == undefined) { this.agentCollectionLimitValid = isValid = false }\r\n\r\n\r\n        return isValid;\r\n    }\r\n    clearContribution() {\r\n        debugger;\r\n        if (this.mode == \"edit\") {\r\n            this.getConfigurationDetails(this.pfConfigurationId);\r\n        }\r\n        if (this.mode == \"add\") {\r\n            this.configuration = {} as PFConfigurationModel;\r\n        }\r\n    }\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n\r\n    showHistory() {\r\n        this.router.navigate(['pfconfig/pfconfigurationlist'], { skipLocationChange: true });\r\n        //this.getPFConfigurations(1,10);\r\n        //this.historyModal.show();\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n    }\r\n    //getPFConfigurations(pageNo?: any, pageSize?: any) {\r\n    //    this.dataService\r\n    //        .getPFConfigurations(pageNo, pageSize)\r\n    //        .subscribe((data: any) => {\r\n    //            this.configurationData = data.results;\r\n    //            this.totalRows = data.rowCount;\r\n    //        });\r\n    //}\r\n}","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Configuration List </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        Action\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective From Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective To Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                       Interest Rate\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Beneficiary PF Contribution\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Government PF Contribution\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Lock in Period (Months)\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        InActive Period\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let config of configurationData\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n\\r\\n                                        <a *ngIf=\\\"config.status == 1\\\" (click)=\\\"onEditClick(config)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClick(config)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{config.effectiveFromDateString}}</td>\\r\\n                                    <td>{{config.effectiveToDateString}}</td>\\r\\n                                    <td>{{config.pfInterestRate}}</td>\\r\\n                                    <td>{{config.beneficiaryPFContribution}}</td>\\r\\n                                    <td>{{config.governmentPFContribution}}</td>\\r\\n                                    <td>{{config.pfLockingPeriodMonths}}</td>\\r\\n                                    <td>{{config.inActivePeriodMonths}}</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"configurationData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <!--<table class=\\\"table table-striped\\\" [mfData]=\\\"configurationData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                         <thead>\\r\\n                             <tr>\\r\\n                                 <th>\\r\\n                                     <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                 </th>\\r\\n                                 <th>\\r\\n                                     <mfDefaultSorter by=\\\"effectiveFromDateString\\\">Effective From Date</mfDefaultSorter>\\r\\n                                 </th>\\r\\n                                 <th>\\r\\n                                     <mfDefaultSorter by=\\\"effectiveToDateString\\\">Effective To Date</mfDefaultSorter>\\r\\n                                 </th>\\r\\n                                 <th>\\r\\n                                     <mfDefaultSorter by=\\\"beneficiaryPFContribution\\\">Beneficiary PF Contribution</mfDefaultSorter>\\r\\n                                 </th>\\r\\n                                 <th>\\r\\n                                     <mfDefaultSorter by=\\\"governmentPFContribution\\\">Government PF Contribution</mfDefaultSorter>\\r\\n                                 </th>\\r\\n                                 <th>\\r\\n                                     <mfDefaultSorter by=\\\"pfLockingPeriodMonths\\\">Lock in Period (Months)</mfDefaultSorter>\\r\\n                                 </th>\\r\\n                                 <th>\\r\\n                                     <mfDefaultSorter by=\\\"inActivePeriodMonths\\\">InActive Period</mfDefaultSorter>\\r\\n                                 </th>\\r\\n                             </tr>\\r\\n                         </thead>\\r\\n                         <tbody>\\r\\n                             <tr *ngFor=\\\"let config of mf.data|grdFilter: {effectiveFromDateString: searchText,effectiveToDateString: searchText, beneficiaryPFContribution: searchText,\\r\\n    governmentPFContribution: searchText, pfLockingPeriodMonths: searchText, inActivePeriodMonths:searchText,  maturityAge: searchText, averageMonthlyIncome: searchText}; let i=index;\\\">\\r\\n                                 <td class=\\\"\\\">\\r\\n                                     <a (click)=\\\"onEditClick(config)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                     <a (click)=\\\"onViewClick(config)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                 </td>\\r\\n                                 <td>{{config.effectiveFromDateString}}</td>\\r\\n                                 <td>{{config.effectiveToDateString}}</td>\\r\\n                                 <td>{{config.beneficiaryPFContribution}}</td>\\r\\n                                 <td>{{config.governmentPFContribution}}</td>\\r\\n                                 <td>{{config.pfLockingPeriodMonths}}</td>\\r\\n                                 <td>{{config.inActivePeriodMonths}}</td>\\r\\n                             </tr>\\r\\n                         </tbody>\\r\\n\\r\\n\\r\\n                         <tfoot>\\r\\n                             <tr>\\r\\n                                 <td colspan=\\\"9\\\">\\r\\n                                     <div *ngIf=\\\"configurationData.length>0\\\">\\r\\n                                         <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                     </div>\\r\\n                                 </td>\\r\\n                             </tr>\\r\\n                         </tfoot>\\r\\n                     </table>-->\\r\\n                        <footer class=\\\"modal-footer\\\">\\r\\n                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                        </footer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PFConfigurationModel } from '../../models/pfconfiguration.model';\r\nimport { pagination } from '../../claim/pipes/constnts.model';\r\nimport { Router } from '@angular/router';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { UserService } from '../../UserService';\r\n@Component({\r\n    selector: 'app-pfconfigurationlist',\r\n    templateUrl: './pfconfigurationlist.component.html',\r\n    styleUrls: ['./pfconfigurationlist.component.css']\r\n})\r\nexport class PfconfigurationlistComponent implements OnInit {\r\n    public configurationData: PFConfigurationModel[] = [];\r\n\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    constructor(public router: Router, private dataService: PFConfigDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getPFConfigurations(this.page, this.pageSize);\r\n    }\r\n\r\n    getPFConfigurations(pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getPFConfigurations(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.configurationData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getPFConfigurations(this.page, this.pageSize);\r\n    }\r\n    onEditClick(item: any) {\r\n        debugger;\r\n        this.router.navigate(['pfconfig/pfconfiguration', { pfConfigurationId: item.pfConfigurationId, mode: \"edit\" }], { skipLocationChange: true });\r\n    }\r\n    onViewClick(item) {\r\n        debugger;\r\n        this.router.navigate(['pfconfig/pfconfiguration', { pfConfigurationId: item.pfConfigurationId, mode: \"view\" }], { skipLocationChange: true });\r\n    }\r\n    cancelClick() {\r\n        window.location.href = \"pfconfig/benefitconfiguration\";\r\n    }\r\n}","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Interest Conguration History </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Action</th>\\r\\n                                    <th>\\r\\n                                       Interest Code\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Interest Rate(%)\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Interest Calculation Day\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective From Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Effective To Date\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let pfConfig of pfConfigList\\\">\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"pfConfig.status == 1\\\" (click)=\\\"onEditClick(pfConfig)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClick(pfConfig)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{pfConfig.interestCode}}</td>\\r\\n                                    <td>{{pfConfig.interestRate}}</td>\\r\\n                                    <td>{{pfConfig.interestCalculationDay}}</td>\\r\\n                                    <td>{{pfConfig.effectiveDateFromString}}</td>\\r\\n                                    <td>{{pfConfig.effectiveDateToString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"6\\\">\\r\\n                                        <div *ngIf=\\\"pfConfigList.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changePage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { pagination } from 'src/app/claim/pipes/constnts.model';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { PFInterestConfig } from 'src/app/models/pfInterestConfig.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pfinterestconfiglist',\r\n  templateUrl: './pfinterestconfiglist.component.html',\r\n  styleUrls: ['./pfinterestconfiglist.component.css']\r\n})\r\nexport class PfinterestconfiglistComponent implements OnInit {\r\n\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    public pfConfigList: PFInterestConfig[] = [];\r\n\r\n    constructor(public router: Router,private dataService: PFConfigDataService) { }\r\n\r\n    ngOnInit() {\r\n        this.GetPFInterestConfigDetails(this.page, this.pageSize);\r\n    }\r\n    GetPFInterestConfigDetails(pageNo: any, pageSize: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetPFInterestConfigDetails(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfConfigList = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changePage(page) {\r\n        this.GetPFInterestConfigDetails(page, this.pageSize);\r\n    }\r\n    onEditClick(item: any) {\r\n        this.router.navigate(['pfconfig/pfinterestconfig', { interestConfigId: item.interestConfigId, mode: \"edit\"}], { skipLocationChange: true });\r\n    }\r\n    onViewClick(item: any) {\r\n        this.router.navigate(['pfconfig/pfinterestconfig', { interestConfigId: item.interestConfigId, mode: \"view\" }], { skipLocationChange: true });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>PF Interest Configuration</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <fieldset>\\r\\n\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Interest Code:<span [style.color]=\\\"!interestCodeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"interestCode\\\" placeholder=\\\"Interest Code\\\" [(ngModel)]=\\\"pfConfig.interestCode\\\"\\r\\n                                                   #interestCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCode.invalid && ( !interestCodeValid || interestCode.touched ),\\r\\n                                                        'valid-data': interestCodeValid && interestCode.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"interestCode.invalid && (!interestCodeValid || interestCode.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Interest Code is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Description:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea rows=\\\"3\\\" cols=\\\"72\\\" class=\\\"custom-scroll\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"pfConfig.description\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Interest Calculation Day:<span [style.color]=\\\"!interestCalculationDayValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"interestCalculationDay\\\" placeholder=\\\"Interest Calculation Day\\\" [(ngModel)]=\\\"pfConfig.interestCalculationDay\\\"\\r\\n                                                   #interestCalculationDay=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCalculationDay.invalid && ( !interestCalculationDayValid || interestCalculationDay.touched ),\\r\\n                                                        'valid-data': interestCalculationDayValid && interestCalculationDay.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"interestCalculationDay.invalid && (!interestCalculationDayValid || interestCalculationDay.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Interest Calculation Day is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Interest Rate(%):<span [style.color]=\\\"!interestRateValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"interestRate\\\" placeholder=\\\"Interest Rate\\\" [(ngModel)]=\\\"pfConfig.interestRate\\\"\\r\\n                                                   #interestRate=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': interestCalculationDay.invalid && ( !interestRateValid || interestRate.touched ),\\r\\n                                                        'valid-data': interestRateValid && interestRate.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"interestRate.invalid && (!interestRateValid || interestRate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Interest Rate is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective From Date:<span [style.color]=\\\"!effectiveFromDateValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ pfConfig.effectiveDateFrom | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"pfConfig.effectiveDateFrom\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':effectiveFromDate.invalid && (!effectiveFromDateValid), 'valid-data': effectiveFromDate.valid && effectiveFromDateValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"effectiveFromDate.invalid && (!effectiveFromDateValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Effective From Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Effective To Date:</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"effectiveToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ pfConfig.effectiveToDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"pfConfig.effectiveDateTo\\\" readonly\\r\\n                                                   #effectiveFromDate=\\\"ngModel\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </fieldset>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"getHistoryData()\\\">History</a>\\r\\n                                <a class=\\\"btn btn-default\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"clearData()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isSaveVisible\\\" (click)=\\\"saveClaimsData(pfConfig)\\\">Save</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { PFInterestConfig } from 'src/app/models/pfInterestConfig.model';\r\nimport { BsDatepickerConfig, ModalDirective } from \"ngx-bootstrap\";\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-pfintertconfig',\r\n    templateUrl: './pfintertconfig.component.html',\r\n    styleUrls: ['./pfintertconfig.component.css']\r\n})\r\nexport class PfintertconfigComponent implements OnInit, OnDestroy {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    private route$: Subscription;\r\n\r\n    pfConfig: PFInterestConfig = {} as PFInterestConfig;\r\n    interestCodeValid: boolean = false;\r\n    interestCalculationDayValid: boolean = false;\r\n    interestRateValid: boolean = false;\r\n    effectiveFromDateValid: boolean = false;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    successMessage: string;\r\n    interestConfigId: number = 0;\r\n    mode: string = \"add\";\r\n    isSaveVisible: boolean = true;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n\r\n    ngOnInit() {\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.interestConfigId = params[\"interestConfigId\"];\r\n                this.mode = params[\"mode\"];\r\n                if (this.mode == \"view\") {\r\n                    this.isSaveVisible = false;\r\n                }\r\n                else {\r\n                    this.isSaveVisible = true;\r\n                }\r\n                if (this.interestConfigId > 0) {\r\n\r\n                    this.getPFInterestConfigDetailsById(this.interestConfigId);\r\n                }\r\n            }\r\n        );\r\n        this.interestCodeValid = this.interestCalculationDayValid = this.interestRateValid = this.effectiveFromDateValid = true;\r\n    }\r\n\r\n    clearData() {\r\n        this.interestCodeValid = this.interestCalculationDayValid = this.interestRateValid = this.effectiveFromDateValid = true; debugger;\r\n        if (this.mode == \"edit\") {\r\n            this.getPFInterestConfigDetailsById(this.interestConfigId);\r\n        }\r\n        else {\r\n            this.pfConfig = {} as PFInterestConfig;\r\n        }\r\n    }\r\n\r\n    validatePFInterestConfigData(pfConfigData: PFInterestConfig): boolean {\r\n        let isValid = true;\r\n        this.interestCodeValid = this.interestCalculationDayValid = this.interestRateValid = this.effectiveFromDateValid = true;\r\n\r\n        if (pfConfigData.interestCode == undefined) { this.interestCodeValid = isValid = false }\r\n        if (pfConfigData.interestCalculationDay <= 0 || pfConfigData.interestCalculationDay == undefined) { this.interestCalculationDayValid = isValid = false }\r\n        if (pfConfigData.interestRate <= 0 || pfConfigData.interestRate == undefined) { this.interestRateValid = isValid = false }\r\n        if (pfConfigData.effectiveDateFrom == undefined) { this.effectiveFromDateValid = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    saveClaimsData(pfConfigData: PFInterestConfig) {\r\n        let isValid = true;\r\n\r\n        if (this.validatePFInterestConfigData(pfConfigData)) {\r\n\r\n            this.successMessage = \"\";\r\n            //  console.log(pfConfigData);\r\n\r\n            pfConfigData.status = 1;\r\n\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .SavePFInterestConfigData(pfConfigData)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"PF Interest Configuration was saved successfully\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    okClick() {\r\n        //this.successModal.hide();\r\n\r\n        window.location.href = \"PFConfig/pfinterestconfig\";\r\n\r\n    }\r\n\r\n    getHistoryData() {\r\n        window.location.href = \"PFConfig/pfinterestconfiglist\";\r\n    }\r\n\r\n    getPFInterestConfigDetailsById(id: any) {\r\n        this.dataService\r\n            .GetPFInterestConfigDetailsById(id)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfConfig = data;\r\n\r\n                this.pfConfig.effectiveDateFrom = new Date(this.pfConfig.effectiveDateFrom);\r\n                this.pfConfig.effectiveDateTo = new Date(this.pfConfig.effectiveDateTo);\r\n            });\r\n    }\r\n\r\n    cancelClick() {\r\n        window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Receipt Book</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form\\\">\\r\\n                            <header>Issue Receipt Book</header>\\r\\n                            <fieldset id=\\\"contribution\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Issued Date <span [style.color]=\\\"!dateValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"date\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ receiptBook.date | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"receiptBook.date\\\"\\r\\n                                                   [maxDate]=\\\"maxDate\\\" (bsValueChange)=\\\"issueDateChange($event)\\\"\\r\\n                                                   #date=\\\"ngModel\\\" required\\r\\n                                                   [ngClass]=\\\"{'invalid-data':date.invalid && (!dateValid), 'valid-data': date.valid && dateValid}\\\" />\\r\\n                                            <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"date.invalid && (!dateValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Issued Date is required </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"todayMinIssueDateReq\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Issued Date should be less than or equal to Today Date </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Agent Code <span [style.color]=\\\"!agentCodeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <select class=\\\"form-control select\\\" name=\\\"agentName\\\" id=\\\"ddlAgentName\\\" [(ngModel)]=\\\"receiptBook.agentCode\\\"\\r\\n                                                    (change)=\\\"agentChange($event.target.value)\\\">\\r\\n                                                <option value=\\\"{{agent.userid}}\\\" *ngFor=\\\"let agent of agentList\\\">{{agent.userCode}}</option>\\r\\n                                            </select>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"agentCode\\\" placeholder=\\\"Agent Code\\\" [(ngModel)]=\\\"receiptBook.agentCode\\\">-->\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!agentCodeValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Agent Code is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Receipt Book No <span [style.color]=\\\"!bookNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"bookNo\\\" placeholder=\\\"Book No\\\" [(ngModel)]=\\\"receiptBook.bookNo\\\" \\r\\n                                                   (change)=\\\"validateReceiptBookName()\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!bookNoValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Receipt Book No is required </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"bookNameValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Receipt Book No is already generated </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Receipt No From <span [style.color]=\\\"!receiptNoFromValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"receiptNoFrom\\\" placeholder=\\\"Receipt No From\\\" NumbersOnly [(ngModel)]=\\\"receiptBook.receiptNoFrom\\\" >\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!receiptNoFromValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Receipt No From is required </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Receipt No To <span [style.color]=\\\"!receiptNoToValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"receiptNoTo\\\" placeholder=\\\"Receipt No From\\\" NumbersOnly [(ngModel)]=\\\"receiptBook.receiptNoTo\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!receiptNoToValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Receipt No To is required </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <footer>\\r\\n                                <a *ngIf=\\\"mode != 'view'\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveReceiptBook(receiptBook)\\\">Submit</a>\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"showHistory()\\\">History</a>\\r\\n                                <a *ngIf=\\\"mode != 'view'\\\" class=\\\"btn btn-default\\\" (click)=\\\"clearContribution()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\">Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--<div bsModal #historyModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"historyModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Configuration List</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px; overflow-x:scroll\\\">\\r\\n                    <table class=\\\"table table-striped\\\" [mfData]=\\\"configurationData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"effectiveFromDateString\\\">Effective From Date</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"effectiveToDateString\\\">Effective To Date</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"beneficiaryPFContribution\\\">Beneficiary PF Contribution</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"governmentPFContribution\\\">Government PF Contribution</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"pfLockingPeriodMonths\\\">Lock in Period (Months)</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"inActivePeriodMonths\\\">InActive Period</mfDefaultSorter>\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let config of mf.data|grdFilter: {effectiveFromDateString: searchText,effectiveToDateString: searchText, beneficiaryPFContribution: searchText,\\r\\n       governmentPFContribution: searchText, pfLockingPeriodMonths: searchText, inActivePeriodMonths:searchText,  maturityAge: searchText, averageMonthlyIncome: searchText}; let i=index;\\\">\\r\\n                                <td class=\\\"\\\">\\r\\n                                    <a (click)=\\\"onEditClick(config)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                    <a (click)=\\\"onViewClick(config)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                </td>\\r\\n                                <td>{{config.effectiveFromDateString}}</td>\\r\\n                                <td>{{config.effectiveToDateString}}</td>\\r\\n                                <td>{{config.beneficiaryPFContribution}}</td>\\r\\n                                <td>{{config.governmentPFContribution}}</td>\\r\\n                                <td>{{config.pfLockingPeriodMonths}}</td>\\r\\n                                <td>{{config.inActivePeriodMonths}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                    </table>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitClick()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>-->\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy, ElementRef } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute, Data } from '@angular/router';\r\nimport { ReceiptBookModel } from '../../models/receiptbook.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { Subscription } from 'rxjs';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { BsDatepickerConfig } from \"ngx-bootstrap\";\r\nimport { UserService } from '../../UserService';\r\nimport { NewRegUsers } from '../../models/newReg.model';\r\nimport { UserType } from '../../claim/pipes/constnts.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-receiptbook',\r\n  templateUrl: './receiptbook.component.html',\r\n  styleUrls: ['./receiptbook.component.css']\r\n})\r\nexport class ReceiptbookComponent implements OnInit {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    route$: Subscription;\r\n    dateValid: boolean = true;\r\n    receiptNoFromValid: boolean = true;\r\n    receiptNoToValid: boolean = true;\r\n    agentCodeValid: boolean = true;\r\n    bookNoValid: boolean = true;\r\n    receiptBook: ReceiptBookModel = {} as ReceiptBookModel;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    successMessage: string;\r\n    id: number;\r\n    mode: string = \"add\";\r\n    maxDate: Date;\r\n    totalRows: any;\r\n    agentList: Array<NewRegUsers> = [];\r\n    bookNameValid: boolean = false;\r\n    todayMinIssueDateReq: boolean = false;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: PFConfigDataService, private userService: UserService) {\r\n        this.maxDate = new Date();\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n        debugger;\r\n        this.getAgentList();\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.id = params[\"id\"] != null ? Number(params[\"id\"]) : 0;\r\n                this.mode = params[\"mode\"] == undefined ? 'add' : params[\"mode\"];\r\n                if (this.mode == \"edit\" || this.mode == \"view\")\r\n                    this.getReceiptBookDetails(this.id);\r\n            }\r\n        );\r\n        //console.log(this.receiptBook);\r\n    }\r\n    getReceiptBookDetails(id: any) {\r\n        this.dataService\r\n            .getReceiptBookDetails(id)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.receiptBook = data;\r\n\r\n                this.receiptBook.date = new Date(this.receiptBook.date);\r\n                //this.receiptBook.receiptNoFrom = new Date(this.receiptBook.receiptNoFrom);\r\n                //this.receiptBook.receiptNoTo = new Date(this.receiptBook.receiptNoTo);\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n\r\n    saveReceiptBook(ReceiptBookModel: ReceiptBookModel) {\r\n        debugger;\r\n        if (this.validateConfiguration()) {\r\n            if (this.mode != \"view\") {\r\n                this.receiptBook.createdBy = this.userService.user.deptUserid;\r\n                if (confirm(\"Are you sure to proceed \")) {\r\n                    this.dataService\r\n                        .saveReceiptBook(this.receiptBook)\r\n                        .then((data: any) => {\r\n                            if (data) {\r\n                                this.successMessage = \"The Receipt Book issuance is completed successfully\";\r\n                                this.successModal.show();\r\n                            }\r\n                            else {\r\n                                this.successMessage = \"The Receipt Book issuance is not completed\";\r\n                                this.successModal.show();\r\n                            }\r\n                        });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    validateConfiguration() {\r\n        debugger;\r\n        let isValid = true;\r\n        if (this.receiptBook.date == undefined) { this.dateValid = isValid = false }\r\n        if (this.receiptBook.agentCode == undefined) { this.agentCodeValid = isValid = false }\r\n        if (this.receiptBook.bookNo == undefined) { this.bookNoValid = isValid = false }\r\n        if (this.receiptBook.receiptNoFrom == undefined)  { this.receiptNoFromValid = isValid = false }\r\n        if (this.receiptBook.receiptNoTo == undefined) { this.receiptNoToValid = isValid = false }\r\n        if (this.bookNameValid == true) { isValid = false }\r\n        if (this.todayMinIssueDateReq == true) { isValid = false }\r\n        return isValid;\r\n    }\r\n    clearContribution() {\r\n        if (this.mode == \"add\") {\r\n            this.receiptBook = {} as ReceiptBookModel;\r\n        }\r\n    }\r\n    cancelClick() {\r\n        if (this.userService.user.userTpe == UserType.SuperAdmin.toString())\r\n            this.router.navigate(['pfconfig/receiptbooklist'], { skipLocationChange: true });\r\n        else \r\n            this.router.navigate(['claim/bulkpfdeposit'], { skipLocationChange: true });\r\n    }\r\n\r\n    showHistory() {\r\n        this.router.navigate(['pfconfig/receiptbooklist'], { skipLocationChange: true });\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n    }\r\n\r\n    getAgentList() {\r\n        this.dataService\r\n            .getAgentList(0)\r\n            .subscribe((data: any) => {\r\n                this.agentList = data;\r\n            });\r\n    }\r\n\r\n    agentChange(eve) {\r\n        this.receiptBook.agentCode = eve;\r\n    }\r\n    validateReceiptBookName() {\r\n        this.bookNameValid = false;\r\n        this.dataService\r\n            .validateReceiptBookName(this.receiptBook.bookNo)\r\n            .subscribe((data: any) => {\r\n                if (data)\r\n                    this.bookNameValid = true;;\r\n            });\r\n    }\r\n    issueDateChange(eve) {\r\n        debugger;\r\n        this.todayMinIssueDateReq = false;\r\n        if (eve != undefined) {\r\n            var issueDate = new Date(eve);\r\n            var timeDiff = (this.maxDate.getTime() - issueDate.getTime());\r\n            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n            if (diffDays < 0) {\r\n                this.todayMinIssueDateReq = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Receipt Book List </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        Action\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Date\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Agent Code\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Book No\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Receipt No From\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        Receipt No To\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let config of receiptBookData\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n\\r\\n                                        <!--<a *ngIf=\\\"config.status == 1\\\" (click)=\\\"onEditClick(config)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>-->\\r\\n                                        <a (click)=\\\"onViewClick(config)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{config.dateString}}</td>\\r\\n                                    <td>{{config.agentCode}}</td>\\r\\n                                    <td>{{config.bookNo}}</td>\\r\\n                                    <td>{{config.receiptNoFrom}}</td>\\r\\n                                    <td>{{config.receiptNoTo}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"receiptBookData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <!--<table class=\\\"table table-striped\\\" [mfData]=\\\"configurationData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                             <thead>\\r\\n                                                 <tr>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"effectiveFromDateString\\\">Effective From Date</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"effectiveToDateString\\\">Effective To Date</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"beneficiaryPFContribution\\\">Beneficiary PF Contribution</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"governmentPFContribution\\\">Government PF Contribution</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"pfLockingPeriodMonths\\\">Lock in Period (Months)</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"inActivePeriodMonths\\\">InActive Period</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                 </tr>\\r\\n                                             </thead>\\r\\n                                             <tbody>\\r\\n                                                 <tr *ngFor=\\\"let config of mf.data|grdFilter: {effectiveFromDateString: searchText,effectiveToDateString: searchText, beneficiaryPFContribution: searchText,\\r\\n                        governmentPFContribution: searchText, pfLockingPeriodMonths: searchText, inActivePeriodMonths:searchText,  maturityAge: searchText, averageMonthlyIncome: searchText}; let i=index;\\\">\\r\\n                                                     <td class=\\\"\\\">\\r\\n                                                         <a (click)=\\\"onEditClick(config)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                                         <a (click)=\\\"onViewClick(config)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                                     </td>\\r\\n                                                     <td>{{config.effectiveFromDateString}}</td>\\r\\n                                                     <td>{{config.effectiveToDateString}}</td>\\r\\n                                                     <td>{{config.beneficiaryPFContribution}}</td>\\r\\n                                                     <td>{{config.governmentPFContribution}}</td>\\r\\n                                                     <td>{{config.pfLockingPeriodMonths}}</td>\\r\\n                                                     <td>{{config.inActivePeriodMonths}}</td>\\r\\n                                                 </tr>\\r\\n                                             </tbody>\\r\\n\\r\\n\\r\\n                                             <tfoot>\\r\\n                                                 <tr>\\r\\n                                                     <td colspan=\\\"9\\\">\\r\\n                                                         <div *ngIf=\\\"configurationData.length>0\\\">\\r\\n                                                             <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                                         </div>\\r\\n                                                     </td>\\r\\n                                                 </tr>\\r\\n                                             </tfoot>\\r\\n                                         </table>-->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ReceiptBookModel } from '../../models/receiptbook.model';\r\nimport { pagination } from '../../claim/pipes/constnts.model';\r\nimport { Router } from '@angular/router';\r\nimport { PFConfigDataService } from '../services/pfconfig-data.services';\r\nimport { UserService } from '../../UserService';\r\n\r\n@Component({\r\n  selector: 'app-receiptbooklist',\r\n  templateUrl: './receiptbooklist.component.html',\r\n  styleUrls: ['./receiptbooklist.component.css']\r\n})\r\nexport class ReceiptbooklistComponent implements OnInit {\r\n    public receiptBookData: ReceiptBookModel[] = [];\r\n\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    constructor(public router: Router, private dataService: PFConfigDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getReceiptBooks(this.page, this.pageSize);\r\n    }\r\n\r\n    getReceiptBooks(pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getReceiptBooks(pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.receiptBookData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getReceiptBooks(this.page, this.pageSize);\r\n    }\r\n    onViewClick(item) {\r\n        debugger;\r\n        this.router.navigate(['pfconfig/receiptbook', { id: item.id, mode: \"view\" }], { skipLocationChange: true });\r\n    }\r\n}","﻿export const ApiDictionary = {\r\n    getPFConfigurations: {\r\n        url: 'getPFConfigurations',\r\n        params: null\r\n    },\r\n    getPFConfigurationDetails: {\r\n        url: 'getPFConfigurationDetails',\r\n        params: null\r\n    },\r\n    savePFConfiguration: {\r\n        url: 'savePFConfiguration',\r\n        params: null\r\n    },\r\n    getReceiptBooks: {\r\n        url: 'getReceiptBooks',\r\n        params: null\r\n    },\r\n    getReceiptBookDetails: {\r\n        url: 'getReceiptBookDetails',\r\n        params: null\r\n    },\r\n    saveReceiptBook: {\r\n        url: 'saveReceiptBook',\r\n        params: null\r\n    },\r\n    GetPFInterestConfigDetails: {\r\n        url: 'GetPFInterestConfigDetails',\r\n        params: null\r\n    },\r\n    SavePFInterestConfigData: {\r\n        url: 'SavePFInterestConfigDetails',\r\n        params: null\r\n    },\r\n    GetPFInterestConfigDetailsById: {\r\n        url: 'GetPFInterestConfigDetailsById',\r\n        params: null\r\n    },\r\n    SavePFCommissionConfigData: {\r\n        url: 'SavePFCommissionConfigDetails',\r\n        params: null\r\n    },\r\n    GetPFCommissionConfigDetailsById: {\r\n        url: 'GetPFCommissionConfigDetailsById',\r\n        params: null\r\n    },\r\n    GetPFCommissionConfigDetails: {\r\n        url: 'GetPFCommissionConfigDetails',\r\n        params: null\r\n    },\r\n    SaveEducationConfigData: {\r\n        url: 'SaveEducationConfigData',\r\n        params: null\r\n    },\r\n    SaveHealthFamilyConfigData: {\r\n        url: 'SaveHealthFamilyConfigData',\r\n        params: null\r\n    },\r\n    SaveDeathConfigData: {\r\n        url: 'SaveDeathConfigData',\r\n        params: null\r\n    },\r\n    SaveDisabilityConfigData: {\r\n        url: 'SaveDisabilityConfigData',\r\n        params: null\r\n    },\r\n    GetEducationConfigDetails: {\r\n        url: 'GetEducationConfigDetails',\r\n        params: null\r\n    },\r\n    GetHealthFamilyConfigDetails: {\r\n        url: 'GetHealthFamilyConfigDetails',\r\n        params: null\r\n    },\r\n    GetDeathConfigDetails: {\r\n        url: 'GetDeathConfigDetails',\r\n        params: null\r\n    },\r\n    GetDisabilityConfigDetails: {\r\n        url: 'GetDisabilityConfigDetails',\r\n        params: null\r\n    },\r\n    GetEducationConfigDetailsById: {\r\n        url: 'GetEducationConfigDetailsById',\r\n        params: null\r\n    },\r\n    GetHealthFamilyConfigDetailsById: {\r\n        url: 'GetHealthFamilyConfigDetailsById',\r\n        params: null\r\n    },\r\n    GetDeathConfigDetailsById: {\r\n        url: 'GetDeathConfigDetailsById',\r\n        params: null\r\n    },\r\n    GetDisabilityConfigDetailsById: {\r\n        url: 'GetDisabilityConfigDetailsById',\r\n        params: null\r\n    },\r\n    GetBenefitConfigDetails: {\r\n        url: 'GetBenefitConfigDetails',\r\n        params: null\r\n    },\r\n    getAgentList:\r\n    {\r\n        url: \"GetDeptUsers\"\r\n    },\r\n    validateReceiptBookName:\r\n    {\r\n        url: \"validateReceiptBookName\",\r\n        params: null\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { DropdownListService } from '../../Services/dropdown-list.service';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { HttpRequest, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { ApiDictionary } from './api-dictionary';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class PFConfigDataService {\r\n    constructor(public apiService: ApiService, public _http: HttpClient) { }\r\n\r\n    GetPFInterestConfigDetails(pageNo: any, pageSize: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetPFInterestConfigDetails.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    SavePFInterestConfigData(pfConfigData: any) {\r\n        debugger;\r\n        return this.apiService.PostData(ApiDictionary.SavePFInterestConfigData.url, pfConfigData).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    GetPFInterestConfigDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetPFInterestConfigDetailsById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    SavePFCommissionConfigData(pfConfigData: any) {\r\n        debugger;\r\n        return this.apiService.PostData(ApiDictionary.SavePFCommissionConfigData.url, pfConfigData).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetPFCommissionConfigDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetPFCommissionConfigDetailsById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPFConfigurations(pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFConfigurations.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPFConfigurationDetails(id: number) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFConfigurationDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    savePFConfiguration(configuration: any) {\r\n        return this.apiService.PostData(ApiDictionary.savePFConfiguration.url, configuration).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getReceiptBooks(pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        \r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getReceiptBooks.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetPFCommissionConfigDetails(pageNo: any, pageSize: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetPFCommissionConfigDetails.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getReceiptBookDetails(id: number) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getReceiptBookDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    saveReceiptBook(configuration: any) {\r\n        return this.apiService.PostData(ApiDictionary.saveReceiptBook.url, configuration).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    SaveEducationConfigData(educationBenefitConfigDetails: any) {\r\n        return this.apiService.PostData(ApiDictionary.SaveEducationConfigData.url, educationBenefitConfigDetails).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    SaveHealthFamilyConfigData(educationBenefitConfigDetails: any) {\r\n        return this.apiService.PostData(ApiDictionary.SaveHealthFamilyConfigData.url, educationBenefitConfigDetails).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    SaveDeathConfigData(educationBenefitConfigDetails: any) {\r\n        return this.apiService.PostData(ApiDictionary.SaveDeathConfigData.url, educationBenefitConfigDetails).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    SaveDisabilityConfigData(educationBenefitConfigDetails: any) {\r\n        return this.apiService.PostData(ApiDictionary.SaveDisabilityConfigData.url, educationBenefitConfigDetails).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    GetEducationConfigDetails(pageNo: any, pageSize: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetEducationConfigDetails.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetHealthFamilyConfigDetails(pageNo: any, pageSize: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetHealthFamilyConfigDetails.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetDeathConfigDetails(pageNo: any, pageSize: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetDeathConfigDetails.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetDisabilityConfigDetails(pageNo: any, pageSize: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetDisabilityConfigDetails.url + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    GetEducationConfigDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetEducationConfigDetailsById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetHealthFamilyConfigDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetHealthFamilyConfigDetailsById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetDeathConfigDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetDeathConfigDetailsById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetDisabilityConfigDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetDisabilityConfigDetailsById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    GetBenefitConfigDetails() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetBenefitConfigDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAgentList(userTypeId: number) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentList.url + \"/\" + userTypeId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    validateReceiptBookName(bookName: string) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.validateReceiptBookName.url + \"/\" + bookName, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n}"],"sourceRoot":""}