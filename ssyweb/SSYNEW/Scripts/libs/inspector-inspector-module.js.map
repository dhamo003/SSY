{"version":3,"sources":["webpack:///./src/app/inspector/approval-claims/approval-claims.component.css","webpack:///./src/app/inspector/approval-claims/approval-claims.component.html","webpack:///./src/app/inspector/approval-claims/approval-claims.component.ts","webpack:///./src/app/inspector/claim-status/claim-status.component.css","webpack:///./src/app/inspector/claim-status/claim-status.component.html","webpack:///./src/app/inspector/claim-status/claim-status.component.ts","webpack:///./src/app/inspector/claimviewdata/claimviewdata.component.css","webpack:///./src/app/inspector/claimviewdata/claimviewdata.component.html","webpack:///./src/app/inspector/claimviewdata/claimviewdata.component.ts","webpack:///./src/app/inspector/foececlose/foececlose.component.css","webpack:///./src/app/inspector/foececlose/foececlose.component.html","webpack:///./src/app/inspector/foececlose/foececlose.component.ts","webpack:///./src/app/inspector/inspector-legacy-claim-entry/inspector-legacy-claim-entry.component.css","webpack:///./src/app/inspector/inspector-legacy-claim-entry/inspector-legacy-claim-entry.component.html","webpack:///./src/app/inspector/inspector-legacy-claim-entry/inspector-legacy-claim-entry.component.ts","webpack:///./src/app/inspector/inspector-legacy-list/inspector-legacy-list.component.css","webpack:///./src/app/inspector/inspector-legacy-list/inspector-legacy-list.component.html","webpack:///./src/app/inspector/inspector-legacy-list/inspector-legacy-list.component.ts","webpack:///./src/app/inspector/inspector.module.ts","webpack:///./src/app/inspector/inspectorlanding.component.css","webpack:///./src/app/inspector/inspectorlanding.component.html","webpack:///./src/app/inspector/inspectorlanding.component.ts","webpack:///./src/app/inspector/pending-approval-claims/pending-approval-claims.component.css","webpack:///./src/app/inspector/pending-approval-claims/pending-approval-claims.component.html","webpack:///./src/app/inspector/pending-approval-claims/pending-approval-claims.component.ts","webpack:///./src/app/inspector/reject-claims/reject-claims.component.css","webpack:///./src/app/inspector/reject-claims/reject-claims.component.html","webpack:///./src/app/inspector/reject-claims/reject-claims.component.ts","webpack:///./src/app/inspector/reviewclaims/reviewclaims.component.css","webpack:///./src/app/inspector/reviewclaims/reviewclaims.component.html","webpack:///./src/app/inspector/reviewclaims/reviewclaims.component.ts","webpack:///./src/app/inspector/search-student/search-student.component.css","webpack:///./src/app/inspector/search-student/search-student.component.html","webpack:///./src/app/inspector/search-student/search-student.component.ts","webpack:///./src/app/inspector/sendback-claims/sendback-claims.component.css","webpack:///./src/app/inspector/sendback-claims/sendback-claims.component.html","webpack:///./src/app/inspector/sendback-claims/sendback-claims.component.ts","webpack:///./src/app/inspector/services/api-dictionary.ts","webpack:///./src/app/inspector/services/inspector-data.service.ts","webpack:///./src/app/inspector/timetrack/timetrack.component.css","webpack:///./src/app/inspector/timetrack/timetrack.component.html","webpack:///./src/app/inspector/timetrack/timetrack.component.ts"],"names":[],"mappings":"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","file":"inspector-inspector-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Forwarded</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                                <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                                <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"forwardedDateString\\\">Forwarded Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText, submittedDateString: searchText, forwardedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.forwardedDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n    selector: 'app-approval-claims',\r\n    templateUrl: './approval-claims.component.html',\r\n    styleUrls: ['./approval-claims.component.css']\r\n})\r\nexport class ApprovalClaimsComponent implements OnInit {\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"approve\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['inspector/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"approve\", workflowId:WorkflowTrans.workflow}], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow,\"0\",\"0\" ,this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any,wfId: any, ssin: any, claimRefNo:any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status,wfId, ssin,claimRefNo,pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Claim Status</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"lastActionDateString\\\">Last Action Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,benName: searchText, benType: searchText, claimRefernceNo: searchText,\\r\\n       claimType: searchText, submittedDateString: searchText, claimAmount:searchText,  statusName: searchText,  lastActionDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.statusName}}</td>\\r\\n                                    <td>{{user.lastActionDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"10\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-claim-status',\r\n  templateUrl: './claim-status.component.html',\r\n  styleUrls: ['./claim-status.component.css']\r\n})\r\nexport class ClaimStatusComponent implements OnInit {\r\n\r\n    public claimsData: Claims[] = [];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"claimstatus\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1}], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['inspector/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"claimstatus\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getClaimStatusClaims(id, type, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow, \"0\", \"0\",this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchClaimStatusClaims(this.userService.user.deptUserid, this.userService.user.userTpe, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Claim Entry View </h2>\\r\\n                </header>\\r\\n\\r\\n                <div>\\r\\n\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>Beneficiary Details</header>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Name: </strong>{{beneficiary?.benFullName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>SSIN: </strong>{{beneficiary?.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Bank Name: </strong>{{beneficiary?.benBankName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Account No: </strong>{{beneficiary?.benBankAccNo}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>IFSC Code: </strong>{{beneficiary?.benBankIfscCode}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Branch: </strong>{{beneficiary?.benBankBranch}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"isOnDeathofBeneficiaryOnRequestofNominee\\\">\\r\\n                                <header>Nominee Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Name: </strong>{{claim?.nomineeName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Address: </strong>{{claim?.nomineeAddress}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Birth: </strong>{{claim?.nomineeDOBString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Contact Number: </strong>{{claim?.nomineeContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Bank Account No: </strong>{{claim?.nomineeBankAccount}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>IFSC Code: </strong>{{claim?.nomineeIFSCCode}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> PF No.: </strong>{{claim.providentFundDetails.pfno}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Claim Amount:</strong> {{claim.providentFundDetails.claimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Date of Maturity:</strong> {{claim.providentFundDetails.maturityDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Locking Period Up-to:</strong> {{claim.providentFundDetails.lockingPeriodDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Type of Claim:</strong> {{claim.providentFundDetails.typeOfClaimName}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Reason for Preclosure:</strong>  {{claim.providentFundDetails.reasonForPreClosure}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                <header>Education</header>\\r\\n\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.educationDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Dependent Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section *ngFor=\\\"let detail of educationList\\\">\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Student: </strong>{{detail?.dependentName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Name of the Institution: </strong> {{detail?.institutionName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Principal/Head Master of the institution:</strong>{{detail?.institutionPrinicipleName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong> Contact Number of the Institution: </strong>{{detail?.institutionContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Registration No./Roll No. of last exam passed: </strong>{{detail?.registrationRollNo}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Year of Examination: </strong>{{detail?.year}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission: </strong>{{detail?.dateofAdmissionString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Last Exam Passed: </strong>{{detail?.lastExamPassedName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Presently Reading: </strong>{{detail?.presentlyReadingName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Eligible Amount :</strong>{{detail?.eligibleAmount}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.healthFamilyDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Health & Family Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Type of Claim: </strong>{{claim?.healthFamilyDetails?.typeOfClaimName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Hospital : </strong> {{claim?.healthFamilyDetails?.hospitalName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Hospitalization/OPD:</strong>{{claim?.healthFamilyDetails?.typeOfHospitalizationName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Patient Id: </strong>{{claim?.healthFamilyDetails?.patientId}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of Disease: </strong>{{claim?.healthFamilyDetails?.nameOfTheDiseaseString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.nameOfTheDisease==56\\\">\\r\\n                                                <label><strong> Name of clinical test: </strong>{{claim?.healthFamilyDetails?.nameOfClinicalTestString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Met with an Accident:</strong>{{claim?.healthFamilyDetails?.isAccident}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Clinical Test: </strong>{{claim?.healthFamilyDetails?.costOfClinicalTest}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Medicine: </strong>{{claim?.healthFamilyDetails?.costOfMedicine}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of First Appointment: </strong>{{claim?.healthFamilyDetails?.firstAppointmentDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Claim for: </strong>{{claim?.healthFamilyDetails?.claimForName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Hospitalization: </strong>{{claim?.healthFamilyDetails?.costOfHospitalization}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission to Hospital: </strong>{{claim?.healthFamilyDetails?.admittedDateString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Discharge :</strong>{{claim?.healthFamilyDetails?.dischargeDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.familyMemberId != undefined && claim?.healthFamilyDetails?.familyMemberId !=0\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Family Member Name: </strong>{{claim?.healthFamilyDetails?.familyMemberName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.reasonForDelaySubmission != undefined || claim?.healthFamilyDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.healthFamilyDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <div *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalizationName!='OPD' && claim?.healthFamilyDetails?.claimFor == 5\\\">\\r\\n                                    <header>Loss of Employment</header>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> From Date: </strong>{{claim?.healthFamilyDetails?.loeFromDateString}}</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>To Date :</strong>{{claim?.healthFamilyDetails?.loeToDateString}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> Amount: </strong>{{claim?.healthFamilyDetails?.loeAmount}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n\\r\\n                                <header>View Packages</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                        <td>{{pak.packageName}}</td>\\r\\n                                                        <td>{{pak.packageCode}}</td>\\r\\n                                                        <td>{{pak.ailmentName}}</td>\\r\\n                                                        <td>{{pak.amount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.disabilityDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Disability Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of release from hospital/Accident: </strong>{{claim?.disabilityDetails?.dateofReleaseString}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Disability : </strong> {{claim?.disabilityDetails?.natureOfDisabilityName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Disability: </strong>{{claim?.disabilityDetails?.detailsOfDisability}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.disabilityDetails?.reasonForDelaySubmission != undefined || claim?.disabilityDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.disabilityDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                <header>Death</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.deathDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Death Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Death : </strong> {{claim?.deathDetails?.natureofDeathName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Death: </strong>{{claim?.deathDetails?.dateofDeathString}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Death: </strong>{{claim?.deathDetails?.detailsofDeath}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Place of Death: </strong>{{claim?.deathDetails?.placeofDeath}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, ViewChild,Input } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { ClaimView } from '../../claim/models/claimview.model';\r\nimport { EducationHdrModel, EducationDetailModel } from '../../claim/models/education.model';\r\nimport { Beneficiary } from '../../claim/models/ben.model';\r\nimport { ClaimConstants, WorkflowTrans, EntryPoint, PFTypeOfClaim, ReasonForApplyAgent } from '../../claim/pipes/constnts.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ReviewModel } from '../../models/review.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { UserService } from '../../UserService';\r\nimport { AttachmentModel } from '../../claim/models/attachment.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\n\r\n@Component({\r\n  selector: 'app-claimviewdata',\r\n  templateUrl: './claimviewdata.component.html',\r\n  styleUrls: ['./claimviewdata.component.css']\r\n})\r\nexport class ClaimviewdataComponent implements OnInit {\r\n\r\n    @Input() claimId: number;\r\n    @Input() claimType: number;\r\n    @Input() transactionId: number;\r\n    private workflowId: any;\r\n    claim: ClaimView = {} as ClaimView;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    viewMetWithAnAccident: boolean = false;\r\n    mode: string;\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    isPrematureClaim: boolean = false;\r\n    isOnDeathofBeneficiaryOnRequestofNominee: boolean = false;\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: InspectorDataService, private userService: UserService, private sanitizer: DomSanitizer) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getPackages();\r\n        this.getClaimDetailsByClaimId(this.claimId, this.transactionId, this.claimType);\r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                this.claim = data\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n\r\n                    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                        if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                    }\r\n                    let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                    }\r\n                    this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                }\r\n                if (this.claim.providentFundDetails != null) {\r\n                    if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                        this.isPrematureClaim = true;\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        if (this.claim.attachment[k].fileName != null) {\r\n                            let attachment = this.claim.attachment[k];\r\n                            if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                            }\r\n                            this.claim.attachment[k] = attachment;\r\n                            // this.attachmentList.push(attachment);\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.entryPoint == EntryPoint.Nominee || (this.claim.entryPoint == EntryPoint.Agent && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)\r\n                    || (this.claim.entryPoint == EntryPoint.CA && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee) || (this.claim.entryPoint == EntryPoint.Lwfc && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)) {\r\n                    this.isOnDeathofBeneficiaryOnRequestofNominee = true;\r\n                }\r\n                this.getBenBasicDetails(this.claim.benSno);\r\n                console.log(this.claim);\r\n                //  this.getUrlOfPdf();\r\n            });\r\n    }\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n            });\r\n    }\r\n    getBenBasicDetails(benNo: any) {\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsById(benNo)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n                console.log(this.beneficiary);\r\n            });\r\n    }\r\n    getData(claim: ClaimView) {\r\n        debugger;\r\n        this.getPackages();\r\n        this.claim = claim;\r\n        //if (this.claim.educationDetails != null) {\r\n        //    this.educationList = this.claim.educationDetails.educationDetailList;\r\n        //    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n        //        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n        //            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n        //                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n        //                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n        //                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n        //                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n        //                    }\r\n        //                    this.attachmentList.push(attachment);\r\n        //                }\r\n        //            }\r\n        //        }\r\n        //    }\r\n        //}\r\n        //if (this.claim.healthFamilyDetails != null) {\r\n        //    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n        //        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n        //        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n        //            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n        //        }\r\n        //        this.attachmentList.push(attachment);\r\n        //    }\r\n\r\n        //    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n        //        if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n        //    }\r\n        //    let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n        //    for (var i = 0; i < data.length; i++) {\r\n        //        this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n        //    }\r\n        //    this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n        //}\r\n        //if (this.claim.providentFundDetails != null) {\r\n        //    if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n        //        this.isPrematureClaim = true;\r\n        //    }\r\n        //}\r\n        //if (this.claim.deathDetails != null) {\r\n        //    for (var j = 0; j < this.claim.deathDetails.attachmentDTOList.length; j++) {\r\n        //        let attachment = this.claim.deathDetails.attachmentDTOList[j];\r\n        //        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n        //            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n        //        }\r\n        //        this.attachmentList.push(attachment);\r\n        //    }\r\n        //}\r\n        //if (this.claim.disabilityDetails != null) {\r\n        //    for (var j = 0; j < this.claim.disabilityDetails.attachmentDTOList.length; j++) {\r\n        //        let attachment = this.claim.disabilityDetails.attachmentDTOList[j];\r\n        //        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n        //            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n        //        }\r\n        //        this.attachmentList.push(attachment);\r\n        //    }\r\n        //}\r\n        //if (this.claim.attachment != null) {\r\n        //    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n        //        let attachment = this.claim.attachment[k];\r\n        //        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n        //            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n        //        }\r\n        //        this.claim.attachment[k] = attachment;\r\n        //         this.attachmentList.push(attachment);\r\n        //    }\r\n        //}\r\n        this.getBenBasicDetails(this.claim.benSno);\r\n        console.log(this.claim);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Forced Close </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"forcedClosedDateString\\\">Force Close Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText, submittedDateString: searchText, forcedClosedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{user.claimType}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.forcedClosedDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-foececlose',\r\n  templateUrl: './foececlose.component.html',\r\n  styleUrls: ['./foececlose.component.css']\r\n})\r\nexport class FoececloseComponent implements OnInit {\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"force\", chronologicalOrder: -1 }], { skipLocationChange: true });\r\n\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForcedClosed, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status, wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForcedClosed, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForcedClosed, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForcedClosed, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"widget-grid\\\">\\r\\n    <!--content-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Legacy Claim Entry</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <fieldset id=\\\"legacyEntry\\\">\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">SSIN <span [style.color]=\\\"!ssnNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"benSno\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"claim.ssinNumber\\\" placeholder=\\\"Enter SSIN\\\"\\r\\n                                                   NumbersOnly maxlength=\\\"50\\\"\\r\\n                                                   #benSno=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': benSno.invalid && (!ssnNoValid || benSno.touched), 'valid-data': benSno.valid && ssnNoValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"benSno.invalid && (!ssnNoValid ||benSno.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">SSIN is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Date of Payment <span [style.color]=\\\"!dateofPaymentValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"date\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                       placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.claimDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                       [(ngModel)]=\\\"claim.claimDate\\\" readonly\\r\\n                                                       #date=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':date.invalid && (!dateofPaymentValid), 'valid-data': date.valid && dateofPaymentValid}\\\"\\r\\n                                                       required>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"date.invalid && (!dateofPaymentValid)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Date of Payment is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Category <span [style.color]=\\\"!categoryValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <select class=\\\"form-control select\\\" name=\\\"category\\\" [(ngModel)]=\\\"claim.claimCategory\\\">\\r\\n                                                <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{category.lovDtlId}}\\\" *ngFor=\\\"let category of categoryLov\\\">{{category.optionName}}</option>\\r\\n                                                <!--<option value=\\\"1\\\">PF</option>\\r\\n                                                    <option value=\\\"2\\\">Health&Family</option>\\r\\n                                                    <option value=\\\"3\\\">DisabIlity</option>\\r\\n                                                    <option value=\\\"4\\\">Death</option>\\r\\n                                                    <option value=\\\"5\\\">Education</option>-->\\r\\n                                            </select>\\r\\n                                            <div *ngIf=\\\"!categoryValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Category is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Claim Amount Received <span [style.color]=\\\"!claimAmountValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" name=\\\"claimAmount\\\" placeholder=\\\"Claim Amount Received\\\" [(ngModel)]=\\\"claim.claimAmount\\\">\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!claimAmountValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Claim Amount Received is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Old Regd No. <span [style.color]=\\\"!oldRegdNoValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" name=\\\"oldRegdNo\\\" placeholder=\\\"Old Regd No.\\\" [(ngModel)]=\\\"claim.oldRegdNo\\\">\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!oldRegdNoValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Old Regd No is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Remarks: </label>\\r\\n                                            <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"remarks\\\" [(ngModel)]=\\\"claim.remarks\\\" placeholder=\\\"Remarks\\\"></textarea>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label class=\\\"label\\\">Status:</label>\\r\\n                                                    <select class=\\\"form-control\\\" name=\\\"status\\\" [(ngModel)]=\\\"claim.status\\\">\\r\\n                                                        <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                                        <option value=\\\"1\\\">Saved</option>\\r\\n                                                        <option value=\\\"2\\\">Submitted</option>\\r\\n                                                        <option value=\\\"3\\\">Sendback from Inspector</option>\\r\\n                                                        <option value=\\\"4\\\">Forwarded to ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Sendback from ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Reject from ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Approved by ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Forced Closed</option>\\r\\n                                                    </select>\\r\\n                                                </div>\\r\\n                                        </div>-->\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n                                       \\r\\n                                    </div>-->\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <form class=\\\"smart-form\\\">\\r\\n                <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                <footer>\\r\\n                    <a id=\\\"btnSava\\\" class=\\\"btn btn-success\\\" (click)=\\\"SaveLegacyClaim(claim)\\\"> Save </a>\\r\\n                    <a class=\\\"btn btn-danger\\\" (click)=\\\"CancelClick()\\\"> Cancel</a>\\r\\n                </footer>\\r\\n            </form>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, OnDestroy, ElementRef } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute, Data } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { LegacyClaims } from '../../models/LegacyClaims';\r\nimport { UserType, LovConstants } from '../../claim/pipes/constnts.model';\r\nimport { LovDetails } from '../../claim/models/Lov.model';\r\n\r\n@Component({\r\n  selector: 'app-inspector-legacy-claim-entry',\r\n  templateUrl: './inspector-legacy-claim-entry.component.html',\r\n  styleUrls: ['./inspector-legacy-claim-entry.component.css']\r\n})\r\nexport class InspectorLegacyClaimEntryComponent implements OnInit {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    datePickerConfig: any;\r\n    route$: Subscription;\r\n    claim: LegacyClaims = {} as LegacyClaims;\r\n    successMessage: string;\r\n    //isInspector: boolean = false;\r\n    ssnNoValid: boolean = true;\r\n    dateofPaymentValid: boolean = true;\r\n    categoryValid: boolean = true;\r\n    claimAmountValid: boolean = true;\r\n    oldRegdNoValid: boolean = true;\r\n    categoryLov: LovDetails[];\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: InspectorDataService, private userService: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.getCategories();\r\n    }\r\n    SaveLegacyClaim(claimData: LegacyClaims) {\r\n        debugger;\r\n        if (this.validate(claimData)) {\r\n            claimData.userId = this.userService.user.deptUserid;\r\n            \r\n            claimData.userType = Number(this.userService.user.userTpe);\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .saveLegacyClaimDetails(claimData)\r\n                    .then((data: any) => {\r\n\r\n                        if (data) {\r\n                            this.successMessage = \"Legacy claim successfully Saved\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        else\r\n            return;\r\n    }\r\n    validate(claimData: LegacyClaims) {\r\n        let isValid = true;\r\n       \r\n        if (claimData.ssinNumber == null || claimData.ssinNumber == undefined) { this.ssnNoValid = isValid = false }\r\n        if (claimData.claimDate == null || claimData.claimDate == undefined) { this.dateofPaymentValid = isValid = false }\r\n        if (claimData.claimCategory == 0 || claimData.claimCategory == undefined) { this.categoryValid = isValid = false }\r\n        if (claimData.claimAmount == null || claimData.claimAmount == undefined) { this.claimAmountValid = isValid = false }\r\n        if (claimData.oldRegdNo == null || claimData.oldRegdNo == undefined) { this.oldRegdNoValid = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n    CancelClick() {\r\n        debugger;\r\n            this.router.navigate(['inspector/inspectorlegacylist']);\r\n    }\r\n    okClick() {\r\n        debugger;\r\n        this.successModal.hide();\r\n        this.router.navigate(['inspector/inspectorlegacylist']);\r\n        \r\n        \r\n    }\r\n    getCategories() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.LegacyClaimCategory)\r\n            .subscribe((data: any) => {\r\n                this.categoryLov = data;\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Legacy Claim Status </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"legacyClaimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssinNumber\\\">SSIN No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"oldRegdNo\\\">Old Regd No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Refernce No.</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimDateString\\\">Claim Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Claim Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Satus</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimCategoryName\\\">Claim Catagory</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {ssinNumber: searchText,oldRegdNo: searchText,claimDateString:searchText,claimAmount:searchText,claimCategoryName:searchText\\r\\n                                    }; let i=index;\\\">\\r\\n                                    <!--<td class=\\\"\\\">\\r\\n                                    <a (click)=\\\"onreviewClick(data)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                                                </td>-->\\r\\n                                    <td>{{data.ssinNumber}}</td>\\r\\n                                    <td>{{data.oldRegdNo}}</td>\\r\\n                                    <!--<td>{{data.claimRefernceNo}}</td>-->\\r\\n                                    <td>{{data.claimDateString}}</td>\\r\\n                                    <td>{{data.claimAmount}}</td>\\r\\n                                    <!--<td>{{data.statusName}}</td>-->\\r\\n                                    <td>{{data.claimCategoryName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, pagination } from '../../claim/pipes/constnts.model';\r\nimport { LegacyClaims } from '../../models/LegacyClaims';\r\nimport { UserType } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-inspector-legacy-list',\r\n  templateUrl: './inspector-legacy-list.component.html',\r\n  styleUrls: ['./inspector-legacy-list.component.css']\r\n})\r\nexport class InspectorLegacyListComponent implements OnInit {\r\n\r\n    legacyClaimsData: LegacyClaims[];\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getLegacyClaimsList(this.userService.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n    getLegacyClaimsList(id: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getLegacyClaimsList(id, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.legacyClaimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onreviewClick(item: any) {\r\n        debugger;\r\n        // this.router.navigate(['alc/reviewpaymentprocess', { paymentProcessId: item.paymentProcessingID, mode: \"view\", statusId: item.statusId }], { skipLocationChange: true });\r\n    }\r\n    changepage(page) {\r\n        this.getLegacyClaimsList(this.userService.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InspectorlandingComponent } from './inspectorlanding.component';\r\nimport { PendingApprovalClaimsComponent } from './pending-approval-claims/pending-approval-claims.component';\r\nimport { ApprovalClaimsComponent } from './approval-claims/approval-claims.component';\r\nimport { RejectClaimsComponent } from './reject-claims/reject-claims.component';\r\nimport { SendbackClaimsComponent } from './sendback-claims/sendback-claims.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InspectorDataService } from './services/inspector-data.service';\r\nimport { DataTableModule } from \"angular-6-datatable\";\r\nimport { GrdFilterPipe } from '../claim/pipes/grd-filter.pipe';\r\nimport { ReviewclaimsComponent } from './reviewclaims/reviewclaims.component';\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\r\nimport { FoececloseComponent } from './foececlose/foececlose.component';\r\nimport { TimetrackComponent } from './timetrack/timetrack.component';\r\nimport { ClaimviewdataComponent } from './claimviewdata/claimviewdata.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ClaimStatusComponent } from './claim-status/claim-status.component';\r\nimport { ModalModule, AccordionModule,BsDatepickerModule } from \"ngx-bootstrap\";\r\nimport { InspectorLegacyListComponent } from './inspector-legacy-list/inspector-legacy-list.component';\r\nimport { InspectorLegacyClaimEntryComponent } from './inspector-legacy-claim-entry/inspector-legacy-claim-entry.component';\r\nimport { SearchStudentComponent } from './search-student/search-student.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: InspectorlandingComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'pendingapprovalclaims', pathMatch: 'full' },\r\n            { path: 'pendingapprovalclaims', component: PendingApprovalClaimsComponent },\r\n            { path: 'approvalclaims', component: ApprovalClaimsComponent },\r\n            { path: 'rejectclaims', component: RejectClaimsComponent },\r\n            { path: 'sendbackclaims', component: SendbackClaimsComponent },\r\n            { path: 'reviewclaims', component: ReviewclaimsComponent },\r\n            { path: 'forcecloseclaims', component: FoececloseComponent },\r\n            { path: 'forcecloseclaims', component: FoececloseComponent },\r\n            { path: 'claimtrack', component: TimetrackComponent },\r\n            { path: 'claimstatus', component: ClaimStatusComponent },\r\n            { path: 'reviewclaims/:claimId/:/claimType/:tranctionId', component: ReviewclaimsComponent },\r\n            { path: 'inspectorlegacylist', component: InspectorLegacyListComponent },\r\n            { path: 'inspectorlegacyclaimentry', component: InspectorLegacyClaimEntryComponent },\r\n            { path: 'searchstudent', component: SearchStudentComponent },\r\n\r\n        ]\r\n    },\r\n];\r\n@NgModule({\r\n  imports: [\r\n      CommonModule, FormsModule, ModalModule, AccordionModule, ReactiveFormsModule, PdfViewerModule, DataTableModule, RouterModule.forChild(routes), NgbModule, BsDatepickerModule.forRoot()\r\n    ],\r\n    providers: [InspectorDataService],\r\n\r\n    declarations: [InspectorlandingComponent, GrdFilterPipe, PendingApprovalClaimsComponent, ApprovalClaimsComponent, RejectClaimsComponent, SendbackClaimsComponent, ReviewclaimsComponent, FoececloseComponent, TimetrackComponent, ClaimviewdataComponent, ClaimStatusComponent, InspectorLegacyListComponent, InspectorLegacyClaimEntryComponent, SearchStudentComponent]\r\n})\r\nexport class InspectorModule { }\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inspectorlanding',\r\n  templateUrl: './inspectorlanding.component.html',\r\n  styleUrls: ['./inspectorlanding.component.css']\r\n})\r\nexport class InspectorlandingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Pending  </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText,submittedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <!--*ngIf=\\\"user.isEdit\\\"-->\\r\\n                                        <a (click)=\\\"onreviewClick(user, i)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                        <!--<a *ngIf=\\\"!user.isEdit\\\" (click)=\\\"onViewClick(user, i)\\\"  title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-minus-square-o\\\"></i></a>-->\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\nimport { UserService } from '../../UserService';\r\n\r\n@Component({\r\n  selector: 'app-pending-approval-claims',\r\n  templateUrl: './pending-approval-claims.component.html',\r\n  styleUrls: ['./pending-approval-claims.component.css']\r\n})\r\nexport class PendingApprovalClaimsComponent implements OnInit {\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n   // status: any = {};\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any, index: any) {\r\n        debugger;\r\n        this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"pending\", workflowId: WorkflowTrans.workflow, claimAmount: item.claimAmount, chronologicalOrder: index }], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['inspector/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"pending\",workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    //onViewClick(item: any, index: any) {\r\n    //    this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"view\", workflowId: WorkflowTrans.workflow, claimAmount: item.claimAmount, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n    //}\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n       // this.status = [ClaimStatus.Submitted, ClaimStatus.SendbackfromALC];\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.Submitted, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status,wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.Submitted, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.Submitted, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.Submitted, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n      \r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Rejected </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rejectedDate\\\">Rejected Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText,submittedDateString: searchText, rejectedDate: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.rejectedDate}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-reject-claims',\r\n  templateUrl: './reject-claims.component.html',\r\n  styleUrls: ['./reject-claims.component.css']\r\n})\r\nexport class RejectClaimsComponent implements OnInit {\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"reject\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['inspector/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"reject\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any,wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status,wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Claim View</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div style=\\\"text-align:right\\\" *ngIf=\\\"enableSearchStudentLink\\\">\\r\\n                        <a (click)=\\\"searchLinkClick()\\\" class=\\\"smart-form-link\\\">Search Student</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <div *ngIf=\\\"isVisibleClaimExceptions\\\">\\r\\n                                <header>Exceptions</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <!--<ul ><li ng-repeat=\\\"exception in claimExceptionDetailsList\\\">{{exception.exceptionText}}</li></ul>-->\\r\\n                                        <div [innerHTML]=\\\"claimExceptionDetails\\\"></div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                            <header>Beneficiary Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Name: </strong>{{beneficiary?.benFullName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>SSIN: </strong>{{beneficiary?.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Bank Name: </strong>{{beneficiary?.benBankName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Account No: </strong>{{beneficiary?.benBankAccNo}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>IFSC Code: </strong>{{beneficiary?.benBankIfscCode}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Branch: </strong>{{beneficiary?.benBankBranch}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"isOnDeathofBeneficiaryOnRequestofNominee\\\">\\r\\n                                <header>Nominee Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Name: </strong>{{claim?.nomineeName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Address: </strong>{{claim?.nomineeAddress}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Birth: </strong>{{claim?.nomineeDOBString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Contact Number: </strong>{{claim?.nomineeContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Bank Account No: </strong>{{claim?.nomineeBankAccount}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>IFSC Code: </strong>{{claim?.nomineeIFSCCode}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <fieldset disabled=\\\"true\\\">\\r\\n                                <div class=\\\"row\\\" id=\\\"CheckBoxList\\\">\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"PF\\\" [checked]=\\\"claim.providentFundDetails != null\\\"><i></i>PF(Provident Fund)</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Health & Family\\\" [checked]=\\\"claim.healthFamilyDetails != null\\\"><i></i>Health & Family</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Death\\\" [checked]=\\\"claim.deathDetails != null\\\"><i></i>Death</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Disability\\\" [checked]=\\\"claim.disabilityDetails != null\\\"><i></i>Disability</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Education\\\" [checked]=\\\"claim.educationDetails != null\\\"><i></i>Education</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> PF No.: </strong>{{claim.providentFundDetails.pfno}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Claim Amount:</strong> {{claim.providentFundDetails.claimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Date of Maturity:</strong> {{claim.providentFundDetails.maturityDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Locking Period Up-to:</strong> {{claim.providentFundDetails.lockingPeriodDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Type of Claim:</strong> {{claim.providentFundDetails.typeOfClaimName}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Reason for Preclosure:</strong>  {{claim.providentFundDetails.reasonForPreClosure}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>PF Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                <header>Education</header>\\r\\n\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.educationDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Dependent Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section *ngFor=\\\"let detail of educationList\\\">\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Student: </strong>{{detail?.dependentName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Name of the Institution: </strong> {{detail?.institutionName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Principal/Head Master of the institution:</strong>{{detail?.institutionPrinicipleName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Contact Number of the Institution: </strong>{{detail?.institutionContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Registration No./Roll No. of last exam passed: </strong>{{detail?.registrationRollNo}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Year of Examination: </strong>{{detail?.year}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission: </strong>{{detail?.dateofAdmissionString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Last Exam Passed: </strong>{{detail?.lastExamPassedName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Presently Reading: </strong>{{detail?.presentlyReadingName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Eligible Amount :</strong>{{detail?.eligibleAmount}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Educational Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.healthFamilyDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Health & Family Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Type of Claim: </strong>{{claim?.healthFamilyDetails?.typeOfClaimName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Hospital : </strong> {{claim?.healthFamilyDetails?.hospitalName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Hospitalization/OPD:</strong>{{claim?.healthFamilyDetails?.typeOfHospitalizationName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Patient Id: </strong>{{claim?.healthFamilyDetails?.patientId}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of Disease: </strong>{{claim?.healthFamilyDetails?.nameOfTheDiseaseString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.nameOfTheDisease==56\\\">\\r\\n                                                <label><strong> Name of clinical test: </strong>{{claim?.healthFamilyDetails?.nameOfClinicalTestString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Met with an Accident:</strong>{{claim?.healthFamilyDetails?.isAccident}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Clinical Test: </strong>{{claim?.healthFamilyDetails?.costOfClinicalTest}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Medicine: </strong>{{claim?.healthFamilyDetails?.costOfMedicine}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of First Appointment: </strong>{{claim?.healthFamilyDetails?.firstAppointmentDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Claim for: </strong>{{claim?.healthFamilyDetails?.claimForName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                                <label><strong> Cost of Hospitalization: </strong>{{claim?.healthFamilyDetails?.costOfHospitalization}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission to Hospital: </strong>{{claim?.healthFamilyDetails?.admittedDateString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Discharge :</strong>{{claim?.healthFamilyDetails?.dischargeDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.familyMemberId != undefined && claim?.healthFamilyDetails?.familyMemberId !=0\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Family Member Name: </strong>{{claim?.healthFamilyDetails?.familyMemberName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.reasonForDelaySubmission != undefined || claim?.healthFamilyDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.healthFamilyDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <div *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalizationName!='OPD'\\\">\\r\\n                                    <header>Loss of Employment</header>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> From Date: </strong>{{claim?.healthFamilyDetails?.loeFromDateString}}</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>To Date :</strong>{{claim?.healthFamilyDetails?.loeToDateString}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> Amount: </strong>{{claim?.healthFamilyDetails?.loeAmount}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n                                <header>Health & Family Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>View Packages</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                        <td>{{pak.packageName}}</td>\\r\\n                                                        <td>{{pak.packageCode}}</td>\\r\\n                                                        <td>{{pak.ailmentName}}</td>\\r\\n                                                        <td>{{pak.amount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.disabilityDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Disability Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of release from hospital/Accident: </strong>{{claim?.disabilityDetails?.dateofReleaseString}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Disability : </strong> {{claim?.disabilityDetails?.natureOfDisabilityName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Disability: </strong>{{claim?.disabilityDetails?.detailsOfDisability}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.disabilityDetails?.reasonForDelaySubmission != undefined || claim?.disabilityDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                                <label><strong>Reason for Delay Submission: </strong>{{claim?.disabilityDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Disability Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                <header>Death</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.deathDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Death Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Death : </strong> {{claim?.deathDetails?.natureofDeathName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Death: </strong>{{claim?.deathDetails?.dateofDeathString}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Death: </strong>{{claim?.deathDetails?.detailsofDeath}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Place of Death: </strong>{{claim?.deathDetails?.placeofDeath}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Death Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <header>Time Line</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <!-- row -->\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" style=\\\"width:98%\\\">\\r\\n                                            <div class=\\\"well well-sm\\\">\\r\\n                                                <div class=\\\"smart-timeline\\\">\\r\\n                                                    <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                        <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                            <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                                <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-time\\\">\\r\\n                                                                <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-content\\\">\\r\\n                                                                <p>\\r\\n                                                                    <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                                </p>\\r\\n                                                                <p>\\r\\n                                                                    {{item.actionComments}}\\r\\n                                                                </p>\\r\\n                                                            </div>\\r\\n                                                        </li>\\r\\n\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"isShowClaimsHistory\\\">\\r\\n                                <header>Claims History</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewHistory()\\\" class=\\\"smart-form-link\\\">View Claims History</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isMapForcedClaim\\\">\\r\\n                                <header>Forced Closed Claims</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <!--<div class=\\\"col col-6\\\">-->\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"forcedClaimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><input type=\\\"checkbox\\\" name=\\\"selectedAll\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>\\r\\n                                                        <th>\\r\\n                                                            Claim Reference No.\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Submission Date\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Claim Amount\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Approved Amount\\r\\n\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Status\\r\\n                                                        </th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let forcedClaim of mf.data; let i=index;\\\">\\r\\n                                                        <td class=\\\"\\\">\\r\\n                                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"forcedClaim.selected\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"checkIfAllSelected();\\\">\\r\\n                                                        </td>\\r\\n                                                        <td>{{forcedClaim.claimRefernceNo}}</td>\\r\\n                                                        <td>{{forcedClaim.submittedDateString}}</td>\\r\\n                                                        <td>{{forcedClaim.claimAmount}}</td>\\r\\n                                                        <td>{{forcedClaim.approvedAmount}}</td>\\r\\n                                                        <td>{{forcedClaim.statusName}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot>\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"6\\\">\\r\\n                                                            <!--<div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                                <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            </div>-->\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tfoot>\\r\\n                                            </table>\\r\\n                                            <!--</div>-->\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!forcedClaimsDataSelected\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Map at least one forced closed claim </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <!--(March-15-2019 ) committed this code based on suman/client request-->\\r\\n                            <!--<div *ngIf=\\\"isInvalidNominee\\\">\\r\\n                <header>Nominee Details</header>\\r\\n                <fieldset>\\r\\n                    <section>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <a class=\\\"btn btn-primary\\\" (click)=\\\"openModel()\\\" style=\\\"width :55px;height:30px;padding:5px;\\\" button> Add </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <table class=\\\"table table-striped\\\" [mfData]=\\\"benficiaryNominee\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th></th>\\r\\n                                        <th>\\r\\n                                            Name\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Relationship with applicant\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Gender\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            DOB\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Age (Years)\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Share Allocation\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Bank Name\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Bank Account No.\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Branch Name\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            IFSC Code\\r\\n                                        </th>\\r\\n                                        <th></th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngIf=\\\"benficiaryNominee.length==0\\\"><td colspan=\\\"11\\\">No nominee details</td></tr>\\r\\n                                    <tr *ngFor=\\\"let nomi of mf.data; let i=index;\\\">\\r\\n                                        <td class=\\\"\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"nomi.selected\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"mappingNominee(nomi);\\\">\\r\\n                                        </td>\\r\\n                                        <td>{{nomi.benNomineeName}}</td>\\r\\n                                        <td>{{nomi.benNomineeRelation}}</td>\\r\\n                                        <td>{{nomi.benNomineeGender}}</td>\\r\\n                                        <td>{{nomi.dob | date: 'dd/MM/yyyy'}}</td>\\r\\n                                        <td>{{nomi.benNomineeAge}}</td>\\r\\n                                        <td>{{nomi.benNomineeShareAllocation}}</td>\\r\\n                                        <td>{{nomi.benNomineeBankName}}</td>\\r\\n                                        <td>{{nomi.benNomineeBankAccNo}}</td>\\r\\n                                        <td>{{nomi.benNomineeBankBranch}}</td>\\r\\n                                        <td>{{nomi.benNomineeBankIfscCode}}</td>\\r\\n                                        <td>\\r\\n                                            <a class=\\\"btn btn-labeled btn-primary\\\" (click)=\\\"editNomineeDetails(nomi)\\\" style=\\\"margin-right:5px;\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i> Edit</a>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                                <tfoot>\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"11\\\"></td>\\r\\n                                    </tr>\\r\\n                                </tfoot>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </section>\\r\\n                </fieldset>\\r\\n            </div>-->\\r\\n                            <div>\\r\\n                                <header>Dependency Section</header>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label *ngIf=\\\"isvisable\\\">\\r\\n                                        <input type=\\\"checkbox\\\"\\r\\n                                               name=\\\"OptionsHead\\\"\\r\\n                                               [(ngModel)]=\\\"isOptionHead\\\" />\\r\\n                                        Hard copy is awaited from beneficiary\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <header>Hardcopy Received</header>\\r\\n                                <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <!--<label *ngIf=\\\"isvisable\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   name=\\\"pfOptionsHead\\\"\\r\\n                                   [(ngModel)]=\\\"isPFOptionHead\\\" />\\r\\n                            Hard copy is awaited from beneficiary\\r\\n                        </label>-->\\r\\n                                        <div *ngFor=\\\"let pf of pfCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\"\\r\\n                                                       name=\\\"pfOptions\\\" [disabled]=\\\"!isvisable\\\"\\r\\n                                                       value=\\\"{{pf.checkListDtlId}}\\\"\\r\\n                                                       [checked]=\\\"pf.checked\\\" (change)=\\\"pfCheckedListChange($event, pf.checkListDtlId)\\\" />\\r\\n                                                {{pf.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <!--<label *ngIf=\\\"isvisable\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   name=\\\"eduOptionsHead\\\"\\r\\n                                   [(ngModel)]=\\\"isEduOptionHead\\\" />\\r\\n                            Hard copy is awaited from beneficiary\\r\\n                        </label>-->\\r\\n                                        <div *ngFor=\\\"let edu of educationCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\"\\r\\n                                                       name=\\\"eduOptions\\\" [disabled]=\\\"!isvisable\\\"\\r\\n                                                       value=\\\"{{edu.checkListDtlId}}\\\"\\r\\n                                                       [checked]=\\\"edu.checked\\\" (change)=\\\"educationCheckedListChange($event, edu.checkListDtlId)\\\" />\\r\\n                                                {{edu.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <!--<label *ngIf=\\\"isvisable\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   name=\\\"healthOptionsHead\\\"\\r\\n                                   [(ngModel)]=\\\"isHealthOptionHead\\\" />\\r\\n                            Hard copy is awaited from beneficiary\\r\\n                        </label>-->\\r\\n                                        <div *ngFor=\\\"let health of healthCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\"\\r\\n                                                       name=\\\"healthOptions\\\" [disabled]=\\\"!isvisable\\\"\\r\\n                                                       value=\\\"{{health.checkListDtlId}}\\\"\\r\\n                                                       [checked]=\\\"health.checked\\\" (change)=\\\"healthCheckedListChange($event, health.checkListDtlId)\\\" />\\r\\n                                                {{health.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <!--<label *ngIf=\\\"isvisable\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   name=\\\"disOptionsHead\\\"\\r\\n                                   [(ngModel)]=\\\"isDisOptionHead\\\" />\\r\\n                            Hard copy is awaited from beneficiary\\r\\n                        </label>-->\\r\\n                                        <div *ngFor=\\\"let dis of disabilityCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"disOptions\\\" value=\\\"{{dis.checkListDtlId}}\\\" [disabled]=\\\"!isvisable\\\" [checked]=\\\"dis.checked\\\" (change)=\\\"disabilityCheckedListChange($event, dis.checkListDtlId)\\\" />\\r\\n                                                {{dis.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <!--<label *ngIf=\\\"isvisable\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   name=\\\"deathOptionsHead\\\"\\r\\n                                   [(ngModel)]=\\\"isDeathOptionHead\\\" />\\r\\n                            Hard copy is awaited from beneficiary\\r\\n                        </label>-->\\r\\n                                        <div *ngFor=\\\"let death of deathCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\"\\r\\n                                                       name=\\\"deathOptions\\\" [disabled]=\\\"!isvisable\\\" [checked]=\\\"death.checked\\\" (change)=\\\"deathCheckedListChange($event, death.checkListDtlId)\\\"\\r\\n                                                       value=\\\"{{death.checkListDtlId}}\\\" />\\r\\n                                                {{death.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <fieldset>\\r\\n\\r\\n                                <section>\\r\\n                                    <label>Approved Amount<span [style.color]=\\\"!approvedAmountValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <input type=\\\"number\\\" name=\\\"approvedAmount\\\" [(ngModel)]=\\\"review.approvedAmount\\\" [disabled]=\\\"!isApprovedAmountDisable\\\" placeholder=\\\"Approved Amount\\\">\\r\\n                                    </label>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <label>Inspector Comments<span [style.color]=\\\"!inspectorCommentsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"inspectorComments\\\" [disabled]=\\\"!isvisable\\\" [(ngModel)]=\\\"review.inspectorComments\\\"\\r\\n                                                  #inspectorComments=\\\"ngModel\\\"\\r\\n                                                  [ngClass]=\\\"{'invalid-data': inspectorComments.invalid && (!inspectorCommentsValid || inspectorComments.touched), 'valid-data': inspectorComments.valid && inspectorCommentsValid}\\\"\\r\\n                                                  required></textarea>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"inspectorComments.invalid && (!inspectorCommentsValid ||inspectorComments.touched)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">Inspector Comments is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <label>Exception Comments</label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"exceptionComments\\\" [disabled]=\\\"!isvisable\\\" [(ngModel)]=\\\"review.exceptionComments\\\"></textarea>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset *ngIf=\\\"isCOExceptionCommentsReq\\\">\\r\\n                                <section>\\r\\n                                    <label>Chronological Order Exception Comments <span [style.color]=\\\"!coexceptionCommentsValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"chronologicOrderExceptionComments\\\" [disabled]=\\\"!isvisable\\\" [(ngModel)]=\\\"review.inspChronologicalOrderComments\\\"\\r\\n                                                  #chronologicOrderExceptionComments=\\\"ngModel\\\"\\r\\n                                                  [ngClass]=\\\"{'invalid-data': chronologicOrderExceptionComments.invalid && (!coexceptionCommentsValid || chronologicOrderExceptionComments.touched), 'valid-data': chronologicOrderExceptionComments.valid && coexceptionCommentsValid}\\\"\\r\\n                                                  required></textarea>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"chronologicOrderExceptionComments.invalid && (!coexceptionCommentsValid ||chronologicOrderExceptionComments.touched)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">Chronological Order Exception Comments is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"forcedCloseClick(1)\\\" [disabled]=\\\"isDeathBenDisable\\\" *ngIf=\\\"isvisable\\\">\\r\\n                                    Forced Close\\r\\n                                </button>\\r\\n                                <!--<a class=\\\"btn btn-warning\\\" (click)=\\\"forcedCloseClick()\\\" [disabled]=\\\"isDeathBenDisable\\\" *ngIf=\\\"isvisable\\\">Forced Close</a>-->\\r\\n                                <a class=\\\"btn btn-success\\\" (click)=\\\"saveClaim(4,0,'Forward')\\\" *ngIf=\\\"isvisable\\\">Forward</a>\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"saveClaim(3,1,'send back')\\\" *ngIf=\\\"isvisable && showSendBack\\\"> Send Back</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Attachment Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <app-claimviewdata [claimId]=\\\"claimId\\\" [claimType]=\\\"claimType\\\" [transactionId]=\\\"tranctionId\\\"></app-claimviewdata>\\r\\n                    </div>\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px;min-height:inherit\\\">\\r\\n                        <accordion>\\r\\n                            <accordion-group heading=\\\"{{item.attachmentTypeString}}\\\" *ngFor=\\\"let item of attachmentList\\\">\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]!='pdf'\\\">\\r\\n                                    <img [src]=\\\"'data:image/'+item.fileName.split('.')[item.fileName.split('.').length-1]+';base64,'+ item.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]=='pdf'\\\">\\r\\n                                    <object [attr.data]=\\\"item.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                                </div>\\r\\n                            </accordion-group>\\r\\n                        </accordion>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #historyModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"historyModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Claims History</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div>\\r\\n                    <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsHistoryData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    Claim Reference No.\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Submission Date\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Amount\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Approved Amount\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Status\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Submitted By\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of mf.data; let i=index;\\\">\\r\\n                                <td><a (click)=\\\"viewClaimInfo(user)\\\">{{user.claimRefernceNo}}</a> </td>\\r\\n                                <!--<td>{{user.claimRefernceNo}}</td>-->\\r\\n                                <td>{{user.submittedDateString}}</td>\\r\\n                                <td>{{user.claimAmount}}</td>\\r\\n                                <td>{{user.approvedAmount}}</td>\\r\\n                                <td>{{user.statusName}}</td>\\r\\n                                <td>{{user.submittedByName}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"6\\\"></td>\\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"historyModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"lgModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">{{typeOfMode}} Nominee Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divAddNomineeDetails\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Name <span [style.color]=\\\"!nomineeNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeName\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Name\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeName\\\" maxlength=\\\"100\\\"\\r\\n                                       #nomineeName=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !nomineeNameValid , 'valid-data':nomineeNameValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeNameValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Name is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Relationship with applicant <span [style.color]=\\\"!relationshipValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select class=\\\"form-control select\\\" name=\\\"dependentId\\\" [(ngModel)]=\\\"benNomineenDetails.relationshipID\\\"\\r\\n                                        #dependentId=\\\"ngModel\\\" (change)=\\\"selectRelationship($event,benNomineenDetails)\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': !relationshipValid, 'valid-data': relationshipValid }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose an option</option>\\r\\n                                    <option value=\\\"1\\\">Father</option>\\r\\n                                    <option value=\\\"2\\\">Mother</option>\\r\\n                                    <option value=\\\"3\\\">Spouse</option>\\r\\n                                    <option value=\\\"4\\\">Son</option>\\r\\n                                    <option value=\\\"5\\\">Daughter</option>\\r\\n                                </select>\\r\\n                                <div *ngIf=\\\"!relationshipValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Relationship with applicant is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Gender <span [style.color]=\\\"!genderValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select class=\\\"form-control select\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeGender\\\"\\r\\n                                        #genderId=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': !genderValid ,  'valid-data': genderValid  }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose an option</option>\\r\\n                                    <option value=\\\"Male\\\">Male</option>\\r\\n                                    <option value=\\\"Female\\\">Female</option>\\r\\n                                </select>\\r\\n                                <div *ngIf=\\\"!genderValid \\\">\\r\\n                                    <span style=\\\"color: red;\\\">Gender is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Date of Birth <span [style.color]=\\\"!nomineeDOBValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeDOB\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\" benNomineenDetails.dob\\\" #nomineeDOB=\\\"ngModel\\\" [maxDate]=\\\"maxDate\\\"\\r\\n                                       value=\\\"{{ benNomineenDetails.dob | date: 'dd/MM/yyyy' }}\\\" readonly\\r\\n                                       [ngClass]=\\\"{'invalid-data':!nomineeDOBValid, 'valid-data': nomineeDOBValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeDOBValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Date of Birth is required </span>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Share Allocation  <span [style.color]=\\\"!nomineeShareValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"number\\\" name=\\\"nomineeShare\\\" class=\\\"form-control\\\" placeholder=\\\"Share Allocation\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeShareAllocation\\\" maxlength=\\\"3\\\" max=\\\"100\\\" min=\\\"1\\\"\\r\\n                                       #nomineeShare=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !nomineeShareValid , 'valid-data': nomineeShareValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeShareValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Share Allocation is required </span>\\r\\n                                </div>\\r\\n                                <!--<div *ngIf=\\\"nomineeShare.errors.min && nomineeShare.errors.max\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Invalid Share Allocation </span>\\r\\n                                </div>-->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Bank Name <span [style.color]=\\\"!nomineeBankNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeBankName\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Bank Name\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankName\\\"\\r\\n                                       #nomineeBankName=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': !nomineeBankNameValid, 'valid-data':nomineeBankNameValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeBankNameValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Bank Name is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Bank Account <span [style.color]=\\\"!nomineeBankAccountValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeBankAccount\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Bank Account \\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankAccNo\\\"\\r\\n                                       minlength=\\\"9\\\" maxlength=\\\"18\\\" NumbersOnly #nomineeBankAccount=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !nomineeBankAccountValid, 'valid-data': nomineeBankAccountValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeBankAccountValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Bank Account is required </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"nomineeBankAccount.invalid && (nomineeBankAccount.errors.minlength)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Invalid Bank Account Number </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Branch Name <span [style.color]=\\\"!nomineeBranchNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeBankBranch\\\" class=\\\"form-control\\\" placeholder=\\\"Branch Name\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankBranch\\\"\\r\\n                                       #nomineeBankBranch=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': !nomineeBranchNameValid , 'valid-data': nomineeBranchNameValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeBranchNameValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Branch Name is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">IFSC Code <span [style.color]=\\\"!nomineeIFSCCodeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeIFSCCode\\\" class=\\\"form-control\\\" placeholder=\\\"IFSC Code\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankIfscCode\\\"\\r\\n                                       maxlength=\\\"11\\\" #nomineeIFSCCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':!nomineeIFSCCodeValid, 'valid-data': nomineeIFSCCodeValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeIFSCCodeValid \\\">\\r\\n                                    <span style=\\\"color: red;\\\">IFSC Code is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--<div class=\\\"col col-6\\\">\\r\\n\\r\\n                        </div>-->\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"lgModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addNomineeDetails(benNomineenDetails)\\\">\\r\\n                    {{typeOfMode}}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #claimModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"claimModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Claim Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:100%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <app-claimviewdata #child [claimId]=\\\"claimId1\\\" [claimType]=\\\"claimType1\\\" [transactionId]=\\\"tranctionId1\\\"></app-claimviewdata>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"claimModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #confirmForcedCloseModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Confirmation Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">Are you sure to Forced Close (confirmation for death of beneficiary)? </p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveClaim(16,1,'force close')\\\">\\r\\n                   Yes\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"noClick()\\\">\\r\\n                    No\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #searchStudentModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"searchStudentModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Search Student</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:520px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:100%;padding:5px;overflow:scroll;max-height:480px\\\">\\r\\n                        <app-search-student></app-search-student>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"searchStudentModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { ClaimDataService } from '../../claim/services/claim-data.service';\r\nimport { ClaimView } from '../../claim/models/claimview.model';\r\nimport { EducationHdrModel, EducationDetailModel } from '../../claim/models/education.model';\r\nimport { Beneficiary } from '../../claim/models/ben.model';\r\nimport { ClaimConstants, WorkflowTrans, EntryPoint, PFTypeOfClaim, pagination, ClaimCheckList, ReasonForApplyAgent } from '../../claim/pipes/constnts.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ReviewModel } from '../../models/review.model';\r\nimport { ModalDirective, BsDatepickerConfig } from \"ngx-bootstrap\";\r\nimport { UserService } from '../../UserService';\r\nimport { AttachmentModel } from '../../claim/models/attachment.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\nimport { ClaimExceptionDetailsModel } from '../../models/claimExceptionDetails';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { FlatTreeNode } from 'typescript-collections/dist/lib/MultiRootTree';\r\nimport { BenNominee } from '../../claim/models/ben.nominee.model';\r\nimport { DATE } from 'ngx-bootstrap/chronos/units/constants';\r\nimport { DatepickerOptions } from 'ng2-datepicker';\r\nimport { parse } from 'cfb/types';\r\nimport { CheckListDetails } from '../../models/CheckListDetails';\r\nimport { ClaimCheckListDetailsModel } from '../../models/ClaimCheckListDetails';\r\nimport { ClaimviewdataComponent } from '../claimviewdata/claimviewdata.component';\r\n@Component({\r\n    selector: 'app-reviewclaims',\r\n    templateUrl: './reviewclaims.component.html',\r\n    styleUrls: ['./reviewclaims.component.css']\r\n})\r\nexport class ReviewclaimsComponent implements OnInit, OnDestroy {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('attachModal') public attachModel: ModalDirective;\r\n    @ViewChild('historyModal') public historyModal: ModalDirective;\r\n    @ViewChild('lgModal') public lgModal: ModalDirective;\r\n    @ViewChild('claimModal') public claimModal: ModalDirective;\r\n    @ViewChild('child') private child: ClaimviewdataComponent;\r\n    @ViewChild('confirmForcedCloseModal') public confirmForcedCloseModal: ModalDirective;\r\n    @ViewChild('searchStudentModal') public searchStudentModal: ModalDirective;\r\n\r\n    public claimsHistoryData: Claims[] = [];\r\n    public forcedClaimsData: Claims[] = [];\r\n    private route$: Subscription;\r\n    private claimId: number;\r\n    private claimType: number;\r\n    private tranctionId: any;\r\n    private workflowId: any;\r\n    claim: ClaimView = {} as ClaimView;\r\n    claim1: ClaimView = {} as ClaimView;\r\n    private claimId1: number;\r\n    private claimType1: number;\r\n    private tranctionId1: any;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    mode: string;\r\n    successMessage: string;\r\n    showSendBack: boolean = true;\r\n    approvedAmountValid: boolean = true;\r\n    inspectorCommentsValid: boolean = true;\r\n    review: ReviewModel = {} as ReviewModel;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    isvisable: boolean = true;\r\n    isApprovedAmountDisable: boolean = true;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    viewMetWithAnAccident: boolean = false;\r\n    claimExceptionDetails: string = \"\";\r\n    isVisibleClaimExceptions: boolean = false;\r\n    claimAmount: any = 0;\r\n    expection: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    isPrematureClaim: boolean = false;\r\n    benMaturityDate: Date;\r\n    isShowClaimsHistory: boolean = false;\r\n    isMapForcedClaim: boolean = false;\r\n    selectedAll: boolean = false;\r\n    forcedClaimsDataSelected: boolean = true;\r\n    forcedCloseClaims: Array<number> = [];\r\n    allForcedCloseClaims: Array<number> = [];\r\n    // isInvalidNominee: boolean = false;\r\n    benficiaryNominee: Array<BenNominee> = [];\r\n    benNomineenDetails: BenNominee = {} as BenNominee;\r\n    maxDate: any;\r\n    //datePickerConfig: any;\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    //Validation Nominee variables\r\n    nomineeNameValid: boolean = true;\r\n    relationshipValid: boolean = true;\r\n    genderValid: boolean = true;\r\n    nomineeDOBValid: boolean = true;\r\n    nomineeShareValid: boolean = true;\r\n    nomineeBankNameValid: boolean = true;\r\n    nomineeBankAccountValid: boolean = true;\r\n    nomineeBranchNameValid: boolean = true;\r\n    nomineeIFSCCodeValid: boolean = true;\r\n    rowIndex = -1;\r\n    dobNominee: any;\r\n    typeOfMode: string;\r\n    healthCheckList: CheckListDetails[];\r\n    pfCheckList: CheckListDetails[];\r\n    deathCheckList: CheckListDetails[];\r\n    disabilityCheckList: CheckListDetails[];\r\n    educationCheckList: CheckListDetails[];\r\n    checkList: ClaimCheckListDetailsModel[] = [] as ClaimCheckListDetailsModel[];\r\n    isOnDeathofBeneficiaryOnRequestofNominee: boolean = false;\r\n    chronologicalOrder: number = 0;\r\n    isCOExceptionCommentsReq: boolean = false;\r\n    coexceptionCommentsValid: boolean = true;\r\n    //isEduOptionHead: boolean = true;\r\n    //isPFOptionHead: boolean = true;\r\n    //isHealthOptionHead: boolean = true;\r\n    //isDisOptionHead: boolean = true;\r\n    //isDeathOptionHead: boolean = true;\r\n\r\n    isOptionHead: boolean = true;\r\n    isDeathBenDisable: boolean = false;\r\n    enableSearchStudentLink: boolean = true;\r\n    //If Paging required in future\r\n    ////Paging props start\r\n    //page: number = pagination.pageNo;\r\n    //totalRows: any;\r\n    //pageSize: number = pagination.pageSize;\r\n    ////Paging props end\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: InspectorDataService, private userService: UserService, private sanitizer: DomSanitizer) {\r\n        this.maxDate = new Date();\r\n\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.claimId = params[\"claimId\"];\r\n                this.claimType = ClaimConstants[params[\"claimType\"]];\r\n                this.tranctionId = params[\"transactionId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.claimAmount = params[\"claimAmount\"];\r\n                if (this.mode != \"pending\") {\r\n                    this.isvisable = this.isApprovedAmountDisable = false;\r\n                    this.enableSearchStudentLink = false;\r\n                }\r\n                else {\r\n                    this.isShowClaimsHistory = true;\r\n                    this.enableSearchStudentLink = true;\r\n                    if (this.claimType != ClaimConstants.HealthFamily && this.claimType != ClaimConstants.PF) {\r\n                        this.isApprovedAmountDisable = false;\r\n                    }\r\n                }\r\n                this.workflowId = params[\"workflowId\"];\r\n                this.chronologicalOrder = params[\"chronologicalOrder\"];\r\n                if (this.chronologicalOrder > 0) {\r\n                    debugger;\r\n                    alert(\"You are not following the chronological order\");\r\n                    this.isCOExceptionCommentsReq = true;\r\n                }\r\n            }\r\n        );\r\n        this.getPackages();\r\n        this.getHealthCheckList();\r\n        this.getEducationCheckList();\r\n        this.getDisabilityCheckList();\r\n        this.getDeathCheckList();\r\n        this.getPFCheckList();\r\n        this.getClaimDetailsByClaimId(this.claimId, this.tranctionId, this.claimType);\r\n    }\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n            });\r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                this.claim = data;\r\n                debugger;\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.mode == \"pending\") {\r\n                        this.review.approvedAmount = this.claim.educationDetails.claimAmount;\r\n\r\n                    }\r\n                    else\r\n                        this.review.approvedAmount = this.claim.educationDetails.approvedAmount;\r\n\r\n                    this.review.inspectorComments = this.claim.educationDetails.inspectorComments;\r\n                    this.review.exceptionComments = this.claim.educationDetails.exceptionComments;\r\n                    //educationClaimExceptionDetails\r\n                    if (this.claim.educationDetails.educationClaimExceptionDetails != null) {\r\n                        if (this.claim.educationDetails.educationClaimExceptionDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.educationDetails.educationClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.educationDetails.educationClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    debugger;\r\n                    //check list\r\n                    if (this.claim.educationDetails.educationClaimCheckListDetails != null) {\r\n                        if (this.claim.educationDetails.educationClaimCheckListDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.educationDetails.educationClaimCheckListDetails.length; i++) {\r\n                                if (this.educationCheckList.length > 0) {\r\n                                    for (var j = 0; j < this.educationCheckList.length; j++) {\r\n                                        if (this.claim.educationDetails.educationClaimCheckListDetails[i].checkListDtlId == this.educationCheckList[j].checkListDtlId) {\r\n                                            this.educationCheckList[j].checked = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                    }\r\n                    this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                    this.review.approvedAmount = this.claim.healthFamilyDetails.approvedAmount;\r\n                    this.review.inspectorComments = this.claim.healthFamilyDetails.inspectorComments;\r\n                    this.review.exceptionComments = this.claim.healthFamilyDetails.exceptionComments;\r\n                    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                        if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                    }\r\n                    //healthClaimExceptionDetails\r\n                    if (this.claim.healthFamilyDetails.healthClaimExceptionDetails != null) {\r\n                        if (this.claim.healthFamilyDetails.healthClaimExceptionDetails.length > 0) {\r\n                            debugger;\r\n                            // this.claimExceptionDetailsList = this.claim.healthFamilyDetails.healthClaimExceptionDetails;\r\n                            for (var i = 0; i < this.claim.healthFamilyDetails.healthClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.healthFamilyDetails.healthClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //check list\r\n                    if (this.claim.healthFamilyDetails.healthClaimCheckListDetails != null) {\r\n                        if (this.claim.healthFamilyDetails.healthClaimCheckListDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.healthFamilyDetails.healthClaimCheckListDetails.length; i++) {\r\n                                if (this.healthCheckList.length > 0) {\r\n                                    for (var j = 0; j < this.healthCheckList.length; j++) {\r\n                                        if (this.claim.healthFamilyDetails.healthClaimCheckListDetails[i].checkListDtlId == this.healthCheckList[j].checkListDtlId) {\r\n                                            this.healthCheckList[j].checked = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.disabilityDetails != null) {\r\n                    debugger;\r\n                    for (var j = 0; j < this.claim.disabilityDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.disabilityDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    if (this.mode == \"pending\") {\r\n                        this.review.approvedAmount = this.claim.disabilityDetails.claimAmount;\r\n                    }\r\n                    else\r\n                        this.review.approvedAmount = this.claim.disabilityDetails.approvedAmount;\r\n\r\n                    this.review.inspectorComments = this.claim.disabilityDetails.inspectorComments;\r\n                    this.review.exceptionComments = this.claim.disabilityDetails.exceptionComments;\r\n                    //disabilityClaimExceptionDetails\r\n                    if (this.claim.disabilityDetails.disabilityClaimExceptionDetails != null) {\r\n                        if (this.claim.disabilityDetails.disabilityClaimExceptionDetails.length > 0) {\r\n                            debugger;\r\n                            for (var i = 0; i < this.claim.disabilityDetails.disabilityClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.disabilityDetails.disabilityClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //check list\r\n                    debugger;\r\n                    if (this.claim.disabilityDetails.disabilityClaimCheckListDetails != null) {\r\n                        if (this.claim.disabilityDetails.disabilityClaimCheckListDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.disabilityDetails.disabilityClaimCheckListDetails.length; i++) {\r\n                                if (this.disabilityCheckList.length > 0) {\r\n                                    for (var j = 0; j < this.disabilityCheckList.length; j++) {\r\n                                        if (this.claim.disabilityDetails.disabilityClaimCheckListDetails[i].checkListDtlId == this.disabilityCheckList[j].checkListDtlId) {\r\n                                            this.disabilityCheckList[j].checked = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.deathDetails != null) {\r\n                    for (var j = 0; j < this.claim.deathDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.deathDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    if (this.mode == \"pending\") {\r\n                        this.review.approvedAmount = this.claim.deathDetails.claimAmount;\r\n                        this.isDeathBenDisable = true;\r\n                    }\r\n                    else\r\n                        this.review.approvedAmount = this.claim.deathDetails.approvedAmount;\r\n\r\n                    this.review.inspectorComments = this.claim.deathDetails.inspectorComments;\r\n                    this.review.exceptionComments = this.claim.deathDetails.exceptionComments;\r\n                    //deathClaimExceptionDetails\r\n                    if (this.claim.deathDetails.deathClaimExceptionDetails != null) {\r\n                        if (this.claim.deathDetails.deathClaimExceptionDetails.length > 0) {\r\n                            debugger;\r\n                            for (var i = 0; i < this.claim.deathDetails.deathClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.deathDetails.deathClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //check list\r\n                    if (this.claim.deathDetails.deathClaimCheckListDetails != null) {\r\n                        if (this.claim.deathDetails.deathClaimCheckListDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.deathDetails.deathClaimCheckListDetails.length; i++) {\r\n                                if (this.deathCheckList.length > 0) {\r\n                                    for (var j = 0; j < this.deathCheckList.length; j++) {\r\n                                        if (this.claim.deathDetails.deathClaimCheckListDetails[i].checkListDtlId == this.deathCheckList[j].checkListDtlId) {\r\n                                            this.deathCheckList[j].checked = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.providentFundDetails != null) {\r\n                    debugger;\r\n                    if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                        this.isPrematureClaim = true;\r\n                    }\r\n                    this.review.approvedAmount = this.claim.providentFundDetails.approvedAmount;\r\n                    this.review.inspectorComments = this.claim.providentFundDetails.inspectorComments;\r\n                    this.review.exceptionComments = this.claim.providentFundDetails.exceptionComments;\r\n                    //pfClaimExceptionDetails\r\n                    if (this.claim.providentFundDetails.pfClaimExceptionDetails != null) {\r\n                        if (this.claim.providentFundDetails.pfClaimExceptionDetails.length > 0) {\r\n                            debugger;\r\n                            for (var i = 0; i < this.claim.providentFundDetails.pfClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.providentFundDetails.pfClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //check list\r\n                    if (this.claim.providentFundDetails.pfClaimCheckListDetails != null) {\r\n                        if (this.claim.providentFundDetails.pfClaimCheckListDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.providentFundDetails.pfClaimCheckListDetails.length; i++) {\r\n                                if (this.pfCheckList.length > 0) {\r\n                                    for (var j = 0; j < this.pfCheckList.length; j++) {\r\n                                        if (this.claim.providentFundDetails.pfClaimCheckListDetails[i].checkListDtlId == this.pfCheckList[j].checkListDtlId) {\r\n                                            this.pfCheckList[j].checked = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        if (this.claim.attachment[k].fileName != null) {\r\n                            let attachment = this.claim.attachment[k];\r\n                            if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                            }\r\n                            this.claim.attachment[k] = attachment;\r\n                            this.attachmentList.push(attachment);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (this.claim.entryPoint == EntryPoint.Nominee) {\r\n                    //this.showSendBack = false;\r\n                    if (this.mode == \"pending\") {\r\n                        if (this.claimType == ClaimConstants.HealthFamily || this.claimType == ClaimConstants.Education) {\r\n                            this.isMapForcedClaim = true;\r\n                            this.getBeneficiaryForcedClosedClaims(this.claim.benSno, claimType);\r\n                        }\r\n                        ////(March-15-2019 ) committed this code based on suman/client request\r\n                        //if (this.claim.nomineeId == null || this.claim.nomineeId == 0) {\r\n                        //    this.isInvalidNominee = true;\r\n                        //    this.getBeneficiaryNomineeDetails(this.claim.benSno);\r\n                        //    this.rowIndex = this.rowIndex + this.benficiaryNominee.length;\r\n                        //}\r\n                    }\r\n                }\r\n                if (this.claim.entryPoint == EntryPoint.Nominee || (this.claim.entryPoint == EntryPoint.Agent && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)\r\n                    || (this.claim.entryPoint == EntryPoint.CA && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee) || (this.claim.entryPoint == EntryPoint.Lwfc && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)) {\r\n                    this.isOnDeathofBeneficiaryOnRequestofNominee = true;\r\n                }\r\n                this.getBenBasicDetails(this.claim.benSno);\r\n                console.log(this.claim);\r\n                this.getClaimTrackDetailsByClaimId(tranctionId, claimType, this.workflowId);\r\n                if (this.isShowClaimsHistory)\r\n                    this.getBeneficiaryClaimsHistory(this.claimId, this.claim.benSno, claimType);\r\n                //this.getBeneficiaryClaimsHistory(this.claimId, this.claim.benSno, claimType, this.page, this.pageSize);\r\n            });\r\n    }\r\n    getBeneficiaryNomineeDetails(id: any) {\r\n\r\n        this.dataService\r\n            .getBeneficiaryNomineeDetails(id)\r\n            .subscribe((data: any) => {\r\n\r\n                this.benficiaryNominee = data;\r\n            });\r\n\r\n    }\r\n\r\n    openModel() {\r\n        this.typeOfMode = \"Add\";\r\n        this.nomineeNameValid = this.relationshipValid = this.genderValid = this.nomineeDOBValid = this.nomineeShareValid = this.nomineeBankNameValid = true;\r\n        this.nomineeBankAccountValid = this.nomineeBranchNameValid = this.nomineeIFSCCodeValid = true;\r\n        this.rowIndex = -1;\r\n\r\n        this.benNomineenDetails = {} as BenNominee;\r\n        this.benNomineenDetails.benSno = this.claim.benSno;\r\n        this.lgModal.show();\r\n    }\r\n\r\n    selectRelationship(args, benNominee: BenNominee) {\r\n        this.benNomineenDetails.benNomineeRelation = args.target.options[args.target.selectedIndex].text;\r\n        //this.benNomineenDetails.dob = new Date();\r\n    }\r\n    mappingNominee(item) {\r\n        debugger;\r\n        if (!item.isMappingNominee)\r\n            return item.isMappingNominee = true;\r\n        else\r\n            return item.isMappingNominee = false;\r\n    }\r\n    addNomineeDetails(details: BenNominee) {\r\n        debugger;\r\n        if (this.validateNomineeDetails(details)) {\r\n            if (this.benficiaryNominee.findIndex(x => x.benNomineeName == details.benNomineeName) == -1 && this.rowIndex == -1) {\r\n                details.createdBy = this.userService.user.deptUserid;\r\n                details.createdDate = new Date();\r\n                // details.dob = new Date(this.dobNominee);\r\n                this.benficiaryNominee.push(details);\r\n                this.lgModal.hide();\r\n            }\r\n            else if (this.benficiaryNominee.findIndex(x => x.benNomineeName == details.benNomineeName) != -1 && this.rowIndex == -1) {\r\n                alert(\"already added please enter another nominee details\"); return;\r\n            }\r\n            else {\r\n                if (this.rowIndex != -1) {\r\n                    //this.benficiaryNominee.splice(this.rowIndex, 1);\r\n                    if (this.benficiaryNominee.findIndex(x => x.benNomineeName == details.benNomineeName) == this.rowIndex) {\r\n                        //this.benficiaryNominee.push(details);\r\n                        this.rowIndex = -1;\r\n                        this.lgModal.hide();\r\n                    }\r\n                }\r\n            }\r\n            this.benNomineenDetails = {} as BenNominee;\r\n        }\r\n    }\r\n    editNomineeDetails(details: BenNominee) {\r\n        debugger;\r\n        this.typeOfMode = \"Edit\";\r\n        this.benNomineenDetails = details;\r\n        this.rowIndex = this.benficiaryNominee.indexOf(details);\r\n        this.lgModal.show();\r\n    }\r\n\r\n    clearNomineeDetails() {\r\n\r\n    }\r\n    validateNomineeDetails(details: BenNominee): boolean {\r\n        let isValid = true;\r\n        this.nomineeNameValid = this.relationshipValid = this.genderValid = this.nomineeDOBValid = this.nomineeShareValid = this.nomineeBankNameValid = this.nomineeBankAccountValid = true;\r\n        this.nomineeBranchNameValid = this.nomineeIFSCCodeValid = true;\r\n        if (details.benNomineeName == undefined || details.benNomineeName == \"\") { this.nomineeNameValid = isValid = false; }\r\n        if (details.relationshipID == undefined || details.relationshipID <= 0) { this.relationshipValid = isValid = false; }\r\n        if (details.benNomineeGender == undefined || details.benNomineeGender == \"\") { this.genderValid = isValid = false; }\r\n        if (details.dob == undefined) { this.nomineeDOBValid = isValid = false; }\r\n        if (details.benNomineeShareAllocation == undefined || details.benNomineeShareAllocation == \"\") { this.nomineeShareValid = isValid = false; }\r\n        if (details.benNomineeBankName == undefined || details.benNomineeBankName == \"\") { this.nomineeBankNameValid = isValid = false; }\r\n        if (details.benNomineeBankAccNo == undefined || details.benNomineeBankAccNo == \"\") { this.nomineeBankAccountValid = isValid = false; }\r\n        if (details.benNomineeBankBranch == undefined || details.benNomineeBankBranch == \"\") { this.nomineeBranchNameValid = isValid = false; }\r\n        if (details.benNomineeBankIfscCode == undefined || details.benNomineeBankIfscCode == \"\") { this.nomineeIFSCCodeValid = isValid = false; }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    getBenBasicDetails(benNo: any) {\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsById(benNo)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n                console.log(this.beneficiary);\r\n            });\r\n    }\r\n    getClaimTrackDetailsByClaimId(transactionId: any, tranctionType: any, wfId: any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType, wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n\r\n            });\r\n    }\r\n    viewAttachment() {\r\n        this.attachModel.show();\r\n    }\r\n    Getimage(imageData: AttachmentModel) {\r\n        const data = imageData.fileName.split('.')[imageData.fileName.split('.').length - 1];\r\n        if (data.toLowerCase() == \"pdf\") {\r\n            console.log(imageData.stringContent);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    getUrlOfPdf(imageData?: AttachmentModel) {\r\n        this.dataService\r\n            .getAttachment()\r\n            .then((data: any) => {\r\n                var url = URL.createObjectURL(data);\r\n                console.log(url);\r\n            });\r\n\r\n    }\r\n\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.router.navigate(['inspector/pendingapprovalclaims'], { skipLocationChange: false });\r\n    }\r\n    saveClaim(status: number, type: any, mode: string) {\r\n        debugger;\r\n        if (this.validateClaim(type)) {\r\n            this.review.benDeathStatus = false;\r\n            this.review.statusId = status;\r\n            this.review.transactionId = this.tranctionId;\r\n            this.review.claimType = this.claimType;\r\n            this.review.wfId = WorkflowTrans.workflow;\r\n            this.review.userId = this.userService.user.deptUserid;\r\n            //-----------------\r\n            this.expection = [];\r\n            if (this.mode == \"pending\") {\r\n                //if (this.chronologicalOrder > 0) {\r\n                //    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                //    exp.exceptionText = this.review.inspChronologicalOrderComments; // \"You are not following the chronological order\";\r\n                //    exp.exceptionCapturedDate = new Date();\r\n                //    exp.raisedBy = this.userService.user.deptUserid;\r\n\r\n                //    this.expection.push(exp);\r\n                //}\r\n                if (this.claimAmount > 0) {\r\n                    debugger;\r\n                    if (this.review.approvedAmount != undefined || this.review.approvedAmount != 0) {\r\n                        ////Exception Rule - 6\tWhen Claimamount>Approved Amount\r\n                        //if (this.claimAmount > this.review.approvedAmount) {\r\n\r\n                        //    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                        //    exp.exceptionText = \"Approved Amount lessthan Claim Amount\";\r\n                        //    exp.exceptionCapturedDate = new Date();\r\n                        //    exp.raisedBy = this.userService.user.deptUserid;\r\n\r\n                        //    this.expection.push(exp);\r\n                        //}\r\n\r\n                        //Exception Rule - 7\tWhen Claimamount<Approved Amount\r\n                        if (this.claimAmount < this.review.approvedAmount) {\r\n\r\n                            const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                            exp.exceptionText = \"Approved amount greater than claim amount\";\r\n                            exp.exceptionCapturedDate = new Date();\r\n                            exp.raisedBy = this.userService.user.deptUserid;\r\n\r\n                            this.expection.push(exp);\r\n                        }\r\n                       \r\n                    }\r\n                }\r\n                this.review.claimExceptionDetails = this.expection;\r\n            }\r\n            if (this.isMapForcedClaim) {\r\n                if (this.forcedClaimsData != undefined && this.forcedClaimsData.length > 0) {\r\n                    for (var k = 0; k < this.forcedClaimsData.length; k++) {\r\n                        if (this.forcedClaimsData[k].selected) {\r\n                            this.forcedCloseClaims.push(this.forcedClaimsData[k].claimId);\r\n                        }\r\n                        this.allForcedCloseClaims.push(this.forcedClaimsData[k].claimId);\r\n                    }\r\n                }\r\n                this.review.UpdateForcedClaims = this.forcedCloseClaims;\r\n                this.review.AllForcedClaims = this.allForcedCloseClaims;\r\n            }\r\n            //if (this.isInvalidNominee) {\r\n            //    debugger;\r\n            //    this.review.benficiaryNomineeDetails = this.benficiaryNominee;\r\n            //}\r\n            this.checkList = [];\r\n            debugger;\r\n            if (mode == \"Forward\") {\r\n\r\n                if (this.claim.providentFundDetails != null) {\r\n                    if (this.pfCheckList.length > 0) {\r\n                        for (var i = 0; i < this.pfCheckList.length; i++) {\r\n                            const chk: ClaimCheckListDetailsModel = {} as ClaimCheckListDetailsModel;\r\n                            if (this.pfCheckList[i].checked) {\r\n                                chk.checkListDtlId = this.pfCheckList[i].checkListDtlId;\r\n\r\n                                this.checkList.push(chk);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    if (this.healthCheckList.length > 0) {\r\n                        for (var i = 0; i < this.healthCheckList.length; i++) {\r\n                            const chk: ClaimCheckListDetailsModel = {} as ClaimCheckListDetailsModel;\r\n                            if (this.healthCheckList[i].checked) {\r\n                                chk.checkListDtlId = this.healthCheckList[i].checkListDtlId;\r\n\r\n                                this.checkList.push(chk);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.deathDetails != null) {\r\n                    this.review.benDeathStatus = true;\r\n                    if (this.deathCheckList.length > 0) {\r\n                        for (var i = 0; i < this.deathCheckList.length; i++) {\r\n                            const chk: ClaimCheckListDetailsModel = {} as ClaimCheckListDetailsModel;\r\n                            if (this.deathCheckList[i].checked) {\r\n                                chk.checkListDtlId = this.deathCheckList[i].checkListDtlId;\r\n\r\n                                this.checkList.push(chk);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.disabilityDetails != null) {\r\n                    if (this.disabilityCheckList.length > 0) {\r\n                        for (var i = 0; i < this.disabilityCheckList.length; i++) {\r\n                            const chk: ClaimCheckListDetailsModel = {} as ClaimCheckListDetailsModel;\r\n                            if (this.disabilityCheckList[i].checked) {\r\n                                chk.checkListDtlId = this.disabilityCheckList[i].checkListDtlId;\r\n\r\n                                this.checkList.push(chk);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.educationDetails != null) {\r\n                    if (this.educationCheckList.length > 0) {\r\n                        for (var i = 0; i < this.educationCheckList.length; i++) {\r\n                            const chk: ClaimCheckListDetailsModel = {} as ClaimCheckListDetailsModel;\r\n                            if (this.educationCheckList[i].checked) {\r\n                                chk.checkListDtlId = this.educationCheckList[i].checkListDtlId;\r\n\r\n                                this.checkList.push(chk);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                this.review.claimCheckListDetails = this.checkList;\r\n            }\r\n            else if (mode == \"force close\") {\r\n                this.confirmForcedCloseModal.hide();\r\n                this.review.benDeathStatus = true;\r\n            }\r\n            //-----------------\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .updateComments(this.review)\r\n                    .then((data: any) => {\r\n                        this.successMessage = \"Claim \" + mode + \" successfully\";\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    cancelclick() {\r\n        //|| this.mode == \"view\"\r\n        if (this.mode == \"pending\") {\r\n            this.router.navigate(['inspector/pendingapprovalclaims']);\r\n        }\r\n        else if (this.mode == \"sendback\") {\r\n            this.router.navigate(['inspector/sendbackclaims']);\r\n\r\n        }\r\n        else if (this.mode == \"reject\") {\r\n            this.router.navigate(['inspector/rejectclaims']);\r\n\r\n        }\r\n        else if (this.mode == \"approve\") {\r\n            this.router.navigate(['inspector/approvalclaims'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.mode == \"force\") {\r\n            this.router.navigate(['inspector/forcecloseclaims'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.mode == \"claimstatus\") {\r\n            this.router.navigate(['inspector/claimstatus'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.mode == \"search\") {\r\n            this.router.navigate(['inspector/searchstudent'], { skipLocationChange: true });\r\n\r\n        }\r\n    }\r\n\r\n    validateClaim(type: any) {\r\n        debugger;\r\n        let isValid = true;\r\n        let sharePercentage = 0;\r\n        let count = 0;\r\n        let chkListCount = 0;\r\n        this.approvedAmountValid = this.approvedAmountValid = true;\r\n        if (type == 0) {\r\n            if (this.review.approvedAmount == undefined || this.review.approvedAmount == 0) { this.approvedAmountValid = isValid = false; }\r\n            if (this.claim.providentFundDetails != null) {\r\n                if (this.pfCheckList.length > 0) {\r\n                    for (var i = 0; i < this.pfCheckList.length; i++) {\r\n                        if (this.pfCheckList[i].checked) {\r\n                            chkListCount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.claim.healthFamilyDetails != null) {\r\n                if (this.healthCheckList.length > 0) {\r\n                    for (var i = 0; i < this.healthCheckList.length; i++) {\r\n                        if (this.healthCheckList[i].checked) {\r\n                            chkListCount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.claim.deathDetails != null) {\r\n                if (this.deathCheckList.length > 0) {\r\n                    for (var i = 0; i < this.deathCheckList.length; i++) {\r\n                        if (this.deathCheckList[i].checked) {\r\n                            chkListCount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.claim.disabilityDetails != null) {\r\n                if (this.disabilityCheckList.length > 0) {\r\n                    for (var i = 0; i < this.disabilityCheckList.length; i++) {\r\n                        if (this.disabilityCheckList[i].checked) {\r\n                            chkListCount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.claim.educationDetails != null) {\r\n                if (this.educationCheckList.length > 0) {\r\n                    for (var i = 0; i < this.educationCheckList.length; i++) {\r\n                        if (this.educationCheckList[i].checked) {\r\n                            chkListCount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (chkListCount <= 0) {\r\n                alert(\"At least one document needs to be checked\");\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.review.inspectorComments == undefined || this.review.inspectorComments == \"\") { this.inspectorCommentsValid = isValid = false; }\r\n        if ((this.review.inspChronologicalOrderComments == undefined || this.review.inspChronologicalOrderComments == \"\") && this.isCOExceptionCommentsReq) { this.coexceptionCommentsValid = isValid = false; }\r\n        if (this.isMapForcedClaim) {\r\n            if (this.forcedClaimsData.find(c => c.selected == true) == undefined) {\r\n                this.forcedClaimsDataSelected = isValid = false;\r\n            }\r\n        }\r\n        ////Nominee not Exist / mismatch // (March-15-2019 ) committed this code based on suman/client request\r\n        //if (this.isInvalidNominee) {\r\n        //    debugger;\r\n        //    if (this.benficiaryNominee.length > 0) {\r\n        //        for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n        //            sharePercentage += parseInt(this.benficiaryNominee[i].benNomineeShareAllocation);\r\n        //        }\r\n        //        if (sharePercentage != 100) {\r\n        //            alert(\"Share Allocation Accepts only 100%\");\r\n        //            isValid = false;\r\n        //        }\r\n        //        for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n        //            if (this.benficiaryNominee[i].isMappingNominee) {\r\n        //                count++;\r\n        //            }\r\n        //        }\r\n        //        if (count != 1) {\r\n        //            alert(\"Please select one nominee to mapping \");\r\n        //            isValid = false;\r\n        //        }\r\n        //    }\r\n        //    else {\r\n        //        alert(\"Please map one nominee to this claim \");\r\n        //        isValid = false;\r\n        //    }\r\n        //}\r\n        return isValid;\r\n\r\n    }\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n    viewHistory() {\r\n        this.historyModal.show();\r\n    }\r\n    getBeneficiaryClaimsHistory(claimId: any, benSNo: any, tranctionType: any) {\r\n        debugger;\r\n        this.dataService\r\n            .getBeneficiaryClaimsHistory(claimId, benSNo, tranctionType)\r\n            .subscribe((data: any) => {\r\n                this.claimsHistoryData = data;\r\n            });\r\n    }\r\n    //If Paging required in future\r\n    //getBeneficiaryClaimsHistory(claimId: any, benSNo: any, tranctionType: any, pageNo?: any, pageSize?: any) {\r\n    //    debugger;\r\n    //    this.dataService\r\n    //        .getBeneficiaryClaimsHistory(claimId, benSNo, tranctionType, pageNo, pageSize)\r\n    //        .subscribe((data: any) => {\r\n    //            this.claimsHistoryData = data.results;\r\n    //            this.totalRows = data.rowCount;\r\n    //        });\r\n    //}\r\n    //changepage(page) {\r\n    //    this.getBeneficiaryClaimsHistory(this.claimId, this.claim.benSno, this.claimType, this.page, this.pageSize);\r\n    //}\r\n    getBeneficiaryForcedClosedClaims(benSNo: any, tranctionType: any) {\r\n        this.dataService\r\n            .getBeneficiaryForcedClosedClaims(benSNo, tranctionType)\r\n            .subscribe((data: any) => {\r\n                this.forcedClaimsData = data;\r\n            });\r\n    }\r\n    selectAll() {\r\n        this.forcedClaimsDataSelected = true;\r\n        for (var i = 0; i < this.forcedClaimsData.length; i++) {\r\n            this.forcedClaimsData[i].selected = this.selectedAll;\r\n        }\r\n    }\r\n    checkIfAllSelected() {\r\n        this.forcedClaimsDataSelected = true;\r\n        this.selectedAll = this.forcedClaimsData.every(function (item: any) {\r\n            return item.selected == true;\r\n        })\r\n    }\r\n\r\n    getHealthCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.HealthFamilyCheckList)\r\n            .subscribe((data: any) => {\r\n                this.healthCheckList = data;\r\n            });\r\n    }\r\n    getEducationCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.EducationCheckList)\r\n            .subscribe((data: any) => {\r\n                this.educationCheckList = data;\r\n            });\r\n    }\r\n    getDisabilityCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.DisabilityCheckList)\r\n            .subscribe((data: any) => {\r\n                this.disabilityCheckList = data;\r\n            });\r\n    }\r\n    getDeathCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.DeathCheckList)\r\n            .subscribe((data: any) => {\r\n                this.deathCheckList = data;\r\n            });\r\n    }\r\n    getPFCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.PFCheckList)\r\n            .subscribe((data: any) => {\r\n                this.pfCheckList = data;\r\n            });\r\n    }\r\n    disabilityCheckedListChange(eve, checkListDtlId) {\r\n        debugger;\r\n        if (this.disabilityCheckList != null) {\r\n            for (var i = 0; i < this.disabilityCheckList.length; i++) {\r\n                if (this.disabilityCheckList[i].checkListDtlId == checkListDtlId) {\r\n                    if (eve.target.checked)\r\n                        this.disabilityCheckList[i].checked = true;\r\n                    else\r\n                        this.disabilityCheckList[i].checked = false;\r\n                }\r\n            }\r\n            if (this.disabilityCheckList.find(e => e.checked == true))\r\n                this.isOptionHead = false;\r\n            else\r\n                this.isOptionHead = true;\r\n        }\r\n    }\r\n    pfCheckedListChange(eve, checkListDtlId) {\r\n        debugger;\r\n        if (this.pfCheckList != null) {\r\n            for (var i = 0; i < this.pfCheckList.length; i++) {\r\n                if (this.pfCheckList[i].checkListDtlId == checkListDtlId) {\r\n                    if (eve.target.checked)\r\n                        this.pfCheckList[i].checked = true;\r\n                    else\r\n                        this.pfCheckList[i].checked = false;\r\n                }\r\n            }\r\n            if (this.pfCheckList.find(e => e.checked == true))\r\n                this.isOptionHead = false;\r\n            else\r\n                this.isOptionHead = true;\r\n        }\r\n    }\r\n    educationCheckedListChange(eve, checkListDtlId) {\r\n        debugger;\r\n        if (this.educationCheckList != null) {\r\n            for (var i = 0; i < this.educationCheckList.length; i++) {\r\n                if (this.educationCheckList[i].checkListDtlId == checkListDtlId) {\r\n                    if (eve.target.checked)\r\n                        this.educationCheckList[i].checked = true;\r\n                    else\r\n                        this.educationCheckList[i].checked = false;\r\n                }\r\n            }\r\n            if (this.educationCheckList.find(e => e.checked == true))\r\n                this.isOptionHead = false;\r\n            else\r\n                this.isOptionHead = true;\r\n        }\r\n    }\r\n    healthCheckedListChange(eve, checkListDtlId) {\r\n        debugger;\r\n        if (this.healthCheckList != null) {\r\n            for (var i = 0; i < this.healthCheckList.length; i++) {\r\n                if (this.healthCheckList[i].checkListDtlId == checkListDtlId) {\r\n                    if (eve.target.checked)\r\n                        this.healthCheckList[i].checked = true;\r\n                    else\r\n                        this.healthCheckList[i].checked = false;\r\n                }\r\n            }\r\n            if (this.healthCheckList.find(e => e.checked == true))\r\n                this.isOptionHead = false;\r\n            else\r\n                this.isOptionHead = true;\r\n        }\r\n    }\r\n    deathCheckedListChange(eve, checkListDtlId) {\r\n        debugger;\r\n        if (this.deathCheckList != null) {\r\n            for (var i = 0; i < this.deathCheckList.length; i++) {\r\n                if (this.deathCheckList[i].checkListDtlId == checkListDtlId) {\r\n                    if (eve.target.checked)\r\n                        this.deathCheckList[i].checked = true;\r\n                    else\r\n                        this.deathCheckList[i].checked = false;\r\n                }\r\n            }\r\n            if (this.deathCheckList.find(e => e.checked == true))\r\n                this.isOptionHead = false;\r\n            else\r\n                this.isOptionHead = true;\r\n        }\r\n    }\r\n\r\n    viewClaimInfo1(claim) {\r\n        this.claimId = claim.claimId;\r\n        this.claimType = this.claimType;\r\n        this.tranctionId = 16;\r\n        this.claimModal.show();\r\n    }\r\n\r\n    viewClaimInfo(claim: any) {\r\n        debugger;\r\n        this.claimId1 = claim.claimId;\r\n        this.claimType1 = this.claimType;\r\n        this.tranctionId1 = claim.transactionId;\r\n        //this.attachmentList = [];\r\n        this.getClaimDetailsByClaimId1(this.claimId1, this.tranctionId1, this.claimType1);\r\n    }\r\n    getClaimDetailsByClaimId1(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.claim1 = data;\r\n                this.child.getData(this.claim1);\r\n                this.claimModal.show();\r\n            });\r\n    }\r\n\r\n    noClick() {\r\n        this.confirmForcedCloseModal.hide();\r\n    }\r\n    forcedCloseClick(type: any) {\r\n        if (this.validateClaim(type)) {\r\n            this.confirmForcedCloseModal.show();\r\n        }\r\n    }\r\n    searchLinkClick() {\r\n        window.open('/inspector/searchstudent','searchStudent', 'directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar = 0, scrollbars = no, resizable = no, width = 800, height = 450');\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Search Student </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <label class=\\\"label\\\">Student Name </label>\\r\\n                            <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"advancedSearchTextbox\\\" [(ngModel)]=\\\"studentName\\\" placeholder=\\\"Search Student Name\\\"\\r\\n                                   maxlength=\\\"50\\\" #name=\\\"ngModel\\\" required>\\r\\n                            <button (click)=\\\"searchStudent()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <!--<span [style.color]=\\\"!nameValid?'red':''\\\"><b>*</b></span>\\r\\n                                <div *ngIf=\\\"!nameValid\\\">\\r\\n                                <span style=\\\"color: red;\\\">Student Name is required </span>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>Education</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { WorkflowTrans,pagination } from '../../claim/pipes/constnts.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search-student',\r\n  templateUrl: './search-student.component.html',\r\n  styleUrls: ['./search-student.component.css']\r\n})\r\nexport class SearchStudentComponent implements OnInit {\r\n    claimsData: Claims[] = [];\r\n    nameValid: boolean = true;\r\n    studentName: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    searchStudent() {\r\n        debugger;\r\n        this.getEducationClaimsSubmittedbyStudentName(this.studentName, this.page, this.pageSize);\r\n    }\r\n    ngOnInit() {\r\n        //this.getEducationClaimsSubmittedbyStudentName('montu', this.page, this.pageSize);\r\n    }\r\n    getEducationClaimsSubmittedbyStudentName(name: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getEducationClaimsSubmittedbyStudentName(name, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"search\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['inspector/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"search\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    changepage(page) {\r\n        this.getEducationClaimsSubmittedbyStudentName(this.studentName, this.page, this.pageSize);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Sent Back </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"sentBackDateString\\\">Sent back Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText, claimAmount: searchText,submittedDateString: searchText, sentBackDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.sentBackDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\nimport { UserService } from '../../UserService';\r\n\r\n@Component({\r\n  selector: 'app-sendback-claims',\r\n  templateUrl: './sendback-claims.component.html',\r\n  styleUrls: ['./sendback-claims.component.css']\r\n})\r\nexport class SendbackClaimsComponent implements OnInit {\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['inspector/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"sendback\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1}], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['inspector/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"sendback\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status,wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromInspector, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n}\r\n","export const ApiDictionary = {\r\n    beneficiaryBasicDetails: {\r\n        url: 'GetBeneficiaryBasicDetailsByID',\r\n        params: { id: 'id' }\r\n    },\r\n    beneficiaryBankDetails: {\r\n        url: 'GetBeneficiaryBankDetailsByBeneficiaryID',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    beneficiaryNomineeDetails: {\r\n        url: 'GetBeneficiaryNomineeDetailsByBeneficiaryID',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    beneficiaryFamilyDetails: {\r\n        url: 'GetBeneficiaryFamilyDetailsByBeneficiaryID',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    getClaims: {\r\n        url: 'src/assets/data/inspectorClaims.json',\r\n        params: { roleId: 'benSno' }\r\n    },\r\n\r\n    getClaimDetailsByClaimId: {\r\n        url: 'getClaimDetails',\r\n        params: { claimId: 'claimId' }\r\n    },\r\n\r\n    getPendingApprovals: {\r\n        url: 'GetPendingApprovals',\r\n        params: { roleId: 'benSno' }\r\n    },\r\n    updateComments: {\r\n        url: 'updateWorkFlowStatus',\r\n        params: { roleId: 'benSno' }\r\n    },\r\n    getAttachment: {\r\n        url: \"getAttachment\",\r\n        params: { baseTransactionId: 'transactionId', transactionType: 'transactionType' }\r\n    },\r\n    getClaimTrackDetailsByTransactionId: {\r\n        url: \"GetWorkflowTransactionLogDetails\",\r\n        params: { baseTransactionId: 'transactionId', transactionType: 'transactionType' }\r\n    },\r\n    getPackages: {\r\n        url: 'getPackages',\r\n        params: null\r\n    },\r\n    getBeneficiaryClaimsHistory: {\r\n        url: \"getBeneficiaryClaimsHistory\",\r\n        params: { claimId: 'claimId', benSno: 'benSno', claimType: 'claimType' }\r\n    },\r\n    //getBeneficiaryClaimsHistory: {\r\n    //    url: \"getBeneficiaryClaimsHistory\",\r\n    //    params: { claimId: 'claimId', benSno: 'benSno', claimType: 'claimType', page: 'page', pageSize: 'pageSize' }\r\n    //},\r\n    getClaimStatusClaims: {\r\n        url: \"getClaimStatusClaims\",\r\n        params: null\r\n    },\r\n    getBeneficiaryForcedClosedClaims: {\r\n        url: \"getBeneficiaryForcedClosedClaims\",\r\n        params: { benSno: 'benSno', claimType: 'claimType' }\r\n    },\r\n    getClaimCheckListDetails:{\r\n        url: \"GetClaimCheckListDetails\",\r\n        params: null\r\n    },\r\n    getLegacyClaimsList: {\r\n        url: 'GetLegacyClaimsList',\r\n        params: null\r\n    },\r\n    saveLegacyClaimDetails: {\r\n        url: 'SaveLegacyClaimDetails',\r\n        params: null\r\n    },\r\n    getEducationClaimsSubmittedbyStudentName: {\r\n        url: 'getEducationClaimsSubmittedbyStudentName',\r\n        params: null\r\n    },\r\n    GetLOVDetailsByLovId: {\r\n        url: 'GetLOVDetailsByLovId',\r\n        params: { lovId: 'lovId' }\r\n    },\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DropdownListService } from '../../Services/dropdown-list.service';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { HttpRequest, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { ApiDictionary } from './api-dictionary';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class InspectorDataService {\r\n    constructor(public apiService: ApiService, public _http: HttpClient) { }\r\n\r\n    getBeneficiaryBasicDetailsByNo(id: any) {\r\n        let paramsMap = new Map<any, any>();\r\n        paramsMap.set('ssiNum', id);\r\n        let params = new HttpParams();\r\n        paramsMap.forEach((value: any, key: any) => {\r\n            params = params.set(key, value);\r\n        });\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryBasicDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryBasicDetailsById(id: any) {\r\n        let paramsMap = new Map<any, any>();\r\n        paramsMap.set('benSno', id);\r\n        let params = new HttpParams();\r\n        paramsMap.forEach((value: any, key: any) => {\r\n            params = params.set(key, value);\r\n        });\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryBasicDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryBankDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryBankDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getBeneficiaryNomineeDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryNomineeDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getBeneficiaryFamilyDetails(id: any, type?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryFamilyDetails.url + \"/\" + id + \"/\" + type, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n\r\n    getClaimsByBenficiary(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaims.url, { params: params });\r\n        return this.apiService.getStaticData(options).map((res: any) => {\r\n            return res.claims;\r\n        });\r\n    }\r\n    getClaimsByInspector(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaims.url, { params: params });\r\n        return this.apiService.getStaticData(options).map((res: any) => {\r\n            return res.claims;\r\n        });\r\n    }\r\n\r\n    getClaimDetailsByClaimId(id: any, referenceId: any, claimType: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimDetailsByClaimId.url + \"/\" + id + \"/\" + referenceId + \"/\" + claimType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    GetPendingApprovals(id: any, type: any, status: any,wfId: any, ssinSearchText: any, claimReferenceNoText: any, pageNo?: any, pageSize?:any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPendingApprovals.url + \"/\" + id + \"/\" + type + \"/\" + status + \"/\" + pageNo +\"/\" + pageSize + \"/\" + ssinSearchText + \"/\" + claimReferenceNoText + \"/\" + wfId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    updateComments(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.updateComments.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimTrackDetailsByTransactionId(id: any, transactionType: any,wfId?:any) {\r\n        let params = new HttpParams();\r\n        if (wfId == undefined) { wfId = \"\"; }\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimTrackDetailsByTransactionId.url + \"/\" + id + \"/\" + transactionType + \"/\" + wfId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAttachment() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAttachment.url , { params: params });\r\n        return this.apiService.downloadResource(options);\r\n    }\r\n    getPackages() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPackages.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryClaimsHistory(claimId: any, benSNo: any, tranctionType: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryClaimsHistory.url + \"/\" + claimId + \"/\" + \"/\" + benSNo + \"/\" + tranctionType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    //getBeneficiaryClaimsHistory(claimId: any, benSNo: any, tranctionType: any, pageNo?: any, pageSize?: any) {\r\n    //    let params = new HttpParams();\r\n    //    const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryClaimsHistory.url + \"/\" + claimId + \"/\" + \"/\" + benSNo + \"/\" + tranctionType + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n    //    return this.apiService.getDropdownData(options).map((res: any) => {\r\n    //        return res;\r\n    //    });\r\n    //}\r\n    getBeneficiaryForcedClosedClaims(benSNo: any, tranctionType: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryForcedClosedClaims.url + \"/\" + benSNo + \"/\" + tranctionType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimStatusClaims(id: any, type: any, ssinSearchText: any, claimReferenceNoText: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimStatusClaims.url + \"/\" + id + \"/\" + type + \"/\" + pageNo + \"/\" + pageSize + \"/\" + ssinSearchText + \"/\" + claimReferenceNoText, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimCheckListDetails(checkLisiId) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimCheckListDetails.url + \"/\" + checkLisiId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLegacyClaimsList(id: any, pageNo?: any, pageSize?: any): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLegacyClaimsList.url + \"/\" + id + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    saveLegacyClaimDetails(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.saveLegacyClaimDetails.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getEducationClaimsSubmittedbyStudentName(name: any, pageNo?: any, pageSize?: any): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getEducationClaimsSubmittedbyStudentName.url + \"/\" + name + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getlovDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetLOVDetailsByLovId.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Track Claim</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <fieldset>\\r\\n                            <section>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                                        <div class=\\\"well well-sm\\\">\\r\\n                                            <div class=\\\"smart-timeline\\\">\\r\\n                                                <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                    <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                {{item.actionComments}}\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <!--<li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>25th july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>ALC Review - Send Back </strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Provided Bill is out of the date, for which claim can't be processed. Resubmit the right bill\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>23rd july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Inspector Review - Forwarded to ALC</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Forwarded to AL at 10.30am\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>22nd July 2018</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Resubmission by Beneficiary</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Here attached the document\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>21st july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Inspector Review - Sent Back</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Can you please submit your Medicall Bill?\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>18th July 2018</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Claim Submission - Beneficiary</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Sir, Can you please review and approve my claim\\r\\n                                                            </p>\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>-->\\r\\n                                                    <!--<li class=\\\"text-center\\\">\\r\\n                                                        <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-arrow-down text-muted\\\"></i> LOAD MORE</a>\\r\\n                                                    </li>-->\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                        </fieldset>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n    <div class=\\\"smart-form\\\">\\r\\n        <footer>\\r\\n            <a class=\\\"btn btn-danger\\\" (click)=\\\"onBackClaimClick()\\\">Cancel</a>\\r\\n        </footer>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { EducationDetailModel, EducationHdrModel } from '../../claim/models/education.model';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { Beneficiary } from '../../claim/models/ben.model';\r\nimport { window } from 'rxjs-compat/operator/window';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans } from '../../claim/pipes/constnts.model';\r\nimport { InspectorDataService } from '../services/inspector-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-timetrack',\r\n  templateUrl: './timetrack.component.html',\r\n  styleUrls: ['./timetrack.component.css']\r\n})\r\nexport class TimetrackComponent implements OnInit {\r\n\r\n    private route$: Subscription;\r\n    private tranctionType: any;\r\n    private transactionId: any;\r\n    private workflowId: any;\r\n    mode: string;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: InspectorDataService, private userService: UserService) {\r\n\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.transactionId = params[\"transactionId\"];\r\n                this.tranctionType = params[\"tranctionType\"];\r\n                this.mode = params[\"mode\"];\r\n                this.workflowId = params[\"workflowId\"];\r\n            }\r\n        );\r\n        this.getClaimDetailsByClaimId(this.transactionId, ClaimConstants[this.tranctionType], this.workflowId)\r\n    }\r\n    getClaimDetailsByClaimId(transactionId: any, tranctionType: any,wfId:any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType, wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n            });\r\n    }\r\n    onBackClaimClick() {\r\n        if (this.mode == \"reject\") {\r\n            this.router.navigate(['inspector/rejectclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"sendback\") {\r\n            this.router.navigate(['inspector/sendbackclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"pending\") {\r\n            this.router.navigate(['inspector/pendingapprovalclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"approve\") {\r\n            this.router.navigate(['inspector/approvalclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"claimstatus\") {\r\n            this.router.navigate(['inspector/claimstatus'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"search\") {\r\n            this.router.navigate(['inspector/searchstudent'], { skipLocationChange: true });\r\n\r\n        }\r\n    }\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}