{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/UserService.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/claim-entry-nominee/claim-entry-nominee.component.css","webpack:///./src/app/claim-entry-nominee/claim-entry-nominee.component.html","webpack:///./src/app/claim-entry-nominee/claim-entry-nominee.component.ts","webpack:///./src/app/claim/pipes/constnts.model.ts","webpack:///./src/app/models/userurl.model.ts","webpack:///./src/app/number.directive.ts","webpack:///./src/app/pf/pfconfiguartion/pfconfiguartion.component.css","webpack:///./src/app/pf/pfconfiguartion/pfconfiguartion.component.html","webpack:///./src/app/pf/pfconfiguartion/pfconfiguartion.component.ts","webpack:///./src/app/services/add-authorization-header.service.ts","webpack:///./src/app/services/api-dictionary.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/claim-data.service.ts","webpack:///./src/app/services/excel.service.ts","webpack:///./src/app/track-claim-nominee/track-claim-nominee.component.css","webpack:///./src/app/track-claim-nominee/track-claim-nominee.component.html","webpack:///./src/app/track-claim-nominee/track-claim-nominee.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)?66eb","webpack:///http (ignored)","webpack:///https (ignored)","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./alc/alc.module\": [\n\t\t\"./src/app/alc/alc.module.ts\",\n\t\t\"default~alc-alc-module~ceo-ceo-module~claim-claim-module~dlc-dlc-module~inspector-inspector-module~t~fef680f5\",\n\t\t\"default~alc-alc-module~ceo-ceo-module\",\n\t\t\"alc-alc-module\"\n\t],\n\t\"./ceo/ceo.module\": [\n\t\t\"./src/app/ceo/ceo.module.ts\",\n\t\t\"default~alc-alc-module~ceo-ceo-module~claim-claim-module~dlc-dlc-module~inspector-inspector-module~t~fef680f5\",\n\t\t\"default~alc-alc-module~ceo-ceo-module\",\n\t\t\"ceo-ceo-module\"\n\t],\n\t\"./claim/claim.module\": [\n\t\t\"./src/app/claim/claim.module.ts\",\n\t\t\"default~alc-alc-module~ceo-ceo-module~claim-claim-module~dlc-dlc-module~inspector-inspector-module~t~fef680f5\",\n\t\t\"claim-claim-module\"\n\t],\n\t\"./dlc/dlc.module\": [\n\t\t\"./src/app/dlc/dlc.module.ts\",\n\t\t\"default~alc-alc-module~ceo-ceo-module~claim-claim-module~dlc-dlc-module~inspector-inspector-module~t~fef680f5\",\n\t\t\"dlc-dlc-module\"\n\t],\n\t\"./inspector/inspector.module\": [\n\t\t\"./src/app/inspector/inspector.module.ts\",\n\t\t\"default~alc-alc-module~ceo-ceo-module~claim-claim-module~dlc-dlc-module~inspector-inspector-module~t~fef680f5\",\n\t\t\"inspector-inspector-module\"\n\t],\n\t\"./pfconfig/pfconfig.module\": [\n\t\t\"./src/app/pfconfig/pfconfig.module.ts\",\n\t\t\"pfconfig-pfconfig-module\"\n\t],\n\t\"./tresurer/tresurer.module\": [\n\t\t\"./src/app/tresurer/tresurer.module.ts\",\n\t\t\"default~alc-alc-module~ceo-ceo-module~claim-claim-module~dlc-dlc-module~inspector-inspector-module~t~fef680f5\",\n\t\t\"tresurer-tresurer-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","﻿import { Injectable } from '@angular/core';\r\nimport { UserUrl } from './models/userurl.model';\r\n\r\nfunction _window(): any {\r\n    // return the global native browser window object\r\n    return window;\r\n}\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    user: UserUrl;\r\n\r\n    constructor(private userinfo: UserUrl) {\r\n        const win = _window();\r\n        console.log(win.userTpe);\r\n        console.log(win.userid);\r\n        console.log(win.userMobileNo);\r\n        userinfo.url =win.baseUrl;\r\n        userinfo.benName =win.benName;\r\n        userinfo.checkRegType =win.checkRegType;\r\n        userinfo.chkAddData =win.chkAddData;\r\n        userinfo.deptUserid =win.deptUserid;\r\n        userinfo.district =win.district;\r\n        userinfo.location = win.blocation;\r\n        userinfo.loginType =win.loginType;\r\n        userinfo.skipAdditionaldata =win.skipAdditionaldata;\r\n        userinfo.subDiv =win.subDiv;\r\n        userinfo.userid =win.userid;\r\n        userinfo.userMobileNo =win.userMobileNo;\r\n        userinfo.userName =win.userName;\r\n        userinfo.userTpe =win.userTpe;\r\n        userinfo.userTypeName = win.userTypeName;\r\n        userinfo.token = win.token;\r\n        debugger;\r\n        userinfo.encData = win.encData;\r\n        userinfo.serviceProvider = win.serviceProvider;\r\n        userinfo.isDoubleVerification = win.isdoubleverification;\r\n        localStorage.setItem('token', userinfo.token);\r\n        this.user = Object.assign(new UserUrl(), this.userinfo);\r\n\r\n    }\r\n}","module.exports = \".loading {\\r\\n    background: rgba(0,0,0,0.4);\\r\\n    position: fixed;\\r\\n    display: block;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    z-index: 99999;\\r\\n}\\r\\n\\r\\n    .loading span {\\r\\n        position: fixed;\\r\\n        left: 50%;\\r\\n        top: 50%;\\r\\n        border: solid 1px #ccc;\\r\\n        display: block;\\r\\n        padding: 20px 40px;\\r\\n        margin-left: -40px;\\r\\n        background: rgba(255,255,255,0.8);\\r\\n    }\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"loading\\\" style=\\\"display:none;\\\">\\r\\n    <span>Loading.....</span></div>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { UserService } from './UserService';\r\nimport { UserUrl } from './models/userurl.model';\r\n\r\ndeclare var window: any;\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'SSYWBAngular';\r\n    user: UserUrl;\r\n    constructor(public router: Router, private userService: UserService) {\r\n        debugger;\r\n        this.user = userService.user;\r\n\r\n        if (this.user.url == \"ClaimEntry\") {\r\n            this.router.navigate(['claim/Entry'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"agentClaims\") {\r\n            this.router.navigate(['agentclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ClaimView\") {\r\n            this.router.navigate(['claim/ClaimView'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"Claims\") {\r\n            this.router.navigate(['claim/Claims'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"ClaimEntryNominee\") {\r\n            this.router.navigate(['nominee'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"TrackClaimNominee\") {\r\n            this.router.navigate(['trackclaimnominee'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"agentclaimEntry\") {\r\n            this.router.navigate(['claim/agentclaimentry'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"agentclaims\") {\r\n            this.router.navigate(['claim/agentclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"agentdraftclaim\") {\r\n            this.router.navigate(['claim/agentdraft'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"gripsresponse\") {\r\n            this.router.navigate(['claim/gripsresponse'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"gripsdoubleverificationresponse\") {\r\n            this.router.navigate(['claim/gripsresponse'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"draftclaim\") {\r\n            this.router.navigate(['claim/claimdraft'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"claimTrack\") {\r\n            this.router.navigate(['claim/ClaimTrack'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"agentreferral\") {\r\n            this.router.navigate(['claim/agentreferral'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"referralclaims\") {\r\n            this.router.navigate(['claim/referralclaims'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"legacylist\") {\r\n            this.router.navigate(['claim/legacylist'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"legacyclaimentry\") {\r\n            this.router.navigate(['claim/legacyclaimentry'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"pfCollectionForm\") {\r\n            this.router.navigate(['claim/PfCollectionForm'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"PfDeposit\") {\r\n            this.router.navigate(['claim/PfDeposit'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"PfDepositedList\") {\r\n            this.router.navigate(['claim/PfDepositedList'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"bulkpfdeposit\") {\r\n            this.router.navigate(['claim/bulkpfdeposit'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"bulkpfdepositlist\") {\r\n            this.router.navigate(['claim/bulkpfdepositlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"bulkpfdepositcollectionlist\") {\r\n            this.router.navigate(['claim/bulkpfdepositcollectionlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"pfPayInSlipDepositedList\") {\r\n            this.router.navigate(['claim/pfPayInSlipDepositedList'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"benpfdetails\") {\r\n            this.router.navigate(['claim/benpfdetails'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"adjustemententryform\") {\r\n            this.router.navigate(['claim/adjustemententryform'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"submittedlegacypfdetails\") {\r\n            this.router.navigate(['claim/submittedlegacypfdetails'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"pfconfiguration\") {\r\n            this.router.navigate(['pfconfig/pfconfiguration'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"pfconfigurationlist\") {\r\n            this.router.navigate(['pfconfig/pfconfigurationlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"receiptbook\") {\r\n            this.router.navigate(['pfconfig/receiptbook'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"receiptbooklist\") {\r\n            this.router.navigate(['pfconfig/receiptbooklist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"educationconfiguration\") {\r\n            this.router.navigate(['pfconfig/educationconfiguration'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"educationconfigurationlist\") {\r\n            this.router.navigate(['pfconfig/educationconfigurationlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"healthfamilyconfiguration\") {\r\n            this.router.navigate(['pfconfig/healthfamilyconfiguration'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"healthfamilyconfigurationlist\") {\r\n            this.router.navigate(['pfconfig/healthfamilyconfigurationlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"deathconfiguration\") {\r\n            this.router.navigate(['pfconfig/deathconfiguration'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"deathconfigurationlist\") {\r\n            this.router.navigate(['pfconfig/deathconfigurationlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"disabilityconfiguration\") {\r\n            this.router.navigate(['pfconfig/disabilityconfiguration'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"disabilityconfigurationlist\") {\r\n            this.router.navigate(['pfconfig/disabilityconfigurationlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"benefitconfiguration\") {\r\n            this.router.navigate(['pfconfig/benefitconfiguration'], { skipLocationChange: true });\r\n        }\r\n        //\r\n\r\n        ////ALC\r\n        //else if (this.user.url == \"pfCollectionForm\") {\r\n        //    this.router.navigate(['claim/PfCollectionForm'], { skipLocationChange: true });\r\n        //}\r\n        //else if (this.user.url == \"PfDeposit\") {\r\n        //    this.router.navigate(['claim/PfDeposit'], { skipLocationChange: true });\r\n        //}\r\n        //else if (this.user.url == \"PfDepositedList\") {\r\n        //    this.router.navigate(['claim/PfDepositedList'], { skipLocationChange: true });\r\n        //}\r\n        else if (this.user.url == \"alcpendingapprovals\") {\r\n            this.router.navigate(['alc/pendingapprovalclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcapprovals\") {\r\n            this.router.navigate(['alc/approvalclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcrejection\") {\r\n            this.router.navigate(['alc/rejectclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcsendback\") {\r\n            this.router.navigate(['alc/sendbackclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcreview\") {\r\n            this.router.navigate(['alc/reviewclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcrefer\") {\r\n            this.router.navigate(['alc/referclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcreferralreview\") {\r\n            this.router.navigate(['alc/referralreview'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcreferralReject\") {\r\n            this.router.navigate(['alc/referralreject'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcreferralApprove\") {\r\n            this.router.navigate(['alc/referralapproval'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcreferralSendback\") {\r\n            this.router.navigate(['alc/referralsendback'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcpaymentprocessing\") {\r\n            this.router.navigate(['alc/paymentprocessing'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcfundrequest\") {\r\n            this.router.navigate(['alc/fundrequest'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcreviewfundrequest\") {\r\n            this.router.navigate(['alc/reviewfundrequest'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcclaimstatus\") {\r\n            this.router.navigate(['alc/claimstatus'], { skipLocationChange: true });\r\n        }\r\n        //reviewfundrequest\r\n        //\r\n        else if (this.user.url == \"alcfundrequested\") {\r\n            this.router.navigate(['alc/fundrequestedclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcpaymentprocessedlist\") {\r\n            this.router.navigate(['alc/paymentprocessedlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcreviewpaymentprocess\") {\r\n            this.router.navigate(['alc/reviewpaymentprocess'], { skipLocationChange: true });\r\n        }\r\n        //Utilization Certificate\r\n        else if (this.user.url == \"alcutilizationcertificatelist\") {\r\n            this.router.navigate(['alc/utilizationcertificatelist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"alcutilizationcertificate\") {\r\n            this.router.navigate(['alc/utilizationcertificate'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"pfinterestcalculation\") {\r\n            this.router.navigate(['alc/pfinterestcalculation'], { skipLocationChange: true });\r\n        }\r\n        //DLC\r\n        else if (this.user.url == \"dlcpendingapprovals\") {\r\n            this.router.navigate(['dlc/pendingapprovalclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcapprovals\") {\r\n            this.router.navigate(['dlc/approvalclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcrejection\") {\r\n            this.router.navigate(['dlc/rejectclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcsendback\") {\r\n            this.router.navigate(['dlc/sendbackclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcreview\") {\r\n            this.router.navigate(['dlc/reviewclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcrefer\") {\r\n            this.router.navigate(['dlc/referclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcreferralreview\") {\r\n            this.router.navigate(['dlc/referralreview'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcfundrequested\") {\r\n            this.router.navigate(['dlc/fundrequestedclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcreviewfundrequest\") {\r\n            this.router.navigate(['dlc/reviewfundrequest'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcsendbackfundrequestlist\") {\r\n            this.router.navigate(['dlc/sendbackfundrequestlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcforwardfundrequestlist\") {\r\n            this.router.navigate(['dlc/forwardfundrequestlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcclaimstatus\") {\r\n            this.router.navigate(['dlc/claimstatus'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"dlcutilizationcertificatelist\") {\r\n            this.router.navigate(['dlc/utilizationcertificatelist'], { skipLocationChange: true });\r\n        }\r\n        //else if (this.user.url == \"dlcpfinterestcalculation\") {\r\n        //    this.router.navigate(['dlc/pfinterestcalculation'], { skipLocationChange: true });\r\n        //}\r\n        //Tresurer\r\n        else if (this.user.url == \"tresurerpaymentrelease\") {\r\n            this.router.navigate(['tresurer/paymentrelease'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"tresurerfundreleaselist\") {\r\n            this.router.navigate(['tresurer/fundreleaselist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"tresurerfundrelease\") {\r\n            this.router.navigate(['tresurer/fundrelease'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"tresurerpaymentprocessedlist\") {\r\n            this.router.navigate(['tresurer/paymentprocessedlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"tresurerpendingfundreleaselist\") {\r\n            this.router.navigate(['tresurer/pendingfundreleaselist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"tresurerpaymentreleasedlist\") {\r\n            this.router.navigate(['tresurer/paymentreleasedlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"tresurerreviewpaymentrelease\") {\r\n            this.router.navigate(['tresurer/reviewpaymentrelease'], { skipLocationChange: true });\r\n        }\r\n        //Inspector\r\n        else if (this.user.url == \"inspectorpendingapprovals\") {\r\n            this.router.navigate(['inspector/pendingapprovalclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"inspectorapprovals\") {\r\n            this.router.navigate(['inspector/approvalclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"inspectorrejection\") {\r\n            this.router.navigate(['inspector/rejectclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"inspectorsendback\") {\r\n            this.router.navigate(['inspector/sendbackclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"inspectorreview\") {\r\n            this.router.navigate(['inspector/reviewclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"forceclose\") {\r\n            this.router.navigate(['inspector/forcecloseclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"claimstatus\") {\r\n            this.router.navigate(['inspector/claimstatus'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"inspectorlegacylist\") {\r\n            this.router.navigate(['inspector/inspectorlegacylist'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"inspectorlegacyclaimentry\") {\r\n            this.router.navigate(['inspector/inspectorlegacyclaimentry'], { skipLocationChange: true });\r\n\r\n        }\r\n        else if (this.user.url == \"searchstudent\") {\r\n            this.router.navigate(['inspector/searchstudent'], { skipLocationChange: true });\r\n\r\n        }\r\n        //CEO\r\n        else if (this.user.url == \"ceofundrequestlist\") {\r\n            this.router.navigate(['ceo/fundrequestlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ceofundrequest\") {\r\n            this.router.navigate(['ceo/fundrequest'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ceosendbackfundrequestlist\") {\r\n            this.router.navigate(['ceo/sendbackfundrequestlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ceoapprovedfundrequestlist\") {\r\n            this.router.navigate(['ceo/approvedfundrequestlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ceorejectedfundrequestlist\") {\r\n            this.router.navigate(['ceo/rejectedfundrequestlist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ceoclaimstatus\") {\r\n            this.router.navigate(['ceo/claimstatus'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ceoreview\") {\r\n            this.router.navigate(['ceo/reviewclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"ceoutilizationcertificatelist\") {\r\n            this.router.navigate(['ceo/utilizationcertificatelist'], { skipLocationChange: true });\r\n        }\r\n        //pfconfig\r\n        else if (this.user.url == \"pfinterestconfig\") {\r\n            this.router.navigate(['pfconfig/pfinterestconfig'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"pfinterestconfiglist\") {\r\n            this.router.navigate(['pfconfig/pfinterestconfiglist'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"pfcommissionconfig\") {\r\n            this.router.navigate(['pfconfig/pfcommissionconfig'], { skipLocationChange: true });\r\n        }\r\n        else if (this.user.url == \"pfcommissionconfiglist\") {\r\n            this.router.navigate(['pfconfig/pfcommissionconfiglist'], { skipLocationChange: true });\r\n        }\r\n    }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common'\r\nimport { AppComponent } from './app.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserService } from './UserService';\r\nimport { UserUrl } from './models/userurl.model';\r\nimport { ClaimEntryNomineeComponent } from './claim-entry-nominee/claim-entry-nominee.component';\r\nimport { ApiService } from './services/api.service';\r\nimport { DropdownListService } from './services/dropdown-list.service';\r\nimport { ToasterService } from './services/toaster.service';\r\nimport { SpinnerService } from './services/spinner.service';\r\nimport { GlobalErrorHandlingService } from './services/global-error-handling.service';\r\nimport { AddAuthorizationHeader } from './services/add-authorization-header.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModalModule, AccordionModule, AlertModule, BsDatepickerModule } from \"ngx-bootstrap\";\r\nimport { ClaimNomineeDataService } from './services/claim-data.service';\r\nimport { NgDatepickerModule } from 'ng2-datepicker';\r\nimport { NumberOnlyDirective } from './number.directive';\r\nimport { AtomSpinnerModule } from 'angular-epic-spinners'\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\r\nimport { ExcelService } from './services/excel.service';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n//import { FundRequestListComponent } from './ceo/fund-request-list/fund-request-list.component';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TrackClaimNomineeComponent } from './track-claim-nominee/track-claim-nominee.component';\r\nimport { PfconfiguartionComponent } from './pf/pfconfiguartion/pfconfiguartion.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ClaimEntryNomineeComponent,\r\n        NumberOnlyDirective,\r\n        TrackClaimNomineeComponent,\r\n        PfconfiguartionComponent//,\r\n        //FundRequestListComponent\r\n        \r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        NgDatepickerModule,\r\n        BsDatepickerModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        AccordionModule.forRoot(),\r\n        AlertModule.forRoot(),\r\n        NgMultiSelectDropDownModule.forRoot(),\r\n        AtomSpinnerModule,\r\n        NgbModule,\r\n        PdfViewerModule,\r\n        RouterModule.forRoot([\r\n            {\r\n                path: 'claim',\r\n                loadChildren: './claim/claim.module#ClaimModule',\r\n            },\r\n            {\r\n                path: 'inspector',\r\n                loadChildren: './inspector/inspector.module#InspectorModule',\r\n            },\r\n            {\r\n                path: 'dlc',\r\n                loadChildren: './dlc/dlc.module#DlcModule',\r\n            },\r\n            {\r\n                path: 'alc',\r\n                loadChildren: './alc/alc.module#AlcModule',\r\n            },\r\n            {\r\n                path: 'tresurer',\r\n                loadChildren: './tresurer/tresurer.module#TresurerModule',\r\n            },\r\n            {\r\n                path: 'ceo',\r\n                loadChildren: './ceo/ceo.module#CeoModule',\r\n            },\r\n            {\r\n                path: 'nominee', component: ClaimEntryNomineeComponent\r\n            },\r\n            {\r\n                path: 'trackclaimnominee', component: TrackClaimNomineeComponent\r\n            },\r\n            {\r\n                path: 'pfconfig',\r\n                loadChildren: './pfconfig/pfconfig.module#PfconfigModule',\r\n            },\r\n        ])\r\n    ],\r\n    providers: [UserService, UserUrl, ApiService, ExcelService,\r\n       ClaimNomineeDataService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AddAuthorizationHeader,\r\n            multi: true\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"\\r\\n\\r\\n\\r\\n\\r\\n<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <!-- row -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- NEW WIDGET START -->\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <!-- Widget ID (each widget will need unique ID)-->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Claim Entry</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form\\\">\\r\\n                            <header>Beneficiary Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"beneficiary==null\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please enter valid SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"benficiaryInactive\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Your registration application is in Inactive/Sent Back/Pending status and you are not eligible to this feature.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"validateDependent\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please add atleast one claim to proceed</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"noDependents\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>No dependents available for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"maxLimitExceeded\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red\\\">\\r\\n                                            <label>Maximum claims limit has been reached for this year</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"maxHelathClaimLimitExceeded\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red\\\">\\r\\n                                            <label>Maximum claims limit for health has been reached for this year</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"pfExsits\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>No pf available for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isPFSubmitted\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>PF claim already submitted for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!isNomineesExist\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>No nominees available for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!isNomineesMatch\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please enter valid nominee details</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isHFSubmitted\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Your not eligible for Health & Family claim for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isEduSubmitted\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Your not eligible for Education claim for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isBenNomineeSubmittedClaim\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Claims are entered through the nominee/agent with the reason of death, till it is resolved you are not allowed to submit the claim</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isCAFUpdated\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please update details</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isClaimEffectiveDate\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Can not raise/submit claims before {{claimEffectiveDate | date: 'dd/MM/yyyy'}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\" (change)=\\\"radioChange(1)\\\" />\\r\\n                                                <i></i>SSIN\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" (change)=\\\"radioChange(2)\\\" />\\r\\n                                                <!--[(ngModel)]=\\\"fundRequestType\\\" value=\\\"expenses\\\">-->\\r\\n                                                <i></i>Old Registration No.\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateCAFDetails()\\\" *ngIf=\\\"isCAFUpdated\\\">\\r\\n                                                Please update details\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">SSIN/Old Registration No. <span [style.color]=\\\"!ssnNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"benSno\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ssin\\\" placeholder=\\\"Enter SSIN/Old Registration No.\\\"\\r\\n                                                   (change)=\\\"valuechange($event.target.value)\\\"\\r\\n                                                   maxlength=\\\"50\\\"\\r\\n                                                   #benSno=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': benSno.invalid && (!ssnNoValid || benSno.touched), 'valid-data': benSno.valid && ssnNoValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"benSno.invalid && (!ssnNoValid ||benSno.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">SSIN/Old Registration No is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Nominee Name <span [style.color]=\\\"!nomineeNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"nomineeName\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Name\\\" [(ngModel)]=\\\"claim.nomineeName\\\" maxlength=\\\"100\\\"\\r\\n                                                   #nomineeName=\\\"ngModel\\\" (change)=\\\"ValidateNomineeName($event.target.value)\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': nomineeName.invalid && (!nomineeNameValid || nomineeName.touched ), 'valid-data': nomineeName.valid && nomineeNameValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"nomineeName.invalid && (!nomineeNameValid ||nomineeName.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Nominee Name is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Nominee Address</label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <textarea name=\\\"nomineeAddress\\\" class=\\\"form-control\\\" rows=\\\"4\\\" cols=\\\"40\\\" placeholder=\\\"Nominee Address\\\" [(ngModel)]=\\\"claim.nomineeAddress\\\" maxlength=\\\"500\\\"></textarea>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Contact Number <span [style.color]=\\\"!nomineeContactValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"nomineeContact\\\" class=\\\"form-control\\\" placeholder=\\\"Contact Number\\\" [(ngModel)]=\\\"claim.nomineeContact\\\" NumbersOnly minlength=\\\"10\\\" maxlength=\\\"10\\\"\\r\\n                                                   #nomineeContact=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': nomineeContact.invalid && (!nomineeContactValid || nomineeContact.touched ), 'valid-data': nomineeContact.valid && nomineeContactValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"nomineeContact.invalid && (!nomineeContactValid ||nomineeContact.touched) && !nomineeContact.errors.minlength\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Contact Number is required </span>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"nomineeContact.invalid && (nomineeContact.errors.minlength) \\\">\\r\\n                                                <span style=\\\"color: red;\\\">Invalid Contact Number </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Nominee Date of Birth <span [style.color]=\\\"!nomineeDOBValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                            <input type=\\\"text\\\" name=\\\"nomineeDOB\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   #nomineeDOB=\\\"ngModel\\\" (bsValueChange)=\\\"ValidateNomineeDOB($event)\\\"\\r\\n                                                   value=\\\"{{ claim.nomineeDOB | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"claim.nomineeDOB\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':nomineeDOB.invalid && (!nomineeDOBValid), 'valid-data':nomineeDOB.valid && nomineeDOBValid}\\\"\\r\\n                                                   required>\\r\\n                                            <i></i>\\r\\n\\r\\n                                            <div *ngIf=\\\"nomineeDOB.invalid && (!nomineeDOBValid)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Nominee Date of Birth is required </span>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Nominee Bank Account <span [style.color]=\\\"!nomineeBankAccountValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"nomineeBankAccount\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Bank Account \\\" [(ngModel)]=\\\"claim.nomineeBankAccount\\\" minlength=\\\"9\\\" maxlength=\\\"18\\\" NumbersOnly\\r\\n                                                   #nomineeBankAccount=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': nomineeBankAccount.invalid && (!nomineeBankAccountValid || nomineeBankAccount.touched ), 'valid-data': nomineeBankAccount.valid && nomineeBankAccountValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"nomineeBankAccount.invalid && (!nomineeBankAccountValid ||nomineeBankAccount.touched) && !nomineeBankAccount.errors.minlength\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Nominee Bank Account is required </span>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"nomineeBankAccount.invalid && (nomineeBankAccount.errors.minlength)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Invalid Bank Account Number </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">IFSC Code </label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"nomineeIFSCCode\\\" class=\\\"form-control\\\" placeholder=\\\"IFSC Code\\\" [(ngModel)]=\\\"claim.nomineeIFSCCode\\\" maxlength=\\\"11\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\" id=\\\"CheckBoxList\\\">\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <!--<label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" disabled=\\\"disabled\\\" name=\\\"checkbox\\\" [checked]=\\\"viewPf\\\" (change)=\\\"pfChange($event)\\\"><i></i>PF(Provident Fund)</label>-->\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input name=\\\"pf\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disablePFCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"viewPf\\\" (change)=\\\"pfChange($event)\\\"><i></i>PF(Provident Fund)</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disableHealthCheckbox\\\" name=\\\"checkbox1\\\" [checked]=\\\"viewHealth\\\" (change)=\\\"healthChange($event)\\\"><i></i>Health & Family</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive\\\" name=\\\"viewDeath1\\\" [checked]=\\\"viewDeath\\\" (change)=\\\"deathChange($event)\\\"><i></i>Death</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox1\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disableEduCheckbox\\\" [checked]=\\\"viewEducation\\\" (change)=\\\"educationChange($event)\\\"><i></i>Education</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"form-pf\\\" *ngIf=\\\"viewPf\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    PF No. {{beneficiary.regNumber}}\\r\\n                                                </label>\\r\\n                                                <!--removed as per 17th discussions, in future this has to be open-->\\r\\n                                                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pFNO\\\" placeholder=\\\" PF Number\\\" [(ngModel)]=\\\"claim.providentFundDetails.pFNO\\\">-->\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Claim Amount {{pfClaimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <!--<section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Date of Maturity {{benMaturityDate  | date: 'dd/MM/yyyy'}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Locking Period Up-to\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>-->\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Type of Claim  FinalPayment\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"viewNomineeShare\\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Nominee Share Amount {{benNomineeShareAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"health-family\\\" *ngIf=\\\"viewHealth\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Type of Claim<span [style.color]=\\\"!typeOfClaimValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"typeOfClaim\\\" id=\\\"selclaim\\\" (change)=\\\"typeOfClaimChange($event.target.value)\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.typeOfClaim\\\"\\r\\n                                                #typeOfClaim=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': typeOfClaim.invalid && ( !typeOfClaimValid || typeOfClaim.touched ),\\r\\n                                        'valid-data': typeOfClaimValid && typeOfClaim.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose a Type of Claim</option>\\r\\n                                            <option value=\\\"{{health.claimConfigId}}\\\" *ngFor=\\\"let health of healthConfig\\\">{{health.claimConfigOptionName}}</option>\\r\\n                                        </select> <i></i>\\r\\n                                        <div *ngIf=\\\"typeOfClaim.invalid && (!typeOfClaimValid || typeOfClaim.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select a Type of Claim </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Hospital <span [style.color]=\\\"!hospital?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"hospitalId\\\" id=\\\"ddlhospital\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.hospitalId\\\"\\r\\n                                                #hospitalId=\\\"ngModel\\\" (change)=\\\"hospitalChange($event.target.value)\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': hospitalId.invalid && ( !hospital || hospitalId.touched ),\\r\\n                                        'valid-data': hospital && hospitalId.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose a Hospital</option>\\r\\n                                            <option value=\\\"{{hospital.hospitalId}}\\\" *ngFor=\\\"let hospital of hospotalList\\\">{{hospital.hospitalName}}</option>\\r\\n                                        </select> <i></i>\\r\\n\\r\\n                                        <div *ngIf=\\\"hospitalId.invalid && (!hospital || hospitalId.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select a Hospital </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"isOtherHospital\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Govt./Municipal Hospital <span [style.color]=\\\"!otherHospitalValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"otherHospital\\\" placeholder=\\\"Govt./Municipal Hospital\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.otherHospital\\\"\\r\\n                                                   maxlength=\\\"150\\\" #otherHospital=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': otherHospital.invalid && ( !otherHospitalValid || otherHospital.touched ),\\r\\n                                                        'valid-data': otherHospitalValid && otherHospital.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"otherHospital.invalid && (!otherHospitalValid || otherHospital.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Govt./Municipal Hospital is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"inoutward\\\">\\r\\n                                        <label class=\\\"label\\\">Hospitalization/OPD <span [style.color]=\\\"!hospitalization?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"typeOfHospitalization\\\" id=\\\"ddinward\\\" (change)=\\\"hospitalizationChange($event.target.value)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.typeOfHospitalization\\\"\\r\\n                                                #typeOfHospitalization=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': typeOfHospitalization.invalid && (!hospitalization || typeOfHospitalization.touched ),\\r\\n                                        'valid-data': hospitalization && typeOfHospitalization.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{hosp.lovDtlId}}\\\" *ngFor=\\\"let hosp of hospitalizationLov\\\">{{hosp.optionName}}</option>\\r\\n                                        </select><i></i>\\r\\n\\r\\n                                        <div *ngIf=\\\"typeOfHospitalization.invalid && (!hospitalization || typeOfHospitalization.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Hospitalization/OPD </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Patient Id </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"patientId\\\" placeholder=\\\"Patient Id\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.patientId\\\" maxlength=\\\"50\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"viewDateOfFirstAppointment\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Name of Disease </label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"nameOfDisease\\\" id=\\\"ddinward\\\" (change)=\\\"nameOfDiseaseChange($event.target.value)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.nameOfTheDisease\\\">\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{dise.lovDtlId}}\\\" *ngFor=\\\"let dise of diseasesLov\\\">{{dise.optionName}}</option>\\r\\n                                        </select><i></i>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewNameOfClinicalTest\\\">\\r\\n                                        <label class=\\\"label\\\">Name of clinical test </label>\\r\\n                                        <ng-multiselect-dropdown name=\\\"nameOfClinicalTest\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                 [data]=\\\"clinicalTestLov\\\"\\r\\n                                                                 [(ngModel)]=\\\"nameOfClinicalTestIds\\\"\\r\\n                                                                 [settings]=\\\"clinicalTestSettings\\\"\\r\\n                                                                 (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                                 (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                        </ng-multiselect-dropdown>\\r\\n                                        <!--<select class=\\\"form-control select\\\" name=\\\"nameOfClinicalTest\\\" id=\\\"ddinward\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.nameOfClinicalTest\\\">\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{clin.lovDtlId}}\\\" *ngFor=\\\"let clin of clinicalTestLov\\\">{{clin.optionName}}</option>\\r\\n                                        </select><i></i>-->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section id=\\\"chkAccident\\\" class=\\\"col col-6\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                        <label class=\\\"label\\\">Met with an Accident?</label>\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isAccident\\\" id=\\\"chkAcc\\\" (change)=\\\"chkAccidentChange($event,claim.healthFamilyDetails.isAccident)\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.isAccident\\\"><i></i>Yes</label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secFirstApp\\\" *ngIf=\\\"viewDateOfFirstAppointment\\\">\\r\\n                                        <label class=\\\"label\\\">Date of First Appointment <span [style.color]=\\\"!dateofAppointment?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"firstAppointmentDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.healthFamilyDetails.firstAppointmentDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"claim.healthFamilyDetails.firstAppointmentDate\\\" readonly\\r\\n                                                   #firstAppointmentDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':firstAppointmentDate.invalid && (!dateofAppointment), 'valid-data': firstAppointmentDate.valid && dateofAppointment}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"firstAppointmentDate.invalid && (!dateofAppointment)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of First Appointment is required </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"viewDateOfAdmit\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secAdmit\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Admission to Hospital <span [style.color]=\\\"!dateofAdmin?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"dateofAdmit\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.healthFamilyDetails.admittedDate | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.admittedDate\\\" (bsValueChange)=\\\"dateofadminchange($event)\\\" readonly>-->\\r\\n\\r\\n                                            <input type=\\\"text\\\" name=\\\"admittedDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   #admittedDate=\\\"ngModel\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.admittedDate\\\"\\r\\n                                                   value=\\\"{{ claim.healthFamilyDetails.admittedDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   (bsValueChange)=\\\"dateofadminchange($event)\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':admittedDate.invalid && (!dateofAdmin), 'valid-data':admittedDate.valid && dateofAdmin}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"admittedDate.invalid && (!dateofAdmin)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of Admission to Hospital is required </span>\\r\\n                                            of\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secDischarge\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Discharge <span [style.color]=\\\"!dateofDischargeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"dateofDischarge\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" [minDate]=\\\"dischargeMinDt\\\" [disabled]=\\\"disableDischarge\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"claim.healthFamilyDetails.dischargeDate | date: 'dd/MM/yyyy'\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.dischargeDate\\\" (bsValueChange)=\\\"dateofdischargechange($event)\\\" readonly>-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"dischargeDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   [minDate]=\\\"dischargeMinDt\\\" [disabled]=\\\"disableDischarge\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   #dischargeDate=\\\"ngModel\\\"\\r\\n                                                   [(ngModel)]=\\\"claim.healthFamilyDetails.dischargeDate\\\"\\r\\n                                                   value=\\\"{{claim.healthFamilyDetails.dischargeDate | date: 'dd/MM/yyyy'}}\\\"\\r\\n                                                   (bsValueChange)=\\\"dateofdischargechange($event)\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':dischargeDate.invalid && (!dateofDischargeValid), 'valid-data':dischargeDate.valid && dateofDischargeValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"dischargeDate.invalid && (!dateofDischargeValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of discharge is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Cost of Clinical Test </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfClinicalTest\\\" placeholder=\\\"Cost of Clinical Test\\\" NumbersOnly [(ngModel)]=\\\"claim.healthFamilyDetails.costOfClinicalTest\\\" [disabled]=\\\"disableCost\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n\\r\\n                                        <label class=\\\"label\\\">Cost of Medicine </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfMedicine\\\" placeholder=\\\"Cost of Medicine\\\" NumbersOnly [(ngModel)]=\\\"claim.healthFamilyDetails.costOfMedicine\\\" [disabled]=\\\"disableCost\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Claim for <span [style.color]=\\\"!claimForValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"claimFor\\\" id=\\\"claimFor\\\" (change)=\\\"claimForChange($event)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.claimFor\\\"\\r\\n                                                #claimFor=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data':claimFor.invalid && (!claimForValid ||  claimFor.touched ), 'valid-data': claimFor.valid && claimForValid}\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{htype.lovDtlId}}\\\" *ngFor=\\\"let htype of healthtypeofClaim\\\">{{htype.optionName}}</option>\\r\\n                                        </select> <i></i>\\r\\n\\r\\n\\r\\n                                        <div *ngIf=\\\"claimFor.invalid && (!claimForValid ||  claimFor.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Claim for is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewDateOfAdmit\\\">\\r\\n                                        <label class=\\\"label\\\">Cost of Hospitalization </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfHospitalization\\\" NumbersOnly placeholder=\\\"Cost of Hospitalization\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.costOfHospitalization\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"family\\\" *ngIf=\\\"viewFamily\\\">\\r\\n                                        <label class=\\\"label\\\">Family Member <span [style.color]=\\\"!familyMember?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select class=\\\"form-control select\\\" name=\\\"familyMemberId\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.familyMemberId\\\"\\r\\n                                                    #familyMemberId=\\\"ngModel\\\"\\r\\n                                                    [ngClass]=\\\"{'invalid-data':familyMemberId.invalid && (!familyMember ||  familyMemberId.touched), 'valid-data': familyMemberId.valid && familyMember}\\\"\\r\\n                                                    required>\\r\\n                                                <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{benf.benFamilyMemSno}}\\\" *ngFor=\\\"let benf of benficiaryFamilybyHealth\\\">{{benf.benDependentName}} - {{benf.benDependentRelation}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"familyMemberId.invalid && (!familyMember ||  familyMemberId.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Family Member is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"enableReasonForDelaySubmissionInHealth\\\">\\r\\n                                        <label class=\\\"label\\\">Reason for Delay Submission <span [style.color]=\\\"!reasonForHealthDelayValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"reasonForHealthDelay\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.reasonForDelaySubmission\\\" placeholder=\\\"Reason for Delay Submission\\\"></textarea>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!reasonForHealthDelayValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Reason for Delay Submission is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row top-10\\\" id=\\\"lossOfEmployment\\\" *ngIf=\\\"viewSelf\\\">\\r\\n                                    <section class=\\\"col col-12\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Loss of Employment</strong></label>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row top-10\\\" id=\\\"daterangeloe\\\" *ngIf=\\\"viewSelf\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">From Date<span [style.color]=\\\"!loeFromDate?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"lossOfEmploymentFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\"\\r\\n                                                   [disabled]=\\\"true\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   [ngModel]=\\\"claim.healthFamilyDetails.loeFromDate | date: 'dd/MM/yyyy'\\\" readonly\\r\\n                                                   #lossOfEmploymentFromDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':lossOfEmploymentFromDate.invalid && (!loeFromDate ||  lossOfEmploymentFromDate.touched), 'valid-data': lossOfEmploymentFromDate.valid && loeFromDate}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"lossOfEmploymentFromDate.invalid && (!loeFromDate ||  lossOfEmploymentFromDate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Form Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">To Date<span [style.color]=\\\"!loeToDate?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"lossOfEmploymentToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\"\\r\\n                                                   [disabled]=\\\"true\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   [ngModel]=\\\"claim.healthFamilyDetails.loeToDate | date: 'dd/MM/yyyy'\\\" readonly\\r\\n                                                   #lossOfEmploymentToDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':lossOfEmploymentToDate.invalid && (!loeToDate ||  lossOfEmploymentToDate.touched), 'valid-data': lossOfEmploymentToDate.valid && loeToDate}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"lossOfEmploymentToDate.invalid && (!loeToDate ||  lossOfEmploymentToDate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">To Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewLOEAmount\\\">\\r\\n                                        <label class=\\\"label\\\" style=\\\"margin-top:30px;\\\">Loss of Employment Benefit: {{lossOfEmploymentAmount}}/- </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Packages</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <a (click)=\\\"viewPackages()\\\" class=\\\"smart-form-link\\\">View All Packages</a>\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                    <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th>Package Name</th>\\r\\n                                                <th> Package Code</th>\\r\\n                                                <th>Ailment Name</th>\\r\\n                                                <th>Amount</th>\\r\\n\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr *ngFor=\\\"let pak of selectedPackages\\\">\\r\\n                                                <td>{{pak.packageName}}</td>\\r\\n                                                <td>{{pak.packageCode}}</td>\\r\\n                                                <td>{{pak.ailmentName}}</td>\\r\\n                                                <td>{{pak.amount}}</td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"showDisCertUpload\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">\\r\\n                                            Discharge Certificate from Govt./Empanelled Hospital\\r\\n                                            <span [style.color]=\\\"!dischargeCertificate?'red':''\\\"><b>*</b></span>\\r\\n                                        </label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'dischargeCertificate')\\\">Browse</span>\\r\\n                                            <input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"(!dischargeCertificate) && (healthDischargeCertificate.fileName =='' || healthDischargeCertificate.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Discharge certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthDischargeCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Original Vouchers </label>  <!--<span [style.color]=\\\"!originalVoucher?'red':''\\\"><b>*</b></span>-->\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" (change)=\\\"changeCertificate($event,'originalVoucher')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <!--<div *ngIf=\\\"(!originalVoucher) && (healthOriginalVoucher.fileName =='' || healthOriginalVoucher.fileName ==undefined)\\\">\\r\\n                <span style=\\\"color: red;\\\">Original vouchers is required </span>\\r\\n            </div>-->\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthOriginalVoucher.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Self attested copy of doctor's last prescription <span [style.color]=\\\"!hospitalselfAttested?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'healthselfAttest')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!hospitalselfAttested) && (healthSelfAttached.fileName =='' || healthSelfAttached.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Self attested is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthSelfAttached.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Expenses Sheet </label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'healthExpensesSheet')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthExpensesSheet.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"enableReasonForDelaySubmissionInHealth\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Condonation certificate  <span [style.color]=\\\"!healthCondolationCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"healthCondolationCertificate\\\" (change)=\\\"changeCertificate($event,'healthCondolationCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!healthCondolationCertificateUploaded) && (healthCondolationCertificate.fileName =='' || healthCondolationCertificate.fileName == undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Condonation certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthCondolationCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isCertifynotESI\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.isCertifynotESI\\\"\\r\\n                                                       #isCertifynotESI=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':isCertifynotESI.invalid && (!rigisterESI ||  isCertifynotESI.touched), 'valid-data': isCertifynotESI.valid && rigisterESI}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that\\r\\n                                                I am not registered under ESI Act, 1948 or RSBY or Swasthya Sathi or WBTWSSS\\r\\n                                                <span [style.color]=\\\"!rigisterESI?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isCertifynotESI.invalid && (!rigisterESI ||  isCertifynotESI.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of ESI Act is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"death\\\" *ngIf=\\\"viewDeath\\\">\\r\\n                                <header>Death</header>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdeath1\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Nature of Death <span [style.color]=\\\"!natureOfDeath?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select name=\\\"gender\\\" id=\\\"natureofDeathDropdown\\\" (change)=\\\"natureOfDeathChange($event.target.value)\\\" [(ngModel)]=\\\"claim.deathDetails.natureofDeath\\\"\\r\\n                                                    #natureofDeathDropdown=\\\"ngModel\\\"\\r\\n                                                    [ngClass]=\\\"{'invalid-data': natureofDeathDropdown.invalid && ( !natureOfDeath || natureofDeathDropdown.touched ),\\r\\n                                                    'valid-data': natureOfDeath && natureofDeathDropdown.valid  }\\\" required>\\r\\n                                                <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{death.claimConfigId}}\\\" *ngFor=\\\"let death of deathConfig\\\">{{death.claimConfigOptionName}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"natureofDeathDropdown.invalid && (!natureOfDeath || natureofDeathDropdown.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Nature of Death </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Death <span [style.color]=\\\"!dateofDeath?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"deathDatePicker\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                [(bsValue)]=\\\"claim.deathDetails.dateofDeath\\\" readonly>-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"dateofDeathDatePicker\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"claim.deathDetails.dateofDeath\\\"\\r\\n                                                   value=\\\"{{ claim.deathDetails.dateofDeath | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   #dateofDeathDatePicker=\\\"ngModel\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':dateofDeathDatePicker.invalid && (!dateofDeath),\\r\\n                                                   'valid-data':dateofDeathDatePicker.valid && dateofDeath}\\\" required>\\r\\n\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"dateofDeathDatePicker.invalid && (!dateofDeath)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of Death is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdeath2\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"PlaceOfDeath\\\" *ngIf=\\\"viewAccidental\\\">\\r\\n                                        <label class=\\\"label\\\">Place of Death<span [style.color]=\\\"!placeOfDeathValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"placeofDeath\\\" placeholder=\\\" Place of Death\\\" #placeofDeath=\\\"ngModel\\\"\\r\\n                                               [(ngModel)]=\\\"claim.deathDetails.placeofDeath\\\"\\r\\n                                               [ngClass]=\\\"{'invalid-data': placeofDeath.invalid && (!placeOfDeathValid || placeofDeath.touched), 'valid-data': placeofDeath.valid && placeOfDeathValid }\\\" required />\\r\\n                                        <div *ngIf=\\\"placeofDeath.invalid && (!placeOfDeathValid ||placeofDeath.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Place of Death is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"> Details of Death</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"detailsofDeath\\\" rows=\\\"4\\\" cols=\\\"72\\\" placeholder=\\\"Details of death\\\" [(ngModel)]=\\\"claim.deathDetails.detailsofDeath\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"eligibleAmountdeath\\\" *ngIf=\\\"viewEligibilityAmount\\\">\\r\\n                                        <label class=\\\"label\\\">Eligible Amount: {{deathEligibility}} </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Attested copy of Death Certificate<span [style.color]=\\\"!deathCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'deathCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                            <!--<span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" onchange=\\\"this.parentNode.nextSibling.value = this.value\\\">Browse</span><input type=\\\"text\\\" readonly>-->\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!deathCertificateUploaded) && (deathCertificate.fileName =='' || deathCertificate.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Death certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{deathCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">First Page of Bank Passbook<span [style.color]=\\\"!bankPassbookUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'bankPassbook')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!bankPassbookUploaded) && (bankPassbook.fileName =='' || bankPassbook.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">First Page of Bank Passbook is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{bankPassbook.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathnotcausedbyintentional\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional\\\"\\r\\n                                                       #isDeathnotcausedbyintentional=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathnotcausedbyintentional.invalid && (!isDeath1 ||  isDeathnotcausedbyintentional.touched), 'valid-data': isDeathnotcausedbyintentional.valid && isDeath1}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that the Death or permanent disability not caused by intentional self injury, suicide or attempted suicide, insanity or immorality or under influence of intoxicating liquor, drug or narcotic\\r\\n                                                <span [style.color]=\\\"!isDeath1?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathnotcausedbyintentional.invalid && (!isDeath1 ||  isDeathnotcausedbyintentional.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of Death or permanent disability not caused by intentional self injury is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathnotcausedbyinjuries\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries\\\"\\r\\n                                                       #isDeathnotcausedbyinjuries=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathnotcausedbyinjuries.invalid && (!isDeath2 ||  isDeathnotcausedbyinjuries.touched), 'valid-data': isDeathnotcausedbyinjuries.valid && isDeath2}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that Death or permanent disability not caused by injuries resulting from riots, civil commotions, or racing of any kind\\r\\n                                                <span [style.color]=\\\"!isDeath2?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathnotcausedbyinjuries.invalid && (!isDeath2 ||  isDeathnotcausedbyinjuries.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of Death or permanent disability not caused by injuries is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathOtherFinancialAssistance\\\" [(ngModel)]=\\\"claim.deathDetails.isOtherFinancialAssistance\\\"\\r\\n                                                       #isDeathOtherFinancialAssistance=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathOtherFinancialAssistance.invalid && (!isDeath3 ||  isDeathOtherFinancialAssistance.touched), 'valid-data': isDeathOtherFinancialAssistance.valid && isDeath3}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that I am not in receipt of any financial assistance of similar nature from the government\\r\\n                                                <span [style.color]=\\\"!isDeath3?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathOtherFinancialAssistance.invalid && (!isDeath3 ||  isDeathOtherFinancialAssistance.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of not in receipt of any financial assistance is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <!--<fieldset id=\\\"death-diasability\\\" *ngIf=\\\"viewDeath\\\">\\r\\n                                <header>Death & Disability</header>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdisability1\\\" style=\\\"display: none;\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Date of release from hospital/Accident</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"request\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" formControlName=\\\"dtDateOfReleaseFromHospital\\\" placeholder=\\\"DD/MM/YYYY\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Nature of Disability</label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select name=\\\"gender\\\" id=\\\"natureOfDisability\\\" onchange=\\\"amountDisplay()\\\">\\r\\n                                                <option value=\\\"0\\\">Choose an Option</option>\\r\\n                                                <option value=\\\"{{dis.claimConfigId}}\\\" *ngFor=\\\"let dis of disabilityConfig\\\">{{dis.claimConfigOptionName}}</option>\\r\\n\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdisability2\\\" style=\\\"display: none;\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"> Details of Disability</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"request\\\" rows=\\\"4\\\" cols=\\\"72\\\" placeholder=\\\"Details of disability\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"eligibleAmount\\\" style=\\\"display: none;\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Eligible Amount:</strong> </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label id=\\\"amtbasedonDisability\\\"> </label>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdeath1\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Nature of Death</label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select name=\\\"natureofDeath\\\" id=\\\"selnature\\\" (change)=\\\"natureOfDeathChange($event.target.value)\\\" [(ngModel)]=\\\"claim.deathDetails.natureofDeath\\\">\\r\\n                                                <option value=\\\"0\\\">Choose an Option</option>\\r\\n                                                <option value=\\\"{{death.claimConfigId}}\\\" *ngFor=\\\"let death of deathConfig\\\">{{death.claimConfigOptionName}}</option>\\r\\n\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Death</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"dateofDeath\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" formControlName=\\\"dtDateofDeath\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   [(bsValue)]=\\\"claim.deathDetails.dateofDeath\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdeath2\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"PlaceOfDeath\\\" *ngIf=\\\"viewAccidental\\\">\\r\\n                                        <label class=\\\"label\\\">Place of Death </label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"placeofDeath\\\" placeholder=\\\" Place of Death\\\" [(ngModel)]=\\\"claim.deathDetails.placeofDeath\\\">\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"> Details of Death</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"detailsofDeath\\\" rows=\\\"4\\\" cols=\\\"72\\\" placeholder=\\\"Details of disability\\\" [(ngModel)]=\\\"claim.deathDetails.detailsofDeath\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"eligibleAmountdeath\\\" *ngIf=\\\"viewEligibilityAmount\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Eligible Amount:</strong> </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label id=\\\"amtbasedonDisability\\\">{{deathEligibility}}</label>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Attested copy of Death Certificate</label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" onchange=\\\"this.parentNode.nextSibling.value = this.value\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Certificate of disability from the competent authority</label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" onchange=\\\"this.parentNode.nextSibling.value = this.value\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyintentional\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional\\\"><i></i>I Certify that the\\r\\n                                                Death or permanent disability not caused by intentional self injury, suicide or attempted suicide, insanity or immorality or under influence of intoxicating liquor, drug or narcotic\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyinjuries\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries\\\"><i></i>I Certify that Death or permanent disability not caused by injuries resulting from riots, civil commotions, or racing of any kind</label>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isOtherFinancialAssistance\\\" [(ngModel)]=\\\"claim.deathDetails.isOtherFinancialAssistance\\\"><i></i>I Certify that I am not in receipt of any financial assistance of similar nature from the government</label>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>-->\\r\\n                            <fieldset id=\\\"education\\\" *ngIf=\\\"viewEducation\\\" [disabled]=\\\"disableEdu\\\">\\r\\n                                <header>Education </header>\\r\\n\\r\\n\\r\\n\\r\\n                                <fieldset id=\\\"addbutton\\\">\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"eduCount<2\\\">\\r\\n                                        <a class=\\\"btn btn-primary\\\" (click)=\\\"openModel()\\\" style=\\\"width :55px;height:30px;padding:5px;\\\" button> Add </a>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>Name of the Student</th>\\r\\n                                                    <th>Name of the Institution</th>\\r\\n                                                    <th> Contact Number of the Institution</th>\\r\\n                                                    <th>Registration No./Roll No./Year</th>\\r\\n                                                    <th> Present Reading</th>\\r\\n                                                    <th></th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngIf=\\\"educationDetailsArray.length==0\\\"><td colspan=\\\"6\\\">No student details</td></tr>\\r\\n                                                <tr *ngFor=\\\"let education of educationDetailsArray\\\">\\r\\n                                                    <td>{{education.dependentName}}</td>\\r\\n                                                    <td>{{education.institutionName}}</td>\\r\\n                                                    <td>{{education.institutionContact}}</td>\\r\\n                                                    <td>{{education.registrationRollNo}}</td>\\r\\n                                                    <td>{{education.presentlyReadingName}}</td>\\r\\n                                                    <td>\\r\\n                                                        <a class=\\\"btn btn-labeled btn-primary\\\" (click)=\\\"editEducationDetails(education)\\\" style=\\\"margin-right:5px;\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i> Edit</a>\\r\\n                                                        <a class=\\\"btn btn-labeled btn-danger\\\" (click)=\\\"removeEducationDetails(education)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Amount Claimed</label>\\r\\n                                        <label class=\\\"form-control\\\" disabled>{{claim.educationDetails.claimAmount}}</label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isanyothersourceofthegovernment\\\"\\r\\n                                                       [(ngModel)]=\\\"claim.educationDetails.isanyothersourceofthegovernment\\\"\\r\\n                                                       #isanyothersourceofthegovernment=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':isanyothersourceofthegovernment.invalid && (!educationCheck ||  isanyothersourceofthegovernment.touched), 'valid-data': isanyothersourceofthegovernment.valid && educationCheck}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that My son or daughter is not availing or has not availed any scholarship for the above mentioned courses from any other source of the government\\r\\n                                                <span [style.color]=\\\"!educationCheck?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isanyothersourceofthegovernment.invalid && (!educationCheck ||  isanyothersourceofthegovernment.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Check education terms and conditions </span>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <!-- <div class=\\\"row\\\"> -->\\r\\n                                <!-- <section class=\\\"col\\\"> -->\\r\\n                                <!-- <label class=\\\"label\\\">Acknowledge:</label> -->\\r\\n                                <!-- <div class=\\\"col-12\\\"> -->\\r\\n                                <!-- <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\"><i></i>Certified that son/ daughter is not availing / has not availed any scholarship for the above mentioned course from any other source. <br> -->\\r\\n                                <!-- Documents to be enclosed*: Certificate from the Head of the institution that the student is not availing/ has not availed any scholarship for the above mentioned course form any other source of the Government and is presently continuing with said course in the institution, copy of the deposite slip of fee regarding adminssion/ Identity Card.<br> -->\\r\\n                                <!-- Certificate regarding .................... -->\\r\\n                                <!-- </label> -->\\r\\n                                <!-- </div> -->\\r\\n                                <!-- </section>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t -->\\r\\n                                <!-- </div> -->\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"viewPf || viewHealth || viewDeath|| viewEducation\\\">\\r\\n                                <header>Upload Documents</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Form - V duly filled and signed <span [style.color]=\\\"!uplaodmain?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <div class=\\\"input input-file\\\">\\r\\n                                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'main')\\\" [disabled]=\\\"disableSubmitbutton || restrictSave\\\">Browse</span><input type=\\\"text\\\" readonly >\\r\\n                                                </div>\\r\\n                                                <div *ngIf=\\\"(!uplaodmain) && (mainUpload?.fileName =='' || mainUpload?.fileName ==undefined )\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Form - V is required </span>\\r\\n                                                </div>\\r\\n                                                <div>\\r\\n                                                    {{mainUpload?.fileName}}\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <footer>\\r\\n                                <a id=\\\"btnGeneratePdf\\\" class=\\\"btn btn-success\\\" [class.disabled]=\\\"restrictSave\\\" (click)=\\\"GenaratePdf(claim,3)\\\">Generate Pdf</a>\\r\\n                                <a id=\\\"btnSava\\\" class=\\\"btn btn-success\\\" name=\\\"q\\\" [class.disabled]=\\\"disableSubmitbutton || restrictSave\\\" (click)=\\\"saveClaimsData(claim)\\\">Submit</a>\\r\\n                                <a class=\\\"btn btn-default\\\" (click)=\\\"claerClaim()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" href=\\\"/\\\">Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n<!-- end widget grid -->\\r\\n<div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"lgModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Add Student Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divAddEducationDetails\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label control-label\\\"> Name of the Student <span [style.color]=\\\"!studentNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select class=\\\"form-control select\\\" name=\\\"dependentId\\\" (change)=\\\"selectDependent($event)\\\" [(ngModel)]=\\\"educationDetails.dependentId\\\"\\r\\n                                        #dependentId=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': dependentId.invalid && ( !studentNameValid || dependentId.touched ),\\r\\n                                        'valid-data': studentNameValid && dependentId.valid  }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose a Student</option>\\r\\n                                    <option value=\\\"{{ben.benFamilyMemSno}}\\\" *ngFor=\\\"let ben of benficiaryFamily\\\">{{ben.benDependentName}} - {{ben.benDependentRelation}}</option>\\r\\n                                </select>\\r\\n                                <i></i>\\r\\n                                <div *ngIf=\\\"dependentId.invalid && (!studentNameValid || dependentId.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Select a Student </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"isDuplicateDependent\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Already submitted for this year please select another dependent </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Name of the Institution <span [style.color]=\\\"!institutionNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"institutionName\\\" placeholder=\\\"Name of the Institution\\\" [(ngModel)]=\\\"educationDetails.institutionName\\\"\\r\\n                                       #institutionName=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': institutionName.invalid && (!institutionNameValid || institutionName.touched), 'valid-data': institutionName.valid && institutionNameValid}\\\" class=\\\"form-control\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"institutionName.invalid && (!institutionNameValid ||institutionName.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Name of the Institution is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Name of the Principal/Head Master of the institution</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"institutionPrinicipleName\\\" placeholder=\\\"Institution Principal Name\\\" [(ngModel)]=\\\"educationDetails.institutionPrinicipleName\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Contact Number of the Institution</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"institutionContact\\\" placeholder=\\\"Institution Contact\\\" [(ngModel)]=\\\"educationDetails.institutionContact\\\"\\r\\n                                       NumbersOnly maxlength=\\\"15\\\"\\r\\n                                       #institutionContact=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !institutionContactValid }\\\">\\r\\n                                <div *ngIf=\\\"!institutionContactValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Invalid Contact Number of the Institution</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Registration No./Roll No. of last exam passed  <span [style.color]=\\\"!registrationNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"registrationRollNo\\\" placeholder=\\\"Registration No./Roll No. of last exam passed \\\" [(ngModel)]=\\\"educationDetails.registrationRollNo\\\"\\r\\n                                       #registrationRollNo=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': registrationRollNo.invalid && (!registrationNoValid || registrationRollNo.touched), 'valid-data': registrationRollNo.valid && registrationNoValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"registrationRollNo.invalid && (!registrationNoValid ||registrationRollNo.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Registration No./Roll No. of last exam passed is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Year of Examination <span [style.color]=\\\"!educationYearValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" placeholder=\\\"Year\\\" [(ngModel)]=\\\"educationDetails.year\\\" maxlength=\\\"4\\\" NumbersOnly> <!--readonly-->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\" *ngIf=\\\"isMarried\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div>\\r\\n                                    <label for=\\\"label\\\">Is Married <span [style.color]=\\\"!marriedValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <input type=\\\"radio\\\" value=\\\"1\\\" name=\\\"gender\\\" required #gender=\\\"ngModel\\\" [(ngModel)]=\\\"educationDetails.isMarried\\\"> Yes\\r\\n                                    <input type=\\\"radio\\\" value=\\\"0\\\" name=\\\"gender\\\" required #gender=\\\"ngModel\\\" [(ngModel)]=\\\"educationDetails.isMarried\\\">No\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"!marriedValid\\\">\\r\\n                                    <!--*ngIf=\\\"gender.invalid && (!marriedValid || gender.touched)\\\"-->\\r\\n                                    <span style=\\\"color: red;\\\">Is Married is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Last Exam Passed</label>\\r\\n                                <select name=\\\"lastExamPassed\\\" class=\\\"form-control\\\" (change)=\\\"selectLastExamPassed($event,educationDetails)\\\" [(ngModel)]=\\\"educationDetails.lastExamPassed\\\">\\r\\n                                    <option value=\\\"00\\\" disabled>Choose Reading</option>\\r\\n                                    <option value=\\\"{{lep.lovDtlId}}\\\" *ngFor=\\\"let lep of lastExampassed\\\">{{lep.optionName}}</option>\\r\\n\\r\\n                                </select> <i></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Date of Admission <span *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\" [style.color]=\\\"!dateOfAdmissionValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"dateofAdmission\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                       #dateofAdmission=\\\"ngModel\\\" [disabled]=\\\"isDisabledBaseOnLastExamPassed\\\"\\r\\n                                       [(ngModel)]=\\\"educationDetails.dateofAdmission\\\" readonly\\r\\n                                       value=\\\"{{ educationDetails.dateofAdmission | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data':dateofAdmission.invalid && (!dateOfAdmissionValid || dateofAdmission.touched), 'valid-data':dateofAdmission.valid && dateOfAdmissionValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"dateofAdmission.invalid && (!dateOfAdmissionValid || dateofAdmission.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Date of Admission is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Presently Reading <span *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\" [style.color]=\\\"!presentlyReadingValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select name=\\\"presentlyReading\\\" class=\\\"form-control\\\" (change)=\\\"selectPresentlyReading($event,educationDetails)\\\"\\r\\n                                        [(ngModel)]=\\\"educationDetails.presentlyReading\\\" #presentlyReading=\\\"ngModel\\\" [disabled]=\\\"isDisabledBaseOnLastExamPassed\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': presentlyReading.invalid && ( !presentlyReadingValid || presentlyReading.touched ),\\r\\n                                        'valid-data': presentlyReadingValid && presentlyReading.valid  }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" disabled>Choose Reading</option>\\r\\n                                    <option value=\\\"{{edu.claimConfigId}}\\\" *ngFor=\\\"let edu of educationConfig\\\">{{edu.claimConfigOptionName}}</option>\\r\\n                                </select> <i></i>\\r\\n                                <div *ngIf=\\\"presentlyReading.invalid && (!presentlyReadingValid || presentlyReading.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Select a Presently reading </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Eligible Amount</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"eligibleAmount\\\" [(ngModel)]=\\\"educationDetails.eligibleAmount\\\" disabled />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 smart-form\\\">\\r\\n                        <header>Upload Documents</header>\\r\\n                        <div class=\\\"row\\\" *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\">\\r\\n                            <section class=\\\"col col-10 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Certificate from head of institution for not availing any scholarship <span [style.color]=\\\"!uploadCertificatetValid?'red':''\\\"><b>*</b></span> </label>\\r\\n\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\">\\r\\n                                        <input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'certificate')\\\">Browse\\r\\n                                    </span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                    <label>Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!uploadCertificatetValid && educertificates.length==0\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Certificate required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr *ngFor=\\\"let item of educertificates\\\">\\r\\n                                            <td>{{item.fileName}}</td>\\r\\n                                            <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'certificate')\\\">      <i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <!--<section style=\\\"padding-top:30px\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" *ngIf=\\\"viewuploadNonMarriage\\\">\\r\\n                            <section class=\\\"col col-10 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Non marriage certificate of Daughter <span [style.color]=\\\"!uploadNonMarriageValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'nonMarriage')\\\" id=\\\"file\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                    <label>Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!uploadNonMarriageValid && eduNonMarriage.length==0\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Non marriage certificate of Daughter required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr *ngFor=\\\"let item of eduNonMarriage\\\">\\r\\n                                            <td>{{item.fileName}}</td>\\r\\n                                            <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'nonMarriage')\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <!--<section style=\\\"padding-top:30px\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <section class=\\\"col col-10 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Self attested copy of last exam passing certificate <span [style.color]=\\\"!uploadselfattestedValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'selfAttest')\\\">Browse</span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                    <label>Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!uploadselfattestedValid && eduSelfAttested.length==0\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Self attested required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr *ngFor=\\\"let item of eduSelfAttested\\\">\\r\\n                                            <td>{{item.fileName}}</td>\\r\\n                                            <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'selfAttest')\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <!--<section style=\\\"padding-top:30px\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"lgModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addEducationDetails(educationDetails)\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n                <div>\\r\\n                    <label style=\\\"background-color:orange\\\">Download Receipts</label>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngFor=\\\"let c of genaratePdfs\\\">\\r\\n                    <div style=\\\"padding-left:20px;padding-bottom:8px\\\">\\r\\n                        <a style=\\\"cursor:pointer\\\" (click)=\\\"downloadRecipt(c.refNo,c.amount,c.name)\\\"> {{c.refNo}} </a>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #pdfModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Form-V Pdf</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                Form-V genarated, Please print or download.\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf(claim,'print')\\\">\\r\\n                    Print FormV\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf(claim,'download')\\\">\\r\\n                    Download FormV\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #packageModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"packageModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Packages</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div *ngFor=\\\"let item of result\\\" border=\\\"1\\\">\\r\\n                    {{item.name}}\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n\\r\\n                        <tr>\\r\\n                            <th>\\r\\n                                <input type=\\\"checkbox\\\" value=\\\"checkAll\\\" name=\\\"checkall\\\" (change)=\\\"checkAll($event,item.name)\\\" />\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Package Name\\r\\n                            <th>\\r\\n                                Package Code\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                Amount\\r\\n                            </th>\\r\\n\\r\\n                        </tr>\\r\\n\\r\\n                        <ng-container>\\r\\n\\r\\n                            <tr *ngFor=\\\"let value of item.values;let i=index;\\\">\\r\\n                                <td>\\r\\n                                    <input type=\\\"checkbox\\\" name=\\\"{{i}}\\\" [(ngModel)]=\\\"value.isChecked\\\" (change)=\\\"checkIfAllSelected(item);\\\" />\\r\\n                                </td>\\r\\n                                <td>{{value.packageName}}</td>\\r\\n                                <td>{{value.packageCode}}</td>\\r\\n                                <td>{{value.amount}}</td>\\r\\n                            </tr>\\r\\n                        </ng-container>\\r\\n\\r\\n                    </table>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitClick()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ClaimModel } from '../claim/models/claim.model';\r\nimport { HealthFamilyModel, HealthFamilyPackageModel } from \"../claim/models/health-and-family.model\";\r\nimport { EducationHdrModel, EducationDetailModel } from \"../claim/models/education.model\";\r\nimport { DeathModel } from '../claim/models/death.model';\r\nimport { DisabilityModel } from '../claim/models/disability.modl';\r\nimport { ProvidentFund } from '../claim/models/providentfund.model';\r\nimport { ModalDirective, BsDatepickerConfig } from \"ngx-bootstrap\";\r\nimport { LovDetails } from '../claim/models/Lov.model';\r\nimport { ClaimConfig } from '../claim/models/claimconfig.model';\r\nimport { ClaimNomineeDataService } from '../services/claim-data.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans, HealthClaimEligibility, PFTypeOfClaim, HealthFamilyBenefitConfiguration, EducationBenefitConfiguration, DeathBenefitConfiguration, PFStatusMaster } from '../claim/pipes/constnts.model';\r\nimport { Beneficiary } from '../claim/models/ben.model';\r\nimport { BenFamilyMember } from '../claim/models/ben.family.model';\r\nimport { HospitalModel } from '../claim/models/hospital.model';\r\nimport { AttachmentModel } from '../claim/models/attachment.model';\r\nimport { DATE } from 'ngx-bootstrap/chronos/units/constants';\r\nimport { Package } from '../models/package.model';\r\nimport { HealthFamilyPackage } from '../models/healthFamilyPackage.model';\r\nimport { environment } from '../../environments/environment.prod';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ClaimExceptionDetailsModel } from '../models/claimExceptionDetails';\r\nimport { BenNominee } from '../claim/models/ben.nominee.model';\r\nimport { PFBalanceDetails } from '../models/pfBalanceDetails';\r\nimport { debug } from 'util';\r\nimport { Subscription } from 'rxjs';\r\nimport { ClinicalTestModel } from '../models/ClinicalTest.model';\r\nimport { BenefitConfigData } from 'src/app/models/benefitConfigData.model';\r\nimport { ClaimConfigHdr } from '../claim/models/claimconfighdr.model';\r\nimport { BeneficiaryPFAccountDetails } from '../claim/models/ben.pfaccount.model';\r\n\r\n@Component({\r\n    selector: 'app-claim-entry-nominee',\r\n    templateUrl: './claim-entry-nominee.component.html',\r\n    styleUrls: ['./claim-entry-nominee.component.css']\r\n})\r\nexport class ClaimEntryNomineeComponent implements OnInit {\r\n    @ViewChild('lgModal') public lgModal: ModalDirective;\r\n    @ViewChild('packageModal') public packageModal: ModalDirective;\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('pdfModal') public pdfModal: ModalDirective;\r\n\r\n    route$: Subscription;\r\n    claimId: number = 0;\r\n    mode: string;\r\n    claimTypeString: any;\r\n    claimStatus: number = 0;\r\n    viewuploadNonMarriage: boolean = false;\r\n    viewPf: boolean = false;\r\n    viewHealth: boolean = false;\r\n    viewDeath: boolean = false;\r\n    viewEducation: boolean = false;\r\n    viewDateOfFirstAppointment: boolean = false;\r\n    viewNameOfClinicalTest: boolean = false;\r\n    viewDateOfAdmit: boolean = false;\r\n    viewMetWithAnAccident: boolean = false;\r\n    viewFamily: boolean = false;\r\n    viewSelf: boolean = false;\r\n    viewLOEAmount: boolean = false;\r\n    viewAccidental: boolean = false;\r\n    viewEligibilityAmount: boolean = false;\r\n    disableSubmitbutton: boolean = true;\r\n    claim: ClaimModel = {} as ClaimModel;\r\n    educationDetails: EducationDetailModel = {} as EducationDetailModel;\r\n    educationDetailsArray: Array<EducationDetailModel> = [];\r\n    hospitalizationLov: LovDetails[];\r\n    healthtypeofClaim: LovDetails[];\r\n    diseasesLov: LovDetails[];\r\n    clinicalTestLov: LovDetails[];\r\n    healthConfig: ClaimConfig[];\r\n    pfConfig: ClaimConfig[];\r\n    deathConfig: ClaimConfig[];\r\n    disabilityConfig: ClaimConfig[];\r\n    educationConfig: ClaimConfig[];\r\n    eduConfig: ClaimConfig[];\r\n    configConfig: ClaimConfig[];\r\n    lastExampassed: LovDetails[];\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    benficiaryFamily: BenFamilyMember[];\r\n    benficiaryFamilybyHealth: BenFamilyMember[];\r\n    hospotalList: HospitalModel[];\r\n    deathEligibility: any;\r\n    eduCount: number = 0;\r\n    successMessage: string;\r\n    //Validation Claim Entry variables\r\n    ssnNoValid: boolean = true;\r\n    nomineeNameValid: boolean = true;\r\n    nomineeContactValid: boolean = true;\r\n    nomineeDOBValid: boolean = true;\r\n    nomineeBankAccountValid: boolean = true;\r\n\r\n    //Validation Education variables\r\n    studentNameValid: boolean = true;\r\n    institutionNameValid: boolean = true;\r\n    registrationNoValid: boolean = true;\r\n    institutionContactValid: boolean = true;\r\n    educationYearValid: boolean = true;\r\n    dateOfAdmissionValid: boolean = true;\r\n    presentlyReadingValid: boolean = true;\r\n\r\n    disableEdu: boolean = false;\r\n    maxLimitExceeded: boolean = false;\r\n    maxHelathClaimLimitExceeded: boolean = false;\r\n    noDependents: boolean = false;\r\n    benficiaryInactive: boolean = false;\r\n    educationCheck: boolean = true;\r\n    uploadselfattestedValid: boolean = true;\r\n    uploadNonMarriageValid: boolean = true;\r\n    uploadCertificatetValid: boolean = true;\r\n    uplaodmain: boolean = true;\r\n    claimReferenceNo: any;\r\n    page = 4;\r\n\r\n    rowIndex = -1;\r\n    rowEligibleAmount = 0;\r\n    totalHealthClaimAmount = 0;\r\n    typeOfAilmentClaimedAmount = 0\r\n    surgeryClaimedAmount = 0\r\n    lossOfEmploymentAmount = 0;\r\n    validateDependent: boolean = false;\r\n    restrictSave: boolean = false;\r\n    maxDate: any;\r\n    maxDateNext3Months: any;\r\n    //ssin: string;\r\n    ssin: any;\r\n    // health & family \r\n    typeOfClaimValid: boolean = false;\r\n    hospital: boolean = false;\r\n    hospitalization: boolean = false;\r\n    dateofAdmin: boolean = false;\r\n    dateofDischargeValid: boolean = false;\r\n    claimForValid: boolean = false;\r\n    familyMember: boolean = false;\r\n    hospitalselfAttested: boolean = false;\r\n    isOtherHospital: boolean = false;\r\n    otherHospitalValid: boolean = false;\r\n    hospotalId: number = 0;\r\n    disableCost: boolean = true;\r\n    //originalVoucher: boolean = false;\r\n    dischargeCertificate: boolean = false;\r\n    rigisterESI: boolean = false;\r\n    dateofAppointment: boolean = false;\r\n    loeFromDate: boolean = false;\r\n    loeToDate: boolean = false;\r\n    showDisCertUpload: boolean = true;\r\n    healthCondolationCertificate: AttachmentModel = {} as AttachmentModel;\r\n    reasonForHealthDelayValid: boolean = false;\r\n    enableReasonForDelaySubmissionInHealth: boolean = false;\r\n    isHealthClaimEdit: boolean = false;\r\n    healthCondolationCertificateUploaded: boolean = false;\r\n\r\n    dischargeMinDt: Date;\r\n    disableDischarge: boolean = true;\r\n    maxAdmitDate: Date;\r\n\r\n    minDate: any;\r\n    minLOEDate: Date;\r\n    healthOriginalVoucher: AttachmentModel = {} as AttachmentModel;\r\n    healthSelfAttached: AttachmentModel = {} as AttachmentModel;\r\n    healthDischargeCertificate: AttachmentModel = {} as AttachmentModel;\r\n    healthExpensesSheet: AttachmentModel = {} as AttachmentModel;\r\n    healthAttachmentList: AttachmentModel[] = [] as AttachmentModel[];\r\n    genaratePdfs = [];\r\n    mainUpload: AttachmentModel;\r\n    mainUploadList: AttachmentModel[] = [] as AttachmentModel[];\r\n    educertificates: AttachmentModel[] = [] as AttachmentModel[];\r\n    eduNonMarriage: AttachmentModel[] = [] as AttachmentModel[];\r\n    eduSelfAttested: AttachmentModel[] = [] as AttachmentModel[];\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    result: any[];\r\n    datePickerConfig: Partial<BsDatepickerConfig>;\r\n    //expection: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    educationClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    healthClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    benficiaryNominee: Array<BenNominee> = [];\r\n    //Death\r\n    disableDeathCheckbox = false;\r\n    deathCertificate: AttachmentModel = {} as AttachmentModel;\r\n    bankPassbook: AttachmentModel = {} as AttachmentModel;\r\n    deathAttachmentList: AttachmentModel[] = [] as AttachmentModel[];\r\n    deathCertificateUploaded: boolean = false;\r\n    bankPassbookUploaded: boolean = false;\r\n    dateofDeath: boolean = false;\r\n    natureOfDeath: boolean = false;\r\n    isDeath1: boolean = false;\r\n    isDeath2: boolean = false;\r\n    isDeath3: boolean = false;\r\n    placeOfDeathValid: boolean = false;\r\n    natureofDeathName: string;\r\n    deathClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    disableHealthCheckbox: boolean = true;\r\n    disableEduCheckbox: boolean = true;\r\n    isHFSubmitted: boolean = false;\r\n    isEduSubmitted: boolean = false;\r\n    //PF\r\n    disablePFCheckbox: boolean = true;\r\n    pfBalanceDetails: PFBalanceDetails;\r\n    pfExsits: boolean = false;\r\n    pfClaimAmount: any;\r\n\r\n    isPFSubmitted: boolean = false;\r\n    viewNomineeShare: boolean = false;\r\n    benNomineeShareAmount: number;\r\n    benNomineeSno: number = 0;\r\n    isNomineesExist: boolean = true;\r\n    isNomineesMatch: boolean = true;\r\n    isValidNomineeName: boolean = true;\r\n    isValidNomineeDOB: boolean = true;\r\n    pfClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    ClaimStatusId: number = 0;\r\n    isBenNomineeSubmittedClaim: boolean = false;\r\n    isClaimEdit: boolean = false;\r\n    clinicalTestSettings = {};\r\n    nameOfClinicalTestIds: Array<any> = [];\r\n    clinicalTestDetails: ClinicalTestModel[] = [] as ClinicalTestModel[];\r\n\r\n    healthFamilyBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    educationBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    deathBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    isDisabledBaseOnLastExamPassed: boolean = false;\r\n    marriedValid: boolean = true;\r\n    isMarried: boolean = false;\r\n    isDuplicateDependent: boolean = false;\r\n    isRegistrationNo: boolean = false;\r\n    isCAFUpdated: boolean = false;\r\n\r\n    //Claims Effective Dates\r\n    pfClaimEffectiveDate: Date = null;\r\n    healthFamilyClaimEffectiveDate: Date = null;\r\n    disabilityClaimEffectiveDate: Date = null;\r\n    deathClaimEffectiveDate: Date = null;\r\n    educationClaimEffectiveDate: Date = null;\r\n\r\n    claimConfigHdrDetails: ClaimConfigHdr[] = [] as ClaimConfigHdr[];\r\n    isClaimEffectiveDate: boolean = false;\r\n    claimEffectiveDate: Date = null;\r\n\r\n    beneficiaryPFAccountDetails: BeneficiaryPFAccountDetails = {} as BeneficiaryPFAccountDetails;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimNomineeDataService) {\r\n        this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n        this.claim.educationDetails = {} as EducationHdrModel;\r\n        this.claim.deathDetails = {} as DeathModel;\r\n        this.claim.disabilityDetails = {} as DisabilityModel;\r\n        this.claim.providentFundDetails = {} as ProvidentFund;\r\n        this.maxAdmitDate = new Date();\r\n        this.maxDate = new Date();\r\n        this.maxDateNext3Months = new Date(new Date().setMonth(new Date().getMonth() + 3));\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        this.disableDischarge = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.otherHospitalValid = true;\r\n        this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded = this.reasonForHealthDelayValid =   true;//this.originalVoucher =\r\n        this.natureOfDeath = this.dateofDeath = this.deathCertificateUploaded = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = this.bankPassbookUploaded = true;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.claimId = params[\"claimId\"] != null ? Number(params[\"claimId\"]) : 0;\r\n                this.mode = params[\"mode\"];\r\n                this.claimTypeString = params[\"tranctionType\"];\r\n                this.claimStatus = Number(params[\"claimStatus\"]);\r\n                //if (this.claimStatus >= ClaimStatus.Submitted) {\r\n                //    this.GenaratePdfVisible = false;\r\n                //    //this.disableSubmitbutton = false;\r\n                //}\r\n                //else {\r\n                //    this.claimStatus = ClaimStatus.Submitted;\r\n                //}\r\n            }\r\n        );\r\n        this.clinicalTestSettings = {\r\n            singleSelection: false,\r\n            idField: 'lovDtlId',\r\n            textField: 'optionName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        };\r\n        if (this.mode == undefined || this.mode == null) { this.mode = \"entry\"; }\r\n        this.getDeathConfiguration();\r\n        this.getDisabilityConfiguration();\r\n        this.getEducationConfiguration();\r\n        this.getHealthandFamilyConfiguration();\r\n        this.getPfConfiguration();\r\n        this.getHospitalization();\r\n        this.getHealthClainFor();\r\n        this.getHospitals();\r\n        this.getLastExamPassed();\r\n        this.getPackages();\r\n        this.getDiseases();\r\n        this.getClinicalTests();\r\n        this.getHealthFamilyBenefitConfigurationDetails();\r\n        this.getEducationBenefitConfigurationDetails();\r\n        this.getDeathBenefitConfigurationDetails();\r\n        this.getClaimsConfiguartionDetails();\r\n        if (this.claimId > 0) {\r\n            this.deleteClaimExceptions(this.claimId);\r\n            this.getClaimDetailsByClaimId(this.claimId);\r\n        }\r\n    }\r\n    getClaimsConfiguartionDetails(): any {\r\n\r\n        this.dataService.getClaimConfigurationMaster()\r\n            .subscribe((data: any) => {\r\n                this.claimConfigHdrDetails = data;\r\n                debugger;\r\n                if (this.claimConfigHdrDetails != null) {\r\n                    this.pfClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 1).cliamEffectiveDate;\r\n                    this.healthFamilyClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 2).cliamEffectiveDate;\r\n                    this.disabilityClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 3).cliamEffectiveDate;\r\n                    this.deathClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 4).cliamEffectiveDate;\r\n                    this.educationClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 5).cliamEffectiveDate;\r\n                }\r\n            });\r\n    }\r\n    deleteClaimExceptions(id: any) {\r\n        this.dataService\r\n            .deleteClaimExceptions(id)\r\n            .subscribe((data: any) => { });\r\n    }\r\n    getClaimDetailsByClaimId(id: any) {\r\n        this.dataService\r\n            .getClaimDetailsById(id)\r\n            .subscribe((data: any) => {\r\n\r\n                this.claim = data;\r\n                this.isClaimEdit = this.isHealthClaimEdit =  true;\r\n                if (this.claim != null) {\r\n                    this.claim.nomineeDOB = new Date(this.claim.nomineeDOB);\r\n                    if (this.claimTypeString == undefined || this.claimTypeString == null) {\r\n                        if (this.claim.educationDetails != null && this.claim.educationDetails.educationHdrId > 0) {\r\n                            this.viewEducation = true;\r\n                            if (this.claim.educationDetails.educationDetailList != null && this.claim.educationDetails.educationDetailList.length > 0) {\r\n                                this.educationDetailsArray = this.claim.educationDetails.educationDetailList;\r\n                                this.rowIndex = this.rowIndex + this.educationDetailsArray.length;\r\n                                if (this.educationDetailsArray != null && this.educationDetailsArray.length > 0) {\r\n                                    for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                                        if (this.educationDetailsArray[i].presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                        if (this.educationDetailsArray[i].lastExamPassedName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.isDisabledBaseOnLastExamPassed = true;\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.isDisabledBaseOnLastExamPassed = false;\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                        //Duplicate Dependent\r\n                                        if (this.educationDetailsArray[i].isDuplicate) {\r\n                                            //const data1 = this.benficiaryFamily.find(x => x.benFamilyMemSno == this.educationDetailsArray[i].dependentId);\r\n                                            //var stringMsg = \"Already this Dependent \" + data1.benDependentName + \" has submitted for this year please select another dependent\";\r\n                                            this.isDuplicateDependent = true;\r\n                                            //alert(\"Already claim has submitted for this dependent in this year please select another dependent\");\r\n                                            //                    isValid = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (this.claim.healthFamilyDetails != null && this.claim.healthFamilyDetails.healthFamilyId > 0) {\r\n                            this.viewHealth = true;\r\n                            if (this.claim.healthFamilyDetails.hospitalId != null && this.claim.healthFamilyDetails.hospitalId != undefined && this.claim.healthFamilyDetails.otherHospital != undefined && this.claim.healthFamilyDetails.otherHospital != null) {\r\n                                this.isOtherHospital = true;\r\n                                this.hospotalId = this.claim.healthFamilyDetails.hospitalId;\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.claimFor === 5) {\r\n                                this.viewSelf = true;\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.claimFor === 6) {\r\n                                this.viewFamily = true;\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                                this.viewDateOfAdmit = true;\r\n                                this.disableCost = false;\r\n                                if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                                this.viewDateOfFirstAppointment = true;\r\n                                this.showDisCertUpload = false;\r\n                                if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                                    this.disableCost = false;\r\n                                    if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                                        this.viewNameOfClinicalTest = true;\r\n                                        if (this.claim.healthFamilyDetails.clinicalTestDetails != null && this.claim.healthFamilyDetails.clinicalTestDetails.length > 0) {\r\n                                            if (this.clinicalTestLov != null && this.clinicalTestLov.length > 0) {\r\n                                                const selectedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n                                                const deletedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n\r\n                                                for (var i = 0; i < this.claim.healthFamilyDetails.clinicalTestDetails.length; i++) {\r\n                                                    var t = this.claim.healthFamilyDetails.clinicalTestDetails[i].clinicalTest;\r\n                                                    var s = this.clinicalTestLov.filter(x => x.lovDtlId == t);\r\n\r\n                                                    if (s != null) {\r\n                                                        for (var j = 0; j < deletedClinicalTestDetails.length; j++) {\r\n                                                            if (s[0].lovDtlId == deletedClinicalTestDetails[j].lovDtlId) {\r\n                                                                deletedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                                if (deletedClinicalTestDetails != null && deletedClinicalTestDetails.length > 0) {\r\n                                                    for (var i = 0; i < deletedClinicalTestDetails.length; i++) {\r\n                                                        for (var j = 0; j < selectedClinicalTestDetails.length; j++) {\r\n                                                            if (selectedClinicalTestDetails[j].lovDtlId == deletedClinicalTestDetails[i].lovDtlId) {\r\n                                                                selectedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                for (var j = 0; j < selectedClinicalTestDetails.length; j++) { }\r\n                                                this.nameOfClinicalTestIds = selectedClinicalTestDetails;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.admittedDate != null && this.claim.healthFamilyDetails.admittedDate != undefined)\r\n                                this.claim.healthFamilyDetails.admittedDate = new Date(this.claim.healthFamilyDetails.admittedDate);\r\n                            if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined)\r\n                                this.claim.healthFamilyDetails.dischargeDate = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n\r\n                            if (this.claim.healthFamilyDetails.firstAppointmentDate != null) {\r\n                                this.claim.healthFamilyDetails.firstAppointmentDate = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                            }\r\n                            this.claim.healthFamilyDetails.attachmentDTOList.forEach((eachObj) => {\r\n                                if (eachObj.attachmentType === AttachmentType.OriginalVouchers) {\r\n                                    this.healthOriginalVoucher = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DischargeCertificate) {\r\n                                    this.healthDischargeCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DoctorPrescription) {\r\n                                    this.healthSelfAttached = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.ExpensesSheet) {\r\n                                    this.healthExpensesSheet = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                    this.healthCondolationCertificate = eachObj;\r\n                                }\r\n                            });\r\n\r\n                            let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                            for (var i = 0; i < data.length; i++) {\r\n                                this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                            }\r\n                            this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                            var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                            this.result = [];\r\n                            groups.forEach(g =>\r\n                                this.result.push({\r\n                                    name: g,\r\n                                    values: this.packages.filter(i => i.ailmentName === g)\r\n                                }\r\n                                ))\r\n                        }\r\n                        if (this.claim.deathDetails != null && this.claim.deathDetails.deathId > 0) {\r\n                            this.viewDeath = true;\r\n                            if (this.claim.deathDetails.dateofDeath != null) {\r\n                                this.claim.deathDetails.dateofDeath = new Date(this.claim.deathDetails.dateofDeath);\r\n                            }\r\n                            if (this.claim.deathDetails.natureofDeath > 0) {\r\n                                this.deathEligibility = this.claim.deathDetails.claimAmount;\r\n                                this.viewEligibilityAmount = true;\r\n                                if (this.claim.deathDetails.natureofDeath == 16) {\r\n                                    this.viewAccidental = true;\r\n                                }\r\n                            }\r\n                            this.claim.deathDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                                if (eachObj.attachmentType === AttachmentType.DeathCertificate) {\r\n                                    this.deathCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.FirstPageofBankPassbook) {\r\n                                    this.bankPassbook = eachObj;\r\n                                }\r\n                            });\r\n                        }\r\n                        if (this.claim.providentFundDetails != null && this.claim.providentFundDetails.pfId > 0) {\r\n                            this.viewPf = true;\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"Education\") {\r\n                        this.disableHealthCheckbox = true;\r\n                        if (this.claim.educationDetails != null && this.claim.educationDetails.educationHdrId > 0) {\r\n                            this.viewEducation = true;\r\n                            if (this.claim.educationDetails.educationDetailList != null && this.claim.educationDetails.educationDetailList.length > 0) {\r\n                                this.educationDetailsArray = this.claim.educationDetails.educationDetailList;\r\n                                this.rowIndex = this.rowIndex + this.educationDetailsArray.length;\r\n                                if (this.educationDetailsArray != null && this.educationDetailsArray.length > 0) {\r\n                                    for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                                        if (this.educationDetailsArray[i].presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                        if (this.educationDetailsArray[i].lastExamPassedName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.isDisabledBaseOnLastExamPassed = true;\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.isDisabledBaseOnLastExamPassed = false;\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"HealthFamily\") {\r\n\r\n                        this.disableHealthCheckbox = true;\r\n                        if (this.claim.healthFamilyDetails != null && this.claim.healthFamilyDetails.healthFamilyId > 0) {\r\n                            this.viewHealth = true;\r\n                            if (this.claim.healthFamilyDetails.claimFor === 5) {\r\n                                this.viewSelf = true;\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.claimFor === 6) {\r\n                                this.viewFamily = true;\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                                this.viewDateOfAdmit = true;\r\n                                this.disableCost = false;\r\n                                if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                                this.viewDateOfFirstAppointment = true;\r\n                                this.showDisCertUpload = false;\r\n                                if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                                    this.disableCost = false;\r\n                                    if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                                        this.viewNameOfClinicalTest = true;\r\n                                        if (this.claim.healthFamilyDetails.clinicalTestDetails != null && this.claim.healthFamilyDetails.clinicalTestDetails.length > 0) {\r\n                                            if (this.clinicalTestLov != null && this.clinicalTestLov.length > 0) {\r\n                                                const selectedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n                                                const deletedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n\r\n                                                for (var i = 0; i < this.claim.healthFamilyDetails.clinicalTestDetails.length; i++) {\r\n                                                    var t = this.claim.healthFamilyDetails.clinicalTestDetails[i].clinicalTest;\r\n                                                    var s = this.clinicalTestLov.filter(x => x.lovDtlId == t);\r\n\r\n                                                    if (s != null) {\r\n                                                        for (var j = 0; j < deletedClinicalTestDetails.length; j++) {\r\n                                                            if (s[0].lovDtlId == deletedClinicalTestDetails[j].lovDtlId) {\r\n                                                                deletedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                                if (deletedClinicalTestDetails != null && deletedClinicalTestDetails.length > 0) {\r\n                                                    for (var i = 0; i < deletedClinicalTestDetails.length; i++) {\r\n                                                        for (var j = 0; j < selectedClinicalTestDetails.length; j++) {\r\n                                                            if (selectedClinicalTestDetails[j].lovDtlId == deletedClinicalTestDetails[i].lovDtlId) {\r\n                                                                selectedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                for (var j = 0; j < selectedClinicalTestDetails.length; j++) { }\r\n                                                this.nameOfClinicalTestIds = selectedClinicalTestDetails;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.admittedDate != null && this.claim.healthFamilyDetails.admittedDate != undefined)\r\n                                this.claim.healthFamilyDetails.admittedDate = new Date(this.claim.healthFamilyDetails.admittedDate);\r\n                            if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined)\r\n                                this.claim.healthFamilyDetails.dischargeDate = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n\r\n                            if (this.claim.healthFamilyDetails.firstAppointmentDate != null) {\r\n                                this.claim.healthFamilyDetails.firstAppointmentDate = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                            }\r\n                            this.claim.healthFamilyDetails.attachmentDTOList.forEach((eachObj) => {\r\n                                if (eachObj.attachmentType === AttachmentType.OriginalVouchers) {\r\n                                    this.healthOriginalVoucher = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DischargeCertificate) {\r\n                                    this.healthDischargeCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DoctorPrescription) {\r\n                                    this.healthSelfAttached = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.ExpensesSheet) {\r\n                                    this.healthExpensesSheet = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                    this.healthCondolationCertificate = eachObj;\r\n                                }\r\n                            });\r\n\r\n                            let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                            for (var i = 0; i < data.length; i++) {\r\n                                this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                            }\r\n                            this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                            var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                            this.result = [];\r\n                            groups.forEach(g =>\r\n                                this.result.push({\r\n                                    name: g,\r\n                                    values: this.packages.filter(i => i.ailmentName === g)\r\n                                }\r\n                                ))\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"Death\") {\r\n                        this.disableDeathCheckbox = true;\r\n                        if (this.claim.deathDetails != null && this.claim.deathDetails.deathId > 0) {\r\n                            this.viewDeath = true;\r\n                            if (this.claim.deathDetails.dateofDeath != null) {\r\n                                this.claim.deathDetails.dateofDeath = new Date(this.claim.deathDetails.dateofDeath);\r\n                            }\r\n                            if (this.claim.deathDetails.natureofDeath > 0) {\r\n                                this.deathEligibility = this.claim.deathDetails.claimAmount;\r\n                                this.viewEligibilityAmount = true;\r\n                                if (this.claim.deathDetails.natureofDeath == 16) {\r\n                                    this.viewAccidental = true;\r\n                                }\r\n                            }\r\n                            this.claim.deathDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                                if (eachObj.attachmentType === AttachmentType.DeathCertificate) {\r\n                                    this.deathCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.FirstPageofBankPassbook) {\r\n                                    this.bankPassbook = eachObj;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"PF\") {\r\n                        if (this.claim.providentFundDetails != null && this.claim.providentFundDetails.pfId > 0) {\r\n                            this.viewPf = true;\r\n                        }\r\n                    }\r\n                    if (this.claim.attachment != null && this.claim.attachment.length > 0) {\r\n                        this.mainUpload = this.claim.attachment[0];\r\n                    }\r\n\r\n                    this.ssin = this.claim.ssin;\r\n                    // this.valuechange(this.claim.ssin);\r\n                    this.dataService\r\n                        .getBeneficiaryBasicDetailsByNo(this.ssin,false)\r\n                        .subscribe((data: any) => {\r\n\r\n                            this.beneficiary = data;\r\n                            if (this.beneficiary != null) {\r\n                                if (this.beneficiary.isActive) {\r\n                                    this.benficiaryInactive = false;\r\n\r\n                                    this.getBenficiaryFamilyDetails(this.beneficiary.benSno);\r\n                                    this.getBenficiaryFamilyDetailsByHealth(this.beneficiary.benSno);\r\n                                    this.getBenficiaryEduCount(this.beneficiary.benSno);\r\n                                    this.getBeneficiaryNomineeDetails(this.beneficiary.benSno);\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    openModel() {\r\n        this.isDuplicateDependent = false;\r\n        this.studentNameValid = this.institutionNameValid = this.registrationNoValid = this.institutionContactValid = this.educationYearValid = this.dateOfAdmissionValid = this.presentlyReadingValid = this.marriedValid = true;\r\n        this.uploadCertificatetValid = this.uploadselfattestedValid = true;\r\n        this.rowIndex = -1;\r\n        this.rowEligibleAmount = 0;\r\n        this.eduSelfAttested = [] as AttachmentModel[];\r\n        this.educertificates = [] as AttachmentModel[];\r\n        this.eduNonMarriage = [] as AttachmentModel[];\r\n        this.educationDetails = {} as EducationDetailModel;\r\n        this.educationDetails.year = new Date().getFullYear();\r\n        this.lgModal.show();\r\n    }\r\n\r\n\r\n    changeCertificate(inputValue: any, type): void {\r\n        var file: File = inputValue.target.files[0];\r\n        if (type == \"main\") {\r\n            if (file.type != \"application/pdf\") {\r\n                alert(\"Only accept pdf file\");\r\n                return;\r\n            }\r\n        }\r\n        if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n            myReader.onloadend = (e) => {\r\n                const model: AttachmentModel = {} as AttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = ClaimStatus.Submitted;\r\n                switch (type) {\r\n\r\n                    case \"certificate\":\r\n                        model.attachmentType = AttachmentType.Scholarship;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.educertificates.push(model);\r\n                        break;\r\n                    case \"nonMarriage\":\r\n                        model.attachmentType = AttachmentType.NonMarriage;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.eduNonMarriage.push(model);\r\n                        break;\r\n                    case \"selfAttest\":\r\n                        model.attachmentType = AttachmentType.PassingExamCertificate;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.eduSelfAttested.push(model);\r\n                        break;\r\n                    case \"dischargeCertificate\":\r\n                        model.attachmentType = AttachmentType.DischargeCertificate;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthDischargeCertificate = model;\r\n                        break;\r\n                    case \"originalVoucher\":\r\n                        model.attachmentType = AttachmentType.OriginalVouchers;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthOriginalVoucher = model\r\n                        break;\r\n                    case \"healthselfAttest\":\r\n                        model.attachmentType = AttachmentType.DoctorPrescription;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthSelfAttached = model;\r\n                        break;\r\n                    case \"main\":\r\n                        model.attachmentType = AttachmentType.FormV;\r\n                        model.claimType = null;\r\n                        this.mainUpload = model;\r\n                        break;\r\n                    case \"deathCertificate\":\r\n                        model.attachmentType = AttachmentType.DeathCertificate;\r\n                        model.claimType = ClaimConstants.Death;\r\n                        this.deathCertificate = model;\r\n                        break;\r\n                    case \"healthExpensesSheet\":\r\n                        model.attachmentType = AttachmentType.ExpensesSheet;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthExpensesSheet = model;\r\n                        break;\r\n                    case \"bankPassbook\":\r\n                        model.attachmentType = AttachmentType.FirstPageofBankPassbook;\r\n                        model.claimType = ClaimConstants.Death;\r\n                        this.bankPassbook = model;\r\n                        break;\r\n                    case \"healthCondolationCertificate\":\r\n                        model.attachmentType = AttachmentType.Condolationcertificate;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthCondolationCertificate = model;\r\n                        break;\r\n                }\r\n\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n\r\n    removeUploadCertificates(edu, type) {\r\n        if (type == \"certificate\") {\r\n            const index: number = this.educertificates.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.educertificates.splice(index, 1);\r\n            }\r\n        }\r\n        if (type == \"nonMarriage\") {\r\n            const index: number = this.eduNonMarriage.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.eduNonMarriage.splice(index, 1);\r\n            }\r\n        }\r\n        if (type == \"selfAttest\") {\r\n            const index: number = this.eduSelfAttested.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.eduSelfAttested.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public showChildModal(): void {\r\n        this.lgModal.show();\r\n    }\r\n\r\n    public hideChildModal(): void {\r\n        this.lgModal.hide();\r\n    }\r\n\r\n    getDiseases() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.Diseases)\r\n            .subscribe((data: any) => {\r\n                this.diseasesLov = data;\r\n            });\r\n    }\r\n    getClinicalTests() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.ClinicalTests)\r\n            .subscribe((data: any) => {\r\n                this.clinicalTestLov = data;\r\n            });\r\n    }\r\n    //pfChange1(eve) {\r\n\r\n    //    let share = 0;\r\n    //    let shareAmount = \"\";\r\n    //    //if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n    //        if (this.claim.nomineeName != null && this.claim.nomineeDOB != null) {\r\n    //            if (this.benficiaryNominee.length > 0) {\r\n    //                var benNominee = this.benficiaryNominee.find(n => n.benNomineeName == this.claim.nomineeName);\r\n    //                if (benNominee != null) {\r\n    //                    var date1 = new Date(this.claim.nomineeDOB);\r\n    //                    var date2 = new Date(benNominee.dob);\r\n    //                    var timeDiff = Math.abs(date1.getTime() - date2.getTime());\r\n\r\n    //                    if (timeDiff == 0) {\r\n    //                        this.benNomineeSno = benNominee.benNomineeSno;\r\n    //                    }\r\n    //                }\r\n    //                if (this.benNomineeSno != null && this.benNomineeSno > 0) {\r\n    //                    this.isNomineesExist = this.isNomineesMatch = true;\r\n\r\n\r\n    //                    //this.validatePfSubmit(this.beneficiary.ssI_Number, this.benNomineeSno);\r\n    //                    //if (this.isPFSubmitted) {\r\n    //                    //    this.disablePFCheckbox = true;\r\n    //                    //}\r\n    //                    //else {\r\n    //                    //    this.disablePFCheckbox = false;\r\n\r\n\r\n    //                    //    //if (this.beneficiary.regNumber != null && this.beneficiary.regNumber != \"\") {\r\n    //                    //    //    this.getPfBalance(this.beneficiary.regNumber);\r\n    //                    //    //}\r\n    //                    //    //else\r\n    //                    //    //    alert(\"No pf details available for this given SSIN number\");\r\n    //                    //    this.viewNomineeShare = true;\r\n    //                    //    share = benNominee.benNomineeSharePercentage;\r\n    //                    //    if (this.benficiaryNominee.length == 1) {\r\n    //                    //        if (share == 0) {\r\n    //                    //            share = 100;\r\n    //                    //        }\r\n    //                    //    }\r\n    //                    //    if (this.pfClaimAmount != null && this.pfClaimAmount != undefined) {\r\n    //                    //        //shareAmount = Math.round(this.pfClaimAmount * (share / 100)).toFixed(2);\r\n    //                    //        this.benNomineeShareAmount = Math.round(this.pfClaimAmount * (share / 100));\r\n    //                    //    }\r\n    //                    //}\r\n    //                }\r\n    //                else {\r\n    //                    this.isNomineesMatch = false;\r\n    //                    this.disablePFCheckbox = true;\r\n    //                    this.viewPf = true;\r\n    //                }\r\n    //            }\r\n    //            else {\r\n    //                this.isNomineesExist = false;\r\n    //                this.disablePFCheckbox = true;\r\n    //                this.viewPf = true;\r\n    //            }\r\n    //        }\r\n    //        else {\r\n    //            this.isNomineesMatch = false;\r\n    //           // this.disablePFCheckbox = true;\r\n    //            this.viewPf = true;\r\n    //        }\r\n    //    //}\r\n    //    //else {\r\n\r\n    //    //    this.disablePFCheckbox = true;\r\n    //    //    this.pfExsits = true;\r\n    //    //    this.viewPf = true;\r\n    //    //}\r\n    //    if (this.ssin != \"\") {\r\n    //        this.viewPf = !this.viewPf;\r\n    //    }\r\n    //}\r\n    pfChange(eve) {\r\n        this.viewPf = !this.viewPf;\r\n        \r\n        let share = 0;\r\n\r\n        if (this.viewPf) {\r\n            this.getPfBalance(this.beneficiary.benSno);\r\n\r\n            this.viewNomineeShare = true;\r\n            share = this.benficiaryNominee.find(n => n.benNomineeSno == this.benNomineeSno).benNomineeSharePercentage;\r\n            if (this.benficiaryNominee.length == 1) {\r\n                if (share == 0) {\r\n                    share = 100;\r\n                }\r\n            }\r\n            this.benNomineeShareAmount = Math.round(this.pfClaimAmount * (share / 100));\r\n        }\r\n\r\n    }\r\n    getPfBalance(benSno: any) {\r\n\r\n        this.pfExsits = false;\r\n        this.dataService\r\n            .getPfBalance(benSno)\r\n            .subscribe((data: any) => {\r\n                this.pfBalanceDetails = data;\r\n\r\n            });\r\n        if (this.pfBalanceDetails != null && this.pfBalanceDetails != undefined) {\r\n            if (this.pfBalanceDetails.code == \"000\") {\r\n                //claim amount=   balance + cantribution +( (Contribution/25 ) * 30)\r\n                this.pfClaimAmount = this.pfBalanceDetails.balance + this.pfBalanceDetails.contribution + ((this.pfBalanceDetails.contribution / 25) * 30);\r\n            }\r\n            else {\r\n\r\n                this.disablePFCheckbox = true;\r\n                this.pfExsits = true;\r\n            }\r\n        }\r\n    }\r\n    validatePfSubmit(ssiNumber: any, nomineeId: any) {\r\n\r\n        this.dataService\r\n            .validatePfSubmit(ssiNumber, nomineeId)\r\n            .subscribe((data: any) => {\r\n                this.isPFSubmitted = data;\r\n                //if (this.isPFSubmitted) {\r\n                //    alert(this.isPFSubmitted);\r\n                //    this.disablePFCheckbox = false;\r\n                //}\r\n\r\n            });\r\n\r\n    }\r\n    ValidateNomineeName(name) {\r\n        this.ValidateNomineePFDetails();\r\n    }\r\n    ValidateNomineeDOB(dob) {\r\n\r\n        this.ValidateNomineePFDetails(dob);\r\n    }\r\n    ValidateNomineePFDetails(dob?: any) {\r\n        this.disablePFCheckbox = false;\r\n        if ((this.claim.nomineeName != undefined && this.claim.nomineeName.trim() != \"\") && (dob != undefined && dob != null)) {// && (this.claim.nomineeDOB != undefined && this.claim.nomineeDOB != \"\")) {\r\n            if (this.benficiaryNominee.length > 0) {\r\n                var benNominee = this.benficiaryNominee.find(n => n.benNomineeName.trim().toLowerCase() == this.claim.nomineeName.trim().toLowerCase());\r\n                if (benNominee != null) {\r\n                    //var date1 = new Date(this.claim.nomineeDOB);\r\n                    var date1 = new Date(dob);\r\n                    var date2 = new Date(benNominee.dob);\r\n\r\n                    var ageNom = date1.getFullYear() - date2.getFullYear();\r\n                    var m = date1.getMonth() - date2.getMonth();\r\n                    if (m < 0 || (m === 0 && date1.getDate() < date2.getDate())) {\r\n                        ageNom--;\r\n                    }\r\n\r\n                    if (ageNom == 0) {\r\n                        this.benNomineeSno = benNominee.benNomineeSno;\r\n\r\n                        this.validatePfSubmit(this.beneficiary.ssI_Number, this.benNomineeSno);\r\n                        if (this.isPFSubmitted) {\r\n                            this.disablePFCheckbox = true;\r\n                        }\r\n                        else {\r\n                            this.disablePFCheckbox = false;\r\n                        }\r\n                    }\r\n                    //else {\r\n                    //    alert(\"Please enter valid nominee date of birth\");\r\n                    //}\r\n                }\r\n                //else {\r\n                //    alert(\"Please enter valid nominee name\");\r\n                //}\r\n            }\r\n        }\r\n    }\r\n\r\n    healthChange(eve) {\r\n        this.restrictSave = false; this.disableEdu = false; this.noDependents = false;\r\n        this.viewHealth = !this.viewHealth;\r\n        this.getBeneficiaryHealthClaimAmount(this.beneficiary.benSno);\r\n    }\r\n    deathChange(eve) {\r\n        //this.viewDeath = !this.viewDeath;\r\n        this.isBenNomineeSubmittedClaim = false;\r\n        this.isSameBenNomineeClaimSubmitted(this.beneficiary.benSno, 0, ClaimConstants.Death, eve);\r\n    }\r\n    educationChange(eve) {\r\n        if (this.eduCount >= 2) {\r\n            this.disableEdu = true;\r\n            this.maxLimitExceeded = true;\r\n            this.restrictSave = true;\r\n            this.viewEducation = false;\r\n            this.viewHealth = false;\r\n            eve.target.checked = false;\r\n            return;\r\n        }\r\n        if (this.benficiaryFamily == null || this.benficiaryFamily.length == 0) {\r\n            this.restrictSave = true; this.viewEducation = false; this.disableEdu = true; this.noDependents = true;\r\n            this.viewEducation = false;\r\n            eve.target.checked = false;\r\n            this.viewHealth = false;\r\n            return;\r\n        }\r\n        this.viewEducation = !this.viewEducation;\r\n        this.validateDependent = false;\r\n    }\r\n    typeOfClaimChange(eve) {\r\n        if (this.claim.healthFamilyDetails.typeOfClaim == 5) {\r\n            this.claim.healthFamilyDetails.typeOfHospitalization = 1;\r\n        }\r\n        else if (this.claim.healthFamilyDetails.typeOfClaim == 0) {\r\n            this.claim.healthFamilyDetails.typeOfHospitalization = 0;\r\n        }\r\n        this.getBeneficiaryHealthClaimAmount(this.beneficiary.benSno, this.claim.healthFamilyDetails.typeOfClaim);\r\n        this.hospitalizationChange(eve);\r\n    }\r\n    hospitalizationChange(eve) {\r\n        this.viewDateOfFirstAppointment = this.viewDateOfAdmit = this.viewMetWithAnAccident = this.viewNameOfClinicalTest = false;\r\n        this.showDisCertUpload = this.disableCost = true;\r\n\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n            this.viewDateOfAdmit = true;\r\n            this.disableCost = false;\r\n            if (this.claim.healthFamilyDetails.typeOfClaim == 5) {\r\n                this.viewMetWithAnAccident = true;\r\n            }\r\n            this.claim.healthFamilyDetails.nameOfTheDisease = undefined;\r\n            this.claim.healthFamilyDetails.nameOfClinicalTest = undefined;\r\n        }\r\n        else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n            this.viewDateOfFirstAppointment = true;\r\n            this.showDisCertUpload = false;\r\n            if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                this.disableCost = false;\r\n                if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                    this.viewNameOfClinicalTest = true;\r\n                }\r\n            }\r\n        }\r\n        this.claimForChange(eve);\r\n    }\r\n    nameOfDiseaseChange(eve) {\r\n        this.viewNameOfClinicalTest = this.disableCost = false;\r\n        if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n            this.viewNameOfClinicalTest = true;\r\n        }\r\n        else {\r\n            this.viewNameOfClinicalTest = false;\r\n            this.claim.healthFamilyDetails.nameOfClinicalTest = undefined;\r\n        }\r\n    }\r\n    hospitalChange(eve) {\r\n\r\n        if (this.hospotalList.length > 0) {\r\n            var hos = this.hospotalList.find(x => x.hospitalId == eve);\r\n            this.hospotalId = 0;\r\n            if (hos != null) {\r\n                if (hos.hospitalName.toLowerCase() == \"not in the list\") {\r\n\r\n                    this.hospotalId = hos.hospitalId;\r\n                }\r\n            }\r\n            if (this.hospotalId > 0) {\r\n\r\n                this.isOtherHospital = true;\r\n                this.otherHospitalValid = true;\r\n            }\r\n            else {\r\n                this.isOtherHospital = false;\r\n                this.claim.healthFamilyDetails.otherHospital = undefined;\r\n            }\r\n        }\r\n    }\r\n    claimForChange(eve) {\r\n        this.viewSelf = this.viewFamily = false;\r\n        if (this.claim.healthFamilyDetails.claimFor == 5) {\r\n            if (this.claim.healthFamilyDetails.typeOfHospitalization != 2) {\r\n                this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n                this.viewSelf = true;\r\n            }\r\n        }\r\n        else if (this.claim.healthFamilyDetails.claimFor == 6) {\r\n            this.viewFamily = true;\r\n        }\r\n    }\r\n    natureOfDeathChange(natureOfDeathData) {\r\n        this.viewAccidental = this.viewEligibilityAmount = this.placeOfDeathValid = false;\r\n        if (this.claim.deathDetails.natureofDeath > 0) {\r\n            const data = this.deathConfig.find(x => x.claimConfigId == natureOfDeathData);\r\n            this.viewEligibilityAmount = true; this.deathEligibility = data.annualLimit;\r\n            this.natureofDeathName = data.claimConfigOptionName;\r\n        }\r\n        if (this.claim.deathDetails.natureofDeath == 16) {\r\n            this.viewAccidental = this.placeOfDeathValid = true;\r\n        }\r\n    }\r\n    selectDependent(args) {\r\n        const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == args.target.value);\r\n        this.dataService\r\n            .isDuplicateDependentSubmitted(data.benSno, data.benFamilyMemSno, this.claimId, false)\r\n            .subscribe((data1: any) => {\r\n                debugger;\r\n                if (!data1) {\r\n                    //--------------\r\n        if (this.educationDetailsArray.findIndex(x => x.dependentId == args.target.value) != -1 && this.rowIndex == -1) {\r\n            alert(\"already added please select another dependent\"); this.educationDetails.dependentId = 0; return;\r\n        }\r\n        if (data.benDependentRelation.toLowerCase() == \"daughter\") {\r\n            this.isMarried = this.marriedValid = true;\r\n            this.getEducationConfiguration();\r\n            this.getLastExamPassed();\r\n        }\r\n        else if (data.benDependentRelation.toLowerCase() == \"son\") {\r\n            this.educationConfig = this.dataService.eduConfig;\r\n            const index = this.educationConfig.findIndex(x => x.claimConfigOptionName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\");\r\n            this.educationConfig.splice(index, 1);\r\n            // remove item from last Exam passed option\r\n            const indexLastExamPassed = this.lastExampassed.findIndex(l => l.optionName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\");\r\n            this.lastExampassed.splice(indexLastExamPassed, 1);\r\n            //var timeDiff = Math.abs(Date.now() - Date.parse(data.dob));\r\n            //const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\r\n            //if (age >= 21) {\r\n            //    alert(\"your dependent not suitable for this claim beacause your son age 21\");\r\n            //}\r\n            this.isMarried = false;\r\n        }\r\n        else {\r\n            this.getEducationConfiguration();\r\n            this.getLastExamPassed();\r\n                    }\r\n                    this.isDuplicateDependent = false;\r\n                }\r\n                else {\r\n                    this.isDuplicateDependent = true;\r\n                }\r\n                //-------------------\r\n            });\r\n        this.educationDetails.dependentName = args.target.options[args.target.selectedIndex].text;\r\n        this.educationDetails.dependentRelation = args.target.options[args.target.selectedIndex].text.split('-')[1];\r\n    }\r\n\r\n    selectLastExamPassed(args, education: EducationDetailModel) {\r\n        this.educationDetails.lastExamPassedName = args.target.options[args.target.selectedIndex].text;\r\n        if (args.target.options[args.target.selectedIndex].text == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n            this.isDisabledBaseOnLastExamPassed = true;\r\n            this.educationDetails.eligibleAmount = 25000;\r\n            this.viewuploadNonMarriage = true;\r\n            this.educationDetails.presentlyReading = undefined;\r\n            this.educationDetails.dateofAdmission = undefined;\r\n        }\r\n        else {\r\n            this.isDisabledBaseOnLastExamPassed = false;\r\n            this.educationDetails.eligibleAmount = 0;\r\n            this.viewuploadNonMarriage = false;\r\n            this.educationDetails.presentlyReading = undefined;\r\n            this.educationDetails.dateofAdmission = undefined;\r\n        }\r\n    }\r\n\r\n    selectPresentlyReading(args, education: EducationDetailModel) {\r\n        const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == education.dependentId);\r\n\r\n        this.educationDetails.presentlyReadingName = args.target.options[args.target.selectedIndex].text;\r\n        if (this.educationDetails.presentlyReading > 0) {\r\n            const data = this.educationConfig.find(x => x.claimConfigId == this.educationDetails.presentlyReading);\r\n            this.educationDetails.eligibleAmount = data.annualLimit;\r\n        }\r\n        else {\r\n            this.educationDetails.eligibleAmount = 0;\r\n        }\r\n        if (data.benDependentRelation.toLowerCase() == \"daughter\" && this.educationDetails.presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n            this.viewuploadNonMarriage = true;\r\n        }\r\n        else {\r\n            this.viewuploadNonMarriage = false;\r\n        }\r\n    }\r\n\r\n    chkAccidentChange(args, value) {\r\n        if (value == true) { this.claim.healthFamilyDetails.claimFor = 5; }\r\n        else { this.claim.healthFamilyDetails.claimFor = 0; }\r\n        this.claimForChange(args);\r\n    }\r\n\r\n    validateEducationDetails(details: EducationDetailModel): boolean {\r\n        let isValid = true;\r\n        this.studentNameValid = this.institutionNameValid = this.registrationNoValid = this.institutionContactValid = this.educationYearValid = this.dateOfAdmissionValid = this.presentlyReadingValid = true;\r\n        if (details.dependentId == undefined || details.dependentId <= 0) { this.studentNameValid = isValid = false; }\r\n        if (details.institutionName == undefined || details.institutionName == \"\") { this.institutionNameValid = isValid = false; }\r\n        if (details.registrationRollNo == undefined || details.registrationRollNo == \"\") { this.registrationNoValid = isValid = false; }\r\n        if (details.institutionContact != undefined && details.institutionContact.toString().length > 0 && details.institutionContact.toString().length < 10) {\r\n            this.institutionContactValid = isValid = false;\r\n        }\r\n        if (details.year == undefined) { this.educationYearValid = isValid = false; }\r\n        if (this.viewuploadNonMarriage) {\r\n            if (this.eduNonMarriage.length == 0) { this.uploadNonMarriageValid = isValid = false }\r\n        }\r\n\r\n        if (this.educertificates.length == 0 && !this.isDisabledBaseOnLastExamPassed) { this.uploadCertificatetValid = isValid = false }\r\n        if (this.eduSelfAttested.length == 0) { this.uploadselfattestedValid = isValid = false }\r\n        if (details.dateofAdmission == undefined && !this.isDisabledBaseOnLastExamPassed) { this.dateOfAdmissionValid = isValid = false; }\r\n        if ((details.presentlyReading == undefined || details.presentlyReading <= 0) && !this.isDisabledBaseOnLastExamPassed) { this.presentlyReadingValid = isValid = false; }\r\n        debugger;\r\n        if (this.isMarried && (details.isMarried == undefined || details.isMarried == null)) { this.marriedValid = isValid = false; }\r\n        else if (this.isMarried && details.isMarried == \"1\") {\r\n            isValid = false;\r\n            alert(\"This benefit not applicable for married student\");\r\n            return;\r\n        }\r\n        if (this.isDuplicateDependent) { isValid = false; }\r\n        return isValid;\r\n    }\r\n\r\n    addEducationDetails(details: EducationDetailModel) {\r\n        this.marriedValid = true;\r\n        this.isMarried = false;\r\n        if (this.claim.educationDetails.claimAmount == undefined) { this.claim.educationDetails.claimAmount = 0; }\r\n        if (this.validateEducationDetails(details)) {\r\n            details.statusId = ClaimStatus.Submitted;\r\n            if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) == -1 && this.rowIndex == -1) {\r\n                const attachedList: AttachmentModel[] = [];\r\n                if (this.educertificates.length > 0) {\r\n                    this.educertificates.forEach(contact => {\r\n                        attachedList.push(contact);\r\n                    });\r\n                }\r\n                if (this.eduNonMarriage.length > 0) {\r\n                    this.eduNonMarriage.forEach(contact => {\r\n                        attachedList.push(contact);\r\n                    });\r\n                }\r\n                if (this.eduSelfAttested.length > 0) {\r\n                    this.eduSelfAttested.forEach(contact => {\r\n                        attachedList.push(contact);\r\n                    });\r\n                }\r\n                details.attachmentDetailsList = attachedList;\r\n                details.isDuplicate = false;\r\n                this.educationDetailsArray.push(details);\r\n                this.claim.educationDetails.claimAmount -= this.rowEligibleAmount == undefined ? 0 : this.rowEligibleAmount;\r\n                this.eduCount += 1;\r\n                this.lgModal.hide();\r\n            }\r\n            else if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) != -1 && this.rowIndex == -1) {\r\n                alert(\"already added please select another dependent\"); return;\r\n            }\r\n            else {\r\n                if (this.rowIndex != -1) {\r\n                    if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) == this.rowIndex) {\r\n                        this.educationDetailsArray.splice(this.rowIndex, 1);\r\n                        this.claim.educationDetails.claimAmount -= this.rowEligibleAmount == undefined ? 0 : this.rowEligibleAmount;\r\n                        const attachedList: AttachmentModel[] = [];\r\n                        if (this.educertificates.length > 0) {\r\n                            this.educertificates.forEach(contact => {\r\n                                attachedList.push(contact);\r\n                            });\r\n                        }\r\n                        if (this.eduNonMarriage.length > 0) {\r\n                            this.eduNonMarriage.forEach(contact => {\r\n                                attachedList.push(contact);\r\n                            });\r\n                        }\r\n                        if (this.eduSelfAttested.length > 0) {\r\n                            this.eduSelfAttested.forEach(contact => {\r\n                                attachedList.push(contact);\r\n                            });\r\n                        }\r\n                        details.attachmentDetailsList = attachedList;\r\n                        details.isDuplicate = false;\r\n                        this.educationDetailsArray.push(details);\r\n                        this.rowIndex = -1;\r\n                        this.rowEligibleAmount = 0;\r\n                        this.lgModal.hide();\r\n                    }\r\n                    else {\r\n                        alert(\"already added please select another dependent\"); return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n                if (eduBenefit != null) {\r\n                    var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n                }\r\n                if (cond) { this.maxLimitExceeded = true; }\r\n            }\r\n            //if (this.eduCount >= 2) { this.maxLimitExceeded = true; }\r\n\r\n            const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == details.dependentId);\r\n            this.claim.educationDetails.claimAmount += details.eligibleAmount == undefined ? 0 : details.eligibleAmount;\r\n            this.educationDetails = {} as EducationDetailModel;\r\n        }\r\n    }\r\n    editEducationDetails(details: EducationDetailModel) {\r\n        this.educationDetails = details;\r\n        this.eduSelfAttested = [] as AttachmentModel[];\r\n        this.educertificates = [] as AttachmentModel[];\r\n        this.eduNonMarriage = [] as AttachmentModel[];\r\n        this.educationDetails.dateofAdmission = new Date(details.dateofAdmission);\r\n        this.educationDetails.attachmentDetailsList.forEach((eachObj) => {\r\n            if (eachObj.attachmentType === AttachmentType.Scholarship) {\r\n                this.educertificates.push(eachObj);\r\n            }\r\n            if (eachObj.attachmentType === AttachmentType.NonMarriage) {\r\n                this.eduNonMarriage.push(eachObj);\r\n            }\r\n            if (eachObj.attachmentType === AttachmentType.PassingExamCertificate) {\r\n                this.eduSelfAttested.push(eachObj);\r\n            }\r\n        });\r\n        this.rowEligibleAmount = details.eligibleAmount;\r\n        this.rowIndex = this.educationDetailsArray.indexOf(details);\r\n        this.lgModal.show();\r\n    }\r\n    removeEducationDetails(details: EducationDetailModel) {\r\n        const index: number = this.educationDetailsArray.indexOf(details);\r\n        if (index !== -1) {\r\n            this.claim.educationDetails.claimAmount -= this.educationDetailsArray[index].eligibleAmount == undefined ? 0 : this.educationDetailsArray[index].eligibleAmount;\r\n            this.educationDetailsArray.splice(index, 1);\r\n            if (this.educationDetailsArray.findIndex(x => x.presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") != -1) {\r\n                this.viewuploadNonMarriage = true;\r\n            }\r\n            else {\r\n                this.viewuploadNonMarriage = false;\r\n            }\r\n            this.eduCount -= 1;\r\n            if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n                if (eduBenefit != null) {\r\n                    var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n                }\r\n                if (cond) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n            }\r\n            //if (this.eduCount >= 2) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n        }\r\n    }\r\n    getHospitalization() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.Hospitalization)\r\n            .subscribe((data: any) => {\r\n                this.hospitalizationLov = data;\r\n            });\r\n    }\r\n    getHealthClainFor() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.ClaimFor)\r\n            .subscribe((data: any) => {\r\n                this.healthtypeofClaim = data;\r\n            });\r\n    }\r\n    getLastExamPassed() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.LastExamPassed)\r\n            .subscribe((data: any) => {\r\n                this.lastExampassed = data;\r\n            });\r\n    }\r\n\r\n    getPfConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.PF)\r\n            .subscribe((data: any) => {\r\n                this.pfConfig = data;\r\n            });\r\n    }\r\n    getHealthandFamilyConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.HealthFamily)\r\n            .subscribe((data: any) => {\r\n                this.healthConfig = data;\r\n            });\r\n    }\r\n    getEducationConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.Education)\r\n            .subscribe((data: any) => {\r\n                this.educationConfig = data;\r\n                this.dataService.eduConfig = data;\r\n            });\r\n    }\r\n    getDeathConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.Death)\r\n            .subscribe((data: any) => {\r\n                this.deathConfig = data;\r\n            });\r\n    }\r\n    getDisabilityConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.Disability)\r\n            .subscribe((data: any) => {\r\n                this.disabilityConfig = data;\r\n            });\r\n    }\r\n    valuechange(ssnNo: any) {\r\n        this.isCAFUpdated = false;\r\n        this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n        this.claim.educationDetails = {} as EducationHdrModel;\r\n        this.claim.deathDetails = {} as DeathModel;\r\n        this.claim.disabilityDetails = {} as DisabilityModel;\r\n        this.claim.providentFundDetails = {} as ProvidentFund;\r\n        this.educationDetailsArray = [];\r\n        this.benficiaryInactive = this.validateDependent = this.noDependents = this.maxLimitExceeded = false;\r\n        if (ssnNo != undefined && ssnNo.trim() != \"\") {\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService.isCAFUpdated(ssnNo.trim(), this.isRegistrationNo).subscribe((data1: any) => {\r\n                    debugger;\r\n                    if (!data1)\r\n                        this.isCAFUpdated = true;\r\n                    else {\r\n                        this.dataService\r\n                            .getBeneficiaryBasicDetailsByNo(ssnNo.trim(), this.isRegistrationNo)\r\n                            .subscribe((data: any) => {\r\n\r\n                                this.beneficiary = data;\r\n                                if (this.beneficiary != null && this.beneficiary.benSno > 0) {\r\n                                    if (this.beneficiary.isActive) {\r\n                                        this.benficiaryInactive = false;\r\n                                        if (this.mode == \"entry\") {\r\n                                            this.getNomineeClaimEntryValidation(this.beneficiary.benSno);\r\n                                        }\r\n                                        this.getBenficiaryFamilyDetails(this.beneficiary.benSno);\r\n                                        this.getBenficiaryFamilyDetailsByHealth(this.beneficiary.benSno);\r\n                                        this.getBenficiaryEduCount(this.beneficiary.benSno);\r\n                                        this.getBeneficiaryNomineeDetails(this.beneficiary.benSno);\r\n                                        if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n                                            this.dataService.getBeneficiaryPFAccountDetails(this.beneficiary.benSno).subscribe((data1: any) => {\r\n                                                debugger;\r\n                                                this.beneficiaryPFAccountDetails = data1;\r\n                                                if (this.beneficiaryPFAccountDetails != null && (this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != null && this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != \"\")) {\r\n                                                    if (this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.Active || this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.PartialClosed) {\r\n                                                        this.getPfBalance(this.beneficiary.benSno);\r\n\r\n                                                            this.validatePfSubmit(this.beneficiary.ssI_Number, 0);\r\n                                                        if (this.isPFSubmitted) {\r\n                                                            this.disablePFCheckbox = true;\r\n                                                        }\r\n                                                        else {\r\n                                                            this.disablePFCheckbox = false;\r\n                                                        }\r\n                                                    }\r\n                                                    else\r\n                                                        alert(\"Your Pf Account is closed/Inactive\");\r\n                                                }\r\n                                                else {\r\n                                                    this.disablePFCheckbox = true;\r\n                                                    alert(\"No pf details available for this given SSIN number\");\r\n                                                }\r\n                                            });\r\n                                            //if (this.beneficiary.regNumber != null && this.beneficiary.regNumber != \"\") {\r\n                                            //    this.getPfBalance(this.beneficiary.regNumber);\r\n\r\n                                            //    this.validatePfSubmit(this.beneficiary.ssI_Number, 0);\r\n                                            //    if (this.isPFSubmitted) {\r\n                                            //        this.disablePFCheckbox = true;\r\n                                            //    }\r\n                                            //    else {\r\n                                            //        this.disablePFCheckbox = false;\r\n                                            //    }\r\n                                            //}\r\n                                            //else {\r\n                                            //    this.disablePFCheckbox = true;\r\n                                            //    alert(\"No pf details available for this given SSIN number\");\r\n                                            //}\r\n                                        }\r\n                                        else {\r\n                                            this.pfExsits = true;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        this.benficiaryInactive = true; this.restrictSave = true; this.viewEducation = false; this.disableEdu = true;\r\n                                    }\r\n                                }\r\n                                else\r\n                                {\r\n                                    this.isCAFUpdated = true;\r\n                                }\r\n                                console.log(this.beneficiary);\r\n                            });\r\n                    }\r\n                });\r\n\r\n            }\r\n        }\r\n        else {\r\n            this.beneficiary = {} as Beneficiary;\r\n            this.viewEducation = false;\r\n        }\r\n    }\r\n    getNomineeClaimEntryValidation(id: any) {\r\n        this.dataService\r\n            .getNomineeClaimEntryValidation(id)\r\n            .subscribe((data: any) => {\r\n\r\n                if (data) {\r\n                    var healthCount = data.item1;\r\n                    var eduCount = data.item2;\r\n                    //health Check box\r\n                    if (healthCount > 0) { this.disableHealthCheckbox = false; }\r\n                    else {\r\n                        this.disableHealthCheckbox = true;\r\n                        this.isHFSubmitted = true\r\n                    }\r\n                    //Education Check box\r\n                    if (eduCount > 0) { this.disableEduCheckbox = false; }\r\n                    else {\r\n                        this.disableEduCheckbox = true;\r\n                        this.isEduSubmitted = true;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    getBeneficiaryNomineeDetails(id: any) {\r\n\r\n        this.dataService\r\n            .getBeneficiaryNomineeDetails(id)\r\n            .subscribe((data: any) => {\r\n\r\n                this.benficiaryNominee = data;\r\n            });\r\n\r\n    }\r\n    getHospitals() {\r\n        this.dataService\r\n            .getAllHospitals()\r\n            .subscribe((data: any) => {\r\n                this.hospotalList = data;\r\n                console.log(this.hospotalList);\r\n            });\r\n    }\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                this.result = [];\r\n                groups.forEach(g =>\r\n                    this.result.push({\r\n                        name: g,\r\n                        values: this.packages.filter(i => i.ailmentName === g)\r\n                    }\r\n                    ))\r\n            });\r\n    }\r\n    getBenficiaryEduCount(id: any) {\r\n\r\n        this.dataService\r\n            .getBeneficiaryEduCount(id)\r\n            .subscribe((data: any) => {\r\n                this.eduCount = data;\r\n                if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                    var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n                    if (eduBenefit != null) {\r\n                        var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n                        if (cond) {\r\n                        //if (this.eduCount >= 2) {\r\n                            //this.disableEdu = true;\r\n                            //this.maxLimitExceeded = true;\r\n                            //this.restrictSave = true;\r\n                        }\r\n                        else {\r\n                            this.disableEdu = false;\r\n                            this.maxLimitExceeded = false;\r\n                            this.restrictSave = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    getBenficiaryFamilyDetails(id: any) {\r\n        this.dataService\r\n            .getBeneficiaryFamilyDetails(id, ClaimConstants.Education)\r\n            .subscribe((data: any) => {\r\n                this.benficiaryFamily = data;\r\n                if (this.benficiaryFamily != null && this.benficiaryFamily.length > 0) { this.noDependents = false; }\r\n                //else { this.restrictSave = true; this.viewEducation = false; this.disableEdu = true; this.noDependents = true; }\r\n                console.log(this.benficiaryFamily);\r\n            });\r\n    }\r\n    getBenficiaryFamilyDetailsByHealth(id: any) {\r\n        this.dataService\r\n            .getBeneficiaryFamilyDetails(id, ClaimConstants.HealthFamily)\r\n            .subscribe((data: any) => {\r\n\r\n                this.benficiaryFamilybyHealth = data;\r\n\r\n            });\r\n    }\r\n    getBeneficiaryHealthClaimAmount(benSno: any, typeOfClaim?: any) {\r\n        this.maxHelathClaimLimitExceeded = false;\r\n        this.dataService\r\n            .getBeneficiaryHealthClaimAmount(benSno, typeOfClaim)\r\n            .subscribe((data: any) => {\r\n                let maxEligibleAmount: number = 0;\r\n                if (typeOfClaim != 0) {\r\n                    if (typeOfClaim == 4) { maxEligibleAmount = HealthClaimEligibility.TreatmentOfAilment; this.typeOfAilmentClaimedAmount = data; }\r\n                    else { maxEligibleAmount = HealthClaimEligibility.Surgery; this.surgeryClaimedAmount = data; }\r\n                    if (data >= maxEligibleAmount) {\r\n                        alert(\"Maximum claim limit has been reached for the selected claim type.\");\r\n                        this.claim.healthFamilyDetails.typeOfClaim = 0;\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    this.totalHealthClaimAmount = data;\r\n                    maxEligibleAmount = HealthClaimEligibility.TreatmentOfAilment + HealthClaimEligibility.Surgery;\r\n                    if (this.totalHealthClaimAmount >= maxEligibleAmount) {\r\n                        this.viewHealth = false;\r\n                        this.maxHelathClaimLimitExceeded = true;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    validateHealthData(claimData: ClaimModel, id: any): boolean {\r\n        let isValid = true;\r\n        this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded = true;//this.originalVoucher = \r\n        this.isClaimEffectiveDate = false;\r\n        if (id == 2) {\r\n            if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n        }\r\n        if (this.hospotalId > 0) {\r\n            if (this.claim.healthFamilyDetails.otherHospital == undefined) { this.otherHospitalValid = isValid = false };\r\n        }\r\n        if (this.claim.healthFamilyDetails.claimFor == undefined) { this.claimForValid = isValid = false }\r\n        if (this.claim.healthFamilyDetails.typeOfClaim == undefined) { this.typeOfClaimValid = isValid = false }\r\n        if (this.claim.healthFamilyDetails.hospitalId == 0 || this.claim.healthFamilyDetails.hospitalId == undefined) { this.hospital = isValid = false }\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 0 || this.claim.healthFamilyDetails.typeOfHospitalization == undefined) { this.hospitalization = isValid = false }\r\n        if (this.claim.healthFamilyDetails.isCertifynotESI == false || this.claim.healthFamilyDetails.isCertifynotESI == undefined) { this.rigisterESI = isValid = false }\r\n        if (this.healthSelfAttached.fileName == undefined) { this.hospitalselfAttested = isValid = false };\r\n        //if (this.healthOriginalVoucher.fileName == undefined) { this.originalVoucher = isValid = false };\r\n        if (this.showDisCertUpload && this.healthDischargeCertificate.fileName == undefined) { this.dischargeCertificate = isValid = false };\r\n\r\n        if (this.viewDateOfAdmit) {\r\n            if (this.claim.healthFamilyDetails.admittedDate == undefined) { this.dateofAdmin = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.admittedDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n            if (this.claim.healthFamilyDetails.dischargeDate == undefined) { this.dateofDischargeValid = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.dischargeDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n        }\r\n        if (this.viewDateOfFirstAppointment) {\r\n            if (this.claim.healthFamilyDetails.firstAppointmentDate == undefined) { this.dateofAppointment = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.firstAppointmentDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.viewFamily) {\r\n            if (this.claim.healthFamilyDetails.familyMemberId == 0 || this.claim.healthFamilyDetails.familyMemberId == undefined) { this.familyMember = isValid = false }\r\n        }\r\n        if (this.viewSelf) {\r\n            if (this.claim.healthFamilyDetails.loeFromDate == undefined) { this.loeFromDate = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.loeFromDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n            if (this.claim.healthFamilyDetails.loeToDate == undefined) { this.loeToDate = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.loeToDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (this.claim.healthFamilyDetails.costOfClinicalTest == undefined && (this.viewDateOfAdmit && this.claim.healthFamilyDetails.costOfHospitalization == undefined) && this.claim.healthFamilyDetails.costOfMedicine == undefined) {\r\n            isValid = false;\r\n            alert(\"Please enter atleast one cost\");\r\n            return;\r\n        }\r\n        else if (this.claim.healthFamilyDetails.costOfClinicalTest == 0 && this.claim.healthFamilyDetails.costOfHospitalization == 0 && this.claim.healthFamilyDetails.costOfMedicine == 0) {\r\n            isValid = false;\r\n            alert(\"Please enter atleast one valid cost\");\r\n            return;\r\n        }\r\n        else {\r\n            let amount = Number(claimData.healthFamilyDetails.costOfClinicalTest != undefined ? claimData.healthFamilyDetails.costOfClinicalTest : 0) + Number(claimData.healthFamilyDetails.costOfHospitalization != undefined ? claimData.healthFamilyDetails.costOfHospitalization : 0) + Number(claimData.healthFamilyDetails.costOfMedicine != undefined ? claimData.healthFamilyDetails.costOfMedicine : 0);\r\n            if (amount == 0) {\r\n                isValid = false;\r\n                alert(\"Please enter atleast one valid cost\");\r\n                return;\r\n            }\r\n            let remainingAmount = 0;\r\n            if (this.claim.healthFamilyDetails.typeOfClaim == 4) {\r\n                remainingAmount = HealthClaimEligibility.TreatmentOfAilment - this.typeOfAilmentClaimedAmount;\r\n            }\r\n            else {\r\n                remainingAmount = HealthClaimEligibility.Surgery - this.surgeryClaimedAmount;\r\n            }\r\n\r\n            if (amount > remainingAmount) {\r\n                isValid = false;\r\n                alert(\"Cost of Clinical Test, Cost of Medicine, Cost of Hospitalization should not be more than \" + remainingAmount);\r\n                return;\r\n            }\r\n        }\r\n\r\n        //if (this.viewDateOfAdmit) {\r\n        //    if (this.claim.healthFamilyDetails.admittedDate == undefined) { this.dateofAdmin = isValid = false }\r\n        //    if (this.claim.healthFamilyDetails.dischargeDate == undefined) { this.dateofDischargeValid = isValid = false }\r\n        //}\r\n        //if (this.viewDateOfFirstAppointment) {\r\n        //    if (this.claim.healthFamilyDetails.firstAppointmentDate == undefined) { this.dateofAppointment = isValid = false };\r\n\r\n        //}\r\n        \r\n        if (this.enableReasonForDelaySubmissionInHealth) {\r\n            if (this.claim.healthFamilyDetails.reasonForDelaySubmission == undefined) { this.reasonForHealthDelayValid = isValid = false };\r\n            if (this.healthCondolationCertificate.fileName == undefined) { this.healthCondolationCertificateUploaded = isValid = false };\r\n        }\r\n        return isValid;\r\n    }\r\n    validateDeathData(claimData: ClaimModel, id: any): boolean {\r\n\r\n        let isValid = true;\r\n        this.natureOfDeath = this.dateofDeath = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = true;\r\n        this.isClaimEffectiveDate = false;\r\n        if (id == 2) {\r\n            if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n        }\r\n        if (this.deathCertificate.fileName == undefined) { this.deathCertificateUploaded = isValid = false };\r\n        if (this.bankPassbook.fileName == undefined) { this.bankPassbookUploaded = isValid = false };\r\n        if (this.claim.deathDetails.natureofDeath == undefined) { this.natureOfDeath = isValid = false };\r\n        if (this.claim.deathDetails.dateofDeath == undefined) { this.dateofDeath = isValid = false }\r\n        else {\r\n            if (this.claim.deathDetails.dateofDeath < new Date(this.deathClaimEffectiveDate)) {\r\n                this.claimEffectiveDate = this.deathClaimEffectiveDate;\r\n                this.isClaimEffectiveDate = true;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional == false || this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional == undefined) { this.isDeath1 = isValid = false }\r\n        if (this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == false || this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == undefined) { this.isDeath2 = isValid = false }\r\n        if (this.claim.deathDetails.isOtherFinancialAssistance == false || this.claim.deathDetails.isOtherFinancialAssistance == undefined) { this.isDeath3 = isValid = false }\r\n        if (this.viewAccidental == true && this.claim.deathDetails.placeofDeath == undefined) { this.placeOfDeathValid = isValid = false };\r\n        return isValid;\r\n    }\r\n    validateClaimsData(claimData: ClaimModel, id?): boolean {\r\n        let isValid = true;\r\n        this.uplaodmain = this.uploadselfattestedValid = this.uploadNonMarriageValid = this.uploadCertificatetValid = this.educationCheck = this.ssnNoValid = this.nomineeNameValid = this.nomineeContactValid = this.nomineeDOBValid = this.nomineeBankAccountValid = true;\r\n        if (this.beneficiary.benSno == undefined || this.beneficiary.benSno <= 0) { this.ssnNoValid = isValid = false; }\r\n        if (claimData.nomineeName == undefined || claimData.nomineeName == \"\") { this.nomineeNameValid = isValid = false; }\r\n        if (claimData.nomineeContact == undefined || claimData.nomineeContact.toString() == \"\") { this.nomineeContactValid = isValid = false; }\r\n        if (claimData.nomineeDOB == undefined) { this.nomineeDOBValid = isValid = false; }\r\n        if (claimData.nomineeBankAccount == undefined || claimData.nomineeBankAccount == \"\") { this.nomineeBankAccountValid = isValid = false; }\r\n        if (id == null) {\r\n            if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n        }\r\n        return isValid;\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        window.location.href = \"/\";\r\n    }\r\n    downloadRecipt(refNo: any, amount: any, name: any, nomineeName: any) {\r\n        this.dataService\r\n            .downloadReceipt(this.beneficiary.benFirstName, this.beneficiary.ssI_Number, refNo, amount, name, nomineeName)\r\n            .then((data: any) => {\r\n                let dd = data;\r\n                var url = window.URL.createObjectURL(data);\r\n                window.open(url);\r\n            });\r\n    }\r\n    saveClaimsData(claimData: ClaimModel) {\r\n        let isValidNomineeId = true;\r\n        let isValid = true;\r\n        let hasNomineeShare = true;\r\n        //let isValidNomineeName = true;\r\n        //let isValidNomineeBank = true;\r\n        //let isValidNomineeDOB = true;\r\n        this.validateDependent = false;\r\n\r\n        if (this.viewHealth) {\r\n            if (!this.validateHealthData(claimData, 2)) {\r\n\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.viewDeath) {\r\n            if (!this.validateDeathData(claimData, 2)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        //Keep Education Validations after all the health,pf,death, disability validations\r\n        if (this.viewEducation) {\r\n            if (this.educationDetailsArray.length == 0) {\r\n                alert(\"Please add atleast one student\");\r\n                //return;\r\n                isValid = false;\r\n            }\r\n            if (!claimData.educationDetails.isanyothersourceofthegovernment) { return this.educationCheck = isValid = false; }\r\n            this.isClaimEffectiveDate = false;\r\n            for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                if (this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n                    if (new Date(this.educationDetailsArray[i].dateofAdmission) < new Date(this.educationClaimEffectiveDate)) {\r\n                        this.claimEffectiveDate = this.educationClaimEffectiveDate;\r\n                        this.isClaimEffectiveDate = true;\r\n                        isValid = false;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isValid == false) {\r\n            return;\r\n        }\r\n        if (this.validateClaimsData(claimData)) {\r\n\r\n            this.UpdateClaimStatusIdByStatus();\r\n\r\n            if (this.ClaimStatusId <= 7)\r\n                claimData.workflowId = WorkflowTrans.workflow;\r\n            else\r\n                claimData.workflowId = WorkflowTrans.workflowreferral;\r\n\r\n            //claimData.workflowId = WorkflowTrans.workflow;\r\n            const attachedList: Array<AttachmentModel> = [];\r\n            this.claim.disabilityDetails = null;\r\n            if (!this.viewPf) {\r\n                this.claim.providentFundDetails = null;\r\n            }\r\n            if (!this.viewDeath) {\r\n                this.claim.deathDetails = null;\r\n            }\r\n            if (!this.viewHealth) {\r\n                this.claim.healthFamilyDetails = null;\r\n            }\r\n            if (!this.viewEducation) {\r\n                this.claim.educationDetails = null;\r\n            }\r\n\r\n            this.mainUploadList.push(this.mainUpload);\r\n            this.claim.benSno = this.beneficiary.benSno;\r\n            claimData.attachment = this.mainUploadList;\r\n            claimData.entryPoint = EntryPoint.Nominee;\r\n            claimData.ssin = this.beneficiary.ssI_Number;\r\n            if (this.claim.educationDetails != null) {\r\n\r\n                if (this.claim.educationDetails.educationHdrId > 0)\r\n                    claimData.educationDetails.educationHdrId = this.claim.educationDetails.educationHdrId;\r\n                claimData.educationDetails.educationDetailList = this.educationDetailsArray;\r\n                //---------------------------\r\n                this.educationClaimExceptionDetails = [];\r\n                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                    const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == this.educationDetailsArray[i].dependentId);\r\n                    if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                        //Exception Rule - 1 (if currentdate-admissiondate >90) \r\n                        if (this.educationDetailsArray[i].dateofAdmission != null && this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n\r\n                            var date1 = new Date(this.educationDetailsArray[i].dateofAdmission);\r\n                            var date2 = new Date(Date.now());\r\n                            var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                            var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.DateofAdmissionExceeding.toLowerCase());\r\n                            if (eduBenefit != null) {\r\n                                var cond = eval(diffDays + eduBenefit.logic + eduBenefit.value);\r\n\r\n                                //if (diffDays > 90) {\r\n                                if (cond) {\r\n                                    //if (diffDays > 90) {\r\n\r\n                                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                    exp.exceptionText = \"Student (Dependent) \" + data.benDependentName + \" admission date exceeding 90 days\";\r\n                                    exp.exceptionCapturedDate = new Date();\r\n                                    exp.raisedBy = 89;\r\n\r\n                                    this.educationClaimExceptionDetails.push(exp);\r\n                                }\r\n                            }\r\n                            //Exception Rule - 2 IF(BenDependentSonAge by admissiondate> 21) \r\n                            if (data.benDependentRelation.toLowerCase() == \"son\") {\r\n\r\n                                var date1 = new Date(this.educationDetailsArray[i].dateofAdmission);\r\n                                var date2 = new Date(data.dob);\r\n                                var timeDiff = Math.abs(date1.getTime() - date2.getTime());\r\n                                const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\r\n                                var eduBenefit2 = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.SonAgeExceeding.toLowerCase());\r\n                                if (eduBenefit2 != null) {\r\n                                    var cond2 = eval(age + eduBenefit2.logic + eduBenefit2.value);\r\n                                    //if (age >= 21) {\r\n                                    if (cond2) {\r\n                                        //if (age >= 21) {\r\n\r\n                                        const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                        exp.exceptionText = \"Student (Dependent) \" + data.benDependentName + \" age exceeding 21\";\r\n                                        exp.exceptionCapturedDate = new Date();\r\n                                        exp.raisedBy = 89;\r\n\r\n                                        this.educationClaimExceptionDetails.push(exp);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // claimData.educationDetails.educationClaimExceptionDetails.concat(this.expection);\r\n\r\n                //--------------------\r\n                // claimData.educationDetails.attachmentDetailsList = attachedList;\r\n                claimData.educationDetails.claimType = ClaimConstants.Education;\r\n                claimData.educationDetails.statusId = this.ClaimStatusId;//ClaimStatus.Submitted;\r\n                claimData.educationDetails.CreatedBy = 89;\r\n\r\n            }\r\n            if (this.claim.healthFamilyDetails != null) {\r\n                //-------------------------------\r\n                this.healthClaimExceptionDetails = [];\r\n                if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n                    //Exception Rule - 4 if(Currentdate-Firstappointmentdate >60 and OPD)\r\n                    if (this.claim.healthFamilyDetails.firstAppointmentDate != null && this.claim.healthFamilyDetails.firstAppointmentDate != undefined) {\r\n\r\n                        var date1 = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                        var date2 = new Date(Date.now());\r\n                        var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                        var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.DateofFirstAppointmentExceeding.toLowerCase());\r\n                        if (helBenefit != null) {\r\n                            var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                            if (cond && this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                                //if (diffDays > 60 && this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n\r\n                                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                exp.exceptionText = \"First appointment date exceeding 60 days\";\r\n                                exp.exceptionCapturedDate = new Date();\r\n                                exp.raisedBy = 89;\r\n\r\n                                this.healthClaimExceptionDetails.push(exp);\r\n                            }\r\n                        }\r\n                    }\r\n                    //Exception Rule - 5 if(Currentdate-Dischargedate>60 and Hospitalization)\r\n                    if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined) {\r\n\r\n                        var date1 = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n                        var date2 = new Date(Date.now());\r\n                        var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                        var helBenefit2 = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.DateofDischargeExceeding.toLowerCase());\r\n                        if (helBenefit2 != null) {\r\n                            var cond2 = eval(diffDays + helBenefit2.logic + helBenefit2.value);\r\n                            if (cond2 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                                //if (diffDays > 60 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n\r\n                                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                exp.exceptionText = \"Discharge date exceeding 60 days\";\r\n                                exp.exceptionCapturedDate = new Date();\r\n                                exp.raisedBy = 89;\r\n\r\n                                this.healthClaimExceptionDetails.push(exp);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //claimData.healthFamilyDetails.healthClaimExceptionDetails.concat(this.expection);\r\n                //--------------------\r\n                for (var i = 0; i < this.selectedPackages.length; i++) {\r\n                    const oo: HealthFamilyPackage = {} as HealthFamilyPackage;\r\n                    oo.packageID = this.selectedPackages[i].packageID;\r\n                    oo.ailmentName = this.selectedPackages[i].ailmentName;\r\n                    oo.packageName = this.selectedPackages[i].packageName;\r\n                    this.healthFamilyPackages.push(oo);\r\n                }\r\n                if (this.claim.healthFamilyDetails.healthFamilyId > 0)\r\n                    claimData.healthFamilyDetails.healthFamilyId = this.claim.healthFamilyDetails.healthFamilyId;\r\n                claimData.healthFamilyDetails.healthFamilyPackages = this.healthFamilyPackages;\r\n                claimData.healthFamilyDetails.claimAmount = Number(claimData.healthFamilyDetails.costOfClinicalTest != undefined ? claimData.healthFamilyDetails.costOfClinicalTest : 0) + Number(claimData.healthFamilyDetails.costOfHospitalization != undefined ? claimData.healthFamilyDetails.costOfHospitalization : 0) + Number(claimData.healthFamilyDetails.costOfMedicine != undefined ? claimData.healthFamilyDetails.costOfMedicine : 0) + ((this.viewSelf) ? claimData.healthFamilyDetails.loeAmount : 0);\r\n                claimData.healthFamilyDetails.loeAmount = this.lossOfEmploymentAmount;\r\n                claimData.healthFamilyDetails.claimType = ClaimConstants.HealthFamily;\r\n                claimData.healthFamilyDetails.statusId = this.ClaimStatusId;//ClaimStatus.Submitted;\r\n                claimData.healthFamilyDetails.createdBy = 89;\r\n                if (!this.isOtherHospital) {\r\n                    claimData.healthFamilyDetails.otherHospital == undefined;\r\n                }\r\n                else {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Application has been submitted with a non listed hospital\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = 89;\r\n\r\n                    // this.expection.push(exp);\r\n                    this.healthClaimExceptionDetails.push(exp);\r\n                }\r\n                if (this.viewDateOfAdmit) {\r\n                    claimData.healthFamilyDetails.admittedDate == undefined;\r\n                    claimData.healthFamilyDetails.dischargeDate == undefined;\r\n                    claimData.healthFamilyDetails.costOfHospitalization == undefined;\r\n                }\r\n                if (this.viewDateOfFirstAppointment) {\r\n                    claimData.healthFamilyDetails.firstAppointmentDate == undefined;\r\n                    claimData.healthFamilyDetails.nameOfTheDisease == undefined;\r\n                    //claimData.healthFamilyDetails.nameOfClinicalTest == undefined;\r\n                    this.nameOfClinicalTestIds = [];\r\n                }\r\n                else {\r\n                    if (!this.viewNameOfClinicalTest) {\r\n                        //claimData.healthFamilyDetails.nameOfClinicalTest == undefined;\r\n                        this.nameOfClinicalTestIds = [];\r\n                    }\r\n                    else {\r\n                        if (this.nameOfClinicalTestIds != null && this.nameOfClinicalTestIds.length > 0) {\r\n                            this.clinicalTestDetails = [];\r\n                            for (var i = 0; i < this.nameOfClinicalTestIds.length; i++) {\r\n                                const testId: ClinicalTestModel = {} as ClinicalTestModel;\r\n                                var t = this.nameOfClinicalTestIds[i].lovDtlId;\r\n                                testId.clinicalTest = Number(t);\r\n                                this.clinicalTestDetails.push(testId);\r\n                            }\r\n\r\n                            if (this.clinicalTestDetails.length > 0) {\r\n                                claimData.healthFamilyDetails.clinicalTestDetails = this.clinicalTestDetails;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!this.viewSelf) {\r\n                    claimData.healthFamilyDetails.loeFromDate = undefined;\r\n                    claimData.healthFamilyDetails.loeToDate = undefined;\r\n                }\r\n                this.healthAttachmentList.push(this.healthOriginalVoucher);\r\n                this.healthAttachmentList.push(this.healthSelfAttached);\r\n                if (this.healthDischargeCertificate.fileName != undefined) {\r\n                    this.healthAttachmentList.push(this.healthDischargeCertificate);\r\n                }\r\n                if (this.healthExpensesSheet.fileName != undefined) {\r\n                    this.healthAttachmentList.push(this.healthExpensesSheet);\r\n                }\r\n                if (this.enableReasonForDelaySubmissionInHealth) {\r\n                    this.healthAttachmentList.push(this.healthCondolationCertificate);\r\n                }\r\n                claimData.healthFamilyDetails.attachmentDTOList = this.healthAttachmentList;\r\n            }\r\n            if (this.claim.deathDetails != null) {\r\n                this.deathClaimExceptionDetails = [];\r\n\r\n                if (this.claim.deathDetails.deathId > 0)\r\n                    claimData.deathDetails.deathId = this.claim.deathDetails.deathId;\r\n\r\n                claimData.deathDetails.claimType = ClaimConstants.Death;\r\n                claimData.deathDetails.statusId = this.ClaimStatusId;//ClaimStatus.Submitted;\r\n                claimData.deathDetails.createdBy = 89;\r\n                claimData.deathDetails.claimAmount = this.deathEligibility;\r\n                this.deathAttachmentList.push(this.deathCertificate);\r\n                this.deathAttachmentList.push(this.bankPassbook);\r\n                claimData.deathDetails.attachmentDTOList = this.deathAttachmentList;\r\n\r\n                //Death Exceptions\r\n                //Exception Rule - if(Currentdate-dateofDeath >90)\r\n                if (this.claim.deathDetails.dateofDeath != null && this.claim.deathDetails.dateofDeath != undefined) {\r\n\r\n                    var date1 = new Date(this.claim.deathDetails.dateofDeath);\r\n                    var date2 = new Date(Date.now());\r\n                    var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                    if (this.deathBenefitConfigDetails != null && this.deathBenefitConfigDetails.length > 0) {\r\n                        var deaBenefit = this.deathBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == DeathBenefitConfiguration.DateofDeathExceeding.toLowerCase()); \r\n                        if (deaBenefit != null) {\r\n                            var cond = eval(diffDays + deaBenefit.logic + deaBenefit.value);\r\n                            if (cond) {\r\n                                //if (diffDays > 90) {\r\n\r\n                                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                exp.exceptionText = \"Date of Death exceeding 90 days\";\r\n                                exp.exceptionCapturedDate = new Date();\r\n                                exp.raisedBy = 89;\r\n\r\n                                this.deathClaimExceptionDetails.push(exp);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            if (this.claim.providentFundDetails != null) {\r\n                //claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n                if (this.claim.providentFundDetails.pfId > 0)\r\n                    claimData.providentFundDetails.pfId = this.claim.providentFundDetails.pfId;\r\n                claimData.providentFundDetails.claimType = ClaimConstants.PF;\r\n                claimData.providentFundDetails.statusId = this.ClaimStatusId;//ClaimStatus.Submitted;\r\n                claimData.providentFundDetails.createdBy = 89;\r\n                claimData.providentFundDetails.nomineeId = this.benNomineeSno;\r\n                claimData.providentFundDetails.claimAmount = this.benNomineeShareAmount;\r\n                claimData.providentFundDetails.typeOfClaim = PFTypeOfClaim.FinalPayment;\r\n\r\n                if (this.beneficiaryPFAccountDetails != null && (this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != null && this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != \"\")) {\r\n                    claimData.providentFundDetails.pFNO = this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO;\r\n                }\r\n                else {\r\n                    claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n                }\r\n\r\n                //PF Exceptions\r\n                if (this.benficiaryNominee.length > 1) {\r\n                    for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n                        if (this.benficiaryNominee[i].benNomineeSharePercentage == 0) {\r\n                            hasNomineeShare = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (hasNomineeShare == false) {\r\n                        const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                        exp.exceptionText = \"Nominees doesn't have share allocation\";\r\n                        exp.exceptionCapturedDate = new Date();\r\n                        exp.raisedBy = this.benNomineeSno;\r\n\r\n                        this.pfClaimExceptionDetails.push(exp);\r\n                    }\r\n                }\r\n            }\r\n            claimData.StatusId = ClaimStatus.Submitted;\r\n            claimData.CreatedBy = 89;\r\n            if (claimData.claimId > 0) {\r\n                claimData.updatedBy = 89;\r\n            }\r\n           \r\n            //------------------------\r\n            //Exception Rule - 9 If Nominee Details not matching with database\r\n            if (this.benficiaryNominee != null && this.benficiaryNominee.length > 0) {\r\n                var benNominee = this.benficiaryNominee.find(n => n.benNomineeName.trim().toLowerCase() == this.claim.nomineeName.trim().toLowerCase());\r\n                if (benNominee != null) {\r\n                    debugger;\r\n                    //b. Invalid nominee DOB\r\n                    var date1 = new Date(this.claim.nomineeDOB);\r\n                    var date2 = new Date(benNominee.dob);\r\n                    var ageNom = date1.getFullYear() - date2.getFullYear();\r\n                    var m = date1.getMonth() - date2.getMonth();\r\n                    if (m < 0 || (m === 0 && date1.getDate() < date2.getDate())) {\r\n                        ageNom--;\r\n                    }\r\n                    //------------------\r\n                    //var date1 = new Date(this.claim.nomineeDOB);\r\n                    //var date2 = new Date(benNominee.dob);\r\n                    //var timeDiff = Math.abs(date1.getTime() - date2.getTime());\r\n\r\n                    if (ageNom == 0) {\r\n                        this.benNomineeSno = benNominee.benNomineeSno;\r\n                    }\r\n                    else {\r\n                        isValidNomineeId = false;\r\n\r\n                        const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                        exp.exceptionText = \"Invalid nominee date of birth\";\r\n                        exp.exceptionCapturedDate = new Date();\r\n                        exp.raisedBy = benNominee.benNomineeSno;\r\n\r\n                        this.educationClaimExceptionDetails.push(exp);\r\n                        this.healthClaimExceptionDetails.push(exp);\r\n                        this.deathClaimExceptionDetails.push(exp);\r\n                        this.pfClaimExceptionDetails.push(exp);\r\n                    }\r\n                    \r\n                    //c.Validate nominee Bank Details\r\n                    if (benNominee.benNomineeBankAccNo.trim().toLowerCase() != this.claim.nomineeBankAccount.trim().toLowerCase() || benNominee.benNomineeBankIfscCode.trim().toLowerCase() != this.claim.nomineeIFSCCode.trim().toLowerCase()) {\r\n                        isValidNomineeId = false;\r\n                       \r\n                        const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                        exp.exceptionText = \"Invalid bank details\";\r\n                        exp.exceptionCapturedDate = new Date();\r\n                        exp.raisedBy = benNominee.benNomineeSno;\r\n\r\n                        this.educationClaimExceptionDetails.push(exp);\r\n                        this.healthClaimExceptionDetails.push(exp);\r\n                        this.deathClaimExceptionDetails.push(exp);\r\n                        this.pfClaimExceptionDetails.push(exp);\r\n\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    isValidNomineeId = false;\r\n                    //a.Validate nominee Name\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Invalid nominee name\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = 89;\r\n\r\n                    this.educationClaimExceptionDetails.push(exp);\r\n                    this.healthClaimExceptionDetails.push(exp);\r\n                    this.deathClaimExceptionDetails.push(exp);\r\n                    this.pfClaimExceptionDetails.push(exp);\r\n                }\r\n            }\r\n            else {\r\n                isValidNomineeId = false;\r\n                //a.In-Valid nominee\r\n                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                exp.exceptionText = \"Nominee not existing for this SSIN number in the database\";\r\n                exp.exceptionCapturedDate = new Date();\r\n                exp.raisedBy = 89;\r\n\r\n                this.educationClaimExceptionDetails.push(exp);\r\n                this.healthClaimExceptionDetails.push(exp);\r\n                this.deathClaimExceptionDetails.push(exp);\r\n                this.pfClaimExceptionDetails.push(exp);\r\n            }\r\n            \r\n            if (isValidNomineeId) {\r\n                claimData.nomineeId = this.benNomineeSno;\r\n            }\r\n            else {\r\n                claimData.nomineeId = null;}\r\n\r\n            if (this.claim.educationDetails != null && this.educationClaimExceptionDetails.length > 0) {\r\n                claimData.educationDetails.educationClaimExceptionDetails = this.educationClaimExceptionDetails;\r\n            }\r\n            if (this.claim.healthFamilyDetails != null && this.healthClaimExceptionDetails.length > 0) {\r\n                claimData.healthFamilyDetails.healthClaimExceptionDetails = this.healthClaimExceptionDetails;\r\n            }\r\n            if (this.claim.deathDetails != null && this.deathClaimExceptionDetails.length > 0) {\r\n                claimData.deathDetails.deathClaimExceptionDetails = this.deathClaimExceptionDetails;\r\n            }\r\n            if (this.claim.providentFundDetails != null && this.pfClaimExceptionDetails.length > 0) {\r\n                claimData.providentFundDetails.pfClaimExceptionDetails = this.pfClaimExceptionDetails;\r\n            }\r\n\r\n            //------------------------\r\n            console.log(claimData);\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .createClaim(claimData)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n\r\n                            this.claim.claimId = data.item5;\r\n                            this.claimReferenceNo = data.item3;\r\n                            let refNo;\r\n                            if (this.viewPf) {\r\n                                let downloads = { refNo: \"\", amount: 0, name: \"PF\", nomineeName: \"\" };\r\n                                downloads.refNo = data.item1;\r\n                                downloads.amount = this.claim.providentFundDetails.claimAmount;\r\n                                downloads.nomineeName = this.claim.nomineeName;\r\n                                this.genaratePdfs.push(downloads);\r\n                                refNo = data.item1 + \" (PF) \";\r\n                            }\r\n                            if (this.viewHealth) {\r\n                                let downloads = { refNo: \"\", amount: 0, name: \"Health & Family\", nomineeName: \"\" };\r\n                                downloads.refNo = data.item2;\r\n                                downloads.amount = this.claim.healthFamilyDetails.claimAmount;\r\n                                downloads.nomineeName = this.claim.nomineeName;\r\n                                this.genaratePdfs.push(downloads);\r\n                                refNo = data.item2 + \" (Health & Family) \";\r\n                            }\r\n                            if (this.viewDeath) {\r\n                                let downloads = { refNo: \"\", amount: 0, name: \"Death\", nomineeName: \"\" };\r\n                                downloads.refNo = data.item4;\r\n                                downloads.amount = this.claim.deathDetails.claimAmount;\r\n                                downloads.nomineeName = this.claim.nomineeName;\r\n                                this.genaratePdfs.push(downloads);\r\n                                refNo = data.item4 + \" (Death) \";\r\n                            }\r\n                            if (this.viewEducation) {\r\n                                let downloads = { refNo: \"\", amount: 0, name: \"Education\", nomineeName: \"\" };\r\n                                if (refNo == undefined) {\r\n                                    downloads.refNo = data.item3;\r\n                                    downloads.amount = this.claim.educationDetails.claimAmount;\r\n                                    downloads.nomineeName = this.claim.nomineeName;\r\n                                    this.genaratePdfs.push(downloads);\r\n                                    refNo = data.item3 + \" (Education) \";\r\n                                }\r\n                                else {\r\n                                    downloads.refNo = data.item3;\r\n                                    downloads.amount = this.claim.educationDetails.claimAmount;\r\n                                    downloads.nomineeName = this.claim.nomineeName;\r\n                                    this.genaratePdfs.push(downloads);\r\n                                    refNo = \" (Health & Family) \" + data.item2 + \" , \" + \" (Education) \" + data.item3 + \" , \" + \" (Death) \" + data.item4;\r\n                                }\r\n                            }\r\n                            this.claimReferenceNo = refNo;\r\n                            for (var i = 0; i < this.genaratePdfs.length; i++) {\r\n                                this.successMessage = \"Your claim was successfully submitted, your claim ticket id: \" + this.genaratePdfs[i].refNo + \"(\" + this.genaratePdfs[i].name + \")\" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process. <br/>  <br/>\";\r\n                            }\r\n                            //   this.successMessage = \"Your claim was successfully submitted, your claim ticket id: \" + refNo + \".You are requested to submit the relevant documents and original application form to the concerned inspector for further process\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n    UpdateClaimStatusIdByStatus() {\r\n\r\n        if (this.mode == \"entry\")\r\n            this.ClaimStatusId = ClaimStatus.Submitted;\r\n        else {\r\n            if (this.claimStatus < 5)\r\n                this.ClaimStatusId = 2;\r\n            else if (this.claimStatus == 5) this.ClaimStatusId = 4;\r\n            else if (this.claimStatus == 6 || this.claimStatus == 10) this.ClaimStatusId = 8;\r\n            else if (this.claimStatus == 9 || this.claimStatus == 13) this.ClaimStatusId = 12;\r\n        }\r\n    }\r\n    claerClaim() {\r\n        this.isRegistrationNo = false;\r\n        this.isCAFUpdated = false;\r\n        this.ssin = \"\";\r\n        this.pfExsits = this.isPFSubmitted = this.isHFSubmitted = this.isEduSubmitted = this.isBenNomineeSubmittedClaim = false;\r\n        this.isNomineesExist = this.isNomineesMatch = true;\r\n        this.natureOfDeath = this.dateofDeath = this.deathCertificateUploaded = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = this.bankPassbookUploaded = true;\r\n        this.benficiaryInactive = this.validateDependent = this.noDependents = this.maxLimitExceeded = false;\r\n        this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded =   true;//this.originalVoucher =\r\n        this.restrictSave = false; this.viewEducation = false; this.disableEdu = false; this.noDependents = false;\r\n        this.uplaodmain = this.uploadselfattestedValid = this.uploadNonMarriageValid = this.uploadCertificatetValid = this.educationCheck = this.ssnNoValid = this.nomineeNameValid = this.nomineeContactValid = this.nomineeDOBValid = this.nomineeBankAccountValid = true;\r\n        this.claim = {} as ClaimModel;\r\n        this.educationDetailsArray = [];\r\n        this.viewEducation = false;\r\n        this.viewHealth = false;\r\n        this.viewDeath = false;\r\n        this.viewPf = false;\r\n        this.rowIndex = -1;\r\n        this.eduCount = 0;\r\n        this.rowEligibleAmount = 0;\r\n        this.beneficiary = {} as Beneficiary;\r\n        this.benficiaryFamily = [] as BenFamilyMember[];\r\n        this.healthOriginalVoucher = {} as AttachmentModel;\r\n        this.healthSelfAttached = {} as AttachmentModel;\r\n        this.healthDischargeCertificate = {} as AttachmentModel;\r\n        this.healthExpensesSheet = {} as AttachmentModel;\r\n        this.healthAttachmentList = [] as AttachmentModel[];\r\n        this.mainUploadList = [] as AttachmentModel[];\r\n        this.educertificates = [] as AttachmentModel[];\r\n        this.eduNonMarriage = [] as AttachmentModel[];\r\n        this.eduSelfAttested = [] as AttachmentModel[];\r\n        this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n        this.claim.educationDetails = {} as EducationHdrModel;\r\n        this.claim.educationDetails.educationDetailList = [];\r\n        this.natureOfDeath = this.dateofDeath = true;\r\n        this.deathAttachmentList = [] as AttachmentModel[];\r\n        this.deathCertificate = {} as AttachmentModel;\r\n        this.healthCondolationCertificate = {} as AttachmentModel;\r\n    }\r\n    GenaratePdf(claimData: ClaimModel, type) {\r\n\r\n        let isValid = true;\r\n        this.validateBasicDetails(claimData);\r\n        if (this.viewHealth) {\r\n            if (this.validateHealthData(claimData, type)) {\r\n                if (this.claim.healthFamilyDetails.claimFor == 5 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                    claimData.healthFamilyDetails.loeAmount = this.lossOfEmploymentAmount;\r\n                }\r\n                else {\r\n                    claimData.healthFamilyDetails.loeAmount = 0;\r\n                }\r\n            }\r\n            else {\r\n                isValid = false;\r\n                //return;\r\n            }\r\n        }\r\n        if (this.viewDeath) {\r\n            if (!this.validateDeathData(claimData, type)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.viewPf) {\r\n            claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n            claimData.providentFundDetails.typeOfClaim = PFTypeOfClaim.FinalPayment;\r\n\r\n        }\r\n        //Keep Education Validations after all the health,pf,death, disability validations\r\n        if (this.viewEducation) {\r\n            if (this.educationDetailsArray.length == 0) {\r\n                alert(\"Please add atleast one student\");\r\n                //return;\r\n                isValid = false;\r\n            }\r\n            else if (this.educationDetailsArray.length > 0) {\r\n                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                    if (this.educationDetailsArray[i].isDuplicate) {\r\n                        alert(\"Already claim has submitted for this dependent in this year please select another dependent\");\r\n                        isValid = false;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (!claimData.educationDetails.isanyothersourceofthegovernment) {\r\n                return this.educationCheck = isValid = false;\r\n            }\r\n            this.isClaimEffectiveDate = false;\r\n            for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                if (this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n                    if (new Date(this.educationDetailsArray[i].dateofAdmission) < new Date(this.educationClaimEffectiveDate)) {\r\n                        this.claimEffectiveDate = this.educationClaimEffectiveDate;\r\n                        this.isClaimEffectiveDate = true;\r\n                        isValid = false;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isValid == false) {\r\n            return;\r\n        }\r\n        if (this.validateClaimsData(claimData, 3)) {\r\n            this.pdfModal.show();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    validateBasicDetails(claimData) {\r\n        let isValid = true;\r\n        this.ssnNoValid = this.nomineeNameValid = this.nomineeContactValid = this.nomineeDOBValid = this.nomineeBankAccountValid = true;\r\n        if (this.beneficiary.benSno == undefined || this.beneficiary.benSno <= 0 || this.ssin == \"\") { this.ssnNoValid = isValid = false; }\r\n        if (claimData.nomineeName == undefined || claimData.nomineeName == \"\") { this.nomineeNameValid = isValid = false; }\r\n        if (claimData.nomineeContact == undefined || claimData.nomineeContact.toString() == \"\") { this.nomineeContactValid = isValid = false; }\r\n        if (claimData.nomineeDOB == undefined || claimData.nomineeDOB == \"\") { this.nomineeDOBValid = isValid = false; }\r\n        if (claimData.nomineeBankAccount == undefined || claimData.nomineeBankAccount == \"\") { this.nomineeBankAccountValid = isValid = false; }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    downLoadPdf(claimData: ClaimModel, type) {\r\n\r\n        if (!this.viewPf) {\r\n            this.claim.providentFundDetails = null;\r\n        }\r\n        if (!this.viewDeath) {\r\n            this.claim.deathDetails = null;\r\n            this.claim.disabilityDetails = null;\r\n        }\r\n        else {\r\n            claimData.deathDetails.natureofDeathName = this.natureofDeathName;\r\n            claimData.deathDetails.claimAmount = this.deathEligibility;\r\n        }\r\n        if (!this.viewHealth) {\r\n            this.claim.healthFamilyDetails = null;\r\n        }\r\n        if (!this.viewEducation) {\r\n            this.claim.educationDetails = null;\r\n        }\r\n        else {\r\n            claimData.educationDetails.educationDetailList = this.educationDetailsArray;\r\n        }\r\n\r\n        this.claim.benSno = this.beneficiary.benSno;\r\n        claimData.benSno = this.claim.benSno;\r\n        claimData.benName = this.beneficiary.benFullName;\r\n        claimData.nomineeName = this.claim.nomineeName;\r\n        claimData.nomineeBankAccount = this.claim.nomineeBankAccount;\r\n        claimData.nomineeIFSCCode = this.claim.nomineeIFSCCode;\r\n        claimData.attachment = this.mainUploadList;\r\n        claimData.ssin = this.beneficiary.ssI_Number;\r\n        claimData.entryPoint = EntryPoint.Nominee;\r\n        claimData.onBehalfBen = false;\r\n\r\n        this.dataService\r\n            .genaratePdfFormV(claimData)\r\n            .then((data: any) => {\r\n                var blob = new Blob([data.body], { type: 'application/pdf' });\r\n                if (type == 'print') {\r\n                    const blobUrl = URL.createObjectURL(blob);\r\n                    const iframe = document.createElement('iframe');\r\n                    iframe.style.display = 'none';\r\n                    iframe.src = blobUrl;\r\n                    document.body.appendChild(iframe);\r\n                    iframe.contentWindow.print();\r\n                }\r\n                else {\r\n                    FileSaver.saveAs(blob, \"FormV.pdf\");\r\n                    this.disableSubmitbutton = false;\r\n                }\r\n                this.pdfModal.hide();\r\n                //var url = window.URL.createObjectURL(blob);\r\n                //this.disableSubmitbutton = false;\r\n                //window.open(url);\r\n            });\r\n    }\r\n\r\n    loeFromDateChange(eve) {\r\n        this.minLOEDate = new Date(this.claim.healthFamilyDetails.loeFromDate);\r\n        this.calculateLossOfEmploymentAmount();\r\n    }\r\n\r\n    loeToDateChange(eve) {\r\n        this.calculateLossOfEmploymentAmount();\r\n    }\r\n\r\n    dateofadminchange(eve) {\r\n        this.disableDischarge = false;\r\n        if (eve != null) {\r\n            if (!this.isClaimEdit) {\r\n                this.claim.healthFamilyDetails.dischargeDate = null;\r\n                this.claim.healthFamilyDetails.loeToDate = null;\r\n            }\r\n            else {\r\n                this.isClaimEdit = false;\r\n            }\r\n        }\r\n\r\n        this.dischargeMinDt = eve;\r\n        this.lossOfEmploymentAmount = 0;\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n            this.claim.healthFamilyDetails.loeFromDate = eve;\r\n            this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n        }\r\n    }\r\n    dateofdischargechange(eve) {\r\n        this.lossOfEmploymentAmount = 0;\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n            this.claim.healthFamilyDetails.loeToDate = eve;\r\n            this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n        }\r\n\r\n        if (eve != null) {\r\n            if (!this.isHealthClaimEdit) {\r\n                var date1 = new Date(eve);\r\n                var date2 = new Date(Date.now());\r\n                var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n                if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n                    var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.ReasonForDelaySubmission.toLowerCase()); \r\n                    if (helBenefit != null) {\r\n                        var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                        if (cond) { this.enableReasonForDelaySubmissionInHealth = true; }\r\n                        else {\r\n                            this.claim.healthFamilyDetails.reasonForDelaySubmission = null;\r\n                            this.healthCondolationCertificate = null;\r\n                            this.enableReasonForDelaySubmissionInHealth = false;\r\n                        }\r\n                    }\r\n                }\r\n                //if (diffDays > 90) {\r\n                //    this.enableReasonForDelaySubmissionInHealth = true;\r\n                //}\r\n                //else {\r\n                //    this.claim.healthFamilyDetails.reasonForDelaySubmission = null;\r\n                //    this.healthCondolationCertificate = null;\r\n                //    this.enableReasonForDelaySubmissionInHealth = false;\r\n                //}\r\n            }\r\n            else {\r\n                this.isHealthClaimEdit = false;\r\n                if (this.claim.healthFamilyDetails.reasonForDelaySubmission != undefined || this.claim.healthFamilyDetails.reasonForDelaySubmission != null)\r\n                    this.enableReasonForDelaySubmissionInHealth = true;\r\n                else\r\n                    this.enableReasonForDelaySubmissionInHealth = false;\r\n\r\n            }\r\n        }\r\n    }\r\n    calculateLossOfEmploymentAmount() {\r\n        debugger;\r\n        var calculatedAmount = 0;\r\n        if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n            if (this.claim.healthFamilyDetails.claimFor != undefined && this.claim.healthFamilyDetails.claimFor == 5) {\r\n                if (this.claim.healthFamilyDetails.claimFor != undefined && this.claim.healthFamilyDetails.typeOfHospitalization != 2) {\r\n                    if (this.claim.healthFamilyDetails.loeFromDate != undefined && this.claim.healthFamilyDetails.loeToDate != undefined) {\r\n                        var date1 = new Date(this.claim.healthFamilyDetails.loeFromDate);\r\n                        var date2 = new Date(this.claim.healthFamilyDetails.loeToDate);\r\n                        var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                        if (diffDays != NaN) {\r\n                            diffDays += 1;\r\n                            //-----------------------\r\n\r\n                            var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.LossOfEmploymentDateDiffernce.toLowerCase());\r\n                            if (helBenefit != null) {\r\n                                var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                                if (cond) {\r\n                                    calculatedAmount = 0;\r\n                                    this.viewLOEAmount = false;\r\n                                    this.viewSelf = false;\r\n                                }\r\n                                else {\r\n                                    if (diffDays > Number(helBenefit.value))\r\n                                        calculatedAmount = (200 * Number(helBenefit.value)) + ((diffDays - Number(helBenefit.value)) * 100); //calculatedAmount = (200 * 5) + ((diffDays - 5) * 100);\r\n                                    else\r\n                                        calculatedAmount = diffDays * 200; //calculatedAmount = diffDays * 200;\r\n\r\n                                    this.viewSelf = true;\r\n                                    this.viewLOEAmount = true;\r\n                                }\r\n                            }\r\n\r\n                            //if (diffDays <= 5) {\r\n                            //    //calculatedAmount = diffDays * 200;\r\n                            //    this.viewLOEAmount = false;\r\n                            //}\r\n                            //else {\r\n                            //    this.viewLOEAmount = true;\r\n                            //    calculatedAmount = (200 * 5) + ((diffDays - 5) * 100);\r\n                            //}\r\n                        }\r\n                    }\r\n                    var helBenefit2 = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.LossOfEmploymentAmountExceeding.toLowerCase());\r\n                    if (helBenefit2 != null) {\r\n                        //var cond2 = eval(diffDays + helBenefit2.logic + helBenefit2.value);\r\n                        var cond2 = eval(calculatedAmount + helBenefit2.logic + helBenefit2.value);\r\n                        if (cond2) { calculatedAmount = 10000; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //if (calculatedAmount > 10000) { calculatedAmount = 10000; }\r\n        return calculatedAmount;\r\n    }\r\n\r\n    checkAll(e, item: any) {\r\n        if (e.target.checked) {\r\n            this.result.filter(x => x.name == item)[0].values.forEach((item) => {\r\n                item.isChecked = true;\r\n            });\r\n        } else {\r\n            this.result.filter(x => x.name == item)[0].values.forEach((item) => {\r\n                item.isChecked = false;\r\n            });\r\n        }\r\n    }\r\n    submitClick() {\r\n        this.selectedPackages = [];\r\n        for (var i = 0; i < this.result.length; i++) {\r\n\r\n            for (var j = 0; j < this.result[i].values.length; j++) {\r\n                if (this.result[i].values[j].isChecked) {\r\n                    this.selectedPackages.push(this.result[i].values[j]);\r\n                }\r\n            }\r\n        }\r\n        this.packageModal.hide();\r\n    }\r\n    checkIfAllSelected(item: any) {\r\n\r\n    }\r\n    viewPackages() {\r\n        this.packageModal.show();\r\n    }\r\n    isSameBenNomineeClaimSubmitted(id: any, nomineeId: any, claimType: any, eve) {\r\n        this.dataService\r\n            .isSameBenNomineeClaimSubmitted(id, nomineeId, claimType)\r\n            .subscribe((data: any) => {\r\n                \r\n                if (claimType == ClaimConstants.Death) {\r\n                    this.isBenNomineeSubmittedClaim = data;\r\n                    if (this.isBenNomineeSubmittedClaim) {\r\n                        this.viewDeath = false;\r\n                        eve.target.checked = false;\r\n                        this.disableDeathCheckbox = true;\r\n                    }\r\n                    else {\r\n                        this.viewDeath = !this.viewDeath;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n   \r\n    getHealthFamilyBenefitConfigurationDetails() {\r\n        \r\n        this.dataService\r\n            .getBenefitConfigurationDetails(ClaimConstants.HealthFamily)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.healthFamilyBenefitConfigDetails = data;\r\n            });\r\n    }\r\n    getEducationBenefitConfigurationDetails() {\r\n        \r\n        this.dataService\r\n            .getBenefitConfigurationDetails(ClaimConstants.Education)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.educationBenefitConfigDetails = data;\r\n            });\r\n    }\r\n    getDeathBenefitConfigurationDetails() {\r\n        \r\n        this.dataService\r\n            .getBenefitConfigurationDetails(ClaimConstants.Education)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.deathBenefitConfigDetails = data;\r\n            });\r\n    }\r\n\r\n    radioChange(id: any) {\r\n        if (id == 1) \r\n            this.isRegistrationNo = false;\r\n        if (id == 2) \r\n            this.isRegistrationNo = true;\r\n    }\r\n    updateCAFDetails() {\r\n        debugger;\r\n        if (this.isRegistrationNo)\r\n            window.location.href = \"/Registration/DeathclaimFrom?ID=\" + this.ssin;\r\n        else {\r\n            this.dataService\r\n                .getRegistrationNumber(this.ssin)\r\n                .subscribe((data: any) => {\r\n                    if(data)\r\n                        window.location.href = \"/Registration/DeathclaimFrom?ID=\" + data;\r\n                    else\r\n                        window.location.href = \"/Registration/DeathclaimFrom?ID=\" + this.ssin;\r\n                });\r\n            \r\n        }\r\n\r\n    }\r\n}","import { concat } from \"rxjs/operators\";\r\n\r\nexport const LovConstants = {\r\n    Hospitalization: 2,\r\n    ClaimFor: 4,\r\n    LastExamPassed: 5,\r\n    ReasonForApply: 7,\r\n    EntryPoint: 8,\r\n    ExpensesType: 10,\r\n    Diseases: 12,\r\n    ClinicalTests: 13,\r\n    LegacyClaimCategory: 14,\r\n    AdjustmentType: 15\r\n}\r\n\r\nexport const ClaimConstants = {\r\n    PF: 1,\r\n    HealthFamily: 2,\r\n    Disability: 3,\r\n    Death: 4,\r\n    Education: 5\r\n}\r\n\r\nexport const ClaimStatus={\r\n    Saved:1,\r\n    Submitted: 2,\r\n    SendbackfromInspector: 3,\r\n    ForwardtoALC: 4,\r\n    SendbackfromALC: 5,\r\n    RejectfromALC: 6,\r\n    ApprovedbyALC: 7,\r\n    RefertoALC: 8,\r\n    ReferedRejectbyALC: 9,\r\n    ReferSendbackbyALC: 10,\r\n    ReferApprovedbyALC: 11,\r\n    ReferedtoDLC: 12,\r\n    ReferSendbackfromDLC: 13,\r\n    ReferedRejectbyDLC: 14,\r\n    ReferApprovedbyDLC: 15,\r\n    ForcedClosed: 16,\r\n    FundRequestFromALC: 19,\r\n    SendBackbyDLC: 20,\r\n    ForwardtoBoard: 21,\r\n    SendBackbyBoard: 22,\r\n    RejectbyBoard: 23,\r\n    ApprovebyBoard: 24,\r\n    Release: 25,\r\n    PaymentProcessingbyALC: 26,\r\n    PaymentReleasebyTreasurer: 27\r\n}\r\n\r\nexport const WorkflowTrans = {\r\n    workflow: 1,\r\n    workflowreferral: 2,\r\n    fundworkflow: 3\r\n}\r\n\r\nexport const EntryPoint = {\r\n    Beneficiary: 19,\r\n    Agent: 20,\r\n    Nominee: 21,\r\n    CA: 64,\r\n    Lwfc:65\r\n}\r\n\r\nexport const AttachmentType = {\r\n    FormV: 22,\r\n    DischargeCertificate: 23,\r\n    OriginalVouchers: 24,\r\n    DoctorPrescription: 25,\r\n    DeathCertificate: 26,\r\n    DisabilityCertificate: 27,\r\n    Scholarship: 28,\r\n    NonMarriage: 29,\r\n    PassingExamCertificate: 30,\r\n    ExpensesSheet: 31,\r\n    FirstPageofBankPassbook: 40,\r\n    Condolationcertificate: 66,\r\n    PayinSlip: 90,\r\n    FormIV:91\r\n}\r\n\r\nexport const UserType = {\r\n    SuperAdmin:1,\r\n    Inspector: 5,\r\n    AsstLabourCom: 6,\r\n    DeputyLabourCom: 7,\r\n    Beneficiary: 14,\r\n    Treasurer: 13,\r\n    CEO: 12,\r\n    ServiceProvider: 8,\r\n    CA: 9,\r\n    Lwfc: 11,\r\n    Others: 10,\r\n\r\n}\r\n\r\nexport const HealthClaimEligibility = {\r\n    TreatmentOfAilment: 20000,\r\n    Surgery: 60000\r\n}\r\nexport const PFTypeOfClaim = {\r\n    Premature: 1,\r\n    FinalPayment: 2\r\n}\r\n\r\nexport const pagination = {\r\n    pageNo: 1,\r\n    pageSize:10\r\n}\r\nexport const PFDepositeStatus = {\r\n    pending: 0,\r\n    deposited: 1\r\n}\r\nexport const ClaimCheckList = {\r\n    PFCheckList: 1,\r\n    HealthFamilyCheckList: 2,\r\n    DisabilityCheckList: 3,\r\n    DeathCheckList: 4,\r\n    EducationCheckList: 5\r\n}\r\nexport const ReleaseType = {\r\n    ReleaseAgainstRLOOffice: 1,\r\n    ReleaseAgainstBeneficiary: 2\r\n}\r\n\r\nexport const ReasonForApplyAgent = {\r\n    OnDeathofBeneficiaryOnRequestofNominee: 16,\r\n    OnDisabilityofBeneficiary: 17,\r\n    OnRequestofBeneficiary:18\r\n}\r\n\r\nexport const enum DisabilityBenefitConfiguration  {\r\n    DateOfReleaseExceeding = \"DateOfReleaseExceeding\",\r\n    ReasonForDelaySubmission = \"ReasonForDelaySubmission\"\r\n}\r\nexport const enum HealthFamilyBenefitConfiguration {\r\n    DateofFirstAppointmentExceeding =\"DateofFirstAppointmentExceeding\",\r\n    DateofDischargeExceeding =\"DateofDischargeExceeding\",\r\n    LossOfEmploymentDateDiffernce =\"LossOfEmploymentDateDiffernce\",\r\n    LossOfEmploymentAmountExceeding=\"LossOfEmploymentAmountExceeding\",\r\n    ReasonForDelaySubmission =\"ReasonForDelaySubmission\",\r\n}\r\nexport const enum DeathBenefitConfiguration {\r\n    DateofDeathExceeding =\"DateofDeathExceeding\"\r\n}\r\nexport const enum EducationBenefitConfiguration  {\r\n    DateofAdmissionExceeding =\"DateofAdmissionExceeding\",\r\n    SonAgeExceeding =\"SonAgeExceeding\",\r\n    MaxLimitExceeded =\"MaxLimitExceeded\",\r\n}\r\n\r\nexport const PFStatusMaster = {\r\n    Active: 1,\r\n    Closed: 2,\r\n    Inactive: 3,\r\n    New: 0,\r\n    PartialClosed : 4,\r\n}\r\n\r\n\r\n","﻿export class UserUrl {\r\n    url: string;\r\n    userTpe: string;\r\n    userid: number;\r\n    userMobileNo: string;\r\n    benName: string;\r\n    userTypeName: string;\r\n    deptUserid: number;\r\n    userName: string;\r\n    location: string;\r\n    subDiv: string;\r\n    district: string;\r\n    checkRegType: string;\r\n    skipAdditionaldata: string;\r\n    loginType: string;\r\n    chkAddData: string;\r\n    token: string;\r\n    encData: string;\r\n    serviceProvider: string;\r\n    isDoubleVerification: boolean;\r\n}","﻿import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[NumbersOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n\r\n    DIGITS_REGEXP = new RegExp(/\\D/g);\r\n    constructor(private el: ElementRef) {\r\n\r\n        // Sanatize clipboard by removing any non-numeric input after pasting\r\n        this.el.nativeElement.onpaste = (e: any) => {\r\n            e.preventDefault();\r\n            let text;\r\n            let clp = (e.originalEvent || e).clipboardData;\r\n            if (clp === undefined || clp === null) {\r\n                text = (<any>window).clipboardData.getData('text') || '';\r\n                if (text !== '') {\r\n                    text = text.replace(this.DIGITS_REGEXP, '');\r\n                    if (window.getSelection) {\r\n                        let newNode = document.createElement('span');\r\n                        newNode.innerHTML = text;\r\n                        window.getSelection().getRangeAt(0).insertNode(newNode);\r\n                    } else {\r\n                        (<any>window).selection.createRange().pasteHTML(text);\r\n                    }\r\n                }\r\n            } else {\r\n                text = clp.getData('text/plain') || '';\r\n                if (text !== '') {\r\n                    text = text.replace(this.DIGITS_REGEXP, '');\r\n                    document.execCommand('insertText', false, text);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n        let e = <KeyboardEvent>event;\r\n        if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl+A\r\n            (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+C\r\n            (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+V\r\n            (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+X\r\n            (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<p>\\r\\n  pfconfiguartion works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pfconfiguartion',\r\n  templateUrl: './pfconfiguartion.component.html',\r\n  styleUrls: ['./pfconfiguartion.component.css']\r\n})\r\nexport class PfconfiguartionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { GlobalErrorHandlingService } from './global-error-handling.service';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { catchError, finalize, map } from 'rxjs/operators';\r\nimport 'rxjs/add/observable/throw';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { debug } from 'util';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AddAuthorizationHeader implements HttpInterceptor {\r\n    count: number=0;\r\n    constructor() {  }\r\n   \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let tokenInfo = localStorage.getItem('token');\r\n\r\n        if (tokenInfo && tokenInfo) {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${tokenInfo}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n        }\r\n        let loadingContainer: HTMLElement = document.getElementsByClassName('loading').item(0) as HTMLElement;\r\n        loadingContainer.style.display = 'block';\r\n        return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\r\n            if (event instanceof HttpResponse) {\r\n                loadingContainer.style.display = 'none';\r\n            }\r\n        },\r\n            (err: any) => {\r\n                loadingContainer.style.display = 'none';\r\n            }));\r\n    }\r\n    //intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    //    this.count++;\r\n    //    debugger;\r\n    //    let loadingContainer: HTMLElement = document.getElementsByClassName('loading').item(0) as HTMLElement;\r\n    //    if (this.count == 1)\r\n    //        loadingContainer.style.display = 'block';\r\n    //    let handleObs: Observable<HttpEvent<any>> = next.handle(req);\r\n    //    handleObs\r\n    //        .catch((err: any) => {\r\n    //            this.count--;\r\n    //            loadingContainer.style.display = 'none';\r\n    //            return Observable.throw(err);\r\n    //        })\r\n    //        .do(event => {\r\n    //            if (event instanceof HttpResponse) {\r\n    //                this.count--;\r\n    //                if (this.count == 0) loadingContainer.style.display = 'none';;\r\n    //            }\r\n    //        })\r\n    //        .subscribe(); /* <---------- ADD THIS */\r\n\r\n    //    return handleObs;\r\n    //}\r\n\r\n    //intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    //    let loadingContainer: HTMLElement = document.getElementsByClassName('loading').item(0) as HTMLElement;\r\n    //    loadingContainer.style.display = 'block';\r\n    //    //send the request\r\n    //    next.handle(req).subscribe((observer: any) => {\r\n    //        if (observer.status == 200) {\r\n    //            loadingContainer.style.display = 'none';\r\n    //        }\r\n    //    },\r\n    //        (error: any) => {\r\n    //            loadingContainer.style.display = 'none';    \r\n    //        })\r\n    //    return next.handle(req);\r\n    //}\r\n}\r\n","export const ApiDictionary = {\r\n  beneficiaryBasicDetails: {\r\n    url: 'GetBeneficiaryBasicDetailsByID',\r\n    params: { id: 'id' }\r\n  },\r\n  beneficiaryBankDetails: {\r\n    url: 'GetBeneficiaryBankDetailsByBeneficiaryID',\r\n    params: { benSno: 'benSno' }\r\n  },\r\n  beneficiaryNomineeDetails: {\r\n    url: 'GetBeneficiaryNomineeDetailsByBeneficiaryID',\r\n    params: { benSno: 'benSno' }\r\n  },\r\n  beneficiaryFamilyDetails: {\r\n    url: 'GetBeneficiaryFamilyDetailsByBeneficiaryID',\r\n    params: { benSno: 'benSno' }\r\n  },\r\n  GetLOVDetailsByLovId: {\r\n    url: 'GetLOVDetailsByLovId',\r\n    params: { lovId: 'lovId' }\r\n  },\r\n  GetClaimConfigDetails: {\r\n    url: 'GetClaimConfigDetailsByCliamMasterId',\r\n    params: { claimMasterId: 'claimMasterId' }\r\n  },\r\n  getClaims: {\r\n    url: 'src/assets/data/claims.json',\r\n    params: { roleId: 'benSno' }\r\n  },\r\n  GetAllHospitals: {\r\n    url: 'GetAllHospitals',\r\n    params: null\r\n  },\r\n  createClaim: {\r\n    url: 'createClaim',\r\n    params: null\r\n    },\r\n    beneficiaryEduCount: {\r\n        url: 'GetBeneficiaryDependentClaimsbyEdu',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    beneficiary: {\r\n        url: 'GetBeneficiaryDependentClaimsbyEdu',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    genarateFormV: {\r\n        url: \"getFormV\",\r\n        params: { baseTransactionId: 'transactionId', transactionType: 'transactionType' }\r\n    },\r\n    getReceipt: {\r\n        url: 'getReceipt',\r\n        params: null\r\n    },\r\n    getBeneficiaryHealthClaimAmount: {\r\n        url: \"GetBeneficiaryHealthClaimAmount\",\r\n        params: { benSno: 'benSno', typeOfClaim: 'typeOfClaim?' }\r\n    },\r\n  getPackages: {\r\n      url: 'getPackages',\r\n      params: null\r\n    },\r\n    getPfBalance:\r\n    {\r\n        url: \"GetPfBalance\"\r\n    },\r\n    validatePfSubmit:\r\n    {\r\n        url: \"ValidatePfSubmit\"\r\n    },\r\n    getNomineeClaimEntryValidation:\r\n    {\r\n        url: \"GetNomineeClaimEntryValidation\"\r\n    },\r\n    sendOTPforNominee:\r\n    {\r\n        url: \"SendOTPforNominee\"\r\n    },\r\n    verifyOTP:\r\n    {\r\n        url: \"VerifyOTP\"\r\n    },\r\n    pullTrack:\r\n    {\r\n        url: \"PullTrackClaimforNominee\"\r\n    },\r\n    getClaimDetailsById: {\r\n        url: 'getClaimDetailsByClaimId',\r\n        params: { claimId: 'claimId' }\r\n    },\r\n    getCalimId:\r\n    {\r\n        url: \"GetCalimId\"\r\n    },\r\n    deleteClaimExceptions:\r\n    {\r\n        url: \"DeleteClaimExceptions\"\r\n    },\r\n    isSameBenNomineeClaimSubmitted: {\r\n        url: 'isSameBenNomineeSubmittedClaim',\r\n    },\r\n    getBenefitConfigurationDetails:\r\n    {\r\n        url: \"GetBenefitConfigurationDetails\"\r\n    },\r\n    isDuplicateDependentSubmitted:\r\n    {\r\n        url: \"IsDuplicateDependentSubmitted\",\r\n        params: null\r\n    },\r\n    isCAFUpdated:\r\n    {\r\n        url: \"IsCAFUpdated\",\r\n        params: null\r\n    },\r\n    getRegistrationNumber: {\r\n        url: \"getRegistrationNumber\",\r\n        params: null\r\n    },\r\n    GetClaimConfigMasterDetails: {\r\n        url: 'GetClaimConfigDetails',\r\n        params: null\r\n    },\r\n    getBeneficiaryPFAccountDetails: {\r\n        url: \"getBeneficiaryPFAccountDetails\",\r\n        params: null\r\n    },\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/Rx';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // Accruals Micro service url\r\n    private accrualServiceUrl: string = \"\";\r\n    private serviceUrl: string = environment.apiurl;\r\n\r\n\r\n    getDropdownDataForMaster(options: HttpRequest<any>) {\r\n        return this.http.get(this.serviceUrl + options.url, {\r\n            params: options.params, responseType:'text'\r\n        });\r\n    }\r\n    getDropdownData2(options: HttpRequest<any>) {\r\n        return this.http.get(this.serviceUrl + options.url, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n            params: options.params, responseType: 'text'\r\n        });\r\n    }\r\n    public async downloadResource(options: HttpRequest<any>): Promise<Blob> {\r\n        const file = await this.http.get<Blob>(\r\n            this.serviceUrl + options.url,\r\n            { responseType: 'blob' as 'json' }).toPromise();\r\n        return file;\r\n    }\r\n\r\n    getReportsTypedDataWithResultAndStatusCode<T>(\r\n        options: HttpRequest<any>\r\n    ): Observable<T> {\r\n        return this.http\r\n            .get(this.serviceUrl + options.url, { params: options.params })\r\n            .map((res: any) => res.result as T);\r\n    }\r\n\r\n    getDropdownData(options: HttpRequest<any>) {\r\n        return this.http.get(this.serviceUrl + options.url, {\r\n            params: options.params\r\n        });\r\n    }\r\n    getStaticData(options: HttpRequest<any>) {\r\n        return this.http.get(options.url, {\r\n            params: options.params\r\n        });\r\n    }\r\n    getTypedData<T>(options: HttpRequest<any>): Observable<T> {\r\n        return this.http.get<T>(this.serviceUrl + options.url, {\r\n            params: options.params\r\n        });\r\n    }\r\n\r\n    PostData(url: string, postdata: string) {\r\n         return this.http.post(this.serviceUrl + url, postdata).toPromise();\r\n    }\r\n    PostData2(url: string, postdata: string) {\r\n        debugger;\r\n        var res = this.http.post(this.serviceUrl + url, postdata, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n            responseType: 'text'\r\n        }).toPromise();\r\n        return res;\r\n    }\r\n    PutDataToTemplate(url: string, postdata: string) {\r\n        return this.http.put(this.serviceUrl + url, postdata).toPromise();\r\n    }\r\n\r\n    PutDataToReportScheduler(url: string, postdata: string) {\r\n        return this.http.put(this.serviceUrl + url, postdata).toPromise();\r\n    }\r\n    public async genaratePdf(url, postdata) {\r\n        return this.http.post(this.serviceUrl + url, postdata, { responseType: 'blob', observe: 'response' }).toPromise();\r\n    }\r\n    DeleteDataToAccrual(options: HttpRequest<any>) {\r\n        return this.http.delete(this.accrualServiceUrl + options.url, {\r\n            params: options.params\r\n        }).toPromise();\r\n    }\r\n\r\n\r\n\r\n    deleteServiceData(url) {\r\n        return this.http.delete(this.serviceUrl +url).toPromise();\r\n    }\r\n\r\n    PutData(url: string, postdata: string) {\r\n        return this.http.put(this.serviceUrl + url, postdata).toPromise();\r\n    }\r\n\r\n    // This method is called in case of a PUT request where Accrual service is directly invoked\r\n    PostAccuralServiceData(url: string, postdata: string) {\r\n        return this.http.post(this.accrualServiceUrl + url, postdata, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n            responseType: 'text'\r\n        }).toPromise();\r\n    }\r\n\r\n    PutAccuralData(url: string, postdata: string) {\r\n        return this.http.put(this.serviceUrl + url, postdata, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n            responseType: 'text'\r\n        }).toPromise();\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DropdownListService } from '../Services/dropdown-list.service';\r\nimport { ApiService } from '../services/api.service';\r\nimport { HttpRequest, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { ApiDictionary } from './api-dictionary';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ClaimConfig } from '../claim/models/claimconfig.model';\r\n\r\n\r\n@Injectable()\r\nexport class ClaimNomineeDataService {\r\n    \r\n    eduConfig: Array<ClaimConfig>;\r\n    constructor(public apiService: ApiService, public _http: HttpClient) { }\r\n\r\n    getBeneficiaryBasicDetailsByNo(id: any, isRegistrationNo?: any) {\r\n        let paramsMap = new Map<any, any>();\r\n        paramsMap.set('ssiNum', id);\r\n        paramsMap.set('isRegistrationNo', isRegistrationNo);\r\n        let params = new HttpParams();\r\n        paramsMap.forEach((value: any, key: any) => {\r\n            params = params.set(key, value);\r\n        });\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryBasicDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryFamilyDetails(id: any, type?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryFamilyDetails.url + \"/\" + id + \"/\" + type, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryEduCount(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryEduCount.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAllHospitals() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetAllHospitals.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getlovDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetLOVDetailsByLovId.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getClaimConfiguration(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetClaimConfigDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    createClaim(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.createClaim.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimsByBenficiary(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaims.url, { params: params });\r\n        return this.apiService.getStaticData(options).map((res: any) => {\r\n            return res.claims;\r\n        });\r\n    }\r\n    getRecipt(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaims.url, { params: params });\r\n        return this.apiService.getStaticData(options).map((res: any) => {\r\n            return res.claims;\r\n        });\r\n    }\r\n    downloadReceipt(benName: any, ssin: any, claimRefernceNo: any, amount: any, name: any, nomineeName: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getReceipt.url + \"/\" + benName + \"/\" + ssin + \"/\" + claimRefernceNo + \"/\" + amount + \"/\" + nomineeName + \"/\" + name, { params: params });\r\n        return this.apiService.downloadResource(options);\r\n    }\r\n    genaratePdfFormV(claim: any) {\r\n        return this.apiService.genaratePdf(ApiDictionary.genarateFormV.url, claim);\r\n    }\r\n    getBeneficiaryHealthClaimAmount(benSno: any, typeOfClaim?: any): any {\r\n        let params = new HttpParams();\r\n        if (typeOfClaim == undefined) { typeOfClaim = \"\"; }\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryHealthClaimAmount.url + \"/\" + benSno + \"/\" + typeOfClaim, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getPackages() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPackages.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryNomineeDetails(id: any) {//, type ?: any\r\n        \r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryNomineeDetails.url + \"/\" + id, { params: params });// + \"/\" + type\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPfBalance(regNumber: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPfBalance.url + \"/\" + regNumber, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    validatePfSubmit(ssiNumber: any, nomineeId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.validatePfSubmit.url + \"/\" + ssiNumber + \"/\" + nomineeId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getNomineeClaimEntryValidation(id: any) {\r\n        \r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getNomineeClaimEntryValidation.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    \r\n    sendOTPforNominee(ssinNo: any, mobileNo: any) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.sendOTPforNominee.url + \"/\" + ssinNo + \"/\" + mobileNo, { params: params });\r\n        return this.apiService.getDropdownDataForMaster(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    verifyOTP(mobileNo: any, otpNumber: any) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.verifyOTP.url + \"/\" + mobileNo + \"/\" + otpNumber, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    pullTrack(claimRefNo: any) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.pullTrack.url + \"/\" + claimRefNo, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getClaimDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimDetailsById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getCalimId(claimRefNo: any) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getCalimId.url + \"/\" + claimRefNo, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    deleteClaimExceptions(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.deleteClaimExceptions.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isSameBenNomineeClaimSubmitted(id: any, nomineeId: any, claimType: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isSameBenNomineeClaimSubmitted.url + \"/\" + id + \"/\" + nomineeId + \"/\" + claimType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBenefitConfigurationDetails(benefitType: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBenefitConfigurationDetails.url + \"/\" + benefitType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isDuplicateDependentSubmitted(benSno: any, dependentId: any, claimId: any, onBehalfBen?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isDuplicateDependentSubmitted.url + \"/\" + benSno + \"/\" + dependentId + \"/\" + claimId + \"/\" + onBehalfBen, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    isCAFUpdated(id: any, isRegistrationNo: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isCAFUpdated.url + \"/\" + id + \"/\" + isRegistrationNo, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getRegistrationNumber(ssin: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getRegistrationNumber.url + \"/\" + ssin, { params: params });\r\n        return this.apiService.getDropdownData2(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimConfigurationMaster() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetClaimConfigMasterDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryPFAccountDetails(bensno: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryPFAccountDetails.url + \"/\" + bensno, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n    constructor() { }\r\n\r\n    public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n\r\n        const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n        console.log('worksheet', worksheet);\r\n        const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n        const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n        this.saveAsExcelFile(excelBuffer, excelFileName);\r\n    }\r\n\r\n    private saveAsExcelFile(buffer: any, fileName: string): void {\r\n        const data: Blob = new Blob([buffer], {\r\n            type: EXCEL_TYPE\r\n        });\r\n        FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n    }\r\n\r\n}","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <!-- row -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- NEW WIDGET START -->\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <!-- Widget ID (each widget will need unique ID)-->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Track Claim</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form\\\">\\r\\n                            <fieldset>\\r\\n                                <section></section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">SSIN <span [style.color]=\\\"!ssnNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"benSno\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ssin\\\" placeholder=\\\"Enter SSIN\\\"\\r\\n                                                   NumbersOnly maxlength=\\\"50\\\"\\r\\n                                                   #benSno=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': benSno.invalid && (!ssnNoValid || benSno.touched), 'valid-data': benSno.valid && ssnNoValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"benSno.invalid && (!ssnNoValid ||benSno.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">SSIN is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Mobile Number <span [style.color]=\\\"!nomineeContactValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"nomineeContact\\\" class=\\\"form-control\\\" placeholder=\\\"Mobile Number\\\" [(ngModel)]=\\\"nomineeMobileNumber\\\"\\r\\n                                                   NumbersOnly minlength=\\\"10\\\" maxlength=\\\"10\\\"\\r\\n                                                   #nomineeContact=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': nomineeContact.invalid && (!nomineeContactValid || nomineeContact.touched ), 'valid-data': nomineeContact.valid && nomineeContactValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"nomineeContact.invalid && (!nomineeContactValid ||nomineeContact.touched) && !nomineeContact.errors.minlength\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Mobile Number is required </span>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"nomineeContact.invalid && (nomineeContact.errors.minlength) \\\">\\r\\n                                                <span style=\\\"color: red;\\\">Invalid Mobile Number </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section *ngIf=\\\"isOtpVisible\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">OTP <span [style.color]=\\\"!otpValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"otp\\\" class=\\\"form-control\\\" placeholder=\\\"OTP\\\" [(ngModel)]=\\\"otpNumber\\\"\\r\\n                                                   NumbersOnly minlength=\\\"4\\\" maxlength=\\\"4\\\"\\r\\n                                                   #otp=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': otp.invalid && (!otpValid || otp.touched ), 'valid-data': otp.valid && otpValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"otp.invalid && (!otpValid ||otp.touched) && !otp.errors.minlength\\\">\\r\\n                                                <span style=\\\"color: red;\\\">OTP is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\" style=\\\"padding-left:50px;padding-bottom:10px;padding-top:31px;\\\">\\r\\n                                            <a class=\\\"btn btn-success\\\" (click)=\\\"VerifyOTP()\\\">Verify</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section *ngIf=\\\"isClaimNoVisible\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Claim Reference No. <span [style.color]=\\\"!claimNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"claimReferenceNo\\\" class=\\\"form-control\\\" placeholder=\\\"Claim Reference No.\\\" [(ngModel)]=\\\"claimRefNo\\\"\\r\\n                                                   NumbersOnly #claimReferenceNo=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data': claimReferenceNo.invalid && (!claimNoValid || claimReferenceNo.touched ), 'valid-data': claimReferenceNo.valid && claimNoValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"claimReferenceNo.invalid && (!claimNoValid ||claimReferenceNo.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Claim Reference No. is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section *ngIf=\\\"isClaimTrackVisible\\\">\\r\\n                                    <header>Claim Track</header>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <!-- row -->\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" style=\\\"width:98%\\\">\\r\\n                                                    <div class=\\\"well well-sm\\\">\\r\\n                                                        <div class=\\\"smart-timeline\\\">\\r\\n                                                            <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                                <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                                    <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                                        <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"smart-timeline-time\\\">\\r\\n                                                                        <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"smart-timeline-content\\\">\\r\\n                                                                        <p>\\r\\n                                                                            <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                                        </p>\\r\\n                                                                        <p>\\r\\n                                                                            {{item.actionComments}}\\r\\n                                                                        </p>\\r\\n                                                                    </div>\\r\\n                                                                </li>\\r\\n\\r\\n                                                            </ul>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <footer>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isSendVisible\\\" (click)=\\\"SendOTP()\\\">Send OTP</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isReapplyVisible\\\" (click)=\\\"Reapply()\\\">Reapply</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isRefertoALCVisible\\\" (click)=\\\"applyRefertoALC()\\\">Refer to ALC</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isRefertoDLCVisible\\\" (click)=\\\"applyRefertoDLC()\\\">Refer to DLC</a>\\r\\n                                <a class=\\\"btn btn-blue\\\" *ngIf=\\\"isPullTrackVisible\\\" (click)=\\\"PullTrack()\\\">Pull Track</a>\\r\\n\\r\\n                                <a class=\\\"btn btn-default\\\" (click)=\\\"clearClaim()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" href=\\\"/\\\">Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ClaimNomineeDataService } from '../services/claim-data.service';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { ClaimTrack } from '../claim/models/track.model';\r\nimport { ClaimStatus, ClaimConstants } from '../claim/pipes/constnts.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-track-claim-nominee',\r\n    templateUrl: './track-claim-nominee.component.html',\r\n    styleUrls: ['./track-claim-nominee.component.css']\r\n})\r\nexport class TrackClaimNomineeComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    claimsTrack: Array<ClaimTrack> = [];\r\n    //claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    nomineeContactValid: boolean = true;\r\n    ssnNoValid: boolean = true;\r\n    nomineeMobileNumber: any;\r\n    ssin: any;\r\n    successMessage: string;\r\n    isOtpVisible: boolean = false;\r\n    otpValid: boolean = true;\r\n    otpNumber: any;\r\n    isSendVisible: boolean = true;\r\n    claimNoValid: boolean = true;\r\n    claimRefNo: any;\r\n    isPullTrackVisible: boolean = false;\r\n    isClaimTrackVisible: boolean = false;\r\n    isClaimNoVisible: boolean = false;\r\n    isReapplyVisible: boolean = false;\r\n    isRefertoALCVisible: boolean = false;\r\n    isRefertoDLCVisible: boolean = false;\r\n    claimId: number;\r\n    stausId: number;\r\n    transactionTypeString: any;\r\n\r\n    constructor(public router: Router, private dataService: ClaimNomineeDataService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n\r\n    SendOTP() {\r\n        let isValid = true;\r\n        this.ssnNoValid = this.nomineeContactValid = true;\r\n        if (this.ssin == undefined || this.ssin <= 0) { this.ssnNoValid = isValid = false; }\r\n\r\n        if (this.nomineeMobileNumber == undefined || this.nomineeMobileNumber.toString() == \"\") { this.nomineeContactValid = isValid = false; }\r\n\r\n        if (isValid == false) {\r\n            return;\r\n        }\r\n        else {\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .sendOTPforNominee(this.ssin, this.nomineeMobileNumber)\r\n                    .subscribe((data: any) => {\r\n                        debugger;\r\n                        if (data) {\r\n                            this.successMessage = data;\r\n                            if (this.successMessage.toLowerCase() == \"otp sent successfully to registered mobile number\") {\r\n                                this.isOtpVisible = true;\r\n                            }\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            //tobe delete this when insficient amont not sent otp\r\n                            // this.isOtpVisible = true;\r\n                            this.successMessage = \"Server down due to technical problem\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    VerifyOTP() {\r\n        let isValid = true;\r\n        this.otpValid = true;\r\n        if (this.otpNumber == undefined || this.otpNumber.toString() == \"\") { this.otpValid = isValid = false; }\r\n\r\n        if (isValid == false) {\r\n            return;\r\n        }\r\n        else {\r\n            debugger;\r\n            this.dataService\r\n                .verifyOTP(this.nomineeMobileNumber, this.otpNumber)\r\n                .subscribe((data: any) => {\r\n                    this.successMessage = data;\r\n                    if (data) {\r\n                        this.isOtpVisible = this.isSendVisible = false;\r\n                        this.isPullTrackVisible = this.isClaimNoVisible = true;\r\n                        this.otpNumber = this.claimRefNo = \"\";\r\n                    }\r\n                    else {// tobe resend\r\n                        this.isOtpVisible = this.isSendVisible = true;\r\n                        this.isPullTrackVisible =this.isClaimNoVisible = false;\r\n\r\n                        alert(\"Please enter valid otp \");\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    PullTrack() {\r\n        let isValid = true;\r\n        this.claimNoValid = true;\r\n        if (this.claimRefNo == undefined || this.claimRefNo.toString() == \"\") { this.claimNoValid = isValid = false; }\r\n\r\n        if (isValid == false) {\r\n            return;\r\n        }\r\n        else {\r\n            //for claim Track\r\n            this.dataService\r\n                .pullTrack(this.claimRefNo)\r\n                .subscribe((data: any) => {\r\n                    this.claimsTrack = data;\r\n                    this.isClaimTrackVisible = true;\r\n                    if (this.claimsTrack != null && this.claimsTrack.length > 0) {\r\n                        if (ClaimStatus[this.claimsTrack[this.claimsTrack.length - 1].action] == ClaimStatus.SendbackfromInspector || ClaimStatus[this.claimsTrack[this.claimsTrack.length - 1].action] == ClaimStatus.SendbackfromALC) {\r\n                            this.isReapplyVisible = true;\r\n                        }\r\n                        else if (ClaimStatus[this.claimsTrack[this.claimsTrack.length - 1].action] == ClaimStatus.RejectfromALC || ClaimStatus[this.claimsTrack[this.claimsTrack.length - 1].action] == ClaimStatus.ReferSendbackbyALC) {\r\n                            this.isReapplyVisible = false;\r\n                            this.isRefertoALCVisible = true;\r\n                            this.isRefertoDLCVisible = false;\r\n                        }\r\n                        else if (ClaimStatus[this.claimsTrack[this.claimsTrack.length - 1].action] == ClaimStatus.ReferedRejectbyALC || ClaimStatus[this.claimsTrack[this.claimsTrack.length - 1].action] == ClaimStatus.ReferSendbackfromDLC) {\r\n                            this.isReapplyVisible = false;\r\n                            this.isRefertoALCVisible = false;\r\n                            this.isRefertoDLCVisible = true;\r\n                        }\r\n                        else {\r\n                            this.isReapplyVisible = false;\r\n                            this.isRefertoALCVisible = false;\r\n                            this.isRefertoDLCVisible = false;}\r\n                    }\r\n                });\r\n            //for claim id\r\n            this.dataService\r\n                .getCalimId(this.claimRefNo)\r\n                .subscribe((data: any) => {\r\n                    if (data) {\r\n                        this.claimId = data.item1;\r\n                        this.stausId = data.item2;\r\n                        this.transactionTypeString = data.item3;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    Reapply() {\r\n        this.router.navigate(['nominee', { claimId: this.claimId, mode: \"reapply\", claimStatus: this.stausId, tranctionType: this.transactionTypeString }], { skipLocationChange: true });\r\n    }\r\n\r\n    applyRefertoALC() {\r\n        this.router.navigate(['nominee', { claimId: this.claimId, mode: \"referal\", claimStatus: this.stausId, tranctionType: this.transactionTypeString }], { skipLocationChange: true });\r\n    }\r\n\r\n    applyRefertoDLC() {\r\n        this.router.navigate(['nominee', { claimId: this.claimId, mode: \"referal\", claimStatus: this.stausId, tranctionType: this.transactionTypeString }], { skipLocationChange: true });\r\n    }\r\n\r\n    okClick() {\r\n        this.successModal.hide();\r\n    }\r\n\r\n    clearClaim() {\r\n        this.nomineeContactValid = this.ssnNoValid = this.isSendVisible = this.otpValid = this.claimNoValid = true;\r\n        this.isPullTrackVisible = this.isClaimTrackVisible = this.isClaimNoVisible = this.isOtpVisible = this.isReapplyVisible = false;\r\n        this.nomineeMobileNumber = this.ssin = this.otpNumber = this.claimRefNo = \"\";\r\n        //this.claimsTrack = {} as ClaimTrack;\r\n        this.claimsTrack = [];\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n\r\n    //apiurl:\"http://192.168.200.10:8099/v1/\"\r\n    //apiurl: \"http://162.216.193.100:8099/v1/\"\r\n    //apiurl: \"http://36.255.252.179:9025/v1/\"\r\n    // apiurl: \"http://localhost:8085/v1/\"\r\n\r\n\r\n      //Live\r\n    //apiurl: \"https://ssy.wblabour.gov.in/SSYAPI/v1/\",\r\n    //weburl: \"https://ssy.wblabour.gov.in\",\r\n    //gripsurl: \"https://wbifms.gov.in/GRIPS/v1epay.do\",\r\n    //gripsverifyurl: \"https://wbifms.gov.in/GRIPS/DeptVarifyPayment.do\"\r\n\r\n    //9026- test server\r\n     //apiurl: \"http://36.255.252.179:9027/v1/\",\r\n     //weburl: \"http://36.255.252.179:9026\"\r\n   \r\n     //UAT\r\n    //apiurl: \"http://172.16.93.180/SSYAPI/v1/\",\r\n    //weburl: \"http://172.16.93.180/\",\r\n    //gripsurl: \"http://202.61.117.90/GRIPS/v1epay.do\",\r\n    //gripsverifyurl: \"http://202.61.117.90/GRIPS/DeptVarifyPayment.do\"\r\n\r\n     //Dev\r\n    //apiurl: \"http://localhost:64163/v1/\",\r\n    //weburl: \"http://36.255.252.179:9026\",\r\n    //gripsurl: \"http://202.61.117.90/GRIPS/v1epay.do\",\r\n    //gripsverifyurl: \"http://202.61.117.90/GRIPS/DeptVarifyPayment.do\"\r\n\r\n    //sdc\r\n    //apiurl: \"http://172.20.176.51/SSYAPI/v1/\",\r\n    //weburl: \"http://172.20.176.51\",\r\n    //gripsurl: \"https://wbifms.gov.in/GRIPS/v1epay.do\",\r\n    //gripsverifyurl: \"https://wbifms.gov.in/GRIPS/DeptVarifyPayment.do\"\r\n\r\n    //local\r\n    apiurl: \"http://localhost:64163/v1/\",\r\n    weburl: \"http://localhost:2126/\",\r\n    //weburl: \"http://36.255.252.179:9026\",\r\n    gripsurl: \"http://202.61.117.90/GRIPS/v1epay.do\",\r\n    gripsverifyurl: \"http://202.61.117.90/GRIPS/DeptVarifyPayment.do\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}