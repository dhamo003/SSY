{"version":3,"sources":["webpack:///./src/app/tresurer/fund-release-list/fund-release-list.component.css","webpack:///./src/app/tresurer/fund-release-list/fund-release-list.component.html","webpack:///./src/app/tresurer/fund-release-list/fund-release-list.component.ts","webpack:///./src/app/tresurer/fund-release/fund-release.component.css","webpack:///./src/app/tresurer/fund-release/fund-release.component.html","webpack:///./src/app/tresurer/fund-release/fund-release.component.ts","webpack:///./src/app/tresurer/payment-processed-list/payment-processed-list.component.css","webpack:///./src/app/tresurer/payment-processed-list/payment-processed-list.component.html","webpack:///./src/app/tresurer/payment-processed-list/payment-processed-list.component.ts","webpack:///./src/app/tresurer/payment-release/payment-release.component.css","webpack:///./src/app/tresurer/payment-release/payment-release.component.html","webpack:///./src/app/tresurer/payment-release/payment-release.component.ts","webpack:///./src/app/tresurer/payment-released-list/payment-released-list.component.css","webpack:///./src/app/tresurer/payment-released-list/payment-released-list.component.html","webpack:///./src/app/tresurer/payment-released-list/payment-released-list.component.ts","webpack:///./src/app/tresurer/pending-fund-release-list/pending-fund-release-list.component.css","webpack:///./src/app/tresurer/pending-fund-release-list/pending-fund-release-list.component.html","webpack:///./src/app/tresurer/pending-fund-release-list/pending-fund-release-list.component.ts","webpack:///./src/app/tresurer/review-fund-release-expenses/review-fund-release-expenses.component.css","webpack:///./src/app/tresurer/review-fund-release-expenses/review-fund-release-expenses.component.html","webpack:///./src/app/tresurer/review-fund-release-expenses/review-fund-release-expenses.component.ts","webpack:///./src/app/tresurer/reviewpaymentrelease/reviewpaymentrelease.component.css","webpack:///./src/app/tresurer/reviewpaymentrelease/reviewpaymentrelease.component.html","webpack:///./src/app/tresurer/reviewpaymentrelease/reviewpaymentrelease.component.ts","webpack:///./src/app/tresurer/services/api-dictionary.ts","webpack:///./src/app/tresurer/services/tresurer-data.service.ts","webpack:///./src/app/tresurer/tresurer.module.ts","webpack:///./src/app/tresurer/tresurerlanding.component.html","webpack:///./src/app/tresurer/tresurerlanding.component.ts"],"names":[],"mappings":"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","file":"tresurer-tresurer-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2> Fund Release List</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"fundReleaseOrder\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestTypeName\\\">Fund Request Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rloOfficeName\\\">RLO</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter by=\\\"requestedBy\\\">Requested By</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestNumber\\\">Fund Request No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"boardName\\\">Board Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"requestDateString\\\">Request Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {rloOfficeName: searchText,requestedBy: searchText,fundRequestNumber: searchText,\\r\\n                                    refernceNumber: searchText, requestDateString: searchText, amount: searchText, statusName: searchText, boardName: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onreviewClick(data)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{data.fundRequestTypeName}}</td>\\r\\n                                    <td>{{data.rloOfficeName}}</td>\\r\\n                                    <!--<td>{{data.requestedBy}}</td>-->\\r\\n                                    <td>{{data.fundRequestNumber}}</td>\\r\\n                                    <td>{{data.boardName}}</td>\\r\\n                                    <td>{{data.requestDateString}}</td>\\r\\n                                    <td>{{data.amount }}</td>\\r\\n                                    <td>{{data.statusName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\">\\r\\n                                        <div *ngIf=\\\"fundReleaseOrder.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\n//import { FundRequest } from '../../models/fundRequest.model';\r\nimport { FundReleaseOrder } from '../../models/fundReleaseOrder.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-fund-release-list',\r\n  templateUrl: './fund-release-list.component.html',\r\n  styleUrls: ['./fund-release-list.component.css']\r\n})\r\nexport class FundReleaseListComponent implements OnInit {\r\n\r\n    //public claimsData: Claims[];\r\n    public fundReleaseOrder: FundReleaseOrder[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: TresurerDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.getFundReleaseDetails(this.userService.user.deptUserid, this.userService.user.userTpe, WorkflowTrans.fundworkflow, ClaimStatus.Release);\r\n        this.getFundReleaseDetails(this.userService.user.deptUserid, ClaimStatus.Release, this.page, this.pageSize);\r\n    }\r\n\r\n    getFundReleaseDetails(id: number, statusId: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getFundReleaseDetails(id, statusId, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.fundReleaseOrder = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n\r\n    onreviewClick(item: any) {\r\n        if (item.fundRequestType == 1) // Claims Fund Request\r\n            this.router.navigate(['tresurer/fundrelease', { fundReleaseOrderHdrId: item.fundReleaseOrderHdrId, alcId: item.alcId, mode: \"released\"  }], { skipLocationChange: true });\r\n        else if (item.fundRequestType == 2) // Expenses Fund Request\r\n            this.router.navigate(['tresurer/reviewfundreleaseexpenses', { fundReleaseOrderHdrId: item.fundReleaseOrderHdrId, alcId: item.alcId }], { skipLocationChange: true });\r\n    }\r\n\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    changepage(page) {\r\n        this.getFundReleaseDetails(this.userService.user.deptUserid, ClaimStatus.Release, this.page, this.pageSize);\r\n    }\r\n    \r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Fund Release View</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details </header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please select atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Alc Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Fund Request Date: </strong>{{fundrequestDetails.requestDateString}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset style=\\\"display:none\\\">\\r\\n                                <section>\\r\\n                                    <label class=\\\"label\\\">Fund Status at RLO:</label>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Approved Claims Amount: </strong>{{officeDetails.approvedClaimsAmount}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Amount Shortfall: </strong>{{AmountShortfall}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Board: </strong>{{fundrequestDetails.boardName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Claim Types: </strong>{{fundrequestDetails.claimTypes}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Locations : </strong>{{fundrequestDetails.locationNames}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <div class=\\\"inline-group\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\">\\r\\n                                                    <i></i>Fund Request for Claims\\r\\n                                                </label>\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" disabled>\\r\\n                                                    <i></i>Fund Request for Expenses\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section *ngIf=\\\"showReleaseLabel\\\">\\r\\n                                    <label><strong>Release Type : </strong>{{fundrequestDetails.releaseTypeName}}</label>\\r\\n                                </section>\\r\\n                                <section *ngIf=\\\"!showReleaseLabel\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-10\\\">\\r\\n                                            <div class=\\\"inline-group\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" value=\\\"1\\\" (change)=\\\"radioChange($event.target.value)\\\" checked=\\\"checked\\\">\\r\\n                                                    <i></i>Release Against RLO Office\\r\\n                                                </label>\\r\\n                                                <label class=\\\"radio\\\" style=\\\"margin-top:10px !important; font-weight:normal!important\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" value=\\\"2\\\" (change)=\\\"radioChange($event.target.value)\\\">\\r\\n                                                    <i></i>Release Against Beneficiaries\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- widget grid -->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                                <div>\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                                               [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>SSIN</th>\\r\\n                                                    <th>Beneficiary Name</th>\\r\\n                                                    <th>Beneficiary Type</th>\\r\\n                                                    <th>Claim Reference No.</th>\\r\\n                                                    <th>Claim Category</th>\\r\\n                                                    <th>Submission Date</th>\\r\\n                                                    <th>Amount</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let claim of mf.data\\\">\\r\\n                                                    <td>{{claim.ssin}}</td>\\r\\n                                                    <td>{{claim.benName}}</td>\\r\\n                                                    <td>{{claim.benType}}</td>\\r\\n                                                    <td>{{claim.claimRefernceNo}}</td>\\r\\n                                                    <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                                    <td>{{claim.submittedDateString}}</td>\\r\\n                                                    <td>{{claim.approvedAmount}}</td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"7\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <form class=\\\"smart-form smart-form-main\\\">\\r\\n                                        <fieldset>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-4\\\">\\r\\n                                                    <label><strong>Amount Transferred:</strong>{{sumofamount}}</label>\\r\\n                                                    \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4 selectContainer\\\" *ngIf=\\\"fundrequestDetails.statusId == 24 && releaseValue == 1\\\">\\r\\n                                                    <label><strong>RLO Bank Account:<span [style.color]=\\\"!bankIsValid?'red':''\\\"><b>*</b></span></strong></label>\\r\\n                                                    <select class=\\\"form-control\\\" name=\\\"rloBankId\\\" [(ngModel)]=\\\"rloBankId\\\"\\r\\n                                                            [ngClass]=\\\"{'invalid-data': (!bankIsValid ), 'valid-data': bankIsValid}\\\"\\r\\n                                                                  required>\\r\\n                                                        <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                        <option value=\\\"{{bank.rloOfficeBankId}}\\\" *ngFor=\\\"let bank of bankDetails\\\">{{bank.bankAccountNo}}</option>\\r\\n                                                        <i></i>\\r\\n                                                    </select>\\r\\n                                                    <div *ngIf=\\\"(!bankIsValid)\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">Bank account is required </span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4 selectContainer\\\" *ngIf=\\\"fundrequestDetails.statusId != 24 && releaseValue == 1\\\">\\r\\n                                                    <label><strong> Bank Account Name: </strong>{{fundrequestDetails.rloBankName}}</label> \\r\\n                                                    \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4\\\">\\r\\n                                                    <label><strong>Download Bank NEFT Document:</strong></label>\\r\\n                                                    <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\" style=\\\"color: green;zoom: 3;\\\" (click)=\\\"download()\\\"></i>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </fieldset>\\r\\n                                        <footer>\\r\\n                                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                                            <a class=\\\"btn btn-primary\\\" *ngIf=\\\"fundrequestDetails.statusId == 24\\\" (click)=\\\"updateFundRequest(25)\\\">Release</a>\\r\\n                                          \\r\\n                                        </footer>\\r\\n\\r\\n                                    </form>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </article>\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n           \\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n               \\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\n//import { FundClaimList, FundRequestDetailsModel } from '../../models/fundRequestedClaimsDetails.model';\r\nimport { ClaimsList, FundReleaseOrderDetailsModel } from '../../models/fundReleaseOrderDetails.model';\r\nimport { ReviewModel } from '../../models/review.model';\r\nimport { WorkflowTrans, UserType, ClaimConstants } from '../../claim/pipes/constnts.model';\r\nimport { RloBankDetails } from '../../models/rlobankdetails.model';\r\nimport { ExcelService } from '../../services/excel.service';\r\nimport { NEFTDetails } from '../../models/neftdetails.model';\r\nimport { debounce } from 'rxjs-compat/operator/debounce';\r\nimport { IFMSDetails } from '../../models/IFMSDetails.model';\r\nimport { ReleaseType } from '../../claim/pipes/constnts.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-fund-release',\r\n    templateUrl: './fund-release.component.html',\r\n    styleUrls: ['./fund-release.component.css']\r\n})\r\nexport class FundReleaseComponent implements OnInit {\r\n\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    private route$: Subscription;\r\n    private fundReleaseOrderHdrId: any;\r\n    mode: string;\r\n    fundrequestDetails: FundReleaseOrderDetailsModel;\r\n    claimsData: ClaimsList[];\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    AmountShortfall: any;\r\n    date = new Date();\r\n    showErrorMessage: boolean = false;\r\n    boardIdValid: boolean = true;\r\n    successMessage: string;\r\n    fundReviewModel: ReviewModel = {} as ReviewModel;\r\n    bankDetails: Array<RloBankDetails> = [];\r\n    bank: RloBankDetails;\r\n    alcId: any;\r\n    bankIsValid: boolean = true;\r\n    sumofamount: number;\r\n    rloBankId: number;\r\n    NEFTFileName: string;\r\n    NEFTDetails: NEFTDetails[] = [] as NEFTDetails[];\r\n    NEFTData: NEFTDetails = {} as NEFTDetails;\r\n    enableNEFT: boolean = false;\r\n    releaseValue: number = 1;\r\n    IFMSFileName: string;\r\n    IFMSData: IFMSDetails[];\r\n    showReleaseLabel: boolean = false;\r\n    chronologicalOrder: number = 0;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: TresurerDataService, private userService: UserService, private excelService: ExcelService) { }\r\n\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.fundReleaseOrderHdrId = params[\"fundReleaseOrderHdrId\"];\r\n                this.alcId = params[\"alcId\"];\r\n                this.mode = params[\"mode\"];\r\n                //if (this.mode != \"pending\") {\r\n                //    this.isVisable = false;\r\n                //}\r\n                this.chronologicalOrder = params[\"chronologicalOrder\"];\r\n                if (this.chronologicalOrder > 0) {\r\n                    alert(\"You are not following the chronological order\");\r\n                }\r\n            }\r\n        );\r\n        this.getFundRequestedClaimsById(this.fundReleaseOrderHdrId);\r\n        //this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.GetRLOOfficeUserInformation(this.alcId, UserType.AsstLabourCom);\r\n        // this.getRLOBankDetails(this.alcId, UserType.AsstLabourCom);\r\n    }\r\n\r\n\r\n    getFundRequestedClaimsById(fundReleaseOrderHdrId: any) {\r\n        this.sumofamount = 0;\r\n        this.claimsData = [];\r\n        this.dataService\r\n            .getFundRequestedClaimsById(fundReleaseOrderHdrId)\r\n            .subscribe((data: any) => {\r\n                this.fundrequestDetails = data;\r\n                this.claimsData = data.claimsList;\r\n                this.claimsData.forEach(x => this.sumofamount += x.approvedAmount);\r\n                if (this.mode == \"released\") {\r\n                    this.showReleaseLabel = true;\r\n                    this.releaseValue = this.fundrequestDetails.releaseType;\r\n                }\r\n                else {\r\n                    this.showReleaseLabel = false;\r\n                }\r\n            });\r\n       \r\n    }\r\n\r\n\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                if (this.officeDetails.approvedClaimsAmount > this.RloOfficeAddress.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.officeDetails.approvedClaimsAmount - this.RloOfficeAddress.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n\r\n                this.getRLOBankDetails(this.RloOfficeAddress.rloOfficeId);\r\n            });\r\n    }\r\n\r\n\r\n    updateFundRequest(id: any) {\r\n        debugger;\r\n        if (this.releaseValue == ReleaseType.ReleaseAgainstRLOOffice) {\r\n            if (this.rloBankId == undefined || this.rloBankId <= 0) { this.bankIsValid = false; return; }\r\n        }\r\n        this.fundReviewModel.releaseType = this.releaseValue;\r\n        this.fundReviewModel.rloBankAccountId = this.rloBankId;\r\n        this.fundReviewModel.statusId = id;\r\n        this.fundReviewModel.transactionId = this.fundrequestDetails.fundRequestId;\r\n        this.fundReviewModel.claimType = null;\r\n        this.fundReviewModel.wfId = WorkflowTrans.fundworkflow;\r\n        this.fundReviewModel.userId = this.userService.user.deptUserid;\r\n        this.fundReviewModel.fundReleaseOrderHdrId = this.fundrequestDetails.fundReleaseOrderHdrId;\r\n        this.fundReviewModel.fundRequestType = 1;// Claims\r\n        if (confirm(\"Are you sure to proceed \")) {\r\n            this.dataService\r\n                .updateComments(this.fundReviewModel)\r\n                .then((data: any) => {\r\n                    this.successMessage = \"Fund request updated successfully\";\r\n                    this.successModal.show();\r\n                });\r\n        }\r\n    }\r\n\r\n    cancelclick() {\r\n        //if (this.mode == \"pending\") {\r\n        this.router.navigate(['tresurer/fundreleaselist']);\r\n        //}\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.router.navigate(['tresurer/fundreleaselist'], { skipLocationChange: false });\r\n    }\r\n\r\n    setNEFTDetails() {\r\n        this.NEFTDetails = [];\r\n        let rloBankAccountId = this.fundrequestDetails.rloBankAccountId;\r\n        let rloBankId = this.rloBankId;\r\n        let bankId = ((rloBankAccountId != undefined && rloBankAccountId != null) ? rloBankAccountId : ((rloBankId != undefined && rloBankId != 0) ? rloBankId : 0));\r\n        if (this.bankDetails != undefined) {\r\n            this.bankDetails.forEach((eachObj) => {\r\n                if (eachObj.rloOfficeBankId == bankId) {\r\n                    this.bank = eachObj;\r\n                }\r\n            });\r\n        }\r\n        if (bankId != 0 && this.bank != undefined) {\r\n            let tempNEFTData = this.NEFTData;\r\n            this.enableNEFT = true;\r\n            this.NEFTFileName = \"NEFT Document\";\r\n            if (this.RloOfficeAddress != undefined) {\r\n                tempNEFTData.nameofthePayee = this.RloOfficeAddress.rloOfficeName;\r\n            }\r\n            else {\r\n                tempNEFTData.nameofthePayee = \"\"\r\n            }\r\n            tempNEFTData.contactNumber = \"\";\r\n            tempNEFTData.idNumber = \"\";\r\n            tempNEFTData.natureOfId = \"\";\r\n            tempNEFTData.nameOfBank = this.bank.bankName;\r\n            tempNEFTData.bankBranchCode = this.bank.bankBranch;\r\n            tempNEFTData.accountNumber = this.bank.bankAccountNo;\r\n            tempNEFTData.IFSCCode = this.bank.ifsc;\r\n            tempNEFTData.amount = this.sumofamount.toString();\r\n            tempNEFTData.narration = \"\";\r\n            this.NEFTDetails.push(tempNEFTData);\r\n        }\r\n    }\r\n\r\n\r\n    getRLOBankDetails(id: any) {\r\n        this.dataService\r\n            .getRLOBankDetailsByUserId(id, this.userService.user.deptUserid, this.mode == \"released\" ? 0 : 1)\r\n            .subscribe((data: any) => {\r\n                this.bankDetails = data;\r\n                this.rloBankId = this.bankDetails[0].rloOfficeBankId;\r\n            });\r\n    }\r\n\r\n    download() {\r\n        if (this.releaseValue == ReleaseType.ReleaseAgainstRLOOffice) {\r\n            this.downloadNeftDocument();\r\n        }\r\n        else {\r\n            this.downloadNeftDocumentforBeneficiaries();\r\n        }\r\n\r\n    }\r\n    downloadNeftDocument() {\r\n        this.setNEFTDetails();\r\n        this.showErrorMessage = false;\r\n        let downloadNEFTDetails = this.NEFTDetails;\r\n        if (downloadNEFTDetails != null && downloadNEFTDetails.length > 0) {\r\n            this.excelService.exportAsExcelFile(downloadNEFTDetails, this.NEFTFileName);\r\n        }\r\n    }\r\n    downloadNeftDocumentforBeneficiaries() {\r\n        //this.ifmsVisible = false;\r\n        this.IFMSData = [];\r\n        this.showErrorMessage = false;\r\n        this.IFMSFileName = \"NEFT Details\";\r\n        //this.selectedClaims();\r\n        this.dataService\r\n            .getBeneficiaryPaymentNEFTDetails(this.fundrequestDetails.fundReleaseOrderHdrId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.IFMSData = data;\r\n                let downloadNEFTDetails = this.IFMSData;\r\n                if (downloadNEFTDetails != null && downloadNEFTDetails.length > 0) {\r\n                    this.excelService.exportAsExcelFile(downloadNEFTDetails, this.IFMSFileName);\r\n                }\r\n            });\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n\r\n    radioChange(id) {\r\n        this.releaseValue = id;\r\n        //alert(this.releaseValue);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Payment Process Status</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"paymentProcessData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentProcessingID\\\">Process Id</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rloOfficeName\\\">Rlo office</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestId\\\">Release Order No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestNo\\\">Fund Request No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentProcessingDateString\\\">Payment Processed Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {paymentProcessingID: searchText,rloOfficeName: searchText,fundRequestId: searchText,fundRequestNo: searchText\\r\\n                                    }; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onreviewClick(data)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{data.paymentProcessingID}}</td>\\r\\n                                    <td>{{data.rloOfficeName}}</td>\\r\\n                                    <td>{{data.fundRequestId}}</td>\\r\\n                                    <td>{{data.fundRequestNo}}</td>\\r\\n                                    <td>{{data.paymentProcessingDateString}}</td>\\r\\n                                    <td>{{data.statusName}}</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <div *ngIf=\\\"paymentProcessData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { PaymentProcessMasterData } from '../../models/paymentProcessDetails.model';\r\nimport { pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-payment-processed-list',\r\n  templateUrl: './payment-processed-list.component.html',\r\n  styleUrls: ['./payment-processed-list.component.css']\r\n})\r\nexport class PaymentProcessedListComponent implements OnInit {\r\n    paymentProcessData: PaymentProcessMasterData[]=[];\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: TresurerDataService, private userService: UserService) { }\r\n\r\n    ngOnInit() {\r\n        this.getPaymentProcessDetails(this.userService.user.deptUserid, this.userService.user.userTpe, this.page, this.pageSize);\r\n  }\r\n    getPaymentProcessDetails(id: any, type: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getTreasurerPaymentProcesses(id, type, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.paymentProcessData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['tresurer/paymentrelease', { processId: item.paymentProcessingID, alcId: item.createdBy  }], { skipLocationChange:true });\r\n     \r\n    }\r\n    changepage(page) {\r\n        this.getPaymentProcessDetails(this.userService.user.deptUserid, this.userService.user.userTpe, this.page, this.pageSize);\r\n    }\r\n\r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <!-- row -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- NEW WIDGET START -->\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <!-- Widget ID (each widget will need unique ID)-->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header><h2>Payment Release </h2></header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            \\r\\n                            <!--<header>Please select the claims to forward to Tresurer for payment</header>-->\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n                <div class=\\\"col col-6\\\">\\r\\n                    <label class=\\\"label\\\"> Payment Process Id <span [style.color]=\\\"!paymentIdValid?'red':''\\\"><b>*</b></span></label>\\r\\n                    <label class=\\\"select\\\">\\r\\n                        <select class=\\\"form-control select\\\" name=\\\"processId\\\" [(ngModel)]=\\\"processId\\\" (change)=\\\"selectPaymentProcessId(processId)\\\">\\r\\n                            <option value=\\\"0\\\">Choose a Process Id</option>\\r\\n                            <option value=\\\"{{process.paymentProcessingID}}\\\" *ngFor=\\\"let process of paymentProcessIds\\\"> {{process.rloOfficeName}} - {{process.paymentProcessingID}} </option>\\r\\n                        </select> <i></i>\\r\\n                    </label>\\r\\n\\r\\n                </div>\\r\\n            </div>-->\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"processedClaimsView\\\">\\r\\n                                <header>ALC Details </header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\">\\r\\n                                            <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                                <label>Please select atleast one record to proceed.</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Payment Processing Date: </strong>{{date | date: 'dd/MM/yyyy'}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n\\r\\n                                <fieldset style=\\\"display:none\\\">\\r\\n                                    <section>\\r\\n                                        <header>Fund Status at RLO</header>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <fieldset>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <table id=\\\"dt_basic\\\" class=\\\"table table-striped table-bordered table-hover\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <!--<th><input type=\\\"checkbox\\\" name=\\\"selectedAll\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>-->\\r\\n                                                    <th>SSIN</th>\\r\\n                                                    <th>Beneficiary Name</th>\\r\\n                                                    <th>Beneficiary Type</th>\\r\\n                                                    <th>Claim Reference No.</th>\\r\\n                                                    <th>Claim Category</th>\\r\\n                                                    <th>Submission Date</th>\\r\\n                                                    <th>Amount</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <!--<tr *ngIf=\\\"claimDetails.length==0\\\">\\r\\n                        <td colspan=\\\"8\\\">\\r\\n                            No data available\\r\\n                        </td>\\r\\n                    </tr>-->\\r\\n                                                <tr *ngFor=\\\"let claim of claimDetails\\\">\\r\\n                                                    <!--<td class=\\\"\\\">\\r\\n                            <input type=\\\"checkbox\\\" name=\\\"selected\\\" [(ngModel)]=\\\"claim.selected\\\" (change)=\\\"checkIfAllSelected(claim);\\\">\\r\\n                        </td>-->\\r\\n                                                    <td>{{claim.ssin}}</td>\\r\\n                                                    <td>{{claim.benName}}</td>\\r\\n                                                    <td>{{claim.benType}}</td>\\r\\n                                                    <td>{{claim.claimRefernceNo}}</td>\\r\\n                                                    <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                                    <td>{{claim.submittedDateString}}</td>\\r\\n                                                    <td>{{claim.approvedAmount}}</td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"7\\\"></td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4\\\">\\r\\n                                            <label class=\\\"control-label\\\">Amount Transferred:</label>\\r\\n                                            <label class=\\\"form-control\\\" disabled>{{sumofAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                            <label class=\\\"control-label\\\">Source Bank Account:<span [style.color]=\\\"!bankIsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"rloBankId\\\" [(ngModel)]=\\\"rloBankId\\\"\\r\\n                                                    [ngClass]=\\\"{'invalid-data': (!bankIsValid ), 'valid-data': bankIsValid}\\\"\\r\\n                                                    required>\\r\\n                                                <option value=\\\"\\\" disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{bank.rloOfficeBankId}}\\\" *ngFor=\\\"let bank of bankDetails\\\">{{bank.bankAccountNo}}</option>\\r\\n                                                <i></i>\\r\\n                                            </select>\\r\\n                                            <div *ngIf=\\\"(!bankIsValid)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Bank account is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!--<div class=\\\"col col-4 selectContainer\\\" *ngIf=\\\"fundrequestDetails.statusId != 24\\\">\\r\\n                <label class=\\\"control-label\\\"> Bank Account Name </label> <br />\\r\\n                {{fundrequestDetails.rloBankName}}\\r\\n            </div>-->\\r\\n                                        <!--<div class=\\\"col col-4\\\">\\r\\n                                            <label class=\\\"control-label\\\">Download IFMS Document:</label>\\r\\n                                            <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\" style=\\\"color: green;zoom: 3;\\\" (click)=\\\"downloadNeftDocument()\\\"></i>\\r\\n                                        </div>-->\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                                <footer *ngIf=\\\"ifmsVisible\\\"><a class=\\\"btn btn-success\\\" (click)=\\\"downloadNeftDocument()\\\">Download IFMS Document</a></footer>\\r\\n                                <footer>\\r\\n                                    <a *ngIf=\\\"!ifmsVisible\\\" id=\\\"btnSava\\\" class=\\\"btn btn-success\\\" (click)=\\\"paymentRelease()\\\"><i class=\\\"fa fa-warning-sign\\\"></i> Release </a>\\r\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"><i class=\\\"fa fa-remove\\\"></i> Cancel</a>\\r\\n                                    <!--<a class=\\\"btn btn-success\\\" (click)=\\\"downloadNeftDocument()\\\" [attr.disabled]=\\\"tr\\\">Download IFMS Document</a>-->\\r\\n                                </footer>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"successModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>-->\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { RloBankDetails } from '../../models/rlobankdetails.model';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { UserService } from '../../UserService';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { PaymentProcessModel, PaymentClaims  } from '../../claim/models/paymentprocess.model';\r\nimport { ClaimStatus, ClaimConstants, UserType } from '../../claim/pipes/constnts.model';\r\nimport { PaymentProcessMasterData } from '../../models/paymentProcessDetails.model';\r\nimport { ExcelService } from '../../services/excel.service';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { IFMSDetails } from '../../models/IFMSDetails.model';\r\n\r\n@Component({\r\n  selector: 'app-payment-release',\r\n  templateUrl: './payment-release.component.html',\r\n  styleUrls: ['./payment-release.component.css']\r\n})\r\nexport class PaymentReleaseComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    bankDetails: Array<RloBankDetails> = [];\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    claimDetails: Claims[];\r\n    claimData: PaymentProcessModel = {} as PaymentProcessModel;\r\n    normalizedObject: any = {}\r\n    date = new Date();\r\n    selectedAll: boolean=true;\r\n    sumofAmount: any = 0;\r\n    showErrorMessage:boolean = false;\r\n    processedClaimsView: boolean = false;\r\n    paymentIdValid: boolean = true;\r\n    paymentProcessIds: PaymentProcessMasterData[];\r\n    private route$: Subscription;\r\n    successMessage: string;\r\n    processId: any;\r\n    alcId: any;\r\n    selectedClaimList: Array<PaymentClaims> = [];\r\n    rloBankId: number;\r\n    bankIsValid: boolean = true;\r\n    NEFTFileName: string;\r\n    NEFTData: IFMSDetails[];\r\n    ifmsVisible: boolean = true;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: TresurerDataService, private userService: UserService, private excelService: ExcelService) { }\r\n  \r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.processId = params[\"processId\"];\r\n                this.alcId = params[\"alcId\"];\r\n                //this.mode = params[\"mode\"];\r\n                //if (this.mode != \"pending\") {\r\n                //    this.isVisable = false;\r\n                //}\r\n            }\r\n        );\r\n        //this.getPaymentProcessIds(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        //this.getRLOBankDetails(3075, 6);\r\n        //this.getPaymentProcessIds(14844, 13);\r\n        this.selectPaymentProcessId(this.processId);\r\n    }\r\n\r\n    //Not used now\r\n    //Fill the dropdown values \r\n    //getPaymentProcessIds(id:any,type:any) {\r\n    //    this.dataService\r\n    //        .getTreasurerPaymentProcesses(id, type)\r\n    //        .subscribe((data: any) => {\r\n    //            this.paymentProcessIds = data;\r\n    //        });\r\n    //}\r\n\r\n    //Drop down change event\r\n    selectPaymentProcessId(processId) {\r\n        this.showErrorMessage = false;\r\n        this.sumofAmount = 0;\r\n        if (processId > 0) {\r\n            this.paymentIdValid = true;\r\n            this.getPaymentProcessedDetails(processId);\r\n            //Rlo office Info\r\n            this.GetRLOOfficeUserInformation(processId);\r\n            \r\n            this.processedClaimsView = true;\r\n        }\r\n        else\r\n            this.paymentIdValid = false;\r\n            \r\n    }\r\n    getPaymentProcessedDetails(id: any) {\r\n        this.claimDetails = [];\r\n        //this.selectedAll = false;\r\n        this.dataService\r\n            .getPaymentProcessedDetails(id)\r\n            .subscribe((data: any) => {\r\n                this.claimDetails = data;\r\n                //if (this.claimDetails != null && this.claimDetails.length > 0) {\r\n                    this.selectAll();\r\n               // }\r\n            });\r\n    }\r\n\r\n    getRLOBankDetails(id:any) {\r\n        this.dataService\r\n            .getRLOBankDetails(id)\r\n            .subscribe((data: any) => {\r\n                this.bankDetails = data;\r\n            });\r\n    }\r\n   \r\n    selectAll() {\r\n        this.sumofAmount = 0;\r\n        this.showErrorMessage = false;\r\n        for (var i = 0; i < this.claimDetails.length; i++) {\r\n            this.claimDetails[i].selected = this.selectedAll;\r\n            if (this.selectedAll) {\r\n                this.sumofAmount += this.claimDetails[i].approvedAmount;\r\n            }\r\n        }\r\n    }\r\n  \r\n    GetRLOOfficeUserInformation(processId:any) {\r\n        this.dataService\r\n            .getRLOUserInfoByProcessingId(this.processId)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                this.getRLOBankDetails(this.RloOfficeAddress.rloOfficeId);\r\n            });\r\n    }\r\n\r\n    paymentRelease() {\r\n        debugger;\r\n        if (this.rloBankId == undefined || this.rloBankId <= 0) { this.bankIsValid = false; return; }\r\n\r\n        this.selectedClaims();\r\n        this.showErrorMessage = false;\r\n        if (this.selectedClaimList != null && this.selectedClaimList.length > 0) {\r\n            this.claimData.createdBy = this.userService.user.deptUserid;\r\n            this.claimData.creadtedDate = new Date();\r\n            this.claimData.rloOfficeId = this.RloOfficeAddress.rloOfficeId;\r\n            this.claimData.statusId = ClaimStatus.PaymentReleasebyTreasurer;\r\n            this.claimData.paymentReleasedClaims = this.selectedClaimList;//this.claimsList;\r\n            this.claimData.rloBankAccountId = this.rloBankId;\r\n            this.claimData.paymentProcessingId = this.processId;\r\n            this.claimData.paymentReleaseDate = null;\r\n            this.claimData.releasedAmount = this.sumofAmount;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .savePaymentReleaseClaims(this.claimData)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"Payment released succesfully.\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                        }\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n        else { this.showErrorMessage = true;}\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.sumofAmount = 0;\r\n        // this.getPaymentProcessedDetails(this.processId);\r\n        this.cancelClick();\r\n    }\r\n\r\n    checkIfAllSelected(itemData) {\r\n        this.showErrorMessage = false;\r\n        this.selectedAll = this.claimDetails.every(function (item: any) {\r\n            return item.selected == true;\r\n        });\r\n\r\n        if (itemData.selected == true) { this.sumofAmount += itemData.approvedAmount; }\r\n        else { this.sumofAmount -= itemData.approvedAmount;  }\r\n\r\n    }\r\n    selectedClaims() {\r\n        var res = this.claimDetails.filter(x => x.selected == true);\r\n        this.selectedClaimList = [];\r\n        for (var i = 0; i < res.length; i++) {\r\n           \r\n            this.selectedClaimList.push({ transactionId: res[i].transactionId, transactionType: ClaimConstants[res[i].claimType] });\r\n        }\r\n    }\r\n\r\n    downloadNeftDocument() {\r\n        this.ifmsVisible = false;\r\n        this.NEFTData = [];\r\n        this.showErrorMessage = false;\r\n        this.NEFTFileName = \"NEFT Details\";\r\n        this.selectedClaims();\r\n        this.dataService\r\n            .getPaymentNEFTDetails(this.selectedClaimList)\r\n            .then((data: any) => {\r\n                debugger;\r\n                this.NEFTData = data;\r\n                let downloadNEFTDetails = this.NEFTData;\r\n                if (downloadNEFTDetails != null && downloadNEFTDetails.length > 0) {\r\n                    this.excelService.exportAsExcelFile(downloadNEFTDetails, this.NEFTFileName);\r\n                }\r\n            });\r\n    }\r\n    cancelClick() {\r\n        this.router.navigate(['tresurer/paymentprocessedlist'], { skipLocationChange: true });\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Payment Release Status</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"paymentReleaseData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentReleaseId\\\">Payment Release Id</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentReleaseDateString\\\">Payment Release Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"releasedAmount\\\">Released Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {paymentReleaseId: searchText,creadtedDateString: searchText,releasedAmount: searchText,statusName:searchText\\r\\n                                    }; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onreviewClick(data)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{data.paymentReleaseId}}</td>\\r\\n                                    <td>{{data.paymentReleaseDateString}}</td>\\r\\n                                    <td>{{data.releasedAmount}}</td>\\r\\n                                    <td>{{data.statusName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"paymentReleaseData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { UserService } from '../../UserService';\r\n//import { PaymentProcessMasterData } from '../../models/paymentProcessDetails.model';\r\n//import { PaymentProcessModel, PaymentClaims } from '../../claim/models/paymentprocess.model';\r\nimport { PaymentReleaseDetailsModel } from '../../models/paymentReleaseDetails.model';\r\nimport { pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-payment-released-list',\r\n  templateUrl: './payment-released-list.component.html',\r\n  styleUrls: ['./payment-released-list.component.css']\r\n})\r\nexport class PaymentReleasedListComponent implements OnInit {\r\n\r\n    paymentReleaseData: PaymentReleaseDetailsModel[]=[];\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: TresurerDataService, private userService: UserService) { }\r\n\r\n    ngOnInit() {\r\n        this.getPaymentReleaseDetails(this.userService.user.deptUserid, this.page, this.pageSize);\r\n  }\r\n    getPaymentReleaseDetails(id: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getPaymentReleaseDetails(id, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.paymentReleaseData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onreviewClick(item: any) {\r\n        debugger;\r\n        this.router.navigate(['tresurer/reviewpaymentrelease', { releaseId: item.paymentReleaseId, processId: item.paymentProcessingId, userId: item.createdBy }], { skipLocationChange: true });\r\n\r\n    }\r\n    changepage(page) {\r\n        this.getPaymentReleaseDetails(this.userService.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Pending </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"fundRequest\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestTypeName\\\">Fund Request Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rloOfficeName\\\">RLO Office</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"requestedBy\\\">Requested By</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundReleaseOrderHdrId\\\">Release Order No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestNumber\\\">Fund Request No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"boardName\\\">Board Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"requestDateString\\\">Request Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {rloOfficeName: searchText,requestedBy: searchText,fundRequestNumber: searchText,\\r\\n                                    refernceNumber: searchText, requestDateString: searchText, amount: searchText, statusName: searchText, boardName: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onreviewClick(data, i)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{data.fundRequestTypeName}}</td>\\r\\n                                    <td>{{data.rloOfficeName}}</td>\\r\\n                                    <td>{{data.requestedBy}}</td>\\r\\n                                    <td>{{data.fundReleaseOrderHdrId}}</td>\\r\\n                                    <td>{{data.fundRequestNumber}}</td>\\r\\n                                    <td>{{data.boardName}}</td>\\r\\n                                    <td>{{data.requestDateString}}</td>\\r\\n                                    <td>{{data.amount }}</td>\\r\\n                                    <td>{{data.statusName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"10\\\">\\r\\n                                        <div *ngIf=\\\"fundRequest.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { FundRequest } from '../../models/fundRequest.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-pending-fund-release-list',\r\n  templateUrl: './pending-fund-release-list.component.html',\r\n  styleUrls: ['./pending-fund-release-list.component.css']\r\n})\r\nexport class PendingFundReleaseListComponent implements OnInit {\r\n    //public claimsData: Claims[]=[];\r\n    public fundRequest: FundRequest[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n\r\n    constructor(public router: Router, private dataService: TresurerDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        debugger;\r\n        //this.getFundReleaseDetails(this.userService.user.deptUserid, this.userService.user.userTpe, WorkflowTrans.fundworkflow, ClaimStatus.ApprovebyBoard);\r\n        this.getFundReleaseDetails(this.userService.user.deptUserid, ClaimStatus.ApprovebyBoard, this.page, this.pageSize);\r\n\r\n    }\r\n\r\n    getFundReleaseDetails(id: number, statusId: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getFundReleaseDetails(id, statusId, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.fundRequest = data.results;\r\n                this.totalRows = data.rowCount;\r\n                //console.log(this.fundRequest);\r\n            });\r\n    }\r\n\r\n    onreviewClick(item: any, index:any) {\r\n        if (item.fundRequestType == 1) // Claims Fund Request\r\n            this.router.navigate(['tresurer/fundrelease', { fundReleaseOrderHdrId: item.fundReleaseOrderHdrId, alcId: item.alcId, mode: \"pending\", chronologicalOrder:index }], { skipLocationChange: true });\r\n        else if (item.fundRequestType == 2) // Expenses Fund Request\r\n            this.router.navigate(['tresurer/reviewfundreleaseexpenses', { fundReleaseOrderHdrId: item.fundReleaseOrderHdrId, alcId: item.alcId }], { skipLocationChange: true });\r\n    }\r\n\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    changepage(page) {\r\n        this.getFundReleaseDetails(this.userService.user.deptUserid, ClaimStatus.ApprovebyBoard, this.page, this.pageSize);\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Fund Release View</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details </header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please select atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Alc Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Fund Request Date: </strong>{{fundrequestDetails.requestDateString}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset style=\\\"display:none\\\">\\r\\n                                <section>\\r\\n                                    <label class=\\\"label\\\">Fund Status at RLO:</label>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Approved Claims Amount: </strong>{{officeDetails.approvedClaimsAmount}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Amount Shortfall: </strong>{{AmountShortfall}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Board: </strong>{{fundrequestDetails.boardName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Claim Types: </strong>{{fundrequestDetails.claimTypes}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Locations : </strong>{{fundrequestDetails.locationNames}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <div class=\\\"inline-group\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\">\\r\\n                                                    <i></i>Fund Request for Claims\\r\\n                                                </label>\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" disabled>\\r\\n                                                    <i></i>Fund Request for Expenses\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- widget grid -->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                                <div>\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                                               [mfData]=\\\"expensesData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>Item</th>\\r\\n                                                    <th>Fund Required</th>\\r\\n                                                    <th>Physical Target</th>\\r\\n                                                    <th>Expenditure incurred during last financial year</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let expenses of mf.data\\\">\\r\\n                                                    <td>{{expenses.itemName}}</td>\\r\\n                                                    <td>{{expenses.fundsRequired}}</td>\\r\\n                                                    <td>{{expenses.physicalTarget}}</td>\\r\\n                                                    <td>{{expenses.expenditureIncurredDuringLastFinYear}}</td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <form class=\\\"smart-form smart-form-main\\\">\\r\\n                                        <fieldset>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-4\\\">\\r\\n                                                    <label><strong>Amount Transferred:</strong>{{sumofamount}}</label>\\r\\n\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4 selectContainer\\\" *ngIf=\\\"fundrequestDetails.statusId == 24\\\">\\r\\n                                                    <label><strong>RLO Bank Account:<span [style.color]=\\\"!bankIsValid?'red':''\\\"><b>*</b></span></strong></label>\\r\\n                                                    <select class=\\\"form-control\\\" name=\\\"rloBank\\\" [(ngModel)]=\\\"rloBankId\\\"\\r\\n                                                            [ngClass]=\\\"{'invalid-data': (!bankIsValid ), 'valid-data': bankIsValid}\\\"\\r\\n                                                            required>\\r\\n                                                        <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                        <option value=\\\"{{bank.rloOfficeBankId}}\\\" *ngFor=\\\"let bank of bankDetails\\\">{{bank.bankAccountNo}}</option>\\r\\n                                                        <i></i>\\r\\n                                                    </select>\\r\\n                                                    <div *ngIf=\\\"(!bankIsValid)\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">Bank account is required </span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4 selectContainer\\\" *ngIf=\\\"fundrequestDetails.statusId != 24\\\">\\r\\n                                                    <label><strong> Bank Account Name: </strong>{{fundrequestDetails.rloBankName}}</label>\\r\\n\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4\\\">\\r\\n                                                    <label><strong>Download Bank NEFT Document:</strong></label>\\r\\n                                                    <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\" style=\\\"color: green;zoom: 3;\\\" (click)=\\\"downloadNeftDocument()\\\"></i>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </fieldset>\\r\\n                                        <footer>\\r\\n                                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                                            <a class=\\\"btn btn-primary\\\" *ngIf=\\\"fundrequestDetails.statusId == 24\\\" (click)=\\\"updateFundRequest(25)\\\">Release</a>\\r\\n\\r\\n                                        </footer>\\r\\n\\r\\n                                    </form>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </article>\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\n//import { FundClaimList, FundRequestDetailsModel } from '../../models/fundRequestedClaimsDetails.model';\r\nimport { ClaimsList, FundReleaseOrderDetailsModel } from '../../models/fundReleaseOrderDetails.model';\r\nimport { ReviewModel } from '../../models/review.model';\r\nimport { WorkflowTrans, UserType, ClaimConstants } from '../../claim/pipes/constnts.model';\r\nimport { RloBankDetails } from '../../models/rlobankdetails.model';\r\nimport { ExcelService } from '../../services/excel.service';\r\nimport { NEFTDetails } from '../../models/neftdetails.model';\r\nimport { debounce } from 'rxjs-compat/operator/debounce';\r\nimport { FundReleaseOrderExpenses, FundRequestExpensesDtlList } from '../../models/fundReleaseOrderExpenses.model';\r\n\r\n@Component({\r\n  selector: 'app-review-fund-release-expenses',\r\n  templateUrl: './review-fund-release-expenses.component.html',\r\n  styleUrls: ['./review-fund-release-expenses.component.css']\r\n})\r\nexport class ReviewFundReleaseExpensesComponent implements OnInit {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    private route$: Subscription;\r\n    private fundReleaseOrderHdrId: any;\r\n    mode: string;\r\n    fundrequestDetails: FundReleaseOrderExpenses;\r\n    expensesData: FundRequestExpensesDtlList[];\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    AmountShortfall: any;\r\n    date = new Date();\r\n    showErrorMessage: boolean = false;\r\n    boardIdValid: boolean = true;\r\n    successMessage: string;\r\n    fundReviewModel: ReviewModel = {} as ReviewModel;\r\n    bankDetails: Array<RloBankDetails> = [];\r\n    bank: RloBankDetails;\r\n    alcId: any;\r\n    bankIsValid: boolean = true;\r\n    sumofamount: number;\r\n    rloBankId: number;\r\n    NEFTFileName: string;\r\n    NEFTDetails: NEFTDetails[] = [] as NEFTDetails[];\r\n    NEFTData: NEFTDetails = {} as NEFTDetails;\r\n    enableNEFT: boolean = false;\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: TresurerDataService, private userService: UserService, private excelService: ExcelService) { }\r\n\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.fundReleaseOrderHdrId = params[\"fundReleaseOrderHdrId\"];\r\n                this.alcId = params[\"alcId\"];\r\n                //this.mode = params[\"mode\"];\r\n                //if (this.mode != \"pending\") {\r\n                //    this.isVisable = false;\r\n                //}\r\n            }\r\n        );\r\n        this.getFundRequestedExpensesById(this.fundReleaseOrderHdrId);\r\n        //this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.GetRLOOfficeUserInformation(this.alcId, UserType.AsstLabourCom);\r\n        // this.getRLOBankDetails(this.alcId, UserType.AsstLabourCom);\r\n    }\r\n\r\n\r\n    getFundRequestedExpensesById(fundReleaseOrderHdrId: any) {\r\n        this.sumofamount = 0;\r\n        this.expensesData = [];\r\n        this.dataService\r\n            .getFundRequestedExpensesById(fundReleaseOrderHdrId)\r\n            .subscribe((data: any) => {\r\n                this.fundrequestDetails = data;\r\n                this.expensesData = data.expensesList;\r\n                this.expensesData.forEach(x => this.sumofamount += x.fundsRequired);\r\n            });\r\n\r\n    }\r\n    \r\n\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                if (this.officeDetails.approvedClaimsAmount > this.RloOfficeAddress.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.officeDetails.approvedClaimsAmount - this.RloOfficeAddress.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n\r\n                this.getRLOBankDetails(this.RloOfficeAddress.rloOfficeId);\r\n            });\r\n    }\r\n\r\n\r\n    updateFundRequest(id: any) {\r\n        if (this.rloBankId == undefined || this.rloBankId <= 0) { this.bankIsValid = false; return; }\r\n\r\n        this.fundReviewModel.rloBankAccountId = this.rloBankId;\r\n        this.fundReviewModel.statusId = id;\r\n        this.fundReviewModel.transactionId = this.fundrequestDetails.fundRequestId;\r\n        this.fundReviewModel.claimType = null;\r\n        this.fundReviewModel.wfId = WorkflowTrans.fundworkflow;\r\n        this.fundReviewModel.userId = this.userService.user.deptUserid;\r\n        this.fundReviewModel.fundReleaseOrderHdrId = this.fundrequestDetails.fundReleaseOrderHdrId;\r\n        this.fundReviewModel.fundRequestType = 2;// Expenses\r\n        if (confirm(\"Are you sure to proceed \")) {\r\n            this.dataService\r\n                .updateComments(this.fundReviewModel)\r\n                .then((data: any) => {\r\n                    this.successMessage = \"Fund request updated successfully\";\r\n                    this.successModal.show();\r\n                });\r\n        }\r\n    }\r\n\r\n    cancelclick() {\r\n        //if (this.mode == \"pending\") {\r\n        this.router.navigate(['tresurer/fundreleaselist']);\r\n        //}\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.router.navigate(['tresurer/fundreleaselist'], { skipLocationChange: false });\r\n    }\r\n\r\n    setNEFTDetails() {\r\n        this.NEFTDetails = [];\r\n        let rloBankAccountId = this.fundrequestDetails.rloBankAccountId;\r\n        let rloBankId = this.rloBankId;\r\n        let bankId = ((rloBankAccountId != undefined && rloBankAccountId != null) ? rloBankAccountId : ((rloBankId != undefined && rloBankId != 0) ? rloBankId : 0));\r\n        if (this.bankDetails != undefined) {\r\n            this.bankDetails.forEach((eachObj) => {\r\n                if (eachObj.rloOfficeBankId == bankId) {\r\n                    this.bank = eachObj;\r\n                }\r\n            });\r\n        }\r\n        if (bankId != 0 && this.bank != undefined) {\r\n            let tempNEFTData = this.NEFTData;\r\n            this.enableNEFT = true;\r\n            this.NEFTFileName = \"NEFT Document\";\r\n            if (this.RloOfficeAddress != undefined) {\r\n                tempNEFTData.nameofthePayee = this.RloOfficeAddress.rloOfficeName;\r\n            }\r\n            else {\r\n                tempNEFTData.nameofthePayee = \"\"\r\n            }\r\n            tempNEFTData.contactNumber = \"\";\r\n            tempNEFTData.idNumber = \"\";\r\n            tempNEFTData.natureOfId = \"\";\r\n            tempNEFTData.nameOfBank = this.bank.bankName;\r\n            tempNEFTData.bankBranchCode = this.bank.bankBranch;\r\n            tempNEFTData.accountNumber = this.bank.bankAccountNo;\r\n            tempNEFTData.IFSCCode = this.bank.ifsc;\r\n            tempNEFTData.amount = this.sumofamount.toString();\r\n            tempNEFTData.narration = \"\";\r\n            this.NEFTDetails.push(tempNEFTData);\r\n        }\r\n    }\r\n\r\n\r\n    getRLOBankDetails(id: any) {\r\n        this.dataService\r\n            .getRLOBankDetails(id)\r\n            .subscribe((data: any) => {\r\n                this.bankDetails = data;\r\n            });\r\n    }\r\n\r\n    downloadNeftDocument() {\r\n        this.setNEFTDetails();\r\n        this.showErrorMessage = false;\r\n        let downloadNEFTDetails = this.NEFTDetails;\r\n        if (downloadNEFTDetails != null && downloadNEFTDetails.length > 0) {\r\n            this.excelService.exportAsExcelFile(downloadNEFTDetails, this.NEFTFileName);\r\n        }\r\n    }\r\n\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <!-- row -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- NEW WIDGET START -->\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <!-- Widget ID (each widget will need unique ID)-->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header><h2>Payment Release View</h2></header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <!--<header>Please select the claims to forward to Tresurer for payment</header>-->\\r\\n                            <div>\\r\\n                                <header>ALC Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                            </div>\\r\\n                                           \\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n\\r\\n                                <fieldset style=\\\"display:none\\\">\\r\\n                                    <section>\\r\\n                                        <header>Fund Status at RLO</header>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <fieldset>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <table id=\\\"dt_basic\\\" class=\\\"table table-striped table-bordered table-hover\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>SSIN</th>\\r\\n                                                    <th>Beneficiary Name</th>\\r\\n                                                    <th>Beneficiary Type</th>\\r\\n                                                    <th>Claim Reference No.</th>\\r\\n                                                    <th>Claim Category</th>\\r\\n                                                    <th>Submission Date</th>\\r\\n                                                    <th>Amount</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let claim of claimsData\\\">\\r\\n                                                    <td>{{claim.ssin}}</td>\\r\\n                                                    <td>{{claim.benName}}</td>\\r\\n                                                    <td>{{claim.benType}}</td>\\r\\n                                                    <td>{{claim.claimRefernceNo}}</td>\\r\\n                                                    <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                                    <td>{{claim.submittedDateString}}</td>\\r\\n                                                    <td>{{claim.approvedAmount}}</td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"7\\\"></td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4\\\">\\r\\n                                            <label class=\\\"control-label\\\"><strong>Amount Transferred:</strong>{{paymentReleaseDetails.releasedAmount}}</label>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <!--<div class=\\\"col col-4 selectContainer\\\">\\r\\n                <label class=\\\"control-label\\\">Source Bank Account<span [style.color]=\\\"!bankIsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                <select class=\\\"form-control\\\" name=\\\"rloBankId\\\" [(ngModel)]=\\\"rloBankId\\\">\\r\\n                    <option value=\\\"\\\">Choose a Bank Account</option>\\r\\n                    <option value=\\\"{{bank.rloOfficeBankId}}\\\" *ngFor=\\\"let bank of bankDetails\\\">{{bank.bankAccountNo}}</option>\\r\\n                    <i></i>\\r\\n                </select>\\r\\n            </div>-->\\r\\n                                        <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                            <label class=\\\"control-label\\\"><strong> Bank Name: </strong>{{paymentReleaseDetails.bankName}}</label>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <!--<div class=\\\"col col-4\\\">\\r\\n                                            <label class=\\\"control-label\\\"><strong>Download Bank NEFT Document:</strong></label>\\r\\n                                            <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\" style=\\\"color: green;zoom: 3;\\\" (click)=\\\"downloadNeftDocument()\\\"></i>\\r\\n                                        </div>-->\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                                <footer>\\r\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"><i class=\\\"fa fa-remove\\\"></i> Cancel</a>\\r\\n                                </footer>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { RloBankDetails } from '../../models/rlobankdetails.model';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { UserService } from '../../UserService';\r\nimport { TresurerDataService } from '../services/tresurer-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\n//import { PaymentProcessModel, PaymentClaims, PaymentClaimList } from '../../claim/models/paymentprocess.model';\r\nimport { PaymentReleaseDetailsModel, PaymentClaimList } from '../../models/paymentReleaseDetails.model';\r\nimport { ClaimStatus, ClaimConstants, UserType } from '../../claim/pipes/constnts.model';\r\nimport { PaymentProcessMasterData } from '../../models/paymentProcessDetails.model';\r\nimport { ExcelService } from '../../services/excel.service';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-reviewpaymentrelease',\r\n    templateUrl: './reviewpaymentrelease.component.html',\r\n    styleUrls: ['./reviewpaymentrelease.component.css']\r\n})\r\nexport class ReviewpaymentreleaseComponent implements OnInit {\r\n\r\n    private route$: Subscription;\r\n    releaseId: any;\r\n    userId: any;\r\n    processId: any;\r\n    claimDetails: Claims[];\r\n    RloOfficeAddress: RloOffice;\r\n    officeDetails: RloOfficeInformation;\r\n    paymentReleaseDetails: PaymentReleaseDetailsModel;\r\n    claimsData: PaymentClaimList[];\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: TresurerDataService, private userService: UserService, private excelService: ExcelService) { }\r\n\r\n    ngOnInit() {\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.releaseId = params[\"releaseId\"];\r\n                this.userId = params[\"userId\"];\r\n                this.processId = params[\"processId\"];\r\n            }\r\n        );\r\n        this.getPaymentReleaseById(this.releaseId);\r\n        if (this.processId != null)\r\n            this.GetRLOOfficeUserInformation(this.processId);\r\n    }\r\n    getPaymentReleaseById(releaseId: any) {\r\n        debugger;\r\n        this.claimsData = [];\r\n        this.dataService\r\n            .getPaymentReleaseById(releaseId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.paymentReleaseDetails = data;\r\n                this.claimsData = data.paymentClaimList;\r\n                    \r\n            });\r\n    }\r\n    GetRLOOfficeUserInformation(processId: any) {\r\n        this.dataService\r\n            .getRLOUserInfoByProcessingId(this.processId)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n\r\n            });\r\n    }\r\n    cancelclick() {\r\n        debugger;\r\n        this.router.navigate(['tresurer/paymentreleasedlist']);\r\n    }\r\n    downloadNeftDocument() {\r\n        let downloadClaimDetails = this.claimDetails.filter(x => x.selected == true);\r\n        if (downloadClaimDetails != null && downloadClaimDetails.length > 0) {\r\n            this.excelService.exportAsExcelFile(downloadClaimDetails, \"Neft Document\");\r\n        }\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n\r\n}\r\n","﻿export const ApiDictionary = {\r\n    getRLOBankDetails: {\r\n        url: 'GetRLOBankAccounts',\r\n        params: null\r\n    },\r\n    getPaymentProcessedDetails: {\r\n        url: 'getAllClaimsByPaymentProcessingId',\r\n        params: null\r\n    },\r\n\r\n    GetRLOUserInfoByProcessingId: {\r\n        url: 'GetRLOUserInfoByProcessingId',\r\n        params: null\r\n    },\r\n    getRLOOfficeUserInformation: {\r\n        url: 'GetRLOOfficeUserInformation',\r\n        params: null\r\n    },\r\n    savePaymentRelease: {\r\n        url: 'savePaymentRelease',\r\n        params: null\r\n    },\r\n\r\n    getTreasurerPaymentProcesses: {\r\n        url: 'getTreasurerPaymentProcesses',\r\n        params: null\r\n    },\r\n\r\n    getFundReleaseDetails: {\r\n        url: 'getTreasurerReleaseOrders',\r\n        params: null\r\n    },\r\n\r\n    getFundRequestedClaimsById: {\r\n        url: 'GetFundReleaseOrderByFundReleaseOrderId',\r\n        params: null\r\n    },\r\n    getNEFTDetailsById: {\r\n        url: 'GetNEFTDetailsForReleasedClaims', //TODO: Change API Name\r\n        //url: 'src/assets/data/NEFTdetails.json',\r\n        params: null\r\n    },\r\n    updateComments: {\r\n        url: 'updateWorkFlowStatus',\r\n        params: { roleId: 'benSno' }\r\n    },\r\n    getPaymentReleaseDetails: {\r\n        url: 'GetPaymentReleasedList',\r\n        params: null\r\n    },\r\n    getPaymentReleaseById: {\r\n        url: 'GetPaymentReleaseHdrDetails',\r\n        params: null\r\n    },\r\n    getFundRequestedExpensesById: {\r\n        url: 'getFundReleaseOrderExpensesByFundReleaseOrderId',\r\n        params: null\r\n    },\r\n    getBeneficiaryPaymentNEFTDetails: {\r\n        url: 'getBeneficiaryPaymentNEFTDetails', \r\n        params: null\r\n    },\r\n}","﻿\r\nimport { HttpClient, HttpRequest, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ApiService } from \"../../services/api.service\";\r\nimport { ApiDictionary } from './api-dictionary';\r\n\r\n@Injectable()\r\nexport class TresurerDataService {\r\n   \r\n    constructor(public apiService: ApiService, public _http: HttpClient) { }\r\n\r\n    getRLOBankDetails(id: any, bankStatusId: number = 1) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getRLOBankDetails.url + \"/\" + id + \"/\" + bankStatusId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getRLOBankDetailsByUserId(id: any, userId: number, bankStatusId: number = 1) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getRLOBankDetails.url + \"/\" + id + \"/\" + userId + \"/\" + bankStatusId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPaymentProcessedDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPaymentProcessedDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    \r\n    getRLOOfficeUserInformation(id: any, type: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getRLOOfficeUserInformation.url + \"/\" + id + \"/\" + type, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getRLOUserInfoByProcessingId(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetRLOUserInfoByProcessingId.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    savePaymentReleaseClaims(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.savePaymentRelease.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    //dropdown services\r\n    getTreasurerPaymentProcesses(id: any, type: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getTreasurerPaymentProcesses.url + \"/\" + id + \"/\" + type + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getFundReleaseDetails(id: any, statusId: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        //const options = new HttpRequest<any>('GET', ApiDictionary.getFundReleaseDetails.url + \"/\" + id + \"/\" + type + \"/\" + wfId + \"/\" + statusId, { params: params });\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getFundReleaseDetails.url + \"/\" + id + \"/\" + statusId + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getFundRequestedClaimsById(Id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getFundRequestedClaimsById.url + \"/\" + Id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getNEFTDetailsById(Id: any) {\r\n        let params = new HttpParams();\r\n        //const options = new HttpRequest<any>('GET', ApiDictionary.getNEFTDetailsById.url + \"/\" + Id, { params: params });\r\n        //return this.apiService.getDropdownData(options).map((res: any) => {\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getNEFTDetailsById.url, { params: params });\r\n        return this.apiService.getStaticData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPaymentNEFTDetails(claims: any) {\r\n        return this.apiService.PostData(ApiDictionary.getNEFTDetailsById.url, claims).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryPaymentNEFTDetails(fundReleaseOrderHdrId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryPaymentNEFTDetails.url + \"/\" + fundReleaseOrderHdrId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    updateComments(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.updateComments.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    \r\n    getPaymentReleaseDetails(id: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPaymentReleaseDetails.url + \"/\" + id + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    \r\n    getPaymentReleaseById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPaymentReleaseById.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getFundRequestedExpensesById(Id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getFundRequestedExpensesById.url + \"/\" + Id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n}","﻿import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ModalModule, AccordionModule } from \"ngx-bootstrap\";\r\nimport { DataTableModule } from \"angular-6-datatable\";\r\nimport { GrdFilterPipe } from '../claim/pipes/grd-filter.pipe';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { TresurerlandingComponent } from \"./tresurerlanding.component\";\r\nimport { PaymentReleaseComponent } from \"./payment-release/payment-release.component\";\r\nimport { TresurerDataService } from \"./services/tresurer-data.service\";\r\nimport { FundReleaseListComponent } from './fund-release-list/fund-release-list.component'\r\nimport { FundReleaseComponent } from './fund-release/fund-release.component';\r\nimport { PaymentProcessedListComponent } from './payment-processed-list/payment-processed-list.component';\r\nimport { PendingFundReleaseListComponent } from './pending-fund-release-list/pending-fund-release-list.component';\r\nimport { PaymentReleasedListComponent } from './payment-released-list/payment-released-list.component';\r\nimport { ReviewpaymentreleaseComponent } from './reviewpaymentrelease/reviewpaymentrelease.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';;\r\nimport { ReviewFundReleaseExpensesComponent } from './review-fund-release-expenses/review-fund-release-expenses.component'\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TresurerlandingComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'paymentrelease', pathMatch: 'full' },\r\n            { path: 'paymentrelease', component: PaymentReleaseComponent },\r\n            { path: 'fundreleaselist', component: FundReleaseListComponent },\r\n            { path: 'fundrelease', component: FundReleaseComponent },\r\n            { path: 'paymentprocessedlist', component: PaymentProcessedListComponent },\r\n            { path: 'pendingfundreleaselist', component: PendingFundReleaseListComponent },\r\n            { path: 'paymentreleasedlist', component: PaymentReleasedListComponent },\r\n            { path: 'reviewpaymentrelease', component: ReviewpaymentreleaseComponent },\r\n            { path: 'reviewfundreleaseexpenses', component: ReviewFundReleaseExpensesComponent }\r\n        ]\r\n    },\r\n];\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, FormsModule, ReactiveFormsModule, ModalModule, AccordionModule, DataTableModule, NgbModule,\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    providers: [TresurerDataService],\r\n    declarations: [TresurerlandingComponent, PaymentReleaseComponent, FundReleaseListComponent, GrdFilterPipe, FundReleaseComponent, PaymentProcessedListComponent, PendingFundReleaseListComponent, PaymentReleasedListComponent, ReviewpaymentreleaseComponent, ReviewFundReleaseExpensesComponent],  \r\n})\r\nexport class TresurerModule { }","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-tresurerlanding',\r\n    templateUrl: './tresurerlanding.component.html',\r\n})\r\nexport class TresurerlandingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}