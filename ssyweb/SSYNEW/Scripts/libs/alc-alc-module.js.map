{"version":3,"sources":["webpack:///./src/app/alc/alc.module.ts","webpack:///./src/app/alc/alclanding.component.html","webpack:///./src/app/alc/alclanding.component.ts","webpack:///./src/app/alc/approval-claims/approval-claims.component.css","webpack:///./src/app/alc/approval-claims/approval-claims.component.html","webpack:///./src/app/alc/approval-claims/approval-claims.component.ts","webpack:///./src/app/alc/claim-status/claim-status.component.css","webpack:///./src/app/alc/claim-status/claim-status.component.html","webpack:///./src/app/alc/claim-status/claim-status.component.ts","webpack:///./src/app/alc/fund-request/fund-request.component.css","webpack:///./src/app/alc/fund-request/fund-request.component.html","webpack:///./src/app/alc/fund-request/fund-request.component.ts","webpack:///./src/app/alc/fund-requested-claims/fund-requested-claims.component.css","webpack:///./src/app/alc/fund-requested-claims/fund-requested-claims.component.html","webpack:///./src/app/alc/fund-requested-claims/fund-requested-claims.component.ts","webpack:///./src/app/alc/payment-processing/payment-processing.component.css","webpack:///./src/app/alc/payment-processing/payment-processing.component.html","webpack:///./src/app/alc/payment-processing/payment-processing.component.ts","webpack:///./src/app/alc/paymentprocessedlist/paymentprocessedlist.component.css","webpack:///./src/app/alc/paymentprocessedlist/paymentprocessedlist.component.html","webpack:///./src/app/alc/paymentprocessedlist/paymentprocessedlist.component.ts","webpack:///./src/app/alc/pending-approval-claims/pending-approval-claims.component.css","webpack:///./src/app/alc/pending-approval-claims/pending-approval-claims.component.html","webpack:///./src/app/alc/pending-approval-claims/pending-approval-claims.component.ts","webpack:///./src/app/alc/pfinterestcalculation/pfinterestcalculation.component.css","webpack:///./src/app/alc/pfinterestcalculation/pfinterestcalculation.component.html","webpack:///./src/app/alc/pfinterestcalculation/pfinterestcalculation.component.ts","webpack:///./src/app/alc/refer-claims/refer-claims.component.css","webpack:///./src/app/alc/refer-claims/refer-claims.component.html","webpack:///./src/app/alc/refer-claims/refer-claims.component.ts","webpack:///./src/app/alc/referral-approval-claims/referral-approval-claims.component.css","webpack:///./src/app/alc/referral-approval-claims/referral-approval-claims.component.html","webpack:///./src/app/alc/referral-approval-claims/referral-approval-claims.component.ts","webpack:///./src/app/alc/referral-reject-claims/referral-reject-claims.component.css","webpack:///./src/app/alc/referral-reject-claims/referral-reject-claims.component.html","webpack:///./src/app/alc/referral-reject-claims/referral-reject-claims.component.ts","webpack:///./src/app/alc/referral-review/referral-review.component.css","webpack:///./src/app/alc/referral-review/referral-review.component.html","webpack:///./src/app/alc/referral-review/referral-review.component.ts","webpack:///./src/app/alc/referral-sendback-claims/referral-sendback-claims.component.css","webpack:///./src/app/alc/referral-sendback-claims/referral-sendback-claims.component.html","webpack:///./src/app/alc/referral-sendback-claims/referral-sendback-claims.component.ts","webpack:///./src/app/alc/reject-claims/reject-claims.component.css","webpack:///./src/app/alc/reject-claims/reject-claims.component.html","webpack:///./src/app/alc/reject-claims/reject-claims.component.ts","webpack:///./src/app/alc/reviewclaims/reviewclaims.component.css","webpack:///./src/app/alc/reviewclaims/reviewclaims.component.html","webpack:///./src/app/alc/reviewclaims/reviewclaims.component.ts","webpack:///./src/app/alc/reviewfundrequest/reviewfundrequest.component.css","webpack:///./src/app/alc/reviewfundrequest/reviewfundrequest.component.html","webpack:///./src/app/alc/reviewfundrequest/reviewfundrequest.component.ts","webpack:///./src/app/alc/reviewfundrequestexpenses/reviewfundrequestexpenses.component.css","webpack:///./src/app/alc/reviewfundrequestexpenses/reviewfundrequestexpenses.component.html","webpack:///./src/app/alc/reviewfundrequestexpenses/reviewfundrequestexpenses.component.ts","webpack:///./src/app/alc/reviewpaymentprocess/reviewpaymentprocess.component.css","webpack:///./src/app/alc/reviewpaymentprocess/reviewpaymentprocess.component.html","webpack:///./src/app/alc/reviewpaymentprocess/reviewpaymentprocess.component.ts","webpack:///./src/app/alc/search-student/search-student.component.css","webpack:///./src/app/alc/search-student/search-student.component.html","webpack:///./src/app/alc/search-student/search-student.component.ts","webpack:///./src/app/alc/sendback-claims/sendback-claims.component.css","webpack:///./src/app/alc/sendback-claims/sendback-claims.component.html","webpack:///./src/app/alc/sendback-claims/sendback-claims.component.ts","webpack:///./src/app/alc/timetrack/timetrack.component.css","webpack:///./src/app/alc/timetrack/timetrack.component.html","webpack:///./src/app/alc/timetrack/timetrack.component.ts","webpack:///./src/app/alc/utilizationcertificate/utilizationcertificate.component.css","webpack:///./src/app/alc/utilizationcertificate/utilizationcertificate.component.html","webpack:///./src/app/alc/utilizationcertificate/utilizationcertificate.component.ts","webpack:///./src/app/alc/utilizationcertificatelist/utilizationcertificatelist.component.css","webpack:///./src/app/alc/utilizationcertificatelist/utilizationcertificatelist.component.html","webpack:///./src/app/alc/utilizationcertificatelist/utilizationcertificatelist.component.ts"],"names":[],"mappings":"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","file":"alc-alc-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlclandingComponent } from './alclanding.component';\r\nimport { PendingApprovalClaimsComponent } from './pending-approval-claims/pending-approval-claims.component';\r\nimport { ApprovalClaimsComponent } from './approval-claims/approval-claims.component';\r\nimport { RejectClaimsComponent } from './reject-claims/reject-claims.component';\r\nimport { SendbackClaimsComponent } from './sendback-claims/sendback-claims.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AlcDataService } from './services/alc-data.service';\r\nimport { DataTableModule } from \"angular-6-datatable\";\r\nimport { GrdFilterPipe } from '../claim/pipes/grd-filter.pipe';\r\nimport { ReviewclaimsComponent } from './reviewclaims/reviewclaims.component';\r\nimport { ModalModule, AccordionModule } from \"ngx-bootstrap\";\r\nimport { ReferClaimsComponent } from './refer-claims/refer-claims.component';\r\nimport { ReferralReviewComponent } from './referral-review/referral-review.component';\r\nimport { ReferralRejectClaimsComponent } from './referral-reject-claims/referral-reject-claims.component';\r\nimport { ReferralApprovalClaimsComponent } from './referral-approval-claims/referral-approval-claims.component';\r\nimport { ReferralSendbackClaimsComponent } from './referral-sendback-claims/referral-sendback-claims.component';\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { PaymentProcessingComponent } from './payment-processing/payment-processing.component';\r\nimport { FundRequestComponent } from './fund-request/fund-request.component';\r\nimport { ReviewfundrequestComponent } from './reviewfundrequest/reviewfundrequest.component';\r\nimport { FundRequestedClaimsComponent } from './fund-requested-claims/fund-requested-claims.component';\r\nimport { TimetrackComponent } from './timetrack/timetrack.component';\r\n//import { PaymentProcessedListComponent } from './payment-processed-list/payment-processed-list.component';\r\nimport { PaymentprocessedlistComponent } from './paymentprocessedlist/paymentprocessedlist.component';\r\nimport { ReviewpaymentprocessComponent } from './reviewpaymentprocess/reviewpaymentprocess.component';\r\nimport { ClaimviewdataComponent } from './claimviewdata/claimviewdata.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ClaimStatusComponent } from './claim-status/claim-status.component';\r\nimport { ReviewfundrequestexpensesComponent } from './reviewfundrequestexpenses/reviewfundrequestexpenses.component';\r\nimport { UtilizationcertificateComponent } from './utilizationcertificate/utilizationcertificate.component';\r\nimport { UtilizationcertificatelistComponent } from './utilizationcertificatelist/utilizationcertificatelist.component';\r\nimport { BsDatepickerModule } from \"ngx-bootstrap\";\r\nimport { PfinterestcalculationComponent } from './pfinterestcalculation/pfinterestcalculation.component';\r\nimport { SearchStudentComponent } from './search-student/search-student.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AlclandingComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'pendingapprovalclaims', pathMatch: 'full' },\r\n            { path: 'pendingapprovalclaims', component: PendingApprovalClaimsComponent },\r\n            { path: 'approvalclaims', component: ApprovalClaimsComponent },\r\n            { path: 'rejectclaims', component: RejectClaimsComponent },\r\n            { path: 'sendbackclaims', component: SendbackClaimsComponent },\r\n            { path: 'reviewclaims', component: ReviewclaimsComponent },\r\n            { path: 'referclaims', component: ReferClaimsComponent },\r\n            { path: 'referralreview', component: ReferralReviewComponent },\r\n            { path: 'referralreject', component: ReferralRejectClaimsComponent },\r\n            { path: 'referralapproval', component: ReferralApprovalClaimsComponent },\r\n            { path: 'referralsendback', component: ReferralSendbackClaimsComponent },\r\n            { path: 'paymentprocessing', component: PaymentProcessingComponent },\r\n            { path: 'reviewclaims/:claimId/:/claimType/:tranctionId', component: ReviewclaimsComponent },\r\n            { path: 'fundrequest', component: FundRequestComponent },\r\n            { path: 'reviewfundrequest', component: ReviewfundrequestComponent },\r\n            { path: 'fundrequestedclaims', component: FundRequestedClaimsComponent },\r\n            { path: 'claimtrack', component: TimetrackComponent },\r\n            { path: 'paymentprocessedlist', component: PaymentprocessedlistComponent },\r\n            { path: 'reviewpaymentprocess', component: ReviewpaymentprocessComponent },\r\n            { path: 'claimstatus', component: ClaimStatusComponent },\r\n            { path: 'reviewfundrequestexpenses', component: ReviewfundrequestexpensesComponent },\r\n            { path: 'utilizationcertificatelist', component: UtilizationcertificatelistComponent },\r\n            { path: 'utilizationcertificate', component: UtilizationcertificateComponent },\r\n            { path: 'pfinterestcalculation', component: PfinterestcalculationComponent },\r\n        ]\r\n    },\r\n];\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, FormsModule, ReactiveFormsModule, PdfViewerModule, ModalModule, AccordionModule, DataTableModule, RouterModule.forChild(routes), NgMultiSelectDropDownModule.forRoot(), NgbModule.forRoot(), BsDatepickerModule.forRoot()\r\n    ],\r\n    providers: [AlcDataService],\r\n    declarations: [AlclandingComponent,GrdFilterPipe, PendingApprovalClaimsComponent, ApprovalClaimsComponent, RejectClaimsComponent, SendbackClaimsComponent, ReviewclaimsComponent, ReferClaimsComponent, ReferralReviewComponent, ReferralRejectClaimsComponent, ReferralApprovalClaimsComponent, ReferralSendbackClaimsComponent, PaymentProcessingComponent, FundRequestComponent, ReviewfundrequestComponent, FundRequestedClaimsComponent, TimetrackComponent, PaymentprocessedlistComponent, ReviewpaymentprocessComponent, ClaimviewdataComponent, ClaimStatusComponent, ReviewfundrequestexpensesComponent, UtilizationcertificateComponent, UtilizationcertificatelistComponent, PfinterestcalculationComponent, SearchStudentComponent]\r\n})\r\nexport class AlcModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alclanding',\r\n  templateUrl: './alclanding.component.html',\r\n})\r\nexport class AlclandingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Approved </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"approvedDateString\\\">Approved Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText, submittedDateString: searchText, approvedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.approvedDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n    selector: 'app-approval-claims',\r\n    templateUrl: './approval-claims.component.html',\r\n    styleUrls: ['./approval-claims.component.css']\r\n})\r\nexport class ApprovalClaimsComponent implements OnInit {\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize; \r\n    //Paging props end\r\n\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ApprovedbyALC, WorkflowTrans.workflow, \"0\",\"0\",this.page, this.pageSize);\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"approve\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"approval\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getApprovalClaims(id: number, type: any, status: any,wfId:any,ssin:any,claimRefNo:any,pageNo?:any,pageSize?:any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status,wfId, ssin,claimRefNo,pageNo,pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n\r\n    //page change event\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ApprovedbyALC, WorkflowTrans.workflow,\"0\",\"0\", page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ApprovedbyALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ApprovedbyALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Claim Status </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"lastActionDateString\\\">Last Action Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,benName: searchText, benType: searchText, claimRefernceNo: searchText,\\r\\n       claimType: searchText, submittedDateString: searchText, claimAmount:searchText,  statusName: searchText,  lastActionDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.statusName}}</td>\\r\\n                                    <td>{{user.lastActionDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"10\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n@Component({\r\n    selector: 'app-claim-status',\r\n    templateUrl: './claim-status.component.html',\r\n    styleUrls: ['./claim-status.component.css']\r\n})\r\nexport class ClaimStatusComponent implements OnInit {\r\n    public claimsData: Claims[] = [];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ApprovedbyALC, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"claimstatus\", workflowId: WorkflowTrans.workflow, chronologicalOrder:-1}], { skipLocationChange: true });\r\n\r\n    }\r\n\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"claimstatus\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getClaimStatusClaims(id, type, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n\r\n    //page change event\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ApprovedbyALC, WorkflowTrans.workflow,\"0\",\"0\", page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchClaimStatusClaims(this.userService.user.deptUserid, this.userService.user.userTpe, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ApprovedbyALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n    }\r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Fund Request </h2>\\r\\n                </header>\\r\\n\\r\\n\\r\\n                <div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Fund Request Date: </strong>{{date | date: 'dd/MM/yyyy'}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <header>  Fund Status at RLO</header>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Approved Claims Amount: </strong>{{officeDetails.approvedClaimsAmount}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Amount Shortfall: </strong>{{AmountShortfall}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\" (change)=\\\"radioChange(1)\\\" />\\r\\n                                                <!--[(ngModel)]=\\\"fundRequestType\\\" value=\\\"claims\\\">-->\\r\\n                                                <i></i>Fund Request for Claims\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" (change)=\\\"radioChange(2)\\\" />\\r\\n                                                <!--[(ngModel)]=\\\"fundRequestType\\\" value=\\\"expenses\\\">-->\\r\\n                                                <i></i>Fund Request for Expenses\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" disabled>\\r\\n                                                <i></i>Advance Fund\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n\\r\\n                                    <div class=\\\"row\\\" style=\\\"margin-top:10px;\\\">\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label>Board<span [style.color]=\\\"!boardIdValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"boardId\\\" [(ngModel)]=\\\"boardId\\\" (change)=\\\"selectBoardChange()\\\"\\r\\n                                                    [ngClass]=\\\"{'invalid-data': ( !boardIdValid  ),\\r\\n                                        'valid-data': boardIdValid }\\\"\\r\\n                                                    required>\\r\\n                                                <option value=\\\"0\\\" selected disabled>Choose a Board</option>\\r\\n                                                <option value=\\\"{{board.boardId}}\\\" *ngFor=\\\"let board of boardList\\\">{{board.boardName}}</option>\\r\\n                                            </select>\\r\\n                                            <div *ngIf=\\\" (!boardIdValid )\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Board is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\" *ngIf=\\\"!viewExpenses\\\">\\r\\n                                            <label>Category</label>\\r\\n                                            <ng-multiselect-dropdown name=\\\"22\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                     [data]=\\\"claimTypesList\\\"\\r\\n                                                                     [(ngModel)]=\\\"claimMasterIds\\\"\\r\\n                                                                     [settings]=\\\"dropdownSettings\\\"\\r\\n                                                                     (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                                     (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                            </ng-multiselect-dropdown>\\r\\n                                            <!--<select class=\\\"form-control\\\" name=\\\"claimMasterId\\\" [(ngModel)]=\\\"claimMasterId\\\">\\r\\n                <option value=\\\"0\\\" selected>All</option>\\r\\n                <option value=\\\"{{type.claimMasterId}}\\\" *ngFor=\\\"let type of claimTypesList\\\">{{type.claimName}}</option>\\r\\n\\r\\n            </select>-->\\r\\n\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" style=\\\"margin-top:10px;\\\" *ngIf=\\\"!viewExpenses\\\">\\r\\n\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label>Location</label>\\r\\n                                            <ng-multiselect-dropdown name=\\\"dd\\\" [placeholder]=\\\"'All '\\\"\\r\\n                                                                     [data]=\\\"LocationList\\\"\\r\\n                                                                     [(ngModel)]=\\\"locationsIds\\\"\\r\\n                                                                     [settings]=\\\"locationSettings\\\"\\r\\n                                                                     (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                                     (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                            </ng-multiselect-dropdown>\\r\\n                                            <!--<select class=\\\"form-control\\\" name=\\\"locationsIds\\\" [(ngModel)]=\\\"locationsIds\\\">\\r\\n                <option value=\\\"0\\\" selected>All</option>\\r\\n                <option value=\\\"{{location.blockSno}}\\\" *ngFor=\\\"let location of LocationList\\\">{{location.blockName}}</option>\\r\\n            </select>-->\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\" style=\\\"margin-top:21px !important\\\">\\r\\n                                            <a class=\\\"btn btn-primary\\\" (click)=\\\"GetClaims()\\\"> Get Claims </a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\" style=\\\"margin-top:10px;\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please select atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage1\\\" style=\\\"margin-top:10px;\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please add atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"viewExpenses\\\" class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n\\r\\n\\r\\n                                <div>\\r\\n\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <fieldset id=\\\"expenses\\\">\\r\\n                                        <!--<header>Expenses </header>-->\\r\\n                                        <fieldset id=\\\"addbutton\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <a class=\\\"btn btn-primary\\\" (click)=\\\"openModel()\\\" style=\\\"width :55px;height:30px;padding:5px;\\\" button> Add </a>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                                    <thead>\\r\\n                                                        <tr>\\r\\n                                                            <th>Item</th>\\r\\n                                                            <th>Fund Required</th>\\r\\n                                                            <th>Physical Target</th>\\r\\n                                                            <th>Expenditure incurred during last financial year</th>\\r\\n                                                            <th></th>\\r\\n                                                        </tr>\\r\\n                                                    </thead>\\r\\n                                                    <tbody>\\r\\n                                                        <tr *ngIf=\\\"expensesDetailsArray.length==0\\\"><td colspan=\\\"6\\\">No expense details</td></tr>\\r\\n                                                        <tr *ngFor=\\\"let expenses of expensesDetailsArray\\\">\\r\\n                                                            <td>{{expenses.itemName}}</td>\\r\\n                                                            <td>{{expenses.fundsRequired}}</td>\\r\\n                                                            <td>{{expenses.physicalTarget}}</td>\\r\\n                                                            <td>{{expenses.expenditureIncurredDuringLastFinYear}}</td>\\r\\n                                                            <td>\\r\\n                                                                <a class=\\\"btn btn-labeled btn-primary\\\" (click)=\\\"editExpenseDetails(expenses)\\\" style=\\\"margin-right:5px;\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i> Edit</a>\\r\\n                                                                <a class=\\\"btn btn-labeled btn-danger\\\" (click)=\\\"removeExpenseDetails(expenses)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a>\\r\\n                                                            </td>\\r\\n                                                        </tr>\\r\\n                                                    </tbody>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </fieldset>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </article>\\r\\n\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n            <!-- widget grid -->\\r\\n            <div *ngIf=\\\"GetClaimVisible\\\" class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n\\r\\n\\r\\n                                <div>\\r\\n\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"widget-body no-padding\\\">\\r\\n                                            <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                                                   [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>\\r\\n                                                        <th>SSIN</th>\\r\\n                                                        <th>Beneficiary Name</th>\\r\\n                                                        <th>Beneficiary Type</th>\\r\\n                                                        <th>Claim Reference No.</th>\\r\\n                                                        <th>Claim Category</th>\\r\\n                                                        <th>Submission Date</th>\\r\\n                                                        <th>Amount</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let claim of mf.data\\\">\\r\\n                                                        <td class=\\\"\\\">\\r\\n                                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"claim.selected\\\" (change)=\\\"checkIfAllSelected(claim);\\\">\\r\\n                                                        </td>\\r\\n                                                        <td>{{claim.ssin}}</td>\\r\\n                                                        <td>{{claim.benName}}</td>\\r\\n                                                        <td>{{claim.benType}}</td>\\r\\n                                                        <td><a (click)=\\\"viewClaimInfo(claim)\\\">{{claim.claimRefernceNo}}</a> </td>\\r\\n                                                        <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                                        <td>{{claim.submittedDateString}}</td>\\r\\n                                                        <td>{{claim.approvedAmount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n\\r\\n                                                <tfoot>\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"8\\\" style=\\\"border-bottom:0px !important\\\">\\r\\n                                                            <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tfoot>\\r\\n                                            </table>\\r\\n\\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>Amount Required: </strong>{{sumofAmount}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </article>\\r\\n\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n            <form class=\\\"smart-form\\\">\\r\\n                <fieldset>\\r\\n                    <section>\\r\\n                        <label>ALC Comments<span [style.color]=\\\"!commentsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                        <label class=\\\"textarea textarea-resizable\\\">\\r\\n                            <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"alcComments\\\" [(ngModel)]=\\\"alcComments\\\"\\r\\n                                      [ngClass]=\\\"{'invalid-data': (!commentsValid ), 'valid-data': commentsValid}\\\"\\r\\n                                      required></textarea>\\r\\n                        </label>\\r\\n                        <div *ngIf=\\\"(!commentsValid)\\\">\\r\\n                            <span style=\\\"color: red;\\\">ALC Comments is required </span>\\r\\n                        </div>\\r\\n                    </section>\\r\\n                </fieldset>\\r\\n            </form>\\r\\n            <form class=\\\"smart-form\\\" *ngIf=\\\"GetClaimVisible || viewExpenses\\\">\\r\\n                <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                <footer>\\r\\n                    <a class=\\\"btn btn-warning\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                    <a id=\\\"btnSava\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SubmitRequest()\\\"> Submit </a>\\r\\n\\r\\n                </footer>\\r\\n            </form>\\r\\n        </article>\\r\\n                    </div>\\r\\n            </div>\\r\\n            <div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n                 aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n                <div class=\\\"modal-dialog modal-lg\\\">\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                        <div class=\\\"modal-header\\\">\\r\\n\\r\\n                            <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body\\\">\\r\\n                            <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                            <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                        Download Receipt\\r\\n                    </button>-->\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                                Ok\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div bsModal #expensesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n                 aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n                <div class=\\\"modal-dialog modal-lg\\\">\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                        <div class=\\\"modal-header\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"expensesModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                            </button>\\r\\n                            <h4 class=\\\"modal-title\\\">Add Expense Details</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body\\\">\\r\\n                            <fieldset id=\\\"divAddExpensesDetails\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"label\\\"> Item <span [style.color]=\\\"!expenseTypeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <select name=\\\"expenseType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"expensesDetails.itemId\\\"\\r\\n                                                    #expenseType=\\\"ngModel\\\"\\r\\n                                                    [ngClass]=\\\"{'invalid-data': !expenseTypeValid,\\r\\n                                        'valid-data': expenseTypeValid }\\\"\\r\\n                                                    required>\\r\\n                                                <option value=\\\"0\\\" selected disabled>Choose Item</option>\\r\\n                                                <option value=\\\"{{expense.lovDtlId}}\\\" *ngFor=\\\"let expense of expensesTypesLov\\\">{{expense.optionName}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                            <div *ngIf=\\\"!expenseTypeValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Select Item </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"label\\\">Fund Required <span [style.color]=\\\"!fundRequiredValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"fundRequiredAmount\\\" placeholder=\\\"Fund Required\\\" [(ngModel)]=\\\"expensesDetails.fundsRequired\\\" \\r\\n                                                   #fundRequiredAmount=\\\"ngModel\\\" \\r\\n                                                   [ngClass]=\\\"{'invalid-data': !fundRequiredValid, \\r\\n                                                   'valid-data': fundRequiredValid}\\\"\\r\\n                                                   required>\\r\\n                                            <div *ngIf=\\\"!fundRequiredValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Fund Required is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"label\\\">Physical Target</label>\\r\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"physicalTarget\\\" placeholder=\\\"Physical Target\\\" [(ngModel)]=\\\"expensesDetails.physicalTarget\\\" #physicalTarget=\\\"ngModel\\\"  />\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"label\\\">Expenditure incurred during last financial year</label>\\r\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"expenditureIncurredDuringLastFinYear\\\" placeholder=\\\"Expenditure incurred\\\" [(ngModel)]=\\\"expensesDetails.expenditureIncurredDuringLastFinYear\\\" #expenditureIncurredDuringLastFinYear=\\\"ngModel\\\"  />\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"expensesModal.hide()\\\">\\r\\n                                Cancel\\r\\n                            </button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addExpenseDetails(expensesDetails)\\\">\\r\\n                                Save\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n                 aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n                <div class=\\\"modal-dialog modal-lg\\\">\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                        <div class=\\\"modal-header\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                            </button>\\r\\n                            <h4 class=\\\"modal-title\\\">Claim Details</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                            <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                                <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                                    <app-claimviewdata #child [claimId]=\\\"claimId\\\" [claimType]=\\\"claimType\\\" [transactionId]=\\\"tranctionId\\\"></app-claimviewdata>\\r\\n                                </div>\\r\\n                                <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px;min-height:inherit\\\">\\r\\n                                    <accordion>\\r\\n                                        <accordion-group heading=\\\"{{item.attachmentTypeString}}\\\" *ngFor=\\\"let item of attachmentList\\\">\\r\\n                                            <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]!='pdf'\\\">\\r\\n                                                <img [src]=\\\"'data:image/'+item.fileName.split('.')[item.fileName.split('.').length-1]+';base64,'+ item.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]=='pdf'\\\">\\r\\n                                                <object [attr.data]=\\\"item.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                                            </div>\\r\\n                                        </accordion-group>\\r\\n                                    </accordion>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                            <div class=\\\"modal-footer\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                                    Ok\\r\\n                                </button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, ClaimConstants, LovConstants } from '../../claim/pipes/constnts.model';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { PaymentProcessModel, PaymentClaims } from '../../claim/models/paymentprocess.model';\r\nimport { Dictionary } from 'lodash'\r\nimport * as Collections from 'typescript-collections';\r\nimport { forEach } from 'typescript-collections/dist/lib/arrays';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { BoardMasterDetails } from '../../models/boardDetails.model';\r\nimport { WorkFlowMaster } from '../../models/workerTypeDetails.model';\r\nimport { LocationsMaster } from '../../models/locationsDetails.model';\r\nimport { ClaimTypes } from '../../models/ClaimTypes.model';\r\nimport { FundRequestModel, PaymentModel } from '../../models/fundRequestProcess.model';\r\nimport { LovDetails } from '../../claim/models/Lov.model';\r\nimport { FundRequestExpensesHdr, FundRequestExpensesDtlList } from '../../models/expenses.model';\r\nimport { ClaimviewdataComponent } from '../claimviewdata/claimviewdata.component';\r\nimport { ClaimView } from '../../claim/models/claimview.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AttachmentModel } from '../../claim/models/attachment.model';\r\nimport { EducationDetailModel } from '../../claim/models/education.model';\r\n\r\n@Component({\r\n    selector: 'app-fund-request',\r\n    templateUrl: './fund-request.component.html',\r\n    styleUrls: ['./fund-request.component.css']\r\n})\r\nexport class FundRequestComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('expensesModal') public expensesModal: ModalDirective;\r\n    @ViewChild('attachModal') public attachModel: ModalDirective;\r\n    @ViewChild('child') private child: ClaimviewdataComponent;\r\n\r\n    claimsData: Claims[];\r\n    alcDetails: AlcDetails;\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    claimData: FundRequestModel = {} as FundRequestModel;\r\n    AmountShortfall: any;\r\n    date = new Date();\r\n    selectedAll: any;\r\n    GetClaimVisible: boolean = false;\r\n    showErrorMessage: boolean = false;\r\n    boardIdValid: boolean = true;\r\n    selectedClaimList: Array<PaymentModel> = [];\r\n    successMessage: string;\r\n    boardList: BoardMasterDetails[];\r\n    WorkerTypeList: WorkFlowMaster[];\r\n    LocationList: LocationsMaster[];\r\n    boardId: any;\r\n    claimMasterIds: Array<any> = [];\r\n    locationsIds: Array<any> = [];\r\n    claimTypesList: ClaimTypes[];\r\n    sumofAmount: any = 0;\r\n    selectedLocations: any;\r\n    selectedClaimTypes: any;\r\n    dropdownSettings = {};\r\n    locationSettings = {};\r\n    sumofAmountVisible: boolean = false;\r\n    claim: ClaimView = {} as ClaimView;\r\n    expensesTypesLov: LovDetails[];\r\n    expenseTypeValid: boolean = true;\r\n    viewExpenses: boolean = false;\r\n    rowIndex = -1;\r\n    fundRequestExpensesData: FundRequestExpensesHdr = {} as FundRequestExpensesHdr;\r\n    expensesDetailsArray: Array<FundRequestExpensesDtlList> = [];\r\n    expensesDetails: FundRequestExpensesDtlList = {} as FundRequestExpensesDtlList;\r\n    fundRequestType: string = \"claims\";\r\n    showErrorMessage1: boolean = false;\r\n    fundRequiredValid: boolean = true;\r\n    claimId: any;\r\n    claimType: any;\r\n    tranctionId: any;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    commentsValid: boolean = true;\r\n    alcComments: string;\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService, private sanitizer: DomSanitizer) {\r\n\r\n    }\r\n    viewClaimInfo(claim: any) {\r\n        debugger;\r\n        this.claimId = claim.claimId;\r\n        this.claimType = claim.claimType;\r\n        this.tranctionId = claim.transactionId;\r\n        this.attachmentList = [];\r\n        this.getClaimDetailsByClaimId(this.claimId, this.tranctionId, ClaimConstants[this.claimType]);\r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                this.claim = data;\r\n                this.child.getData(this.claim);\r\n                this.attachModel.show();\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                if (this.claim.deathDetails != null) {\r\n                    for (var j = 0; j < this.claim.deathDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.deathDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                if (this.claim.disabilityDetails != null) {\r\n                    for (var j = 0; j < this.claim.disabilityDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.disabilityDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        let attachment = this.claim.attachment[k];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.claim.attachment[k] = attachment;\r\n                         this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    ngOnInit() {\r\n       // this.GetRLOOfficeUserInformation(3075, this.userService.user.userTpe);\r\n        this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.getWorkerTypeDetails();\r\n        this.getBoardDetails();\r\n        this.getExpenses();\r\n        this.getClaimTypesMasterDetails();\r\n        this.boardId = 0;\r\n        this.dropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'claimMasterId',\r\n            textField: 'claimName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        };\r\n        this.locationSettings = {\r\n            singleSelection: false,\r\n            idField: 'blockSno',\r\n            textField: 'blockName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        };\r\n    }\r\n    onItemSelect(item: any) {\r\n        console.log(item);\r\n    }\r\n    onSelectAll(items: any) {\r\n        console.log(items);\r\n    }\r\n    GetClaims() {\r\n        \r\n        if (this.boardId > 0) {\r\n            this.boardIdValid = true;\r\n            let claimMaster;\r\n            let locationId;\r\n            if (this.claimMasterIds.length > 0) {\r\n                claimMaster = this.claimMasterIds.map(function (e) {\r\n                    return e.claimMasterId;\r\n                }).join(', ')\r\n            }\r\n            else {\r\n                claimMaster = 0;\r\n            }\r\n            if (this.locationsIds.length > 0 ) {\r\n                locationId = this.locationsIds.map(function (e) {\r\n                    return e.blockSno;\r\n                }).join(', ')\r\n            }\r\n            else {\r\n                locationId = 0;\r\n            }\r\n            this.sumofAmount = 0;\r\n            this.getAllApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, this.boardId, claimMaster, locationId);\r\n        }\r\n        else\r\n            this.boardIdValid = false;\r\n    }\r\n    getAllApprovalClaims(deptUserid: number, type: any, boardId: any, claimTypeIds: any, locationsIds: any) {\r\n        this.claimsData = [];\r\n        this.selectedAll = false;\r\n        this.dataService\r\n            .GetAllApprovalClaims(deptUserid, type, boardId, claimTypeIds, locationsIds)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data;\r\n                this.GetClaimVisible = true;\r\n                this.sumofAmountVisible = this.claimsData.length > 0 ? true : false;\r\n            });\r\n    }\r\n\r\n    GetAlcInformation(deptUserid: number) {\r\n        this.dataService\r\n            .GetAlcInformation(deptUserid)\r\n            .subscribe((data: any) => {\r\n                this.alcDetails = data;\r\n                if (this.alcDetails.approvedClaimsAmount > this.alcDetails.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.alcDetails.approvedClaimsAmount - this.alcDetails.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n            });\r\n    }\r\n\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                if (this.officeDetails.approvedClaimsAmount > this.RloOfficeAddress.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.officeDetails.approvedClaimsAmount - this.RloOfficeAddress.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n\r\n                    this.getLocationDetailsByRloId(this.RloOfficeAddress.rloOfficeId);\r\n                \r\n            });\r\n    }\r\n\r\n    SubmitRequest() {\r\n        debugger;\r\n\r\n        if (this.boardId > 0) {\r\n                this.boardIdValid = true;\r\n                if (this.alcComments != undefined && this.alcComments != null && this.alcComments != \"\" && this.alcComments.length > 0) {\r\n                    this.commentsValid = true;\r\n\r\n                    if (this.fundRequestType == \"claims\") {\r\n                        this.selectedClaims();\r\n                        this.showErrorMessage = false;\r\n                        if (this.selectedClaimList != null && this.selectedClaimList.length > 0) {\r\n                            this.claimData.createdBy = this.userService.user.deptUserid;\r\n                            this.claimData.fundRequestDate = new Date();\r\n                            this.claimData.creadtedDate = new Date();\r\n                            this.claimData.rLOOfficeID = this.RloOfficeAddress.rloOfficeId;\r\n                            this.claimData.statusId = ClaimStatus.FundRequestFromALC;\r\n                            this.claimData.aLCComments = this.alcComments.trim();\r\n                            this.claimData.fundRequestClaims = this.selectedClaimList;\r\n                            let locationId;\r\n                            if (this.locationsIds.length > 0) {\r\n                                locationId = this.locationsIds.map(function (e) {\r\n                                    return e.blockSno;\r\n                                });\r\n                            }\r\n                            else {\r\n                                locationId = this.LocationList.map(function (e) {\r\n                                    return e.blockSno;\r\n                                });\r\n                            }\r\n                            this.claimData.locations = locationId;\r\n                            this.claimData.boardId = this.boardId;\r\n                            this.claimData.fundRequested = this.sumofAmount;\r\n\r\n                            //if (this.claimData.paymentProcessingClaims != null && this.claimData.paymentProcessingClaims.nElements>0) {\r\n                            if (confirm(\"Are you sure to proceed \")) {\r\n                                this.dataService\r\n                                    .saveFundRequesteClaims(this.claimData)\r\n                                    .then((data: any) => {\r\n                                        if (data) {\r\n                                            this.successMessage = \"Fund request forwarded to DLC\"; //\"Fund request successfully submitted\";\r\n                                            this.sumofAmount = 0;\r\n                                        }\r\n                                        else {\r\n                                            this.successMessage = \"Invalid transaction\";\r\n                                        }\r\n                                        this.successModal.show();\r\n                                    });\r\n                                //}\r\n                            }\r\n                        }\r\n                        else { this.showErrorMessage = true; }\r\n                    }\r\n                    else if (this.fundRequestType == \"expenses\") {\r\n                        this.showErrorMessage1 = false;\r\n                        if (this.expensesDetailsArray != null && this.expensesDetailsArray.length > 0) {\r\n                            this.fundRequestExpensesData.createdBy = this.userService.user.deptUserid;\r\n                            this.fundRequestExpensesData.fundRequestDate = new Date();\r\n                            this.fundRequestExpensesData.createdDate = new Date();\r\n                            this.fundRequestExpensesData.rLOOfficeID = this.RloOfficeAddress.rloOfficeId;\r\n                            this.fundRequestExpensesData.statusId = ClaimStatus.FundRequestFromALC;\r\n                            this.fundRequestExpensesData.boardId = this.boardId;\r\n\r\n\r\n                            let sumofExpenses: number = 0;\r\n                            for (var i = 0; i < this.expensesDetailsArray.length; i++) {\r\n                                sumofExpenses = Number(this.expensesDetailsArray[i].fundsRequired) + Number(sumofExpenses);\r\n                            }\r\n                            this.fundRequestExpensesData.fundRequested = sumofExpenses;\r\n                            this.fundRequestExpensesData.fundRequestExpensesDtlList = this.expensesDetailsArray;\r\n                            this.fundRequestExpensesData.alcComments = this.alcComments.trim();\r\n                            if (confirm(\"Are you sure to proceed \")) {\r\n                                this.dataService\r\n                                    .saveFundRequestExpenses(this.fundRequestExpensesData)\r\n                                    .then((data: any) => {\r\n                                        if (data) {\r\n                                            this.successMessage = \"Fund request forwarded to DLC\"; //\"Fund request successfully submitted\";\r\n                                            this.sumofAmount = 0;\r\n                                        }\r\n                                        else {\r\n                                            this.successMessage = \"Invalid transaction\";\r\n                                        }\r\n                                        this.successModal.show();\r\n                                    });\r\n                            }\r\n                        }\r\n                        else { this.showErrorMessage1 = true; }\r\n                    }\r\n                }\r\n                else\r\n                    this.commentsValid = false;\r\n            }\r\n            else\r\n                this.boardIdValid = false;        \r\n    }\r\n\r\n    okClick() {\r\n        this.successModal.hide();\r\n        if (this.fundRequestType == \"claims\") {\r\n            this.GetClaims();\r\n            this.alcComments = \"\";\r\n        }\r\n        else if (this.fundRequestType == \"expenses\") {\r\n            this.clearExpenses();\r\n            this.expensesDetails = {} as FundRequestExpensesDtlList;\r\n            this.expensesDetailsArray = [];\r\n            this.alcComments = \"\";\r\n        }\r\n    }\r\n\r\n    selectAll() {\r\n        this.sumofAmount = 0;\r\n        this.showErrorMessage = false;\r\n        for (var i = 0; i < this.claimsData.length; i++) {\r\n            this.claimsData[i].selected = this.selectedAll;\r\n            if (this.selectedAll) {\r\n                this.sumofAmount += this.claimsData[i].approvedAmount;\r\n            }\r\n        }\r\n    }\r\n    checkIfAllSelected(itemData) {\r\n        this.showErrorMessage = false;\r\n        this.selectedAll = this.claimsData.every(function (item: any) {\r\n            return item.selected == true;\r\n        })\r\n\r\n        if (itemData.selected == true) { this.sumofAmount += itemData.approvedAmount; }\r\n        else { this.sumofAmount -= itemData.approvedAmount; }\r\n    }\r\n    selectedClaims() {\r\n        var res = this.claimsData.filter(x => x.selected == true);\r\n        this.selectedClaimList = [];\r\n        for (var i = 0; i < res.length; i++) {\r\n            let claimtypeId = ClaimConstants[res[i].claimType];\r\n            this.selectedClaimList.push({ transactionId: res[i].transactionId, transactionType: claimtypeId, statusId: 1 });\r\n        }\r\n    }\r\n\r\n    selectedLocationsList(args) {\r\n        this.selectedLocations = args.target.options[args.target.selectedIndex];\r\n    }\r\n\r\n    selectedClaimTypesList(args) {\r\n        this.selectedClaimTypes = args.target.options[args.target.selectedIndex];\r\n    }\r\n\r\n    getBoardDetails() {\r\n        this.dataService\r\n            .getBoardMasterData()\r\n            .subscribe((data: any) => {\r\n                this.boardList = data;\r\n            });\r\n    }\r\n\r\n    getWorkerTypeDetails() {\r\n        this.dataService\r\n            .getWorkerTypeMasterData()\r\n            .subscribe((data: any) => {\r\n                this.WorkerTypeList = data;\r\n            });\r\n    }\r\n\r\n    getLocationDetailsByRloId(id: any) {\r\n        this.dataService\r\n            .getLocationsMasterData(id)\r\n            .subscribe((data: any) => {\r\n                this.LocationList = data;\r\n            });\r\n    }\r\n\r\n    getClaimTypesMasterDetails() {\r\n        this.dataService\r\n            .getClaimTypesMasterData()\r\n            .subscribe((data: any) => {\r\n\r\n                this.claimTypesList = data;\r\n            });\r\n    }\r\n\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n\r\n    cancelClick() {\r\n        this.router.navigate(['alc/fundrequestedclaims']);\r\n    }\r\n    selectBoardChange() {\r\n        debugger;\r\n        this.GetClaimVisible = false;\r\n        this.claimsData = [];\r\n\r\n    }\r\n\r\n    getExpenses() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.ExpensesType)\r\n            .subscribe((data: any) => {\r\n                this.expensesTypesLov = data;\r\n            });\r\n    }\r\n    openModel() {\r\n        this.clearExpenses();\r\n        this.rowIndex = -1;\r\n        this.expensesModal.show();\r\n    }\r\n    addExpenseDetails(details: FundRequestExpensesDtlList) {\r\n        debugger;\r\n        //if (this.claim.educationDetails.claimAmount == undefined) { this.claim.educationDetails.claimAmount = 0; }\r\n        if (this.validateExpenseDetails(details)) {\r\n            //details.statusId = ClaimStatus.Submitted;\r\n            if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) == -1 && this.rowIndex == -1) {\r\n                //for (var i = 0; i < this.expensesTypesLov.length; i++) {\r\n                //    if (this.expensesTypesLov[i].lovDtlId == details.itemId) {\r\n                //        details.itemName = this.expensesTypesLov[i].optionName;\r\n                //    }\r\n                //}\r\n                details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                this.expensesDetailsArray.push(details);\r\n                this.expensesModal.hide();\r\n            }\r\n            else if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) != -1 && this.rowIndex == -1) {\r\n                alert(\"already added please select another expense type\"); return;\r\n            }\r\n            else {\r\n                if (this.rowIndex != -1) {\r\n                    if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) == this.rowIndex) {\r\n                        this.expensesDetailsArray.splice(this.rowIndex, 1);\r\n                        details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                        this.expensesDetailsArray.push(details);\r\n                        this.rowIndex = -1;\r\n                        this.expensesModal.hide();\r\n                    }\r\n                    else {\r\n                        alert(\"already added please select another expense type\"); return;\r\n                    }\r\n                }\r\n            }\r\n            this.expensesDetails = {} as FundRequestExpensesDtlList;\r\n        }\r\n    }\r\n    editExpenseDetails(details: FundRequestExpensesDtlList) {\r\n        //details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n        this.expensesDetails = details;\r\n        //this.rowEligibleAmount = details.eligibleAmount;\r\n        this.rowIndex = this.expensesDetailsArray.indexOf(details);\r\n        this.expensesModal.show();\r\n    }\r\n    removeExpenseDetails(details: FundRequestExpensesDtlList) {\r\n        const index: number = this.expensesDetailsArray.indexOf(details);\r\n        if (index !== -1) {\r\n            //this.claim.educationDetails.claimAmount -= this.expensesDetailsArray[index].eligibleAmount;\r\n            this.expensesDetailsArray.splice(index, 1);\r\n            //if (this.expensesDetailsArray.findIndex(x => x.presentlyReadingName == \"Assistance of Completion of UG Education or Equivalent Skill Development\") != -1) {\r\n            //    this.viewuploadNonMarriage = true;\r\n            //}\r\n            //else {\r\n            //    this.viewuploadNonMarriage = false;\r\n            //}\r\n            //this.eduCount -= 1;\r\n            //if (this.eduCount >= 2) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n        }\r\n    }\r\n    radioChange(id: any) {\r\n        this.claimsData = [];\r\n        this.expensesDetailsArray = [];\r\n        if (id == 1) {\r\n            //if (this.fundRequestType == \"claims\") {\r\n            //    alert(\"claims\");\r\n            //}\r\n            this.fundRequestType = \"claims\";\r\n            //this.GetClaimVisible = true;\r\n            this.viewExpenses = false;\r\n        }\r\n        if (id == 2) {\r\n            // if (this.fundRequestType == \"expenses\") {\r\n            //    alert(\"expenses\");\r\n            //}\r\n            this.fundRequestType = \"expenses\";\r\n            this.GetClaimVisible = false;\r\n            this.viewExpenses = true;\r\n        }\r\n        \r\n    }\r\n    validateExpenseDetails(details: FundRequestExpensesDtlList): boolean {\r\n        //debugger;\r\n        let isValid = true;\r\n        this.expenseTypeValid = true;\r\n        this.fundRequiredValid = true;\r\n        if (details.itemId == undefined || details.itemId <= 0) { this.expenseTypeValid = isValid = false; }\r\n        if (details.fundsRequired == undefined) { this.fundRequiredValid = isValid = false; }\r\n        //if (details.registrationRollNo == undefined || details.registrationRollNo == \"\") { this.registrationNoValid = isValid = false; }\r\n        //if (details.institutionContact != undefined && details.institutionContact.toString().length > 0 && details.institutionContact.toString().length < 10) {\r\n        //    this.institutionContactValid = isValid = false;\r\n        //}\r\n        //if (details.year == undefined) { this.educationYearValid = isValid = false; }\r\n        //if (this.viewuploadNonMarriage) {\r\n        //    if (this.eduNonMarriage.length == 0) { this.uploadNonMarriageValid = isValid = false }\r\n        //}\r\n\r\n        //if (this.educertificates.length == 0) { this.uploadCertificatetValid = isValid = false }\r\n        //if (this.eduSelfAttested.length == 0) { this.uploadselfattestedValid = isValid = false }\r\n        //console.log(details.dateofAdmission);\r\n        //if (details.dateofAdmission == undefined) { this.dateOfAdmissionValid = isValid = false; }\r\n        //if (details.presentlyReading == undefined || details.presentlyReading <= 0) { this.presentlyReadingValid = isValid = false; }\r\n        return isValid;\r\n    }\r\n    clearExpenses() {\r\n        //this.expensesDetails = {} as FundRequestExpensesDtlList;\r\n        //this.expensesDetailsArray = [];\r\n        this.expenseTypeValid = true;\r\n        this.fundRequiredValid = true;\r\n    }\r\n\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Fund Request Status</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"fundRequest\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestTypeName\\\">Fund Request Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rloOfficeName\\\">RLO</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter by=\\\"requestedBy\\\">Requested By</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestNumber\\\">Fund Request No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"boardName\\\">Board Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"requestDateString\\\">Request Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {rloOfficeName: searchText,requestedBy: searchText,fundRequestNumber: searchText,\\r\\n                                    refernceNumber: searchText, requestDateString: searchText, amount: searchText, statusName: searchText, boardName: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a *ngIf=\\\"data.statusId!=20\\\" (click)=\\\"onreviewClick(data)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a *ngIf=\\\"data.statusId==20\\\" (click)=\\\"onEditreviewClick(data)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{data.fundRequestTypeName}}</td>\\r\\n                                    <td>{{data.rloOfficeName}}</td>\\r\\n                                    <td><a (click)=\\\"getDetails(data.fundRequestTypeName,data.fundRequestNumber)\\\">{{data.fundRequestNumber}}</a> </td>\\r\\n                                    <td>{{data.boardName}}</td>\\r\\n                                    <td>{{data.requestDateString}}</td>\\r\\n                                    <td>{{data.amount }}</td>\\r\\n                                    <td>{{data.statusName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\">\\r\\n                                        <div *ngIf=\\\"fundRequest.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n\\r\\n<div bsModal #expensesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"expensesModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">{{headertext}}</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              \\r\\n                   \\r\\n                        <table id=\\\"id1\\\" *ngIf=\\\"!isclaimDta\\\" class=\\\"table table-striped table-bordered\\\">\\r\\n                              \\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Item</th>\\r\\n                                    <th>Fund Required</th>\\r\\n                                    <th>Physical Target</th>\\r\\n                                    <th>Expenditure incurred during last financial year</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let expense of expensesData\\\">\\r\\n                                    <td>{{expense.itemName}}</td>\\r\\n                                    <td>{{expense.fundsRequired}}</td>\\r\\n                                    <td>{{expense.physicalTarget}}</td>\\r\\n                                    <td>{{expense.expenditureIncurredDuringLastFinYear}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n\\r\\n                    \\r\\n                        <table id=\\\"datatable_fixed_column\\\" *ngIf=\\\"isclaimDta\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                               width=\\\"100%\\\">\\r\\n\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>SSIN</th>\\r\\n                                    <th>Beneficiary Name</th>\\r\\n                                    <th>Beneficiary Type</th>\\r\\n                                    <th>Claim Reference No.</th>\\r\\n                                    <th>Claim Category</th>\\r\\n                                    <th>Submission Date</th>\\r\\n                                    <th>Amount</th>\\r\\n                                    <th>Status</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let claim of claimsReqData\\\">\\r\\n                                    <td>{{claim.ssin}}</td>\\r\\n                                    <td>{{claim.benName}}</td>\\r\\n                                    <td>{{claim.benType}}</td>\\r\\n                                    <td>{{claim.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                    <td>{{claim.submittedDateString}}</td>\\r\\n                                    <td>{{claim.approvedAmount}}</td>\\r\\n                                    <td>{{claim.paymentStatusName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\" style=\\\"border-bottom:0px !important\\\">\\r\\n                                        <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                    </td>\\r\\n\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"expensesModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { FundRequest } from '../../models/fundRequest.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, pagination, ClaimConstants } from '../../claim/pipes/constnts.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { FundRequestExpensesDtlList } from '../../models/expenses.model';\r\nimport { FundClaimList } from '../../models/fundRequestedClaimsDetails.model';\r\n\r\n@Component({\r\n    selector: 'app-fund-requested-claims',\r\n    templateUrl: './fund-requested-claims.component.html',\r\n    styleUrls: ['./fund-requested-claims.component.css']\r\n})\r\nexport class FundRequestedClaimsComponent implements OnInit {\r\n    @ViewChild('expensesModal') public expensesModal: ModalDirective;\r\n    public claimsData: Claims[];\r\n    public fundRequest: FundRequest[] = [];\r\n    claimsReqData: FundClaimList[];\r\n\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    headertext: string;\r\n    expensesData: FundRequestExpensesDtlList[];\r\n    isclaimDta: boolean = false;\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    onreviewClick(item: any) {\r\n        if (item.fundRequestType == 1) // Claims Fund Request\r\n            this.router.navigate(['alc/reviewfundrequest', { fundRequestId: item.fundRequestNumber, mode: \"view\", workflowId: WorkflowTrans.fundworkflow }], { skipLocationChange: true });\r\n        else if (item.fundRequestType == 2) // Expenses Fund Request\r\n            this.router.navigate(['alc/reviewfundrequestexpenses', { fundRequestId: item.fundRequestNumber, mode: \"view\", workflowId: WorkflowTrans.fundworkflow }], { skipLocationChange: true });\r\n    }\r\n\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getFundRequestedClaims(this.userService.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n    getDetails(type: string, id: number) {\r\n        if (type == \"Expenses\") {\r\n            this.dataService\r\n                .getFundRequestedExpensesById(id)\r\n                .subscribe((data: any) => {\r\n                    this.expensesData = data.fundRequestExpensesDtlList;\r\n                    this.headertext = \"Expenses Details\";\r\n                    this.isclaimDta = false;\r\n                    this.expensesModal.show();\r\n                });\r\n        }\r\n        else {\r\n            this.dataService\r\n                .getFundRequestedClaimsById(id)\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    this.claimsReqData = data.fundClaimList;\r\n                    this.headertext = \"Claims Details\";\r\n                    this.isclaimDta = true;\r\n                    this.expensesModal.show();\r\n                   \r\n                  \r\n                });\r\n        }\r\n    }\r\n    getFundRequestedClaims(id: number, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getFundRequestedClaims(id, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                //this.fundRequest = data;\r\n                this.fundRequest = data.results;\r\n                this.totalRows = data.rowCount;\r\n                //console.log(this.fundRequest);\r\n            });\r\n    }\r\n\r\n    onEditreviewClick(item: any) {\r\n        if (item.fundRequestType == 1) // Claims Fund Request\r\n            this.router.navigate(['alc/reviewfundrequest', { fundRequestId: item.fundRequestNumber, mode: \"edit\", workflowId: WorkflowTrans.fundworkflow }], { skipLocationChange: true });\r\n        else if (item.fundRequestType == 2) // Expenses Fund Request\r\n            this.router.navigate(['alc/reviewfundrequestexpenses', { fundRequestId: item.fundRequestNumber, mode: \"edit\", workflowId: WorkflowTrans.fundworkflow }], { skipLocationChange: true });\r\n    }\r\n    changepage(page) {\r\n        this.getFundRequestedClaims(this.userService.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Payment Processing </h2>\\r\\n                </header>\\r\\n\\r\\n\\r\\n                <div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                   \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Payment Processing Date: </strong>{{date | date: 'dd/MM/yyyy'}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <header>Fund Status at RLO</header>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\" style=\\\"display:none\\\">\\r\\n                                            <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Approved Claims Amount: </strong>{{officeDetails.approvedClaimsAmount}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Amount Shortfall: </strong>{{AmountShortfall}}</label>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-10\\\">\\r\\n                                            <div class=\\\"inline-group\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" (click)=\\\"GetFundRequestDetails()\\\" checked=\\\"checked\\\">\\r\\n                                                    <i></i>Payment Against Release Order\\r\\n                                                </label>\\r\\n                                                <label class=\\\"radio\\\" style=\\\"margin-top:10px !important; font-weight:normal!important\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" (click)=\\\"PaymentWithoutReleaseOrder()\\\" disabled=\\\"disabled\\\">\\r\\n                                                    <i></i>Payment without Release Order\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please select atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section *ngIf=\\\"GetFundVisible\\\">\\r\\n                                    <div class=\\\"row\\\" style=\\\"margin-top:15px;\\\">\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label>Release Order</label>\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"selectedFundRequestId\\\" [(ngModel)]=\\\"selectedFundRequestId\\\" (change)=\\\"selectChange($event)\\\">\\r\\n                                                <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                                <option value=\\\"{{data.fundReleaseOrderHdrId}}\\\" *ngFor=\\\"let data of fundRequest\\\">Release Order No:{{data.fundReleaseOrderHdrId}} - Fund Request No:{{data.fundRequestNumber}}</option>\\r\\n\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" id=\\\"daterangeloe\\\" *ngIf=\\\"ReleaseDetailsVisible\\\">\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\" style=\\\"margin-top:15px;\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>Release Order Date: </strong>{{releaseDate}}</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>Release Order No: </strong>{{selectedFundRequestId}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                        <a class=\\\"btn btn-primary\\\" (click)=\\\"GetClaims()\\\"> Get Claims </a>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- widget grid -->\\r\\n            <div *ngIf=\\\"GetClaimVisible\\\" class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                              \\r\\n\\r\\n\\r\\n                                <div>\\r\\n\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <div class=\\\"ssv-search\\\">\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                                            <input [(ngModel)]=\\\"nameSearchText\\\" placeholder=\\\"Name Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"mobileSearchText\\\" placeholder=\\\"Mobile number Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"10\\\" maxlength=\\\"10\\\">\\r\\n                                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                                        </div>\\r\\n                                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>\\r\\n                                                    <th>SSIN</th>\\r\\n                                                    <th>Beneficiary Name</th>\\r\\n                                                    <th>Beneficiary Type</th>\\r\\n                                                    <th>Claim Reference No.</th>\\r\\n                                                    <th>Claim Category</th>\\r\\n                                                    <th>Submission Date</th>\\r\\n                                                    <th>Amount</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <!--<tbody *ngIf=\\\"claimsData.length==0\\\">\\r\\n            <tr >\\r\\n                <td colspan=\\\"8\\\">\\r\\n                    No data available\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>-->\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let claim of claimsData\\\">\\r\\n                                                    <td class=\\\"\\\">\\r\\n                                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"claim.selected\\\" (change)=\\\"checkIfAllSelected();\\\">\\r\\n                                                    </td>\\r\\n                                                    <td>{{claim.ssin}}</td>\\r\\n                                                    <td>{{claim.benName}}</td>\\r\\n                                                    <td>{{claim.benType}}</td>\\r\\n                                                    <td>{{claim.claimRefernceNo}}</td>\\r\\n                                                    <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                                    <td>{{claim.submittedDateString}}</td>\\r\\n                                                    <td>{{claim.approvedAmount}}</td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"8\\\"></td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </article>\\r\\n\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n\\r\\n            <form class=\\\"smart-form\\\" *ngIf=\\\"GetClaimVisible\\\">\\r\\n                <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                <footer>\\r\\n                    <a id=\\\"btnSava\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SubmitRequest()\\\"> Submit </a>\\r\\n                    <a class=\\\"btn btn-danger\\\" (click)=\\\"CancelClick()\\\"> Cancel</a>\\r\\n                </footer>\\r\\n            </form>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"successModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>-->\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, ClaimConstants } from '../../claim/pipes/constnts.model';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { PaymentProcessModel, PaymentClaims } from '../../claim/models/paymentprocess.model';\r\nimport { Dictionary } from 'lodash'\r\nimport * as Collections from 'typescript-collections';\r\nimport { forEach } from 'typescript-collections/dist/lib/arrays';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { FundReleaseOrder } from '../../models/fundReleaseOrder.model';\r\n\r\n@Component({\r\n    selector: 'app-payment-processing',\r\n    templateUrl: './payment-processing.component.html',\r\n    styleUrls: ['./payment-processing.component.css']\r\n})\r\nexport class PaymentProcessingComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    claimsData: Claims[];\r\n    resultsData: Claims[];\r\n    alcDetails: AlcDetails;\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    claimData: PaymentProcessModel = {} as PaymentProcessModel;\r\n    AmountShortfall: any;\r\n    date = new Date();\r\n    selectedAll: any;\r\n    GetClaimVisible: boolean = false;\r\n    showErrorMessage: boolean = false;\r\n    selectedClaimList: Array<PaymentClaims> = [];\r\n    successMessage: string;\r\n    //teja\r\n    fundRequest: FundReleaseOrder[];\r\n    GetFundVisible: boolean = false;\r\n    selectedFundRequestId: any;\r\n    releaseDate: any;\r\n    ReleaseDetailsVisible: boolean = false;\r\n    ssinSearchText: string;\r\n    nameSearchText: string;\r\n    mobileSearchText: string;\r\n    isSearch: boolean = false;\r\n    strSSIN: string;\r\n    strName: string;\r\n    strMobile: string;\r\n\r\n\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        // this.GetRLOOfficeUserInformation(3075, this.userService.user.userTpe);\r\n        this.GetFundRequestDetails();\r\n    }\r\n\r\n    GetClaims() {\r\n        if (!this.GetFundVisible)\r\n            this.getAllApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        else if (this.GetFundVisible)\r\n            this.getFundRequestClaims(this.selectedFundRequestId);\r\n    }\r\n    getAllApprovalClaims(deptUserid: number, type: any) {\r\n        this.claimsData = [];\r\n        this.selectedAll = false;\r\n        this.dataService\r\n            .GetAllApprovalClaims(deptUserid, type)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data;\r\n                this.GetClaimVisible = true;\r\n                this.GetFundVisible = false;\r\n                if (this.isSearch)\r\n                    this.GetSearchResults();\r\n\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n\r\n    GetAlcInformation(deptUserid: number) {\r\n        this.dataService\r\n            .GetAlcInformation(deptUserid)\r\n            .subscribe((data: any) => {\r\n                this.alcDetails = data;\r\n                if (this.alcDetails.approvedClaimsAmount > this.alcDetails.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.alcDetails.approvedClaimsAmount - this.alcDetails.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n\r\n            });\r\n    }\r\n\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                if (this.officeDetails.approvedClaimsAmount > this.RloOfficeAddress.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.officeDetails.approvedClaimsAmount - this.RloOfficeAddress.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n\r\n            });\r\n    }\r\n\r\n    SubmitRequest() {\r\n        this.selectedClaims();\r\n        this.showErrorMessage = false;\r\n        if (this.selectedClaimList != null && this.selectedClaimList.length > 0) {\r\n            this.claimData.createdBy = this.userService.user.deptUserid;\r\n            this.claimData.paymentProcessingDate = new Date();\r\n            this.claimData.creadtedDate = new Date();\r\n            this.claimData.rloOfficeId = this.RloOfficeAddress.rloOfficeId;\r\n            this.claimData.statusId = ClaimStatus.PaymentProcessingbyALC;\r\n            this.claimData.paymentProcessingClaims = this.selectedClaimList;// this.normalizeArray(this.claimsList1, ClaimConstants.Education.toString());//this.claimsList;\r\n            //if (this.claimData.paymentProcessingClaims != null && this.claimData.paymentProcessingClaims.nElements>0) {\r\n            //teja\r\n            if (this.GetFundVisible)\r\n                this.claimData.fundrequestId = this.selectedFundRequestId;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .saveProcessingClaims(this.claimData)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"Payment processing successfully submitted\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                        }\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n            //}\r\n        }\r\n        else { this.showErrorMessage = true; }\r\n    }\r\n\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.CancelClick();\r\n    }\r\n\r\n    selectAll() {\r\n        this.showErrorMessage = false;\r\n        for (var i = 0; i < this.claimsData.length; i++) {\r\n            this.claimsData[i].selected = this.selectedAll;\r\n        }\r\n    }\r\n    checkIfAllSelected() {\r\n        this.showErrorMessage = false;\r\n        this.selectedAll = this.claimsData.every(function (item: any) {\r\n            return item.selected == true;\r\n        })\r\n    }\r\n    selectedClaims() {\r\n        var res = this.claimsData.filter(x => x.selected == true);\r\n        this.selectedClaimList = [];\r\n        for (var i = 0; i < res.length; i++) {\r\n            let claimtypeId = ClaimConstants[res[i].claimType];\r\n            this.selectedClaimList.push({ transactionId: res[i].transactionId, transactionType: claimtypeId });\r\n        }\r\n    }\r\n    //teja\r\n    GetFundRequestDetails() {\r\n        this.GetClaimVisible = false;\r\n        this.GetFundRequestsByUserID(this.userService.user.deptUserid, ClaimStatus.Release);\r\n    }\r\n    GetFundRequestsByUserID(id: number, statusId: any) {\r\n        this.dataService\r\n            .getReleaseFundRequest(id, statusId)\r\n            .subscribe((data: any) => {\r\n                this.fundRequest = data;\r\n                this.GetFundVisible = true;\r\n\r\n            });\r\n    }\r\n    PaymentWithoutReleaseOrder() {\r\n        this.releaseDate = \"\";\r\n        this.selectedFundRequestId = \"\";\r\n        this.GetFundVisible = false;\r\n        this.GetClaimVisible = false;\r\n        this.ReleaseDetailsVisible = false;\r\n    }\r\n\r\n    selectChange(args) {\r\n        \r\n        this.selectedFundRequestId = args.target.value;\r\n        if (this.fundRequest != null) {\r\n            this.ReleaseDetailsVisible = true;\r\n            this.fundRequest.forEach(x => {\r\n                if (x.fundReleaseOrderHdrId == this.selectedFundRequestId) { this.releaseDate = x.fundReleaseDateString; }\r\n            });\r\n        }\r\n        this.claimsData = [];\r\n        this.selectedAll = false;\r\n    }\r\n    getFundRequestClaims(fundRequestId: number) {\r\n        \r\n        this.claimsData = [];\r\n        this.selectedAll = false;\r\n        this.dataService\r\n            .getFundReleaseClaimsByFundReleaseHdrId(fundRequestId)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.claimsData = data//.fundClaimList;\r\n                this.GetClaimVisible = true;\r\n                if (this.isSearch)\r\n                    this.GetSearchResults();\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    CancelClick() {\r\n        this.router.navigate(['alc/paymentprocessedlist']);\r\n    }\r\n    GetResults() {\r\n        \r\n        this.isSearch = true;\r\n        this.GetClaims();\r\n    }\r\n\r\n    GetSearchResults() {\r\n        this.isSearch = false;\r\n       \r\n        if (this.claimsData != null && this.claimsData.length > 0) {\r\n           \r\n            if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.nameSearchText != null && this.nameSearchText != undefined) || (this.mobileSearchText != null && this.mobileSearchText != undefined)) {\r\n                //const results = Object.assign([], this.claimsData); \r\n                //if (results != null && results.length > 0) {\r\n                //    this.resultsData = results.filter(x => x.ssin == this.ssinSearchText.trim() || x.benName == this.nameSearchText.trim() || x.benMobileNumber == this.mobileSearchText.trim());\r\n                //    this.claimsData = this.resultsData;\r\n                //   // console.log(this.claimsData);\r\n                //}\r\n                if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                    this.strSSIN = this.ssinSearchText.trim();\r\n                else\r\n                    this.strSSIN = \"0\";\r\n\r\n                if (this.nameSearchText != null && this.nameSearchText != undefined && this.nameSearchText!=\"\")\r\n                    this.strName = this.nameSearchText.trim();\r\n                else\r\n                    this.strName = \"0\";\r\n\r\n                if (this.mobileSearchText != null && this.mobileSearchText != undefined && this.mobileSearchText != \"\")\r\n                    this.strMobile = this.mobileSearchText.trim();\r\n                else\r\n                    this.strMobile = \"0\";\r\n\r\n                if (!this.GetFundVisible)\r\n                    this.getAllApprovalSearchClaims(this.userService.user.deptUserid, this.userService.user.userTpe, this.strSSIN, this.strName, this.strMobile);\r\n                else if (this.GetFundVisible)\r\n                    this.getFundRequestSearchClaims(this.selectedFundRequestId, this.strSSIN, this.strName, this.strMobile);\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllApprovalSearchClaims(deptUserid: number, type: any,ssin:any,benName:any,benMobile:any) {\r\n        this.claimsData = [];\r\n        this.selectedAll = false;\r\n        this.dataService\r\n            .getAllApprovalSearchClaims(deptUserid, type, ssin, benName, benMobile)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data;\r\n                this.GetClaimVisible = true;\r\n                this.GetFundVisible = false;\r\n                //if (this.isSearch)\r\n                //    this.GetSearchResults();\r\n\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n    getFundRequestSearchClaims(fundRequestId: number, ssin: any, benName: any, benMobile: any) {\r\n        \r\n        this.claimsData = [];\r\n        this.selectedAll = false;\r\n        this.dataService\r\n            .getFundRequestSearchClaims(fundRequestId, ssin, benName, benMobile)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.claimsData = data;\r\n                this.GetClaimVisible = true;\r\n                //if (this.isSearch)\r\n                //    this.GetSearchResults();\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n    //-------------------\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Payment Process Status</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"paymentProcessData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentProcessingID\\\">Process Id</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rloOfficeName\\\">Rlo office</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestId\\\">Release Order No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRequestNo\\\">Fund Request No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentProcessingDateString\\\">Payment Processed Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentReleaseDateString\\\">Payment Release Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {paymentProcessingID: searchText,rloOfficeName: searchText,fundRequestId: searchText,statusName:searchText\\r\\n                                    }; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onreviewClick(data)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{data.paymentProcessingID}}</td>\\r\\n                                    <td>{{data.rloOfficeName}}</td>\\r\\n                                    <td>{{data.fundRequestId}}</td>\\r\\n                                    <td>{{data.fundRequestNo}}</td>\\r\\n                                    <td>{{data.statusName}}</td>\\r\\n                                    <td>{{data.paymentProcessingDateString}}</td>\\r\\n                                    <td>{{data.paymentReleaseDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\">\\r\\n                                        <div *ngIf=\\\"paymentProcessData.length > 0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                            </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, pagination } from '../../claim/pipes/constnts.model';\r\nimport { PaymentProcessMasterData } from '../../models/paymentProcessDetails.model';\r\n\r\n@Component({\r\n  selector: 'app-paymentprocessedlist',\r\n  templateUrl: './paymentprocessedlist.component.html',\r\n  styleUrls: ['./paymentprocessedlist.component.css']\r\n})\r\nexport class PaymentprocessedlistComponent implements OnInit {\r\n    paymentProcessData: PaymentProcessMasterData[] = [];\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        debugger;\r\n        this.getPaymentProcessDetails(this.userService.user.deptUserid, 0, this.page, this.pageSize); //ClaimStatus.PaymentProcessingbyALC\r\n    }\r\n    getPaymentProcessDetails(id: any, statusId: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getPaymentProcessDetails(id, statusId, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                //this.paymentProcessData = data;\r\n                this.paymentProcessData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onreviewClick(item: any) {\r\n        debugger;\r\n        this.router.navigate(['alc/reviewpaymentprocess', { paymentProcessId: item.paymentProcessingID, mode: \"view\",statusId:item.statusId }], { skipLocationChange: true });\r\n    }\r\n    changepage(page) {\r\n        this.getPaymentProcessDetails(this.userService.user.deptUserid, 0, this.page, this.pageSize);\r\n    }\r\n\r\n}","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Pending  </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"forwardedDateString\\\">Forwarded Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText,submittedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText, forwardedDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user, i)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.forwardedDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n\\r\\n                                </tr>\\r\\n\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-pending-approval-claims',\r\n  templateUrl: './pending-approval-claims.component.html',\r\n  styleUrls: ['./pending-approval-claims.component.css']\r\n})\r\nexport class PendingApprovalClaimsComponent implements OnInit {\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any, index: number) {\r\n        this.router.navigate(['alc/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"pending\", workflowId: WorkflowTrans.workflow, claimAmount: item.claimAmount, chronologicalOrder:index }], { skipLocationChange: true });\r\n\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"pending\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    \r\n   \r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status, wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.totalRows = data.rowCount;\r\n                this.claimsData = data.results;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n\r\n    //page change event\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow,\"0\",\"0\", page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ForwardtoALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Interest Calculation</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form\\\">\\r\\n                            <div>\\r\\n                                <!--<header>Provident Fund</header>-->\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <section class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">District <span [style.color]=\\\"!districtValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"district\\\" id=\\\"ddlDistrict\\\"\\r\\n                                                        #district=\\\"ngModel\\\" [(ngModel)]=\\\"pfInterest.districtId\\\"\\r\\n                                                        (change)=\\\"districtChange($event.target.value)\\\"\\r\\n                                                        [ngClass]=\\\"{'invalid-data': district.invalid && ( !districtValid || district.touched ),\\r\\n                                        'valid-data': hospital && hospitalId.valid  }\\\"\\r\\n                                                        required>\\r\\n                                                    <option value=\\\"-1\\\" disabled selected>Choose a District</option>\\r\\n                                                    <option value=\\\"0\\\">ALL</option>\\r\\n                                                    <option value=\\\"{{dis.districtId}}\\\" *ngFor=\\\"let dis of districts\\\">{{dis.districtName}}</option>\\r\\n                                                </select> <i></i>\\r\\n\\r\\n                                                <div *ngIf=\\\"district.invalid && (!districtValid || districtValid.touched)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Select a District </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Location Code <span [style.color]=\\\"!locationCodeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"locationCode\\\" id=\\\"locationCode\\\"\\r\\n                                                        #locationCode=\\\"ngModel\\\" [(ngModel)]=\\\"pfInterest.locationId\\\"\\r\\n                                                        [ngClass]=\\\"{'invalid-data': locationCode.invalid && ( !locationCodeValid || locationCode.touched ), 'valid-data': locationCodeValid && locationCode.valid  }\\\"\\r\\n                                                        required [disabled]=\\\"pfInterest.districtId == 0\\\">\\r\\n                                                    <option value=\\\"-1\\\" disabled selected>Choose a Location Code</option>\\r\\n                                                    <option value=\\\"0\\\" [selected]=\\\"pfInterest.districtId == 0\\\">ALL</option>\\r\\n                                                    <option value=\\\"{{block.blockSno}}\\\" *ngFor=\\\"let block of blocks\\\">{{block.locationCode}}</option>\\r\\n                                                </select> <i></i>\\r\\n\\r\\n                                                <div *ngIf=\\\"locationCode.invalid && (!locationCodeValid || locationCode.touched)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Select a Location Code </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-3\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\" (change)=\\\"radioChange(1)\\\" />\\r\\n                                                    <i></i>SSIN Number\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-3\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" (change)=\\\"radioChange(2)\\\" />\\r\\n                                                    <i></i>PF Number\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <!--<span [style.color]=\\\"!ssinFromValid?'red':''\\\"><b>*</b></span>-->\\r\\n                                                <label class=\\\"label\\\">SSIN/PF From </label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"ssinFrom\\\" placeholder=\\\"SSIN/PF From\\\" [(ngModel)]=\\\"pfInterest.ssinFrom\\\" NumbersOnly maxlength=\\\"50\\\">\\r\\n                                                </label>\\r\\n                                                <!--<div *ngIf=\\\"!ssinFromValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Enter SSIN From </span>\\r\\n                                                </div>-->\\r\\n                                            </section>\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">SSIN/PF To </label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"ssinTo\\\" placeholder=\\\"SSIN/PF To\\\" [(ngModel)]=\\\"pfInterest.ssinTo\\\" NumbersOnly maxlength=\\\"50\\\">\\r\\n                                                </label>\\r\\n                                            </section>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <section class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">Financial Year <span [style.color]=\\\"!financialYearValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"financialYear\\\" id=\\\"ddlFinancialYear\\\"\\r\\n                                                        #financialYear=\\\"ngModel\\\" [(ngModel)]=\\\"pfInterest.financialYearId\\\"\\r\\n                                                        [ngClass]=\\\"{'invalid-data': financialYear.invalid && ( !financialYearValid || financialYear.touched ),\\r\\n                                        'valid-data': financialYear && financialYearValid.valid  }\\\"\\r\\n                                                        required>\\r\\n                                                    <option value=\\\"0\\\" disabled>Choose a Financial Year</option>\\r\\n                                                    <option value=\\\"{{year.financialYearId}}\\\" *ngFor=\\\"let year of financialYears\\\">{{year.financialYear}}</option>\\r\\n                                                </select> <i></i>\\r\\n\\r\\n                                                <div *ngIf=\\\"financialYear.invalid && (!financialYearValid || financialYear.touched)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Select a Financial Year </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"calculatePFInterest()\\\"> Calculate</a>\\r\\n                                <a class=\\\"btn btn-danger\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute, Data } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { FinancialYearModel } from 'src/app/models/financialYear.model';\r\nimport { DistrictModel } from 'src/app/models/districts.model';\r\nimport { BlockModel } from 'src/app/models/blocks.model';\r\nimport { PFInterestCalculationModel } from 'src/app/models/pfInterestCalculation.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\n@Component({\r\n  selector: 'app-pfinterestcalculation',\r\n  templateUrl: './pfinterestcalculation.component.html',\r\n  styleUrls: ['./pfinterestcalculation.component.css']\r\n})\r\nexport class PfinterestcalculationComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    route$: Subscription;\r\n    financialYears: FinancialYearModel[];\r\n    districts: DistrictModel[];\r\n    blocks: BlockModel[];\r\n    pfInterest: PFInterestCalculationModel = {} as PFInterestCalculationModel;\r\n    districtValid: boolean = true;\r\n    locationCodeValid: boolean = true;\r\n    ssinFromValid: boolean = true;\r\n    //ssinToValid: boolean = true;\r\n    financialYearValid: boolean = true;\r\n    successMessage: string;\r\n    interestType: number=1;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService) { }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.GetDistricts();\r\n        this.GetFinancialYears();\r\n    }\r\n    GetDistricts() {\r\n        this.dataService\r\n            .GetDistricts()\r\n            .subscribe((data: any) => {\r\n                this.districts = data;\r\n            });\r\n    }\r\n    GetFinancialYears() {\r\n        this.dataService\r\n            .GetFinancialYears()\r\n            .subscribe((data: any) => {\r\n                this.financialYears = data;\r\n            });\r\n    }\r\n    districtChange(districtId) {\r\n        this.dataService\r\n            .GetLocationCodes(districtId)\r\n            .subscribe((data: any) => {\r\n                this.blocks = data;\r\n            });\r\n    }\r\n    calculatePFInterest() {\r\n        \r\n        if (this.validateDetails()) {\r\n            if (this.pfInterest.districtId == 0) {\r\n                this.pfInterest.locationId = 0;\r\n            }\r\n            if (this.pfInterest.ssinTo == undefined || this.pfInterest.ssinTo == null) {\r\n                this.pfInterest.ssinTo = this.pfInterest.ssinFrom;\r\n            } debugger;\r\n            this.pfInterest.interestType = this.interestType;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .CalculatePFInterest(this.pfInterest)\r\n                    .then((data: boolean) => {\r\n                        debugger;\r\n                        if (data) {\r\n                            this.successMessage = \"PF Interest Calculated Successfully\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                        }\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    validateDetails(): boolean {\r\n        debugger;\r\n        let isValid = true;\r\n        this.districtValid = this.locationCodeValid = this.ssinFromValid = this.financialYearValid= true;\r\n        if (this.pfInterest.districtId == -1 || this.pfInterest.districtId == undefined) { this.districtValid = isValid = false }\r\n        if (this.pfInterest.districtId != 0)\r\n            if (this.pfInterest.locationId == -1 || this.pfInterest.locationId == undefined) { this.locationCodeValid = isValid = false }\r\n        if (this.pfInterest.ssinFrom == undefined) { this.ssinFromValid = isValid = false; }\r\n        if (this.pfInterest.financialYearId == 0 || this.pfInterest.financialYearId == undefined) { this.financialYearValid = isValid = false }\r\n        return isValid;\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        window.location.href = \"alc/pfinterestcalculation\";\r\n    }\r\n    radioChange(id: any) {\r\n        this.interestType = id;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Pending</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"referDateString\\\">Refer Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText,submittedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText, referDateString:searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.referDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-refer-claims',\r\n  templateUrl: './refer-claims.component.html',\r\n  styleUrls: ['./refer-claims.component.css']\r\n})\r\n\r\nexport class ReferClaimsComponent implements OnInit {\r\n\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/referralreview', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"referal\", workflowId: WorkflowTrans.workflowreferral }], { skipLocationChange: true });\r\n\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"referal\", workflowId: WorkflowTrans.workflowreferral }], { skipLocationChange: true });\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RefertoALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any,wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        debugger;\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status, wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                //this.claimsData = data;\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RefertoALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RefertoALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RefertoALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2> Approved </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"approvedDateString\\\">Approved Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText, submittedDateString: searchText, approvedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.approvedDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination  } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-referral-approval-claims',\r\n  templateUrl: './referral-approval-claims.component.html',\r\n  styleUrls: ['./referral-approval-claims.component.css']\r\n})\r\nexport class ReferralApprovalClaimsComponent implements OnInit {\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) { }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferApprovedbyALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/referralreview', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"approve\", workflowId: WorkflowTrans.workflowreferral  }], { skipLocationChange: true });\r\n\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"referallapprove\", workflowId: WorkflowTrans.workflowreferral }], { skipLocationChange: true });\r\n    }\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status, wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferApprovedbyALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferApprovedbyALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferApprovedbyALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2> Rejected </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rejectedDateString\\\">Rejected Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText,submittedDateString: searchText, rejectedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.rejectedDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination  } from '../../claim/pipes/constnts.model';\r\nimport { UserService } from '../../UserService';\r\n\r\n@Component({\r\n  selector: 'app-referral-reject-claims',\r\n  templateUrl: './referral-reject-claims.component.html',\r\n  styleUrls: ['./referral-reject-claims.component.css']\r\n})\r\nexport class ReferralRejectClaimsComponent implements OnInit {\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) { }\r\n\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/referralreview', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"reject\" }], { skipLocationChange: true });\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"referalreject\", workflowId: WorkflowTrans.workflowreferral }], { skipLocationChange: true });\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferedRejectbyALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status, wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferedRejectbyALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferedRejectbyALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferedRejectbyALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n    }\r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n\\r\\n                    <h2>Claim View </h2>\\r\\n\\r\\n\\r\\n                </header>\\r\\n\\r\\n\\r\\n                <div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n\\r\\n                            <header>Beneficiary Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Name: </strong>{{beneficiary?.benFullName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>SSIN: </strong>{{beneficiary?.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Bank Name: </strong>{{beneficiary?.benBankName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Account No: </strong>{{beneficiary?.benBankAccNo}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>IFSC Code: </strong>{{beneficiary?.benBankIfscCode}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Branch: </strong>{{beneficiary?.benBankBranch}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"isOnDeathofBeneficiaryOnRequestofNominee\\\">\\r\\n                                <header>Nominee Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Name: </strong>{{claim?.nomineeName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Address: </strong>{{claim?.nomineeAddress}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Birth: </strong>{{claim?.nomineeDOBString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Contact Number: </strong>{{claim?.nomineeContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Bank Account No: </strong>{{claim?.nomineeBankAccount}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>IFSC Code: </strong>{{claim?.nomineeIFSCCode}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <fieldset disabled=\\\"true\\\">\\r\\n                                <div class=\\\"row\\\" id=\\\"CheckBoxList\\\">\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"PF\\\" [checked]=\\\"claim.providentFundDetails != null\\\"><i></i>PF(Provident Fund)</label>\\r\\n                                        <!--<label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"PF\\\"><i></i>PF(Provident Fund)</label>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Health & Family\\\" [checked]=\\\"claim.healthFamilyDetails != null\\\"><i></i>Health & Family</label>\\r\\n                                    </div>\\r\\n                                    <!--<div class=\\\"col col-3\\\">\\r\\n                <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Death & Diasability\\\"><i></i>Death & Diasability</label>\\r\\n            </div>-->\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Death\\\" [checked]=\\\"claim.deathDetails != null\\\"><i></i>Death</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Disability\\\" [checked]=\\\"claim.disabilityDetails != null\\\"><i></i>Disability</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Education\\\" [checked]=\\\"claim.educationDetails != null\\\"><i></i>Education</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> PF No.: </strong>{{claim.providentFundDetails.pfno}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Claim Amount:</strong> {{claim.providentFundDetails.claimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Date of Maturity:</strong>\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Locking Period Up-to:</strong>\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Type of Claim:</strong> {{claim.providentFundDetails.typeOfClaimName}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Reason for Preclosure:</strong> {{claim.providentFundDetails.reasonForPreClosure}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.providentFundDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>PF Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                <header>Education</header>\\r\\n\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.educationDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.educationDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Dependent Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section *ngFor=\\\"let detail of educationList\\\">\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Student: </strong>{{detail?.dependentName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Name of the Institution : </strong> {{detail?.institutionName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Principal/Head Master of the institution:</strong>{{detail?.institutionPrinicipleName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong> Contact Number of the Institution: </strong>{{detail?.institutionContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Registration No./Roll No. of last exam passed: </strong>{{detail?.registrationRollNo}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Year of Examination: </strong>{{detail?.year}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission: </strong>{{detail?.dateofAdmissionString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Last Exam Passed: </strong>{{detail?.lastExamPassedName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Presently Reading: </strong>{{detail?.presentlyReadingName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Eligible Amount :</strong>{{detail?.eligibleAmount}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Educational Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.healthFamilyDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.healthFamilyDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Health & Family Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Type of Claim: </strong>{{claim?.healthFamilyDetails?.typeOfClaimName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Hospital : </strong> {{claim?.healthFamilyDetails?.hospitalName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Hospitalization/OPD:</strong>{{claim?.healthFamilyDetails?.typeOfHospitalizationName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Patient Id: </strong>{{claim?.healthFamilyDetails?.patientId}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of Disease: </strong>{{claim?.healthFamilyDetails?.nameOfTheDiseaseString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.nameOfTheDisease==1\\\">\\r\\n                                                <label><strong> Name of clinical test: </strong>{{claim?.healthFamilyDetails?.nameOfClinicalTestString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Met with an Accident:</strong>{{claim?.healthFamilyDetails?.isAccident}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Clinical Test: </strong>{{claim?.healthFamilyDetails?.costOfClinicalTest}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Medicine: </strong>{{claim?.healthFamilyDetails?.costOfMedicine}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of First Appointment: </strong>{{claim?.healthFamilyDetails?.firstAppointmentDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Claim for: </strong>{{claim?.healthFamilyDetails?.claimForName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                                <label><strong> Cost of Hospitalization: </strong>{{claim?.healthFamilyDetails?.costOfHospitalization}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission to Hospital: </strong>{{claim?.healthFamilyDetails?.admittedDateString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Discharge :</strong>{{claim?.healthFamilyDetails?.dischargeDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.familyMemberId != undefined && claim?.healthFamilyDetails?.familyMemberId !=0\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Family Member Name: </strong>{{claim?.healthFamilyDetails?.familyMemberName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.reasonForDelaySubmission != undefined || claim?.healthFamilyDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.healthFamilyDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <div *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalizationName!='OPD'\\\">\\r\\n                                    <header>Loss of Employment</header>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> From Date: </strong>{{claim?.healthFamilyDetails?.loeFromDateString}}</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>To Date :</strong>{{claim?.healthFamilyDetails?.loeToDateString}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n                                <header>Health & Family Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>View Packages</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                        <td>{{pak.packageName}}</td>\\r\\n                                                        <td>{{pak.packageCode}}</td>\\r\\n                                                        <td>{{pak.ailmentName}}</td>\\r\\n                                                        <td>{{pak.amount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.disabilityDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.disabilityDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Disability Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of release from hospital/Accident: </strong>{{claim?.disabilityDetails?.dateofReleaseString}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Disability : </strong> {{claim?.disabilityDetails?.natureOfDisabilityName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Disability: </strong>{{claim?.disabilityDetails?.detailsOfDisability}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.disabilityDetails?.reasonForDelaySubmission != undefined || claim?.disabilityDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.disabilityDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Disability Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                <header>Death</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.deathDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.deathDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Death Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Death : </strong> {{claim?.deathDetails?.natureofDeathName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Death: </strong>{{claim?.deathDetails?.dateofDeathString}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Death: </strong>{{claim?.deathDetails?.detailsofDeath}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Place of Death: </strong>{{claim?.deathDetails?.placeofDeath}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Death Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <header>Time Line</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <!-- row -->\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" style=\\\"width:98%\\\">\\r\\n                                            <div class=\\\"well well-sm\\\">\\r\\n                                                <div class=\\\"smart-timeline\\\">\\r\\n                                                    <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                        <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                            <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                                <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-time\\\">\\r\\n                                                                <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-content\\\">\\r\\n                                                                <p>\\r\\n                                                                    <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                                </p>\\r\\n                                                                <p>\\r\\n                                                                    {{item.actionComments}}\\r\\n                                                                </p>\\r\\n                                                            </div>\\r\\n                                                        </li>\\r\\n\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"isShowClaimsHistory\\\">\\r\\n                                <header>Claims History</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewHistory()\\\" class=\\\"smart-form-link\\\">View Claims History</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <fieldset>\\r\\n\\r\\n                                <section>\\r\\n                                    <label>Approved Amount<span [style.color]=\\\"!approvedAmountValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <input type=\\\"text\\\" name=\\\"approvedAmount\\\" [disabled]=\\\"!isApprovedAmountDisable\\\" [(ngModel)]=\\\"review.approvedAmount\\\" placeholder=\\\"Approved Amount\\\" NumbersOnly>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <label>ALC Comments<span [style.color]=\\\"!alcCommentsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"!isVisable\\\" name=\\\"alcComments\\\" [(ngModel)]=\\\"review.alcComments\\\"\\r\\n                                                  #alcComments=\\\"ngModel\\\"\\r\\n                                                  [ngClass]=\\\"{'invalid-data': alcComments.invalid && (!alcCommentsValid || alcComments.touched), 'valid-data': alcComments.valid && alcCommentsValid}\\\"\\r\\n                                                  required>\\r\\n                                        </textarea>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"alcComments.invalid && (!alcCommentsValid ||alcComments.touched)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">ALC Comments is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <label>Exception Comments</label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"!isVisable\\\" name=\\\"exceptionComments\\\" [(ngModel)]=\\\"review.exceptionComments\\\"></textarea>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-warning\\\" *ngIf=\\\"isVisable\\\" (click)=\\\"saveClaim(9,1,'rejected')\\\"> Reject</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isVisable\\\" (click)=\\\"saveClaim(11,0,'approved')\\\">Approve</a>\\r\\n                                <a class=\\\"btn btn-primary\\\" *ngIf=\\\"isVisable\\\" (click)=\\\"saveClaim(10,1,'send back')\\\"> Send back</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\\r\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Attachment Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <app-claimviewdata [claimId]=\\\"claimId\\\" [claimType]=\\\"claimType\\\" [transactionId]=\\\"tranctionId\\\"></app-claimviewdata>\\r\\n                    </div>\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px;min-height:inherit\\\">\\r\\n                        <accordion>\\r\\n                            <accordion-group heading=\\\"{{item.attachmentTypeString}}\\\" *ngFor=\\\"let item of attachmentList\\\">\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]!='pdf'\\\">\\r\\n                                    <img [src]=\\\"'data:image/'+item.fileName.split('.')[item.fileName.split('.').length-1]+';base64,'+ item.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]=='pdf'\\\">\\r\\n                                    <object [attr.data]=\\\"item.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                                </div>\\r\\n                            </accordion-group>\\r\\n                        </accordion>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                        Ok\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #historyModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"historyModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Claims History</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div>\\r\\n                    <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsHistoryData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    Claim Reference No.\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Submission Date\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Amount\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Approved Amount\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Status\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Submitted By\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of mf.data; let i=index;\\\">\\r\\n                                <td>{{user.claimRefernceNo}}</td>\\r\\n                                <td>{{user.submittedDateString}}</td>\\r\\n                                <td>{{user.claimAmount}}</td>\\r\\n                                <td>{{user.approvedAmount}}</td>\\r\\n                                <td>{{user.statusName}}</td>\\r\\n                                <td>{{user.submittedByName}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"6\\\"></td>\\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"historyModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ClaimView } from '../../claim/models/claimview.model';\r\nimport { EducationHdrModel, EducationDetailModel } from '../../claim/models/education.model';\r\nimport { Beneficiary } from '../../claim/models/ben.model';\r\nimport { ReviewModel } from '../../models/review.model';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimConstants, WorkflowTrans, PFTypeOfClaim, EntryPoint, ReasonForApplyAgent } from '../../claim/pipes/constnts.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AttachmentModel } from '../../claim/models/attachment.model';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\nimport { Claims } from '../../claim/models/claims.model';\r\n@Component({\r\n    selector: 'app-referral-review',\r\n    templateUrl: './referral-review.component.html',\r\n    styleUrls: ['./referral-review.component.css']\r\n})\r\nexport class ReferralReviewComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('attachModal') public attachModel: ModalDirective;\r\n    @ViewChild('historyModal') public historyModal: ModalDirective;\r\n    public claimsHistoryData: Claims[] = [];\r\n\r\n    private route$: Subscription;\r\n    private claimId: number;\r\n    private claimType: number;\r\n    private tranctionId: any;\r\n    private workflowId: any;\r\n\r\n    approvedAmountValid: boolean = true;\r\n    alcCommentsValid: boolean = true;\r\n    claim: ClaimView = {} as ClaimView;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    successMessage: string;\r\n    review: ReviewModel = {} as ReviewModel;\r\n    mode: string;\r\n    isVisable: boolean = true;\r\n    isApprovedAmountDisable: boolean = true;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    viewMetWithAnAccident: boolean = false;\r\n    isPrematureClaim: boolean = false;\r\n    isShowClaimsHistory: boolean = false;\r\n    isOnDeathofBeneficiaryOnRequestofNominee: boolean = false;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService, private sanitizer: DomSanitizer) {\r\n\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                \r\n                this.claimId = params[\"claimId\"];\r\n                this.claimType = ClaimConstants[params[\"claimType\"]];\r\n                this.tranctionId = params[\"transactionId\"]\r\n                this.mode = params[\"mode\"];\r\n                if (this.mode != \"referal\") {\r\n                    this.isVisable = this.isApprovedAmountDisable= false;\r\n                }\r\n                else {\r\n                    this.isShowClaimsHistory = true;\r\n                    if (this.claimType != ClaimConstants.HealthFamily && this.claimType != ClaimConstants.PF) {\r\n                        this.isApprovedAmountDisable = false;\r\n                    }\r\n                }\r\n                this.workflowId = params[\"workflowId\"];\r\n            }\r\n        );\r\n        this.getPackages();\r\n        this.getClaimDetailsByClaimId(this.claimId, this.tranctionId, this.claimType);\r\n    }\r\n\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n            });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                this.claim = data;\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.review.approvedAmount = this.claim.educationDetails.approvedAmount;\r\n                    this.review.alcComments = this.claim.educationDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.educationDetails.exceptionComments;\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                        if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                    }\r\n                    this.review.approvedAmount = this.claim.healthFamilyDetails.approvedAmount;\r\n                    this.review.alcComments = this.claim.healthFamilyDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.healthFamilyDetails.exceptionComments;\r\n                    let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                    }\r\n                    this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                }\r\n                if (this.claim.disabilityDetails != null) {\r\n                    for (var j = 0; j < this.claim.disabilityDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.disabilityDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    this.review.approvedAmount = this.claim.disabilityDetails.approvedAmount;\r\n                    this.review.alcComments = this.claim.disabilityDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.disabilityDetails.exceptionComments;\r\n                }\r\n                if (this.claim.deathDetails != null) {\r\n                    for (var j = 0; j < this.claim.deathDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.deathDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    this.review.approvedAmount = this.claim.deathDetails.approvedAmount;\r\n                    this.review.alcComments = this.claim.deathDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.deathDetails.exceptionComments;\r\n                }\r\n                if (this.claim.providentFundDetails != null) {\r\n                    debugger;\r\n                    if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                        this.isPrematureClaim = true;\r\n                    }\r\n                    this.review.approvedAmount = this.claim.providentFundDetails.approvedAmount;\r\n                    this.review.alcComments = this.claim.providentFundDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.providentFundDetails.exceptionComments;\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        let attachment = this.claim.attachment[k];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.claim.attachment[k] = attachment;\r\n                         this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                if (this.claim.entryPoint == EntryPoint.Nominee || (this.claim.entryPoint == EntryPoint.Agent && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)\r\n                    || (this.claim.entryPoint == EntryPoint.CA && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee) || (this.claim.entryPoint == EntryPoint.Lwfc && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)) {\r\n                    this.isOnDeathofBeneficiaryOnRequestofNominee = true;\r\n                }\r\n                this.getBenBasicDetails(this.claim.benSno);\r\n                console.log(this.claim);\r\n                this.getClaimTrackDetailsByClaimId(tranctionId, claimType, this.workflowId);\r\n                if (this.isShowClaimsHistory)\r\n                    this.getBeneficiaryClaimsHistory(this.claimId, this.claim.benSno, claimType);\r\n            });\r\n    }\r\n    viewAttachment() {\r\n        this.attachModel.show();\r\n    }\r\n    getBenBasicDetails(benNo: any) {\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsById(benNo)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n                console.log(this.beneficiary);\r\n            });\r\n    }\r\n    getClaimTrackDetailsByClaimId(transactionId: any, tranctionType: any, wfId: any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType, wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n            });\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.router.navigate(['alc/pendingapprovalclaims'], { skipLocationChange: false });\r\n    }\r\n    saveClaim(status: number, type: any, mode: string) {\r\n        if (this.validateClaim(type)) {\r\n            this.review.benDeathStatus = false;\r\n            this.review.statusId = status;\r\n            this.review.transactionId = this.tranctionId;\r\n            this.review.claimType = this.claimType;\r\n            this.review.wfId = WorkflowTrans.workflowreferral;\r\n            this.review.userId = this.userService.user.deptUserid;\r\n            if (mode == \"approved\") {\r\n                debugger;\r\n                if (this.claim.deathDetails != null) { this.review.benDeathStatus = true; }\r\n            }\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .updateComments(this.review)\r\n                    .then((data: any) => {\r\n                        this.successMessage = \"Claim \" + mode + \" successfully\";\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    cancelclick() {\r\n        if (this.mode == \"referal\") {\r\n            this.router.navigate(['alc/referclaims']);\r\n        }\r\n        else if (this.mode == \"sendback\") {\r\n            this.router.navigate(['alc/referralsendback']);\r\n\r\n        }\r\n        else if (this.mode == \"reject\") {\r\n            this.router.navigate(['alc/referralreject']);\r\n\r\n        }\r\n        else if (this.mode == \"approve\") {\r\n            this.router.navigate(['alc/referralapproval']);\r\n\r\n        }\r\n    }\r\n    validateClaim(type: any) {\r\n        let isValid = true;\r\n        this.alcCommentsValid = this.approvedAmountValid = true;\r\n        if (type == 0)\r\n            if (this.review.approvedAmount == undefined || this.review.approvedAmount == 0) { this.approvedAmountValid = isValid = false; }\r\n        if (this.review.alcComments == undefined || this.review.alcComments == \"\") { this.alcCommentsValid = isValid = false; }\r\n        return isValid;\r\n\r\n    }\r\n\r\n    getApprovalPremission(id: any, type: any) {\r\n        this.dataService\r\n            .GetApprovalPremission(id, type)\r\n            .subscribe((data: any) => {\r\n                console.log(data);\r\n            });\r\n    }\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n    viewHistory() {\r\n        this.historyModal.show();\r\n    }\r\n    getBeneficiaryClaimsHistory(claimId: any, benSNo: any, tranctionType: any) {\r\n        debugger;\r\n        this.dataService\r\n            .getBeneficiaryClaimsHistory(claimId, benSNo, tranctionType)\r\n            .subscribe((data: any) => {\r\n                this.claimsHistoryData = data;\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Sent Back </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"sentBackDateString\\\">Sent back Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText, claimAmount: searchText,submittedDateString: searchText, sentBackDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.sentBackDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\n@Component({\r\n  selector: 'app-referral-sendback-claims',\r\n  templateUrl: './referral-sendback-claims.component.html',\r\n  styleUrls: ['./referral-sendback-claims.component.css']\r\n})\r\nexport class ReferralSendbackClaimsComponent implements OnInit {\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/referralreview', { claimId: item.claimId, claimType: item.claimType, tranctionId: item.claimRefernceNo, mode: \"sendback\", workflowId: WorkflowTrans.workflowreferral  }], { skipLocationChange: true });\r\n\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"referalsendback\", workflowId: WorkflowTrans.workflowreferral  }], { skipLocationChange: true });\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferSendbackbyALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status, wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferSendbackbyALC, WorkflowTrans.workflowreferral,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferSendbackbyALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.ReferSendbackbyALC, WorkflowTrans.workflowreferral, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Rejected </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rejectedDateString\\\">Rejected Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText,claimAmount: searchText,submittedDateString: searchText, rejectedDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.rejectedDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../../claim/pipes/constnts.model';\r\nimport { UserService } from '../../UserService';\r\n\r\n@Component({\r\n  selector: 'app-reject-claims',\r\n  templateUrl: './reject-claims.component.html',\r\n  styleUrls: ['./reject-claims.component.css']\r\n})\r\nexport class RejectClaimsComponent implements OnInit {\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"reject\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"reject\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RejectfromALC, WorkflowTrans.workflow,\"0\",\"0\",this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status,wfId, ssin, claimRefNo,pageNo,pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n\r\n    //page change event\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RejectfromALC, WorkflowTrans.workflow,\"0\",\"0\", page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RejectfromALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.RejectfromALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n    }\r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n\\r\\n                    <h2>Claim View</h2>\\r\\n\\r\\n\\r\\n                </header>\\r\\n\\r\\n\\r\\n                <div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <div style=\\\"text-align:right\\\" *ngIf=\\\"enableSearchStudentLink\\\">\\r\\n                                <a (click)=\\\"searchLinkClick()\\\" class=\\\"smart-form-link\\\">Search Student</a>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isVisibleCOExceptions\\\">\\r\\n                                <header>Chronological Order Exception</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div [innerHTML]=\\\"claimCOExceptionDetails\\\"></div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isVisibleClaimExceptions\\\">\\r\\n                                <header>Exceptions</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div [innerHTML]=\\\"claimExceptionDetails\\\"></div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <header>Beneficiary Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Name: </strong>{{beneficiary?.benFullName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>SSIN: </strong>{{beneficiary?.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Bank Name: </strong>{{beneficiary?.benBankName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Account No: </strong>{{beneficiary?.benBankAccNo}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>IFSC Code: </strong>{{beneficiary?.benBankIfscCode}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Branch: </strong>{{beneficiary?.benBankBranch}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"isOnDeathofBeneficiaryOnRequestofNominee\\\">\\r\\n                                <header>Nominee Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Name: </strong>{{claim?.nomineeName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Address: </strong>{{claim?.nomineeAddress}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Birth: </strong>{{claim?.nomineeDOBString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Contact Number: </strong>{{claim?.nomineeContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Bank Account No: </strong>{{claim?.nomineeBankAccount}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>IFSC Code: </strong>{{claim?.nomineeIFSCCode}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <fieldset disabled=\\\"true\\\">\\r\\n                                <div class=\\\"row\\\" id=\\\"CheckBoxList\\\">\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"PF\\\" [checked]=\\\"claim.providentFundDetails != null\\\"><i></i>PF(Provident Fund)</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Health & Family\\\" [checked]=\\\"claim.healthFamilyDetails != null\\\"><i></i>Health & Family</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Death\\\" [checked]=\\\"claim.deathDetails != null\\\"><i></i>Death</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Disability\\\" [checked]=\\\"claim.disabilityDetails != null\\\"><i></i>Disability</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"Education\\\" [checked]=\\\"claim.educationDetails != null\\\"><i></i>Education</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> PF No.: </strong>{{claim.providentFundDetails.pfno}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Claim Amount:</strong> {{claim.providentFundDetails.claimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Date of Maturity:</strong> {{claim.providentFundDetails.maturityDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Locking Period Up-to:</strong>  {{claim.providentFundDetails.lockingPeriodDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Type of Claim:</strong> {{claim.providentFundDetails.typeOfClaimName}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Reason for Preclosure:</strong> {{claim.providentFundDetails.reasonForPreClosure}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.providentFundDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>PF Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                <header>Education</header>\\r\\n\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.educationDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.educationDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Dependent Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section *ngFor=\\\"let detail of educationList\\\">\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Student: </strong>{{detail?.dependentName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Name of the Institution: </strong> {{detail?.institutionName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Principal/Head Master of the institution:</strong>{{detail?.institutionPrinicipleName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong> Contact Number of the Institution: </strong>{{detail?.institutionContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Registration No./Roll No. of last exam passed: </strong>{{detail?.registrationRollNo}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Year of Examination: </strong>{{detail?.year}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission: </strong>{{detail?.dateofAdmissionString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Last Exam Passed: </strong>{{detail?.lastExamPassedName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Presently Reading: </strong>{{detail?.presentlyReadingName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Eligible Amount :</strong>{{detail?.eligibleAmount}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Educational Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.healthFamilyDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.healthFamilyDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Health & Family Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Type of Claim: </strong>{{claim?.healthFamilyDetails?.typeOfClaimName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Hospital : </strong> {{claim?.healthFamilyDetails?.hospitalName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Hospitalization/OPD:</strong>{{claim?.healthFamilyDetails?.typeOfHospitalizationName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Patient Id: </strong>{{claim?.healthFamilyDetails?.patientId}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of Disease: </strong>{{claim?.healthFamilyDetails?.nameOfTheDiseaseString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.nameOfTheDisease==56\\\">\\r\\n                                                <label><strong> Name of clinical test: </strong>{{claim?.healthFamilyDetails?.nameOfClinicalTestString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Met with an Accident:</strong>{{claim?.healthFamilyDetails?.isAccident}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Clinical Test: </strong>{{claim?.healthFamilyDetails?.costOfClinicalTest}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Medicine: </strong>{{claim?.healthFamilyDetails?.costOfMedicine}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of First Appointment: </strong>{{claim?.healthFamilyDetails?.firstAppointmentDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Claim for: </strong>{{claim?.healthFamilyDetails?.claimForName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                                <label><strong> Cost of Hospitalization: </strong>{{claim?.healthFamilyDetails?.costOfHospitalization}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission to Hospital: </strong>{{claim?.healthFamilyDetails?.admittedDateString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Discharge :</strong>{{claim?.healthFamilyDetails?.dischargeDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.familyMemberId != undefined && claim?.healthFamilyDetails?.familyMemberId !=0\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Family Member Name: </strong>{{claim?.healthFamilyDetails?.familyMemberName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.reasonForDelaySubmission != undefined || claim?.healthFamilyDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.healthFamilyDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <div *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalizationName!='OPD'\\\">\\r\\n                                    <header>Loss of Employment</header>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> From Date: </strong>{{claim?.healthFamilyDetails?.loeFromDateString}}</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>To Date :</strong>{{claim?.healthFamilyDetails?.loeToDateString}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> Amount: </strong>{{claim?.healthFamilyDetails?.loeAmount}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n                                <header>Health & Family Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>View Packages</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                        <td>{{pak.packageName}}</td>\\r\\n                                                        <td>{{pak.packageCode}}</td>\\r\\n                                                        <td>{{pak.ailmentName}}</td>\\r\\n                                                        <td>{{pak.amount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.disabilityDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.disabilityDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Disability Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of release from hospital/Accident: </strong>{{claim?.disabilityDetails?.dateofReleaseString}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Disability : </strong> {{claim?.disabilityDetails?.natureOfDisabilityName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Disability: </strong>{{claim?.disabilityDetails?.detailsOfDisability}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.disabilityDetails?.reasonForDelaySubmission != undefined || claim?.disabilityDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.disabilityDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Disability Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                <header>Death</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.deathDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Approved Amount : </strong> {{claim?.deathDetails?.approvedAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Death Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Death : </strong> {{claim?.deathDetails?.natureofDeathName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Death: </strong>{{claim?.deathDetails?.dateofDeathString}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Death: </strong>{{claim?.deathDetails?.detailsofDeath}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Place of Death: </strong>{{claim?.deathDetails?.placeofDeath}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Death Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <header>Time Line</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <!-- row -->\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" style=\\\"width:98%\\\">\\r\\n                                            <div class=\\\"well well-sm\\\">\\r\\n                                                <div class=\\\"smart-timeline\\\">\\r\\n                                                    <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                        <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                            <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                                <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-time\\\">\\r\\n                                                                <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-content\\\">\\r\\n                                                                <p>\\r\\n                                                                    <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                                </p>\\r\\n                                                                <p>\\r\\n                                                                    {{item.actionComments}}\\r\\n                                                                </p>\\r\\n                                                            </div>\\r\\n                                                        </li>\\r\\n\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"isShowClaimsHistory\\\">\\r\\n                                <header>Claims History</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewHistory()\\\" class=\\\"smart-form-link\\\">View Claims History</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <!--(March-15-2019 ) committed this code based on suman/client request-->\\r\\n                            <!--<div *ngIf=\\\"isInvalidNominee\\\">\\r\\n                                <header>Nominee Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"benficiaryNominee\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th></th>\\r\\n                                                        <th>\\r\\n                                                            Name\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Relationship with applicant\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Gender\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            DOB\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Age (Years)\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Share Allocation\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Bank Name\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Bank Account No.\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            Branch Name\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            IFSC Code\\r\\n                                                        </th>\\r\\n                                                        <th></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngIf=\\\"benficiaryNominee.length==0\\\"><td colspan=\\\"11\\\">No nominee details</td></tr>\\r\\n                                                    <tr *ngFor=\\\"let nomi of mf.data; let i=index;\\\">\\r\\n                                                        <td class=\\\"\\\">\\r\\n                                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"nomi.selected\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"mappingNominee(nomi);\\\">\\r\\n                                                        </td>\\r\\n                                                        <td>{{nomi.benNomineeName}}</td>\\r\\n                                                        <td>{{nomi.benNomineeRelation}}</td>\\r\\n                                                        <td>{{nomi.benNomineeGender}}</td>\\r\\n                                                        <td>{{nomi.dob | date: 'dd/MM/yyyy'}}</td>\\r\\n                                                        <td>{{nomi.benNomineeAge}}</td>\\r\\n                                                        <td>{{nomi.benNomineeShareAllocation}}</td>\\r\\n                                                        <td>{{nomi.benNomineeBankName}}</td>\\r\\n                                                        <td>{{nomi.benNomineeBankAccNo}}</td>\\r\\n                                                        <td>{{nomi.benNomineeBankBranch}}</td>\\r\\n                                                        <td>{{nomi.benNomineeBankIfscCode}}</td>\\r\\n                                                        <td>\\r\\n                                                            <a class=\\\"btn btn-labeled btn-primary\\\" (click)=\\\"editNomineeDetails(nomi)\\\" style=\\\"margin-right:5px;\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i> Edit</a>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot>\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"11\\\"></td>\\r\\n                                                    </tr>\\r\\n                                                </tfoot>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>-->\\r\\n                            <div>\\r\\n                                <header>Hardcopy Received</header>\\r\\n                                <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                    <div *ngFor=\\\"let pf of pfCheckList\\\">\\r\\n                                        <label>\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                   name=\\\"pfOptions\\\" [disabled]=\\\"true\\\"\\r\\n                                                   value=\\\"{{pf.checkListDtlId}}\\\"\\r\\n                                                   [checked]=\\\"pf.checked\\\" />\\r\\n                                            {{pf.name}}\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div *ngFor=\\\"let edu of educationCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\"\\r\\n                                                       name=\\\"eduOptions\\\" [disabled]=\\\"true\\\"\\r\\n                                                       value=\\\"{{edu.checkListDtlId}}\\\"\\r\\n                                                       [checked]=\\\"edu.checked\\\" />\\r\\n                                                {{edu.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div *ngFor=\\\"let health of healthCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\"\\r\\n                                                       name=\\\"healthOptions\\\" [disabled]=\\\"true\\\"\\r\\n                                                       value=\\\"{{health.checkListDtlId}}\\\"\\r\\n                                                       [checked]=\\\"health.checked\\\" />\\r\\n                                                {{health.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div *ngFor=\\\"let dis of disabilityCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"disOptions\\\" value=\\\"{{dis.checkListDtlId}}\\\" [disabled]=\\\"true\\\" [checked]=\\\"dis.checked\\\" />\\r\\n                                                {{dis.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div *ngFor=\\\"let death of deathCheckList\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\"\\r\\n                                                       name=\\\"deathOptions\\\" [disabled]=\\\"true\\\" [checked]=\\\"death.checked\\\" value=\\\"{{death.checkListDtlId}}\\\" />\\r\\n                                                {{death.name}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <label>Approved Amount<span [style.color]=\\\"!approvedAmountValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <input type=\\\"text\\\" name=\\\"approvedAmount\\\" [disabled]=\\\"!isApprovedAmountDisable\\\" [(ngModel)]=\\\"review.approvedAmount\\\" placeholder=\\\"Approved Amount\\\" NumbersOnly>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <label>ALC Comments<span [style.color]=\\\"!alcCommentsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"!isVisable\\\" name=\\\"alcComments\\\" [(ngModel)]=\\\"review.alcComments\\\"\\r\\n                                                  #alcComments=\\\"ngModel\\\"\\r\\n                                                  [ngClass]=\\\"{'invalid-data': alcComments.invalid && (!alcCommentsValid || alcComments.touched), 'valid-data': alcComments.valid && alcCommentsValid}\\\"\\r\\n                                                  required></textarea>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"alcComments.invalid && (!alcCommentsValid ||alcComments.touched)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">ALC Comments is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <label>Exception Comments</label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"exceptionComments\\\" [disabled]=\\\"!isVisable\\\" [(ngModel)]=\\\"review.exceptionComments\\\"></textarea>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <fieldset *ngIf=\\\"isCOExceptionCommentsReq\\\">\\r\\n                                <section>\\r\\n                                    <label>Chronological Order Exception Comments <span [style.color]=\\\"!coexceptionCommentsValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"chronologicOrderExceptionComments\\\" [disabled]=\\\"!isVisable\\\" [(ngModel)]=\\\"review.alcChronologicalOrderComments\\\"\\r\\n                                                  #chronologicOrderExceptionComments=\\\"ngModel\\\"\\r\\n                                                  [ngClass]=\\\"{'invalid-data': chronologicOrderExceptionComments.invalid && (!coexceptionCommentsValid || chronologicOrderExceptionComments.touched), 'valid-data': chronologicOrderExceptionComments.valid && coexceptionCommentsValid}\\\"\\r\\n                                                  required></textarea>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"chronologicOrderExceptionComments.invalid && (!coexceptionCommentsValid ||chronologicOrderExceptionComments.touched)\\\">\\r\\n                                        <span style=\\\"color: red;\\\">Chronological Order Exception Comments is required </span>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-warning\\\" *ngIf=\\\"isInvalidNominee\\\" (click)=\\\"nomineeModal.show()\\\"> Map Nominee</a>\\r\\n                                <a class=\\\"btn btn-warning\\\" *ngIf=\\\"isVisable\\\" (click)=\\\"saveClaim(6,1,'rejected')\\\"> Reject</a>\\r\\n                                <a class=\\\"btn btn-success\\\" *ngIf=\\\"isVisable\\\" (click)=\\\"saveClaim(7,0,'approved')\\\">Approve</a>\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"saveClaim(5,1,'send back')\\\" *ngIf=\\\"isVisable\\\"> Send Back</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n               \\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Attachment Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <app-claimviewdata [claimId]=\\\"claimId\\\" [claimType]=\\\"claimType\\\" [transactionId]=\\\"tranctionId\\\"></app-claimviewdata>\\r\\n                    </div>\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px;min-height:inherit\\\">\\r\\n                        <accordion>\\r\\n                            <accordion-group heading=\\\"{{item.attachmentTypeString}}\\\" *ngFor=\\\"let item of attachmentList\\\">\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]!='pdf'\\\">\\r\\n                                    <img [src]=\\\"'data:image/'+item.fileName.split('.')[item.fileName.split('.').length-1]+';base64,'+ item.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]=='pdf'\\\">\\r\\n                                    <object [attr.data]=\\\"item.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                                </div>\\r\\n                            </accordion-group>\\r\\n                        </accordion>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                        Ok\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<div bsModal #historyModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"historyModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Claims History</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div>\\r\\n                    <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsHistoryData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    Claim Reference No.\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Submission Date\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Amount\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Approved Amount\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Status\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    Submitted By\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of mf.data; let i=index;\\\">\\r\\n                                <td>{{user.claimRefernceNo}}</td>\\r\\n                                <td>{{user.submittedDateString}}</td>\\r\\n                                <td>{{user.claimAmount}}</td>\\r\\n                                <td>{{user.approvedAmount}}</td>\\r\\n                                <td>{{user.statusName}}</td>\\r\\n                                <td>{{user.submittedByName}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"6\\\"></td>\\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"historyModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--<div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"lgModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">{{typeOfMode}} Nominee Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divAddNomineeDetails\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Name <span [style.color]=\\\"!nomineeNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeName\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Name\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeName\\\" maxlength=\\\"100\\\"\\r\\n                                       #nomineeName=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !nomineeNameValid , 'valid-data':nomineeNameValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeNameValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Name is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Relationship with applicant <span [style.color]=\\\"!relationshipValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select class=\\\"form-control select\\\" name=\\\"dependentId\\\" [(ngModel)]=\\\"benNomineenDetails.relationshipID\\\"\\r\\n                                        #dependentId=\\\"ngModel\\\" (change)=\\\"selectRelationship($event,benNomineenDetails)\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': !relationshipValid, 'valid-data': relationshipValid }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose an option</option>\\r\\n                                    <option value=\\\"1\\\">Father</option>\\r\\n                                    <option value=\\\"2\\\">Mother</option>\\r\\n                                    <option value=\\\"3\\\">Spouse</option>\\r\\n                                    <option value=\\\"4\\\">Son</option>\\r\\n                                    <option value=\\\"5\\\">Daughter</option>\\r\\n                                </select>\\r\\n                                <div *ngIf=\\\"!relationshipValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Relationship with applicant is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Gender <span [style.color]=\\\"!genderValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select class=\\\"form-control select\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeGender\\\"\\r\\n                                        #genderId=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': !genderValid ,  'valid-data': genderValid  }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose an option</option>\\r\\n                                    <option value=\\\"Male\\\">Male</option>\\r\\n                                    <option value=\\\"Female\\\">Female</option>\\r\\n                                </select>\\r\\n                                <div *ngIf=\\\"!genderValid \\\">\\r\\n                                    <span style=\\\"color: red;\\\">Gender is required</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Date of Birth <span [style.color]=\\\"!nomineeDOBValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeDOB\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\" benNomineenDetails.dob\\\" #nomineeDOB=\\\"ngModel\\\" [maxDate]=\\\"maxDate\\\"\\r\\n                                       value=\\\"{{ benNomineenDetails.dob | date: 'dd/MM/yyyy' }}\\\" readonly\\r\\n                                       [ngClass]=\\\"{'invalid-data':!nomineeDOBValid, 'valid-data': nomineeDOBValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeDOBValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Date of Birth is required </span>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Share Allocation  <span [style.color]=\\\"!nomineeShareValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"number\\\" name=\\\"nomineeShare\\\" class=\\\"form-control\\\" placeholder=\\\"Share Allocation\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeShareAllocation\\\" maxlength=\\\"3\\\" max=\\\"100\\\" min=\\\"1\\\"\\r\\n                                       #nomineeShare=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !nomineeShareValid , 'valid-data': nomineeShareValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeShareValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Share Allocation is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Bank Name <span [style.color]=\\\"!nomineeBankNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeBankName\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Bank Name\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankName\\\"\\r\\n                                       #nomineeBankName=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': !nomineeBankNameValid, 'valid-data':nomineeBankNameValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeBankNameValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Bank Name is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Nominee Bank Account <span [style.color]=\\\"!nomineeBankAccountValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeBankAccount\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Bank Account \\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankAccNo\\\"\\r\\n                                       minlength=\\\"9\\\" maxlength=\\\"18\\\" NumbersOnly #nomineeBankAccount=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !nomineeBankAccountValid, 'valid-data': nomineeBankAccountValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeBankAccountValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Nominee Bank Account is required </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"nomineeBankAccount.invalid && (nomineeBankAccount.errors.minlength)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Invalid Bank Account Number </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Branch Name <span [style.color]=\\\"!nomineeBranchNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeBankBranch\\\" class=\\\"form-control\\\" placeholder=\\\"Branch Name\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankBranch\\\"\\r\\n                                       #nomineeBankBranch=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': !nomineeBranchNameValid , 'valid-data': nomineeBranchNameValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeBranchNameValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Branch Name is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">IFSC Code <span [style.color]=\\\"!nomineeIFSCCodeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"nomineeIFSCCode\\\" class=\\\"form-control\\\" placeholder=\\\"IFSC Code\\\" [(ngModel)]=\\\"benNomineenDetails.benNomineeBankIfscCode\\\"\\r\\n                                       maxlength=\\\"11\\\" #nomineeIFSCCode=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':!nomineeIFSCCodeValid, 'valid-data': nomineeIFSCCodeValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!nomineeIFSCCodeValid \\\">\\r\\n                                    <span style=\\\"color: red;\\\">IFSC Code is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"lgModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addNomineeDetails(benNomineenDetails)\\\">\\r\\n                    {{typeOfMode}}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>-->\\r\\n<div bsModal #nomineeModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"nomineeModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">{{typeOfMode}} Nominee Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset>\\r\\n                    <section>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <table class=\\\"table table-striped table-bordered\\\"  width=\\\"100%\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th></th>\\r\\n                                        <th>\\r\\n                                            Name\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Relationship with applicant\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Gender\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            DOB\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Share Allocation\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Bank Name\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Bank Account No.\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            Branch Name\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            IFSC Code\\r\\n                                        </th>\\r\\n                                        <th></th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let nomi of benficiaryNominee; let i=index;\\\">\\r\\n                                        <td class=\\\"\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [checked]=\\\"nomi.selected\\\" [(ngModel)]=\\\"nomi.selected\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"selectNominee(nomi);\\\">\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <section *ngIf=\\\"!nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <span>{{nomi.benNomineeName}}</span>\\r\\n                                                </label>\\r\\n                                            </section>\\r\\n                                            <section *ngIf=\\\"nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <!--<input type=\\\"text\\\" name=\\\"{{nomi.benNomineeName}}\\\" [(ngModel)]=\\\"nomi.benNomineeName\\\" maxlength=\\\"100\\\"\\r\\n                                                    required>-->\\r\\n                                                    <input type=\\\"text\\\" name=\\\"{{nomi.benNomineeName}}\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Name\\\" [(ngModel)]=\\\"nomi.benNomineeName\\\" maxlength=\\\"100\\\"\\r\\n                                                           [ngClass]=\\\"{'invalid-data': !nomineeNameValid , 'valid-data':nomineeNameValid}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!nomineeNameValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Nominee Name is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <span>{{nomi.benNomineeRelation}}</span>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <span>{{nomi.benNomineeGender}}</span>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <section *ngIf=\\\"!nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    {{nomi.dob | date: 'dd/MM/yyyy'}}\\r\\n                                                </label>\\r\\n                                            </section>\\r\\n                                            <section *ngIf=\\\"nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"{{nomi.dob}}\\\" autocomplete=\\\"off\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                           placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"nomi.dob\\\" [maxDate]=\\\"maxDate\\\"\\r\\n                                                           value=\\\"{{ nomi.dob | date: 'dd/MM/yyyy' }}\\\" readonly\\r\\n                                                           [ngClass]=\\\"{'invalid-data':!nomineeDOBValid, 'valid-data': nomineeDOBValid}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!nomineeDOBValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Nominee Date of Birth is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <span>{{nomi.benNomineeShareAllocation}}</span>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <section *ngIf=\\\"!nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    {{nomi.benNomineeBankName}}\\r\\n                                                </label>\\r\\n                                            </section>\\r\\n                                            <section *ngIf=\\\"nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"{{nomi.benNomineeBankName}}\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Bank Name\\\" [(ngModel)]=\\\"nomi.benNomineeBankName\\\"\\r\\n                                                           [ngClass]=\\\"{'invalid-data': !nomineeBankNameValid, 'valid-data':nomineeBankNameValid}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!nomineeBankNameValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Nominee Bank Name is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <section *ngIf=\\\"!nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    {{nomi.benNomineeBankAccNo}}\\r\\n                                                </label>\\r\\n                                            </section>\\r\\n                                            <section *ngIf=\\\"nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"{{nomi.benNomineeBankAccNo}}\\\" class=\\\"form-control\\\" placeholder=\\\"Nominee Bank Account \\\" [(ngModel)]=\\\"nomi.benNomineeBankAccNo\\\"\\r\\n                                                           minlength=\\\"9\\\" maxlength=\\\"18\\\" NumbersOnly \\r\\n                                                           [ngClass]=\\\"{'invalid-data': !nomineeBankAccountValid, 'valid-data': nomineeBankAccountValid}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!nomineeBankAccountValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Nominee Bank Account is required </span>\\r\\n                                                </div>\\r\\n                                                <div *ngIf=\\\"!nomineeBankAccountMinlengthValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Invalid Bank Account Number </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <section *ngIf=\\\"!nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    {{nomi.benNomineeBankBranch}}\\r\\n                                                </label>\\r\\n                                            </section>\\r\\n                                            <section *ngIf=\\\"nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"{{nomi.benNomineeBankBranch}}\\\" class=\\\"form-control\\\" placeholder=\\\"Branch Name\\\" [(ngModel)]=\\\"nomi.benNomineeBankBranch\\\"\\r\\n                                                            [ngClass]=\\\"{'invalid-data': !nomineeBranchNameValid , 'valid-data': nomineeBranchNameValid}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!nomineeBranchNameValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Branch Name is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <section *ngIf=\\\"!nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    {{nomi.benNomineeBankIfscCode}}\\r\\n                                                </label>\\r\\n                                            </section>\\r\\n                                            <section *ngIf=\\\"nomi.isEdit\\\">\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"{{nomi.benNomineeBankIfscCode}}\\\" class=\\\"form-control\\\" placeholder=\\\"IFSC Code\\\" [(ngModel)]=\\\"nomi.benNomineeBankIfscCode\\\"\\r\\n                                                           maxlength=\\\"11\\\" [ngClass]=\\\"{'invalid-data':!nomineeIFSCCodeValid, 'valid-data': nomineeIFSCCodeValid}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!nomineeIFSCCodeValid \\\">\\r\\n                                                    <span style=\\\"color: red;\\\">IFSC Code is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <a *ngIf=\\\"!nomi.isEdit\\\" (click)=\\\"editFieldValue(i,nomi)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                            <a *ngIf=\\\"nomi.isEdit\\\" (click)=\\\"saveFieldValue(i,nomi)\\\" title=\\\"Save\\\" class=\\\"txt-color-blue\\\"><i class=\\\"glyphicon glyphicon-save\\\"></i></a>\\r\\n                                            <a *ngIf=\\\"nomi.isEdit\\\" (click)=\\\"cancelFieldValue(i,nomi)\\\" title=\\\"Cancel\\\" class=\\\"txt-color-blue\\\"><i class=\\\"glyphicon glyphicon-adjust\\\"></i></a>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </section>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"nomineeModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"mapNominee()\\\">\\r\\n                    Map Nominee\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../../claim/services/claim-data.service';\r\nimport { ClaimView } from '../../claim/models/claimview.model';\r\nimport { EducationHdrModel, EducationDetailModel } from '../../claim/models/education.model';\r\nimport { Beneficiary } from '../../claim/models/ben.model';\r\nimport { ClaimConstants, WorkflowTrans, PFTypeOfClaim, ClaimCheckList, EntryPoint, ReasonForApplyAgent } from '../../claim/pipes/constnts.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { ReviewModel } from '../../models/review.model';\r\nimport { UserService } from '../../UserService';\r\nimport { flatten } from '@angular/core/src/render3/util';\r\nimport { AttachmentModel } from '../../claim/models/attachment.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\nimport { ClaimExceptionDetailsModel } from '../../models/claimExceptionDetails';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { CheckListDetails } from '../../models/CheckListDetails';\r\nimport { BenNominee } from '../../claim/models/ben.nominee.model';\r\nimport { forEach } from '../../../../node_modules/typescript-collections/dist/lib/arrays';\r\n\r\n@Component({\r\n    selector: 'app-reviewclaims',\r\n    templateUrl: './reviewclaims.component.html',\r\n    styleUrls: ['./reviewclaims.component.css']\r\n})\r\nexport class ReviewclaimsComponent implements OnInit, OnDestroy {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('attachModal') public attachModel: ModalDirective;\r\n    @ViewChild('historyModal') public historyModal: ModalDirective;\r\n    @ViewChild('lgModal') public lgModal: ModalDirective;\r\n    @ViewChild('nomineeModal') public nomineeModal: ModalDirective;\r\n\r\n    public claimsHistoryData: Claims[] = [];\r\n    private route$: Subscription;\r\n    private claimId: number;\r\n    private claimType: number;\r\n    private tranctionId: any;\r\n    private workflowId: any;\r\n    approvedAmountValid: boolean = true;\r\n    alcCommentsValid: boolean = true;\r\n    claim: ClaimView = {} as ClaimView;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    successMessage: string;\r\n    review: ReviewModel = {} as ReviewModel;\r\n    isVisable: boolean = true;\r\n    isApprovedAmountDisable: boolean = true;\r\n    mode: string;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    viewMetWithAnAccident: boolean = false;\r\n    claimExceptionDetails: string = \"\";\r\n    isVisibleClaimExceptions: boolean = false;\r\n    claimAmount: any = 0;\r\n    expection: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    isPrematureClaim: boolean = false;\r\n    isShowClaimsHistory: boolean = false;\r\n    healthCheckList: CheckListDetails[];\r\n    pfCheckList: CheckListDetails[];\r\n    deathCheckList: CheckListDetails[];\r\n    disabilityCheckList: CheckListDetails[];\r\n    educationCheckList: CheckListDetails[];\r\n    isInvalidNominee: boolean = false;\r\n    isOnDeathofBeneficiaryOnRequestofNominee: boolean = false;\r\n    chronologicalOrder: number = 0;\r\n    isCOExceptionCommentsReq: boolean = false;\r\n    coexceptionCommentsValid: boolean = true;\r\n    claimCOExceptionDetails: string = \"\";\r\n    isVisibleCOExceptions: boolean = false;\r\n    enableSearchStudentLink: boolean = true;\r\n    //Validation Nominee variables\r\n    nomineeNameValid: boolean = true;\r\n    relationshipValid: boolean = true;\r\n    genderValid: boolean = true;\r\n    nomineeDOBValid: boolean = true;\r\n    nomineeShareValid: boolean = true;\r\n    nomineeBankNameValid: boolean = true;\r\n    nomineeBankAccountValid: boolean = true;\r\n    nomineeBankAccountMinlengthValid: boolean = true;\r\n    nomineeBranchNameValid: boolean = true;\r\n    nomineeIFSCCodeValid: boolean = true;\r\n    benficiaryNominee: Array<BenNominee> = [];\r\n    benficiaryNomineeDetails: Array<BenNominee> = [];\r\n    benNomineenDetails: BenNominee = {} as BenNominee;\r\n    rowIndex = -1;\r\n    dobNominee: any;\r\n    typeOfMode: string;\r\n    successValue: string = \"review\";\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService, private sanitizer: DomSanitizer) {\r\n\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                debugger;\r\n                this.claimId = params[\"claimId\"];\r\n                this.claimType = ClaimConstants[params[\"claimType\"]];\r\n                this.tranctionId = params[\"transactionId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.claimAmount = params[\"claimAmount\"];\r\n                if (this.mode != \"pending\") {\r\n                    this.isVisable = this.isApprovedAmountDisable = false;\r\n                    this.enableSearchStudentLink = false;\r\n                }\r\n                else {\r\n                    this.isShowClaimsHistory = true;\r\n                    this.enableSearchStudentLink = true;\r\n                    if (this.claimType != ClaimConstants.HealthFamily && this.claimType != ClaimConstants.PF) {\r\n                        this.isApprovedAmountDisable = false;\r\n                    }\r\n                }\r\n                this.workflowId = params[\"workflowId\"];\r\n                this.chronologicalOrder = params[\"chronologicalOrder\"];\r\n                if (this.chronologicalOrder > 0) {\r\n                    alert(\"You are not following the chronological order\");\r\n                    this.isCOExceptionCommentsReq = true;\r\n                }\r\n            }\r\n        );\r\n        this.getPackages();\r\n        this.getHealthCheckList();\r\n        this.getEducationCheckList();\r\n        this.getDisabilityCheckList();\r\n        this.getDeathCheckList();\r\n        this.getPFCheckList();\r\n        this.getClaimDetailsByClaimId(this.claimId, this.tranctionId, this.claimType);\r\n       \r\n    }\r\n\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n            });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.claim = data;\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.mode == \"pending\") {\r\n                        this.review.approvedAmount = this.claim.educationDetails.claimAmount;\r\n                    }\r\n                    else\r\n                        this.review.approvedAmount = this.claim.educationDetails.approvedAmount;\r\n\r\n                    this.review.alcComments = this.claim.educationDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.educationDetails.exceptionComments;\r\n                    //educationClaimExceptionDetails\r\n                    if (this.claim.educationDetails.educationClaimExceptionDetails != null) { \r\n                        if (this.claim.educationDetails.educationClaimExceptionDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.educationDetails.educationClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.educationDetails.educationClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //Chronological Order Exception Details\r\n                    if (this.claim.educationDetails.inspChronologicalOrderComments != null) {\r\n                        this.claimCOExceptionDetails = this.claim.educationDetails.inspChronologicalOrderComments;\r\n                        this.isVisibleCOExceptions = true;\r\n                    }\r\n                    //check list\r\n                    if (this.claim.educationDetails.educationClaimCheckListDetails != null) {\r\n                        if(this.claim.educationDetails.educationClaimCheckListDetails.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationClaimCheckListDetails.length; i++) {\r\n                            if (this.educationCheckList.length > 0) {\r\n                                for (var j = 0; j < this.educationCheckList.length; j++) {\r\n                                    if (this.claim.educationDetails.educationClaimCheckListDetails[i].checkListDtlId == this.educationCheckList[j].checkListDtlId) {\r\n                                        this.educationCheckList[j].checked = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n\r\n                    }\r\n                    let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                    }\r\n                    this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                    this.review.approvedAmount = this.claim.healthFamilyDetails.approvedAmount;\r\n                    this.review.alcComments = this.claim.healthFamilyDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.healthFamilyDetails.exceptionComments;\r\n                    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                        if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                    }\r\n                    //healthClaimExceptionDetails\r\n                    if (this.claim.healthFamilyDetails.healthClaimExceptionDetails != null) {\r\n                        if (this.claim.healthFamilyDetails.healthClaimExceptionDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.healthFamilyDetails.healthClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.healthFamilyDetails.healthClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //Chronological Order Exception Details\r\n                    if (this.claim.healthFamilyDetails.inspChronologicalOrderComments != null) {\r\n                        this.claimCOExceptionDetails = this.claim.healthFamilyDetails.inspChronologicalOrderComments;\r\n                        this.isVisibleCOExceptions = true;\r\n                    }\r\n                    //check list\r\n                    if (this.claim.healthFamilyDetails.healthClaimCheckListDetails != null) {\r\n                        if(this.claim.healthFamilyDetails.healthClaimCheckListDetails.length > 0) {\r\n                        for (var i = 0; i < this.claim.healthFamilyDetails.healthClaimCheckListDetails.length; i++) {\r\n                            if (this.healthCheckList.length > 0) {\r\n                                for (var j = 0; j < this.healthCheckList.length; j++) {\r\n                                    if (this.claim.healthFamilyDetails.healthClaimCheckListDetails[i].checkListDtlId == this.healthCheckList[j].checkListDtlId) {\r\n                                        this.healthCheckList[j].checked = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.disabilityDetails != null) {\r\n                    for (var j = 0; j < this.claim.disabilityDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.disabilityDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    if (this.mode == \"pending\") {\r\n                        this.review.approvedAmount = this.claim.disabilityDetails.claimAmount;\r\n                    }\r\n                    else\r\n                        this.review.approvedAmount = this.claim.disabilityDetails.approvedAmount;\r\n\r\n                    this.review.alcComments = this.claim.disabilityDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.disabilityDetails.exceptionComments;\r\n                    //disabilityClaimExceptionDetails\r\n                    if (this.claim.disabilityDetails.disabilityClaimExceptionDetails != null) {\r\n                        if (this.claim.disabilityDetails.disabilityClaimExceptionDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.disabilityDetails.disabilityClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.disabilityDetails.disabilityClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //Chronological Order Exception Details\r\n                    if (this.claim.disabilityDetails.inspChronologicalOrderComments != null) {\r\n                        this.claimCOExceptionDetails = this.claim.disabilityDetails.inspChronologicalOrderComments;\r\n                        this.isVisibleCOExceptions = true;\r\n                    }\r\n                    //check list\r\n                    if (this.claim.disabilityDetails.disabilityClaimCheckListDetails != null) {\r\n                        if(this.claim.disabilityDetails.disabilityClaimCheckListDetails.length > 0) {\r\n                        for (var i = 0; i < this.claim.disabilityDetails.disabilityClaimCheckListDetails.length; i++) {\r\n                            if (this.disabilityCheckList.length > 0) {\r\n                                for (var j = 0; j < this.disabilityCheckList.length; j++) {\r\n                                    if (this.claim.disabilityDetails.disabilityClaimCheckListDetails[i].checkListDtlId == this.disabilityCheckList[j].checkListDtlId) {\r\n                                        this.disabilityCheckList[j].checked = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.deathDetails != null) {\r\n                    for (var j = 0; j < this.claim.deathDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.deathDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    if (this.mode == \"pending\") {\r\n                        this.review.approvedAmount = this.claim.deathDetails.claimAmount;\r\n                    }\r\n                    else\r\n                        this.review.approvedAmount = this.claim.deathDetails.approvedAmount;\r\n\r\n                    this.review.alcComments = this.claim.deathDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.deathDetails.exceptionComments;\r\n                    //deathClaimExceptionDetails\r\n                    if (this.claim.deathDetails.deathClaimExceptionDetails != null) {\r\n                        if (this.claim.deathDetails.deathClaimExceptionDetails.length > 0) {\r\n                            debugger;\r\n                            for (var i = 0; i < this.claim.deathDetails.deathClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.deathDetails.deathClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //Chronological Order Exception Details\r\n                    if (this.claim.deathDetails.inspChronologicalOrderComments != null) {\r\n                        this.claimCOExceptionDetails = this.claim.deathDetails.inspChronologicalOrderComments;\r\n                        this.isVisibleCOExceptions = true;\r\n                    }\r\n                    //check list\r\n                    if (this.claim.deathDetails.deathClaimCheckListDetails != null) {\r\n                        if(this.claim.deathDetails.deathClaimCheckListDetails.length > 0) {\r\n                            for (var i = 0; i < this.claim.deathDetails.deathClaimCheckListDetails.length; i++) {\r\n                                if (this.deathCheckList.length > 0) {\r\n                                    for (var j = 0; j < this.deathCheckList.length; j++) {\r\n                                        if (this.claim.deathDetails.deathClaimCheckListDetails[i].checkListDtlId == this.deathCheckList[j].checkListDtlId) {\r\n                                            this.deathCheckList[j].checked = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.providentFundDetails != null) {\r\n                    debugger;\r\n                    if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                        this.isPrematureClaim = true;\r\n                    }\r\n                    this.review.approvedAmount = this.claim.providentFundDetails.approvedAmount;\r\n                    this.review.alcComments = this.claim.providentFundDetails.alcComments;\r\n                    this.review.exceptionComments = this.claim.providentFundDetails.exceptionComments;\r\n                    //pfClaimExceptionDetails\r\n                    if (this.claim.providentFundDetails.pfClaimExceptionDetails != null) {\r\n                        if (this.claim.providentFundDetails.pfClaimExceptionDetails.length > 0) {\r\n                            debugger;\r\n                            for (var i = 0; i < this.claim.providentFundDetails.pfClaimExceptionDetails.length; i++) {\r\n                                this.claimExceptionDetails = this.claimExceptionDetails.concat(this.claim.providentFundDetails.pfClaimExceptionDetails[i].exceptionText + \"<br/>  <br/>\");\r\n\r\n                            }\r\n\r\n                            this.isVisibleClaimExceptions = true;\r\n                        }\r\n                    }\r\n                    //Chronological Order Exception Details\r\n                    if (this.claim.providentFundDetails.inspChronologicalOrderComments != null) {\r\n                        this.claimCOExceptionDetails = this.claim.providentFundDetails.inspChronologicalOrderComments;\r\n                        this.isVisibleCOExceptions = true;\r\n                    }\r\n                    //check list\r\n                    if (this.claim.providentFundDetails.pfClaimCheckListDetails != null) {\r\n                        if(this.claim.providentFundDetails.pfClaimCheckListDetails.length > 0) {\r\n                        for (var i = 0; i < this.claim.providentFundDetails.pfClaimCheckListDetails.length; i++) {\r\n                            if (this.pfCheckList.length > 0) {\r\n                                for (var j = 0; j < this.pfCheckList.length; j++) {\r\n                                    if (this.claim.providentFundDetails.pfClaimCheckListDetails[i].checkListDtlId == this.pfCheckList[j].checkListDtlId) {\r\n                                        this.pfCheckList[j].checked = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        if (this.claim.attachment[k].fileName != null) {\r\n                            let attachment = this.claim.attachment[k];\r\n                            if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                            }\r\n                            this.claim.attachment[k] = attachment;\r\n                            this.attachmentList.push(attachment);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if (this.claim.entryPoint == EntryPoint.Nominee || (this.claim.entryPoint == EntryPoint.Agent && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)\r\n                    || (this.claim.entryPoint == EntryPoint.CA && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee) || (this.claim.entryPoint == EntryPoint.Lwfc && this.claim.reasonForApply == ReasonForApplyAgent.OnDeathofBeneficiaryOnRequestofNominee)) {\r\n                    this.isOnDeathofBeneficiaryOnRequestofNominee = true;\r\n                }\r\n                this.getBenBasicDetails(this.claim.benSno);\r\n                console.log(this.claim);\r\n\r\n                this.getClaimTrackDetailsByClaimId(tranctionId, claimType, this.workflowId);\r\n                if (this.isShowClaimsHistory)\r\n                    this.getBeneficiaryClaimsHistory(this.claimId, this.claim.benSno, claimType);\r\n\r\n\r\n                if (this.claim.entryPoint == EntryPoint.Nominee) {\r\n                    //this.showSendBack = false;\r\n                    if (this.mode == \"pending\") {\r\n                        //(March-15-2019 ) committed this code based on suman/client request\r\n                        if (this.claim.nomineeId == null || this.claim.nomineeId == 0) {\r\n                            this.isInvalidNominee = true;\r\n                            this.getBeneficiaryNomineeDetails(this.claim.benSno);\r\n                            this.rowIndex = this.rowIndex + this.benficiaryNominee.length;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    \r\n    getBenBasicDetails(benNo: any) {\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsById(benNo)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n                console.log(this.beneficiary);\r\n            });\r\n    }\r\n    getClaimTrackDetailsByClaimId(transactionId: any, tranctionType: any, wfId: any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType, wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n            });\r\n    }\r\n\r\n    viewAttachment() {\r\n        this.attachModel.show();\r\n    }\r\n    Getimage(imageData: AttachmentModel) {\r\n        const data = imageData.fileName.split('.')[imageData.fileName.split('.').length - 1];\r\n        if (data.toLowerCase() == \"pdf\") {\r\n            console.log(imageData.stringContent);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    getUrlOfPdf(imageData?: AttachmentModel) {\r\n        this.dataService\r\n            .getAttachment()\r\n            .then((data: any) => {\r\n                var url = URL.createObjectURL(data);\r\n                console.log(url);\r\n            });\r\n\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        if(this.successValue == \"review\")\r\n            this.router.navigate(['alc/pendingapprovalclaims'], { skipLocationChange: false });\r\n    }\r\n    saveClaim(status: number, type: any, mode: string) {\r\n        if (this.validateClaim(type)) {\r\n            this.review.benDeathStatus = false;\r\n            this.review.statusId = status;\r\n            this.review.transactionId = this.tranctionId;\r\n            this.review.claimType = this.claimType;\r\n            this.review.wfId = WorkflowTrans.workflow;\r\n            this.review.userId = this.userService.user.deptUserid;\r\n            //-----------------\r\n            this.expection = [];\r\n            if (this.mode == \"pending\") {\r\n                //if (this.chronologicalOrder > 0) {\r\n                //    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                //    exp.exceptionText = this.review.alcChronologicalOrderComments; // \"You are not following the chronological order\";\r\n                //    exp.exceptionCapturedDate = new Date();\r\n                //    exp.raisedBy = this.userService.user.deptUserid;\r\n\r\n                //    this.expection.push(exp);\r\n                //}\r\n                if (this.claimAmount > 0) {\r\n                    if (this.review.approvedAmount != undefined || this.review.approvedAmount != 0) {\r\n                        ////Exception Rule - 6\tWhen Claimamount>Approved Amount\r\n                        //if (this.claimAmount > this.review.approvedAmount) {\r\n\r\n                        //    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                        //    exp.exceptionText = \"Approved Amount lessthan Claim Amount\";\r\n                        //    exp.exceptionCapturedDate = new Date();\r\n                        //    exp.raisedBy = this.userService.user.deptUserid;\r\n\r\n                        //    this.expection.push(exp);\r\n                        //}\r\n\r\n                        //Exception Rule - 7\tWhen Claimamount<Approved Amount\r\n                        if (this.claimAmount < this.review.approvedAmount) {\r\n\r\n                            const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                            exp.exceptionText = \"Approved amount greater than claim amount\";\r\n                            exp.exceptionCapturedDate = new Date();\r\n                            exp.raisedBy = this.userService.user.deptUserid;\r\n\r\n                            this.expection.push(exp);\r\n                        }\r\n\r\n                    }\r\n                }\r\n                this.review.claimExceptionDetails = this.expection;\r\n\r\n                if (this.isInvalidNominee) {\r\n                debugger;\r\n                this.review.benficiaryNomineeDetails = this.benficiaryNominee;\r\n            }\r\n            }\r\n            if (mode == \"approved\") {\r\n                debugger;\r\n                if (this.claim.deathDetails != null) { this.review.benDeathStatus = true; }\r\n            }\r\n            //-----------------\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .updateComments(this.review)\r\n                    .then((data: any) => {\r\n                        this.successValue = \"review\";\r\n                        this.successMessage = \"Claim \" + mode + \" successfully\";\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    cancelclick() {\r\n        if (this.mode == \"pending\") {\r\n            this.router.navigate(['alc/pendingapprovalclaims']);\r\n        }\r\n        else if (this.mode == \"sendback\") {\r\n            this.router.navigate(['alc/sendbackclaims']);\r\n\r\n        }\r\n        else if (this.mode == \"reject\") {\r\n            this.router.navigate(['alc/rejectclaims']);\r\n\r\n        }\r\n        else if (this.mode == \"approve\") {\r\n            this.router.navigate(['alc/approvalclaims']);\r\n\r\n        }\r\n        else if (this.mode == \"claimstatus\") {\r\n            this.router.navigate(['alc/claimstatus']);\r\n\r\n        }\r\n        else if (this.mode == \"search\") {\r\n            this.router.navigate(['alc/searchstudent'], { skipLocationChange: true });\r\n\r\n        }\r\n    }\r\n\r\n    validateClaim(type: any) {\r\n        let isValid = true;\r\n        let sharePercentage = 0;\r\n        let count = 0;\r\n        this.alcCommentsValid = this.approvedAmountValid = true;\r\n        if (type == 0) {\r\n            if (this.review.approvedAmount == undefined || this.review.approvedAmount == 0) { this.approvedAmountValid = isValid = false; }\r\n            //(March-15-2019 )ALC should reject if the nominee name is still not matching\r\n            //if (this.claim.entryPoint == EntryPoint.Nominee) {\r\n            //    if (this.claim.nomineeId == null || this.claim.nomineeId == 0) {\r\n            //        this.isInvalidNominee = true;\r\n            //        alert(\"Invalid  Nominee\");\r\n            //        isValid = false;\r\n            //    }\r\n            //}\r\n        }\r\n\r\n        if (this.review.alcComments == undefined || this.review.alcComments == \"\") { this.alcCommentsValid = isValid = false; }\r\n        if ((this.review.alcChronologicalOrderComments == undefined || this.review.alcChronologicalOrderComments == \"\") && this.isCOExceptionCommentsReq) { this.coexceptionCommentsValid = isValid = false; }\r\n\r\n        //Nominee not Exist / mismatch // (March-15-2019 ) committed this code based on suman/client request\r\n        if (this.isInvalidNominee) {\r\n            debugger;\r\n            if (this.benficiaryNominee.length > 0) {\r\n                for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n                    sharePercentage += parseInt(this.benficiaryNominee[i].benNomineeShareAllocation);\r\n                }\r\n                if (sharePercentage != 100) {\r\n                    alert(\"Share Allocation Accepts only 100%\");\r\n                    isValid = false;\r\n                }\r\n                for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n                    if (this.benficiaryNominee[i].isMappingNominee) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count != 1) {\r\n                    alert(\"Please select one nominee to mapping \");\r\n                    isValid = false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"Please map one nominee to this claim \");\r\n                isValid = false;\r\n            }\r\n        }\r\n        return isValid;\r\n\r\n    }\r\n\r\n    getApprovalPremission(id: any, type: any) {\r\n        this.dataService\r\n            .GetApprovalPremission(id, type)\r\n            .subscribe((data: any) => {\r\n                console.log(data);\r\n            });\r\n    }\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n    viewHistory() {\r\n        this.historyModal.show();\r\n    }\r\n    getBeneficiaryClaimsHistory(claimId: any, benSNo: any, tranctionType: any) {\r\n        debugger;\r\n        this.dataService\r\n            .getBeneficiaryClaimsHistory(claimId, benSNo, tranctionType)\r\n            .subscribe((data: any) => {\r\n                this.claimsHistoryData = data;\r\n            });\r\n    }\r\n\r\n    getHealthCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.HealthFamilyCheckList)\r\n            .subscribe((data: any) => {\r\n                this.healthCheckList = data;\r\n            });\r\n    }\r\n    getEducationCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.EducationCheckList)\r\n            .subscribe((data: any) => {\r\n                this.educationCheckList = data;\r\n            });\r\n    }\r\n    getDisabilityCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.DisabilityCheckList)\r\n            .subscribe((data: any) => {\r\n                this.disabilityCheckList = data;\r\n            });\r\n    }\r\n    getDeathCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.DeathCheckList)\r\n            .subscribe((data: any) => {\r\n                this.deathCheckList = data;\r\n            });\r\n    }\r\n    getPFCheckList() {\r\n        this.dataService\r\n            .getClaimCheckListDetails(ClaimCheckList.PFCheckList)\r\n            .subscribe((data: any) => {\r\n                this.pfCheckList = data;\r\n            });\r\n    }\r\n    searchLinkClick() {\r\n        window.open('/inspector/searchstudent', 'searchStudent', 'directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar = 0, scrollbars = no, resizable = no, width = 800, height = 450');\r\n    }\r\n    getBeneficiaryNomineeDetails(id: any) {\r\n\r\n        this.dataService\r\n            .getBeneficiaryNomineeDetails(id)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.benficiaryNominee = data;\r\n                //this.benficiaryNomineeDetails = this.benficiaryNominee.slice(0, this.benficiaryNominee.length-1);\r\n            });\r\n\r\n    }\r\n    selectNominee(item) {\r\n        debugger;\r\n        if (!item.isMappingNominee)\r\n            return item.isMappingNominee = true;\r\n        else\r\n            return item.isMappingNominee = false;\r\n\r\n        \r\n    }\r\n    //editNomineeDetails(details: BenNominee) {\r\n    //    debugger;\r\n    //    this.typeOfMode = \"Edit\";\r\n    //    this.benNomineenDetails = details;\r\n    //    this.rowIndex = this.benficiaryNominee.indexOf(details);\r\n    //    this.lgModal.show();\r\n    //}\r\n    //addNomineeDetails(details: BenNominee) {\r\n    //    debugger;\r\n    //    if (this.validateNomineeDetails(details)) {\r\n    //        if (this.benficiaryNominee.findIndex(x => x.benNomineeName == details.benNomineeName) == -1 && this.rowIndex == -1) {\r\n    //            details.createdBy = this.userService.user.deptUserid;\r\n    //            details.createdDate = new Date();\r\n    //            // details.dob = new Date(this.dobNominee);\r\n    //            this.benficiaryNominee.push(details);\r\n    //            this.lgModal.hide();\r\n    //        }\r\n    //        else if (this.benficiaryNominee.findIndex(x => x.benNomineeName == details.benNomineeName) != -1 && this.rowIndex == -1) {\r\n    //            alert(\"already added please enter another nominee details\"); return;\r\n    //        }\r\n    //        else {\r\n    //            if (this.rowIndex != -1) {\r\n    //                //this.benficiaryNominee.splice(this.rowIndex, 1);\r\n    //                if (this.benficiaryNominee.findIndex(x => x.benNomineeName == details.benNomineeName) == this.rowIndex) {\r\n    //                    //this.benficiaryNominee.push(details);\r\n    //                    this.rowIndex = -1;\r\n    //                    this.lgModal.hide();\r\n    //                }\r\n    //            }\r\n    //        }\r\n    //        this.benNomineenDetails = {} as BenNominee;\r\n    //    }\r\n    //}\r\n    validateNomineeDetails(details: BenNominee): boolean {\r\n        let isValid = true;\r\n        this.nomineeNameValid = this.relationshipValid = this.genderValid = this.nomineeDOBValid = this.nomineeShareValid = this.nomineeBankNameValid = this.nomineeBankAccountValid = true;\r\n        this.nomineeBranchNameValid = this.nomineeIFSCCodeValid = true;\r\n        if (details.benNomineeName == undefined || details.benNomineeName == \"\") { this.nomineeNameValid = isValid = false; }\r\n        //if (details.relationshipID == undefined || details.relationshipID <= 0) { this.relationshipValid = isValid = false; }\r\n        //if (details.benNomineeGender == undefined || details.benNomineeGender == \"\") { this.genderValid = isValid = false; }\r\n        if (details.dob == undefined) { this.nomineeDOBValid = isValid = false; }\r\n        //if (details.benNomineeShareAllocation == undefined || details.benNomineeShareAllocation == \"\") { this.nomineeShareValid = isValid = false; }\r\n        if (details.benNomineeBankName == undefined || details.benNomineeBankName == \"\") { this.nomineeBankNameValid = isValid = false; }\r\n        if (details.benNomineeBankAccNo == undefined || details.benNomineeBankAccNo == \"\")\r\n            { this.nomineeBankAccountValid = isValid = false; }\r\n        else if (details.benNomineeBankAccNo.length < 9)\r\n            { this.nomineeBankAccountMinlengthValid = isValid = false; }\r\n        if (details.benNomineeBankBranch == undefined || details.benNomineeBankBranch == \"\") { this.nomineeBranchNameValid = isValid = false; }\r\n        if (details.benNomineeBankIfscCode == undefined || details.benNomineeBankIfscCode == \"\") { this.nomineeIFSCCodeValid = isValid = false; }\r\n\r\n        return isValid;\r\n    }\r\n    editFieldValue(index, field: BenNominee) {\r\n        debugger;\r\n        field.isEdit = true;\r\n        if (field.dob != null && field.dob != undefined)\r\n            field.dob = new Date(field.dob);\r\n    }\r\n    cancelFieldValue(index, field: BenNominee) {\r\n        debugger;\r\n        //field.benNomineeName = this.benficiaryNomineeDetails[index].benNomineeName;\r\n        //field.dob = new Date(this.benficiaryNomineeDetails[index].dob);\r\n        //field.benNomineeBankName = this.benficiaryNomineeDetails[index].benNomineeBankName;\r\n        //field.benNomineeBankAccNo = this.benficiaryNomineeDetails[index].benNomineeBankAccNo;\r\n        //field.benNomineeBankBranch = this.benficiaryNomineeDetails[index].benNomineeBankBranch;\r\n        //field.benNomineeBankIfscCode = this.benficiaryNomineeDetails[index].benNomineeBankIfscCode;\r\n        field.isEdit = false;\r\n        this.getBeneficiaryNomineeDetails(this.claim.benSno);\r\n    }\r\n    saveFieldValue(index, field: BenNominee) {\r\n        if (this.validateNomineeDetails(field)) {\r\n            field.isEdit = false;\r\n            //this.pfCollectionDetailsList.splice(index, 1);\r\n            //this.pfCollectionDetailsList.push(field);\r\n        }\r\n    }\r\n    mapNominee() {\r\n        debugger;\r\n        let count = 0;\r\n        if (this.benficiaryNominee.length > 1) {\r\n            for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n                if (this.benficiaryNominee[i].isMappingNominee)\r\n                    count++;\r\n            }\r\n        }\r\n        if (count > 1) {\r\n            alert(\"Please map only one nominee\"); return;\r\n        }\r\n        else {\r\n            this.benNomineenDetails = this.benficiaryNominee.find(x => x.isMappingNominee == true);\r\n            this.benNomineenDetails.claimId = this.claimId;\r\n\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .updateNomineeDetails(this.benNomineenDetails)\r\n                    .then((data: any) => {\r\n                        this.getClaimDetailsByClaimId(this.claimId, this.tranctionId, this.claimType);\r\n                        this.isInvalidNominee = false;\r\n                        this.claimExceptionDetails = \"\";\r\n                        this.isVisibleClaimExceptions = false;\r\n                        this.successValue = \"nominee\";\r\n                        this.successMessage = \"Nominee Details Updated successfully\";\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n            this.nomineeModal.hide();\r\n        }\r\n    }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Fund Request View </h2>\\r\\n                </header>\\r\\n\\r\\n\\r\\n                <div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details </header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Fund Request Date: </strong>{{fundrequestDetails.fundRequestDateString}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <header>  Fund Status at RLO</header>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Approved Claims Amount: </strong>{{officeDetails.approvedClaimsAmount}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Amount Shortfall: </strong>{{AmountShortfall}}</label>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Board: </strong>{{fundrequestDetails.boardName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Claim Types: </strong>{{fundrequestDetails.claimTypes}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Locations : </strong>{{fundrequestDetails.locationNames}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n\\r\\n\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <div class=\\\"inline-group\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\">\\r\\n                                                    <i></i>Fund Request for Claims\\r\\n                                                </label>\\r\\n                                                <label class=\\\"radio\\\" style=\\\"margin-top:10px !important\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" disabled>\\r\\n                                                    <i></i>Fund Request for Expenses\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <div class=\\\"row\\\" style=\\\"margin-top:15px;\\\">\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label class=\\\"label\\\">Board<span [style.color]=\\\"!boardIdValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"boardId\\\" [(ngModel)]=\\\"boardId\\\">\\r\\n                                                <option value=\\\"\\\" selected>Select</option>\\r\\n                                                <option value=\\\"{{board.boardId}}\\\" *ngFor=\\\"let board of boardList\\\">{{board.boardName}}</option>\\r\\n                                            </select>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label class=\\\"label\\\">Category</label>\\r\\n\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"claimTypeIds\\\" [(ngModel)]=\\\"claimTypeIds\\\">\\r\\n                                                <option value=\\\"0\\\" selected>All</option>\\r\\n                                                <option value=\\\"{{type.claimTypeId}}\\\" *ngFor=\\\"let type of claimTypesList\\\">{{type.claimTypeName}}</option>\\r\\n\\r\\n                                            </select>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label class=\\\"label\\\">Location</label>\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"locationsIds\\\" [(ngModel)]=\\\"locationsIds\\\">\\r\\n                                                <option value=\\\"0\\\" selected>All</option>\\r\\n                                                <option value=\\\"{{location.blockSno}}\\\" *ngFor=\\\"let location of LocationList\\\">{{location.blockName}}</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section *ngIf=\\\"editmode\\\">\\r\\n                                    <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                        <a class=\\\"btn btn-primary\\\" (click)=\\\"ShowAddClaims()\\\"> Add Claims </a>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please select atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- widget grid -->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n\\r\\n                                <div>\\r\\n\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                                            <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                                                   [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th *ngIf=\\\"editmode\\\"><input type=\\\"checkbox\\\" name=\\\"selectedAll\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>\\r\\n                                                        <th>SSIN</th>\\r\\n                                                        <th>Beneficiary Name</th>\\r\\n                                                        <th>Beneficiary Type</th>\\r\\n                                                        <th>Claim Reference No.</th>\\r\\n                                                        <th>Claim Category</th>\\r\\n                                                        <th>Submission Date</th>\\r\\n                                                        <th>Amount</th>\\r\\n                                                        <th>Status</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let claim of mf.data\\\">\\r\\n                                                        <td class=\\\"\\\" *ngIf=\\\"editmode\\\">\\r\\n                                                            <input type=\\\"checkbox\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"claim.selected\\\" (change)=\\\"checkIfAllSelected();\\\">\\r\\n                                                        </td>\\r\\n                                                        <td>{{claim.ssin}}</td>\\r\\n                                                        <td>{{claim.benName}}</td>\\r\\n                                                        <td>{{claim.benType}}</td>\\r\\n                                                        <td><a (click)=\\\"viewClaimInfo(claim)\\\">{{claim.claimRefernceNo}}</a> </td>\\r\\n                                                        <!--<td>{{claim.claimRefernceNo}}</td>-->\\r\\n                                                        <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                                        <td>{{claim.submittedDateString}}</td>\\r\\n                                                        <td>{{claim.approvedAmount}}</td>\\r\\n                                                        <td>{{claim.paymentStatusName}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n\\r\\n                                                <tfoot>\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"9\\\" style=\\\"border-bottom:0px !important\\\">\\r\\n                                                            <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                                        </td>\\r\\n\\r\\n                                                    </tr>\\r\\n                                                </tfoot>\\r\\n                                            </table>\\r\\n                                            <header>Time Line</header>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <!-- row -->\\r\\n                                                    <div class=\\\"row\\\">\\r\\n                                                        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" style=\\\"width:98%\\\">\\r\\n                                                            <div class=\\\"well well-sm\\\">\\r\\n                                                                <div class=\\\"smart-timeline\\\">\\r\\n                                                                    <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                                        <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                                            <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                                                <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\\\"smart-timeline-time\\\">\\r\\n                                                                                <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\\\"smart-timeline-content\\\">\\r\\n                                                                                <p>\\r\\n                                                                                    <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                                                </p>\\r\\n                                                                                <p>\\r\\n                                                                                    {{item.actionComments}}\\r\\n                                                                                </p>\\r\\n                                                                            </div>\\r\\n                                                                        </li>\\r\\n\\r\\n                                                                    </ul>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <label>ALC Comments<span [style.color]=\\\"!commentsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"!editmode\\\" name=\\\"alcComments\\\" [(ngModel)]=\\\"alcComments\\\"\\r\\n                                                                  [ngClass]=\\\"{'invalid-data': (!commentsValid ), 'valid-data': commentsValid}\\\"\\r\\n                                                                  required></textarea>\\r\\n                                                    </label>\\r\\n                                                    <div *ngIf=\\\"(!commentsValid)\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">ALC Comments is required </span>\\r\\n                                                    </div>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <label>DLC Comments</label>\\r\\n                                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"true\\\" name=\\\"dlcComments\\\" [(ngModel)]=\\\"dlcComments\\\"></textarea>\\r\\n                                                    </label>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <label>Board Comments</label>\\r\\n                                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"true\\\" name=\\\"boardComments\\\" [(ngModel)]=\\\"boardComments\\\"></textarea>\\r\\n                                                    </label>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            \\r\\n                                            <footer>\\r\\n                                                <a id=\\\"btnSava\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"editmode\\\" (click)=\\\"SubmitRequest()\\\"> Submit </a>\\r\\n                                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                                            </footer>\\r\\n                                        </form>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </article>\\r\\n\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #addClaimsModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"addClaimsModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Add Claims</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divAddEducationDetails\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <b>Board :</b> {{fundrequestDetails.boardName}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label control-label\\\">Claim Types </label>\\r\\n                                <ng-multiselect-dropdown name=\\\"22\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                         [data]=\\\"claimTypesList\\\"\\r\\n                                                         [(ngModel)]=\\\"claimMasterIds\\\"\\r\\n                                                         [settings]=\\\"dropdownSettings\\\"\\r\\n                                                         (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                         (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                </ng-multiselect-dropdown>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Locations </label>\\r\\n                                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"institutionName\\\" placeholder=\\\"Institution Name\\\">-->\\r\\n                                <ng-multiselect-dropdown name=\\\"dd\\\" [placeholder]=\\\"'All '\\\"\\r\\n                                                         [data]=\\\"LocationList\\\"\\r\\n                                                         [(ngModel)]=\\\"locationsIds\\\"\\r\\n                                                         [settings]=\\\"locationSettings\\\"\\r\\n                                                         (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                         (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                </ng-multiselect-dropdown>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" (click)=\\\"GetClaims()\\\"> Get Claims </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" *ngIf=\\\"GetClaimVisible\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\"\\r\\n                                       [mfData]=\\\"newclaimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"newselectedAll\\\" (change)=\\\"newselectAll();\\\"></th>\\r\\n                                            <th>SSIN</th>\\r\\n                                            <th>Beneficiary Name</th>\\r\\n                                            <th>Beneficiary Type</th>\\r\\n                                            <th>Claim Reference No.</th>\\r\\n                                            <th>Claim Category</th>\\r\\n                                            <th>Submission Date</th>\\r\\n                                            <th>Amount</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let claim of mf.data\\\">\\r\\n                                            <td class=\\\"\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"claim.selected\\\" (change)=\\\"newcheckIfAllSelected();\\\">\\r\\n                                            </td>\\r\\n                                            <td>{{claim.ssin}}</td>\\r\\n                                            <td>{{claim.benName}}</td>\\r\\n                                            <td>{{claim.benType}}</td>\\r\\n                                            <td>{{claim.claimRefernceNo}}</td>\\r\\n                                            <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                            <td>{{claim.submittedDateString}}</td>\\r\\n                                            <td>{{claim.approvedAmount}}</td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n\\r\\n                                    <tfoot>\\r\\n                                        <tr>\\r\\n                                            <td colspan=\\\"8\\\" style=\\\"border-bottom:0px !important\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td>\\r\\n                                        </tr>\\r\\n                                    </tfoot>\\r\\n                                </table>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" *ngIf=\\\"GetClaimVisible\\\" class=\\\"btn btn-primary\\\" (click)=\\\"AddNewClaims()\\\">\\r\\n                    Add\\r\\n                </button>\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"CancelAddClaims()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\"  [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Claim Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <app-claimviewdata #child [claimId]=\\\"claimId\\\" [claimType]=\\\"claimType\\\" [transactionId]=\\\"tranctionId\\\"></app-claimviewdata>\\r\\n                    </div>\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px;min-height:inherit\\\">\\r\\n                        <accordion>\\r\\n                            <accordion-group heading=\\\"{{item.attachmentTypeString}}\\\" *ngFor=\\\"let item of attachmentList\\\">\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]!='pdf'\\\">\\r\\n                                    <img [src]=\\\"'data:image/'+item.fileName.split('.')[item.fileName.split('.').length-1]+';base64,'+ item.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]=='pdf'\\\">\\r\\n                                    <object [attr.data]=\\\"item.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                                </div>\\r\\n                            </accordion-group>\\r\\n                        </accordion>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { FundRequestDetailsModel, FundClaimList } from '../../models/fundRequestedClaimsDetails.model';\r\nimport { ClaimConstants, ClaimStatus, WorkflowTrans } from '../../claim/pipes/constnts.model';\r\nimport { ClaimTypes } from '../../models/ClaimTypes.model';\r\nimport { FundRequestModel, PaymentModel } from '../../models/fundRequestProcess.model';\r\nimport { LocationsMaster } from '../../models/locationsDetails.model';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { ClaimviewdataComponent } from '../claimviewdata/claimviewdata.component';\r\nimport { ClaimView } from '../../claim/models/claimview.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AttachmentModel } from '../../claim/models/attachment.model';\r\nimport { EducationDetailModel } from '../../claim/models/education.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-reviewfundrequest',\r\n  templateUrl: './reviewfundrequest.component.html',\r\n  styleUrls: ['./reviewfundrequest.component.css']\r\n})\r\nexport class ReviewfundrequestComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('addClaimsModal') public addClaimsModal: ModalDirective; \r\n    @ViewChild('attachModal') public attachModel: ModalDirective;\r\n    @ViewChild('child') private child: ClaimviewdataComponent;\r\n\r\n    private route$: Subscription;\r\n    private fundRequestId: any;\r\n    private workflowId: any;\r\n    editmode: boolean = false;\r\n    fundrequestDetails: FundRequestDetailsModel;\r\n    claimsData: FundClaimList[];\r\n    newclaimsData: FundClaimList[];\r\n    addclaimsData: FundClaimList[];\r\n    claimData: FundRequestModel = {} as FundRequestModel;\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    AmountShortfall: any;\r\n    date = new Date();\r\n    showErrorMessage: boolean = false;\r\n    boardIdValid: boolean = true;\r\n    selectedAll: boolean = false;\r\n    newselectedAll: any;\r\n    successMessage: string;\r\n    sumofAmount: any = 0;\r\n    mode: string;\r\n    selectedClaimList: Array<PaymentModel> = [];\r\n    LocationList: LocationsMaster[];\r\n    claimMasterIds: Array<any> = [];\r\n    locationsIds: Array<any> = [];\r\n    claimTypesList: ClaimTypes[];\r\n    selectedLocations: any;\r\n    selectedClaimTypes: any;\r\n    dropdownSettings = {};\r\n    locationSettings = {};\r\n    GetClaimVisible: boolean = false;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n\r\n    claimId: any;\r\n    claimType: any;\r\n    tranctionId: any;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    claim: ClaimView = {} as ClaimView;\r\n    alcComments: string;\r\n    commentsValid: boolean = true;\r\n    dlcComments: string;\r\n    boardComments: string;\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService, private sanitizer: DomSanitizer)  { }\r\n\r\n    ngOnInit() {\r\n        //this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.fundRequestId = params[\"fundRequestId\"];\r\n                this.mode = params[\"mode\"];\r\n                if (this.mode == \"edit\") {\r\n                    this.editmode = true;\r\n                    this.selectedAll = true;\r\n                }\r\n                else\r\n                    this.editmode = false;\r\n                this.workflowId = params[\"workflowId\"];\r\n            }\r\n        );\r\n       // this.getFundRequestedClaimsById(this.fundRequestId);\r\n        this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.getClaimTypesMasterDetails();\r\n        this.getFundRequestedClaimsById(this.fundRequestId);\r\n        this.dropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'claimMasterId',\r\n            textField: 'claimName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        };\r\n        this.locationSettings = {\r\n            singleSelection: false,\r\n            idField: 'blockSno',\r\n            textField: 'blockName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        };\r\n    }\r\n    \r\n    getFundRequestedClaimsById(fundRequestId:any) {\r\n        this.claimsData = [];\r\n        this.dataService\r\n            .getFundRequestedClaimsById(fundRequestId)\r\n            .subscribe((data: any) => {\r\n                this.fundrequestDetails = data;\r\n                this.claimsData = data.fundClaimList;\r\n                this.alcComments = data.alcComments;\r\n                this.dlcComments = data.dlcComments;\r\n                this.boardComments = data.boardComments;\r\n                this.selectAll();\r\n                this.getClaimTrackDetailsByClaimId(this.fundRequestId, 0, this.workflowId);\r\n            });\r\n    }\r\n\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                if (this.officeDetails.approvedClaimsAmount > this.RloOfficeAddress.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.officeDetails.approvedClaimsAmount - this.RloOfficeAddress.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n\r\n                this.getLocationDetailsByRloId(this.RloOfficeAddress.rloOfficeId);\r\n            });\r\n    }\r\n\r\n\r\n    selectAll() {\r\n        this.sumofAmount = 0;\r\n        this.showErrorMessage = false;\r\n        for (var i = 0; i < this.claimsData.length; i++) {\r\n            this.claimsData[i].selected = this.selectedAll;\r\n            if (this.selectedAll) {\r\n                this.sumofAmount += this.claimsData[i].approvedAmount;\r\n            }\r\n        }\r\n    }\r\n    checkIfAllSelected() {\r\n        this.showErrorMessage = false;\r\n        this.selectedAll = this.claimsData.every(function (item: any) {\r\n            return item.selected == true;\r\n        })\r\n\r\n       // if (itemData.selected == true) { this.sumofAmount += itemData.approvedAmount; }\r\n       // else { this.sumofAmount -= itemData.approvedAmount; }\r\n    }\r\n    selectedClaims() {\r\n        this.sumofAmount = 0;\r\n        var res = this.claimsData;\r\n        this.selectedClaimList = [];\r\n        for (var i = 0; i < res.length; i++) {\r\n            let claimtypeId = ClaimConstants[res[i].claimType];\r\n            this.selectedClaimList.push({ transactionId: res[i].transactionId, transactionType: claimtypeId, statusId: res[i].selected ? 1 : 0 });\r\n            if (res[i].selected == true) { this.sumofAmount += res[i].approvedAmount;}\r\n        }\r\n    }\r\n    SubmitRequest() {\r\n        this.selectedClaims();\r\n        this.showErrorMessage = false; \r\n\r\n        if (this.selectedClaimList != null && this.selectedClaimList.length > 0 && this.selectedClaimList.filter(x => x.statusId == 1).length > 0) {\r\n            debugger;\r\n            if (this.alcComments != undefined && this.alcComments != null && this.alcComments != \"\" && this.alcComments.length > 0) {\r\n                this.commentsValid = true;\r\n                this.claimData.updatedBy = this.userService.user.deptUserid;\r\n                this.claimData.updatedDate = new Date();\r\n                this.claimData.statusId = ClaimStatus.FundRequestFromALC;\r\n                this.claimData.fundRequestClaims = this.selectedClaimList;\r\n                this.claimData.fundRequestHdrId = this.fundRequestId;\r\n                this.claimData.fundRequestDate = new Date();\r\n                //this.claimData.boardId = this.boardId;\r\n                this.claimData.aLCComments = this.alcComments.trim();\r\n                this.claimData.fundRequested = this.sumofAmount;\r\n                //if (this.claimData.paymentProcessingClaims != null && this.claimData.paymentProcessingClaims.nElements>0) {\r\n                if (confirm(\"Are you sure to proceed \")) {\r\n                    this.dataService\r\n                        .saveFundRequesteClaims(this.claimData)\r\n                        .then((data: any) => {\r\n                            if (data) {\r\n                                this.successMessage = \"Fund request was successfully updated\";\r\n                            }\r\n                            else {\r\n                                this.successMessage = \"Invalid transaction\";\r\n                            }\r\n                            this.successModal.show();\r\n                        });\r\n                    //}\r\n                }\r\n            }\r\n            else\r\n                this.commentsValid = false;\r\n        }\r\n        else { this.showErrorMessage = true; }\r\n    }\r\n    getClaimTrackDetailsByClaimId(transactionId: any, tranctionType: any, wfId: any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType, wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n            });\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.cancelclick();\r\n        //this.GetClaims();\r\n    }\r\n    cancelclick() {\r\n        this.router.navigate(['alc/fundrequestedclaims']);\r\n    }\r\n\r\n    ShowAddClaims() {\r\n        this.resetModelPopup();\r\n        this.addClaimsModal.show();\r\n    }\r\n\r\n    CancelAddClaims() {\r\n        this.resetModelPopup();\r\n        this.addClaimsModal.hide();\r\n    }\r\n\r\n    getLocationDetailsByRloId(id: any) {\r\n        this.dataService\r\n            .getLocationsMasterData(id)\r\n            .subscribe((data: any) => {\r\n                this.LocationList = data;\r\n            });\r\n    }\r\n\r\n    getClaimTypesMasterDetails() {\r\n        this.dataService\r\n            .getClaimTypesMasterData()\r\n            .subscribe((data: any) => {\r\n\r\n                this.claimTypesList = data;\r\n            });\r\n    }\r\n    GetClaims() {\r\n        debugger;\r\n        if (this.fundrequestDetails.boardId > 0) {\r\n            this.boardIdValid = true;\r\n            let claimMaster;\r\n            let locationId;\r\n            if (this.claimMasterIds.length > 0) {\r\n                claimMaster = this.claimMasterIds.map(function (e) {\r\n                    return e.claimMasterId;\r\n                }).join(', ')\r\n            }\r\n            else {\r\n                claimMaster = 0;\r\n            }\r\n            if (this.locationsIds.length > 0) {\r\n                locationId = this.locationsIds.map(function (e) {\r\n                    return e.blockSno;\r\n                }).join(', ')\r\n            }\r\n            else {\r\n                locationId = 0;\r\n            }\r\n            this.getAllApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, this.fundrequestDetails.boardId, claimMaster, locationId);\r\n        }\r\n        else\r\n            this.boardIdValid = false;\r\n    }\r\n\r\n    getAllApprovalClaims(deptUserid: number, type: any, boardId: any, claimTypeIds: any, locationsIds: any) {\r\n        this.newclaimsData = [];\r\n        this.newselectedAll = false;\r\n        this.dataService\r\n            .GetAllApprovalClaims(deptUserid, type, boardId, claimTypeIds, locationsIds)\r\n            .subscribe((data: any) => {\r\n                this.newclaimsData = data;\r\n                this.GetClaimVisible = true;\r\n            });\r\n    }\r\n\r\n    newselectAll() {\r\n        this.showErrorMessage = false;\r\n        for (var i = 0; i < this.newclaimsData.length; i++) {\r\n            this.newclaimsData[i].selected = this.newselectedAll;\r\n        }\r\n    }\r\n    newcheckIfAllSelected() {\r\n        this.showErrorMessage = false;\r\n        this.newselectedAll=this.newclaimsData.every(function (item: any) {\r\n            return item.selected == true;\r\n        })\r\n    }\r\n    \r\n    AddNewClaims() {\r\n        debugger;\r\n        if (this.newclaimsData != null && this.newclaimsData.length > 0) {\r\n            var res = this.newclaimsData.filter(x => x.selected == true);\r\n            if (res != null && res.length > 0) {\r\n                this.addclaimsData = [];\r\n                for (var i = 0; i < res.length; i++) {\r\n                    this.addclaimsData.push(res[i]);\r\n                    this.claimsData.push(res[i]);\r\n                }\r\n                this.claimsData = this.claimsData.filter((el, i, a) => i === a.indexOf(el));\r\n                this.resetModelPopup();\r\n                this.addClaimsModal.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeDuplicateUsingFilter(arr) {\r\n        let unique_array = arr.filter(function (elem, index, self) {\r\n            return index == self.indexOf(elem);\r\n        });\r\n        return unique_array\r\n    }\r\n\r\n    resetModelPopup() {\r\n        this.locationSettings = {};\r\n        this.dropdownSettings = {};\r\n        this.claimMasterIds = [];\r\n        this.locationsIds = [];\r\n        this.GetClaimVisible = false;\r\n    }\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    viewClaimInfo(claim: any) {\r\n        debugger;\r\n        this.claimId = claim.claimId;\r\n        this.claimType = claim.claimType;\r\n        this.tranctionId = claim.transactionId;\r\n        this.attachmentList = [];\r\n        this.getClaimDetailsByClaimId(this.claimId, this.tranctionId, ClaimConstants[this.claimType]);\r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                this.claim = data;\r\n                this.child.getData(this.claim);\r\n                this.attachModel.show();\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                if (this.claim.deathDetails != null) {\r\n                    for (var j = 0; j < this.claim.deathDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.deathDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                if (this.claim.disabilityDetails != null) {\r\n                    for (var j = 0; j < this.claim.disabilityDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.disabilityDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        let attachment = this.claim.attachment[k];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.claim.attachment[k] = attachment;\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Fund Request View </h2>\\r\\n                </header>\\r\\n\\r\\n\\r\\n                <div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details </header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Fund Request Date: </strong>{{fundrequestDetails.fundRequestDateString}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <header>  Fund Status at RLO</header>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Approved Claims Amount: </strong>{{officeDetails.approvedClaimsAmount}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Amount Shortfall: </strong>{{AmountShortfall}}</label>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Board: </strong>{{fundrequestDetails.boardName}} </label>\\r\\n                                        </div>\\r\\n                                        <!--<div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Claim Types: </strong>{{fundrequestDetails.claimTypes}} </label>\\r\\n                                        </div>-->\\r\\n                                    </div>\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Locations : </strong>{{fundrequestDetails.locationNames}}</label>\\r\\n                                        </div>\\r\\n                                    </div>-->\\r\\n                                </section>\\r\\n\\r\\n\\r\\n\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <div class=\\\"inline-group\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\">\\r\\n                                                    <i></i>Fund Request for Claims\\r\\n                                                </label>\\r\\n                                                <label class=\\\"radio\\\" style=\\\"margin-top:10px !important\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" disabled>\\r\\n                                                    <i></i>Fund Request for Expenses\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <div class=\\\"row\\\" style=\\\"margin-top:15px;\\\">\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label class=\\\"label\\\">Board<span [style.color]=\\\"!boardIdValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"boardId\\\" [(ngModel)]=\\\"boardId\\\">\\r\\n                                                <option value=\\\"\\\" selected>Select</option>\\r\\n                                                <option value=\\\"{{board.boardId}}\\\" *ngFor=\\\"let board of boardList\\\">{{board.boardName}}</option>\\r\\n                                            </select>\\r\\n\\r\\n                                        </div>\\r\\n                                        <!--<div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label class=\\\"label\\\">Category</label>\\r\\n\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"claimTypeIds\\\" [(ngModel)]=\\\"claimTypeIds\\\">\\r\\n                                                <option value=\\\"0\\\" selected>All</option>\\r\\n                                                <option value=\\\"{{type.claimTypeId}}\\\" *ngFor=\\\"let type of claimTypesList\\\">{{type.claimTypeName}}</option>\\r\\n\\r\\n                                            </select>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label class=\\\"label\\\">Location</label>\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"locationsIds\\\" [(ngModel)]=\\\"locationsIds\\\">\\r\\n                                                <option value=\\\"0\\\" selected>All</option>\\r\\n                                                <option value=\\\"{{location.blockSno}}\\\" *ngFor=\\\"let location of LocationList\\\">{{location.blockName}}</option>\\r\\n                                            </select>\\r\\n                                        </div>-->\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section *ngIf=\\\"editmode\\\">\\r\\n                                    <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                        <a class=\\\"btn btn-primary\\\" (click)=\\\"openModel()\\\"> Add </a>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please add atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- widget grid -->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n\\r\\n                                <div>\\r\\n\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                                            <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                                                   [mfData]=\\\"expensesDetailsArray\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <!--<th *ngIf=\\\"editmode\\\"><input type=\\\"checkbox\\\" name=\\\"selectedAll\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>-->\\r\\n                                                        <th>Item</th>\\r\\n                                                        <th>Fund Required</th>\\r\\n                                                        <th>Physical Target</th>\\r\\n                                                        <th>Expenditure incurred during last financial year</th>\\r\\n                                                        <th *ngIf=\\\"editmode\\\"></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let expense of mf.data\\\">\\r\\n                                                        <!--<td class=\\\"\\\" *ngIf=\\\"editmode\\\">\\r\\n                    <input type=\\\"checkbox\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"expense.selected\\\" (change)=\\\"checkIfAllSelected();\\\">\\r\\n                </td>-->\\r\\n                                                        <td>{{expense.itemName}}</td>\\r\\n                                                        <td>{{expense.fundsRequired}}</td>\\r\\n                                                        <td>{{expense.physicalTarget}}</td>\\r\\n                                                        <td>{{expense.expenditureIncurredDuringLastFinYear}}</td>\\r\\n                                                        <td *ngIf=\\\"editmode\\\">\\r\\n                                                            <a class=\\\"btn btn-labeled btn-primary\\\" (click)=\\\"editExpenseDetails(expense)\\\" style=\\\"margin-right:5px;\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i> Edit</a>\\r\\n                                                            <a class=\\\"btn btn-labeled btn-danger\\\" (click)=\\\"removeExpenseDetails(expense)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n\\r\\n                                                <tfoot>\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"5\\\" style=\\\"border-bottom:0px !important\\\">\\r\\n                                                            <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                                        </td>\\r\\n\\r\\n                                                    </tr>\\r\\n                                                </tfoot>\\r\\n                                            </table>\\r\\n                                            <header>Time Line</header>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <!-- row -->\\r\\n                                                    <div class=\\\"row\\\">\\r\\n                                                        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" style=\\\"width:98%\\\">\\r\\n                                                            <div class=\\\"well well-sm\\\">\\r\\n                                                                <div class=\\\"smart-timeline\\\">\\r\\n                                                                    <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                                        <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                                            <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                                                <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\\\"smart-timeline-time\\\">\\r\\n                                                                                <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\\\"smart-timeline-content\\\">\\r\\n                                                                                <p>\\r\\n                                                                                    <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                                                </p>\\r\\n                                                                                <p>\\r\\n                                                                                    {{item.actionComments}}\\r\\n                                                                                </p>\\r\\n                                                                            </div>\\r\\n                                                                        </li>\\r\\n\\r\\n                                                                    </ul>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <label>ALC Comments<span [style.color]=\\\"!commentsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"!editmode\\\" name=\\\"alcComments\\\" [(ngModel)]=\\\"alcComments\\\"\\r\\n                                                                  [ngClass]=\\\"{'invalid-data': (!commentsValid ), 'valid-data': commentsValid}\\\"\\r\\n                                                                  required></textarea>\\r\\n                                                    </label>\\r\\n                                                    <div *ngIf=\\\"(!commentsValid)\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">ALC Comments is required </span>\\r\\n                                                    </div>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <label>DLC Comments</label>\\r\\n                                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"true\\\" name=\\\"dlcComments\\\" [(ngModel)]=\\\"dlcComments\\\"></textarea>\\r\\n                                                    </label>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            <fieldset>\\r\\n                                                <section>\\r\\n                                                    <label>Board Comments</label>\\r\\n                                                    <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                        <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" [disabled]=\\\"true\\\" name=\\\"boardComments\\\" [(ngModel)]=\\\"boardComments\\\"></textarea>\\r\\n                                                    </label>\\r\\n                                                </section>\\r\\n                                            </fieldset>\\r\\n                                            <footer>\\r\\n                                                <a id=\\\"btnSava\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"editmode\\\" (click)=\\\"SubmitRequest()\\\"> Submit </a>\\r\\n                                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                                            </footer>\\r\\n                                        </form>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </article>\\r\\n\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #expensesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"expensesModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Add Expense Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divAddExpensesDetails\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Item <span [style.color]=\\\"!expenseTypeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select name=\\\"expenseType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"expensesDetails.itemId\\\"\\r\\n                                        #expenseType=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': !expenseTypeValid,\\r\\n                                        'valid-data': expenseTypeValid }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose Item</option>\\r\\n                                    <option value=\\\"{{expense.lovDtlId}}\\\" *ngFor=\\\"let expense of expensesTypesLov\\\">{{expense.optionName}}</option>\\r\\n                                </select> <i></i>\\r\\n                                <div *ngIf=\\\"!expenseTypeValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Select Item </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Fund Required <span [style.color]=\\\"!fundRequiredValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fundRequiredAmount\\\" placeholder=\\\"Fund Required\\\" [(ngModel)]=\\\"expensesDetails.fundsRequired\\\" NumbersOnly\\r\\n                                       #fundRequiredAmount=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !fundRequiredValid, \\r\\n                                       'valid-data': fundRequiredValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"!fundRequiredValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Fund Required is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Physical Target</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"physicalTarget\\\" placeholder=\\\"Physical Target\\\" NumbersOnly [(ngModel)]=\\\"expensesDetails.physicalTarget\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Expenditure incurred during last financial year</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"expenditureIncurredDuringLastFinYear\\\" placeholder=\\\"Expenditure incurred\\\" NumbersOnly [(ngModel)]=\\\"expensesDetails.expenditureIncurredDuringLastFinYear\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"expensesModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addExpenseDetails(expensesDetails)\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { FundRequestExpensesHdr, FundRequestExpensesDtlList } from '../../models/expenses.model';\r\nimport { ClaimConstants, ClaimStatus, WorkflowTrans, LovConstants } from '../../claim/pipes/constnts.model';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { LovDetails } from '../../claim/models/Lov.model';\r\n\r\n@Component({\r\n  selector: 'app-reviewfundrequestexpenses',\r\n  templateUrl: './reviewfundrequestexpenses.component.html',\r\n  styleUrls: ['./reviewfundrequestexpenses.component.css']\r\n})\r\nexport class ReviewfundrequestexpensesComponent implements OnInit {\r\n\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('expensesModal') public expensesModal: ModalDirective;\r\n    private route$: Subscription;\r\n    private fundRequestHdrId: any;\r\n    private workflowId: any;\r\n    editmode: boolean = false;\r\n    fundrequestDetails: FundRequestExpensesHdr;\r\n    expensesData: FundRequestExpensesDtlList[];\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    AmountShortfall: any;\r\n    date = new Date();\r\n    showErrorMessage: boolean = false;\r\n    boardIdValid: boolean = true;\r\n    successMessage: string;\r\n    sumofAmount: any = 0;\r\n    mode: string;\r\n    dropdownSettings = {};\r\n    locationSettings = {};\r\n    GetClaimVisible: boolean = false;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n\r\n    expensesTypesLov: LovDetails[];\r\n    expenseTypeValid: boolean = true;\r\n    rowIndex = -1;\r\n    fundRequestExpensesData: FundRequestExpensesHdr = {} as FundRequestExpensesHdr;\r\n    expensesDetailsArray: Array<FundRequestExpensesDtlList> = [];\r\n    expensesDetails: FundRequestExpensesDtlList = {} as FundRequestExpensesDtlList;\r\n    fundRequestType: string = \"claims\";\r\n    fundRequiredValid: boolean = true;\r\n    commentsValid: boolean = true;\r\n    alcComments: string;\r\n    dlcComments: string;\r\n    boardComments: string;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService) { }\r\n\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.fundRequestHdrId = params[\"fundRequestId\"];\r\n                this.mode = params[\"mode\"];\r\n                if (this.mode == \"edit\") {\r\n                    this.editmode = true;\r\n                }\r\n                else\r\n                    this.editmode = false;\r\n                this.workflowId = params[\"workflowId\"];\r\n            }\r\n        );\r\n        this.getExpenses();\r\n        this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.getFundRequestedExpensesById(this.fundRequestHdrId);\r\n    }\r\n\r\n    getFundRequestedExpensesById(fundRequestId: any) {\r\n        this.expensesData = [];\r\n        this.dataService\r\n            .getFundRequestedExpensesById(fundRequestId)\r\n            .subscribe((data: any) => {\r\n                this.fundrequestDetails = data;\r\n                this.expensesData = data.fundRequestExpensesDtlList;\r\n                this.expensesDetailsArray = this.expensesData;\r\n                this.alcComments = data.alcComments;\r\n                this.dlcComments = data.dlcComments;\r\n                this.boardComments = data.boardComments;\r\n                this.getClaimTrackDetailsByClaimId(this.fundRequestHdrId, 0, this.workflowId);\r\n            });\r\n    }\r\n\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                if (this.officeDetails.approvedClaimsAmount > this.RloOfficeAddress.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.officeDetails.approvedClaimsAmount - this.RloOfficeAddress.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n            });\r\n    }\r\n    SubmitRequest() {\r\n        debugger;\r\n        this.showErrorMessage = false;\r\n        \r\n        if (this.expensesDetailsArray != null && this.expensesDetailsArray.length > 0) {\r\n            if (this.alcComments != undefined && this.alcComments != null && this.alcComments != \"\" && this.alcComments.length > 0) {\r\n                this.commentsValid = true;\r\n                this.fundRequestExpensesData.updatedBy = this.userService.user.deptUserid;\r\n                this.fundRequestExpensesData.fundRequestDate = new Date();\r\n                this.fundRequestExpensesData.updatedDate = new Date();\r\n                //this.fundRequestExpensesData.rLOOfficeID = this.RloOfficeAddress.rloOfficeId;\r\n                this.fundRequestExpensesData.statusId = ClaimStatus.FundRequestFromALC;\r\n                this.fundRequestExpensesData.fundRequestHdrId = this.fundRequestHdrId;\r\n                //this.fundRequestExpensesData.boardId = this.boardId;\r\n\r\n\r\n                let sumofExpenses: number = 0;\r\n                for (var i = 0; i < this.expensesDetailsArray.length; i++) {\r\n                    sumofExpenses = Number(this.expensesDetailsArray[i].fundsRequired) + Number(sumofExpenses);\r\n                }\r\n                this.fundRequestExpensesData.fundRequested = sumofExpenses;\r\n                this.fundRequestExpensesData.fundRequestExpensesDtlList = this.expensesDetailsArray;\r\n                this.fundRequestExpensesData.alcComments = this.alcComments.trim();\r\n\r\n                if (confirm(\"Are you sure to proceed \")) {\r\n                    this.dataService\r\n                        .saveFundRequestExpenses(this.fundRequestExpensesData)\r\n                        .then((data: any) => {\r\n                            if (data) {\r\n                                this.successMessage = \"Fund request forwarded to DLC\"; //\"Fund request successfully submitted\";\r\n                                this.sumofAmount = 0;\r\n                            }\r\n                            else {\r\n                                this.successMessage = \"Invalid transaction\";\r\n                            }\r\n                            this.successModal.show();\r\n                        });\r\n                }\r\n            }\r\n            else\r\n                this.commentsValid = false;\r\n        }\r\n        else { this.showErrorMessage = true; }\r\n    }\r\n    getClaimTrackDetailsByClaimId(transactionId: any, tranctionType: any, wfId: any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType, wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n            });\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.cancelclick();\r\n    }\r\n    cancelclick() {\r\n        this.router.navigate(['alc/fundrequestedclaims']);\r\n    }\r\n\r\n    removeDuplicateUsingFilter(arr) {\r\n        let unique_array = arr.filter(function (elem, index, self) {\r\n            return index == self.indexOf(elem);\r\n        });\r\n        return unique_array\r\n    }\r\n\r\n   \r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    getExpenses() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.ExpensesType)\r\n            .subscribe((data: any) => {\r\n                this.expensesTypesLov = data;\r\n            });\r\n    }\r\n    openModel() {\r\n        this.clearExpenses();\r\n        this.rowIndex = -1;\r\n        this.expensesModal.show();\r\n    }\r\n    addExpenseDetails1(details: FundRequestExpensesDtlList)\r\n    {\r\n        debugger;\r\n        if (this.validateExpenseDetails(details)) {\r\n\r\n            if (this.expensesData.findIndex(x => x.itemId == details.itemId) == -1 && this.rowIndex == -1) \r\n                {\r\n                    details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                    this.expensesModal.hide();\r\n                    this.expensesData.push(details);\r\n                }\r\n             else if (this.expensesData.findIndex(x => x.itemId == details.itemId) != -1 && this.rowIndex == -1) {\r\n                    alert(\"already added please select another expense type\"); return;\r\n                }\r\n                else {\r\n                    if (this.rowIndex != -1) {\r\n                        if (this.expensesData.findIndex(x => x.itemId == details.itemId) == this.rowIndex) {\r\n                            this.expensesData.splice(this.rowIndex, 1);\r\n                            details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                            //this.expensesData.push(details);\r\n                            this.rowIndex = -1;\r\n                            this.expensesModal.hide();\r\n                        }\r\n                        else {\r\n                            alert(\"already added please select another expense type\"); return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                ////details.statusId = ClaimStatus.Submitted;\r\n                //if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) == -1 && this.rowIndex == -1) {\r\n\r\n                //details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                //    this.expensesDetailsArray.push(details);\r\n                //    this.expensesData.push(details);\r\n                //this.expensesModal.hide();\r\n                //}\r\n                //else if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) != -1 && this.rowIndex == -1) {\r\n                //    alert(\"already added please select another expense type\"); return;\r\n                //}\r\n                //else {\r\n                //    if (this.rowIndex != -1) {\r\n                //        if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) == this.rowIndex) {\r\n                //            this.expensesDetailsArray.splice(this.rowIndex, 1);\r\n                //            details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                //            this.expensesDetailsArray.push(details);\r\n                //            this.expensesData.push(details);\r\n                //            this.rowIndex = -1;\r\n                //            this.expensesModal.hide();\r\n                //        }\r\n                //        else {\r\n                //            alert(\"already added please select another expense type\"); return;\r\n                //        }\r\n                //    }\r\n                //}\r\n                //this.expensesDetails = {} as FundRequestExpensesDtlList;\r\n\r\n            \r\n        }\r\n    }\r\n    editExpenseDetails1(details: FundRequestExpensesDtlList) {\r\n        //details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n        this.expensesDetails = details;\r\n        //this.rowEligibleAmount = details.eligibleAmount;\r\n        this.rowIndex = this.expensesDetailsArray.indexOf(details);\r\n        this.expensesModal.show();\r\n    }\r\n    removeExpenseDetails1(details: FundRequestExpensesDtlList) {\r\n        const index: number = this.expensesDetailsArray.indexOf(details);\r\n        if (index !== -1) {\r\n            //this.claim.educationDetails.claimAmount -= this.expensesDetailsArray[index].eligibleAmount;\r\n            this.expensesDetailsArray.splice(index, 1);\r\n            //if (this.expensesDetailsArray.findIndex(x => x.presentlyReadingName == \"Assistance of Completion of UG Education or Equivalent Skill Development\") != -1) {\r\n            //    this.viewuploadNonMarriage = true;\r\n            //}\r\n            //else {\r\n            //    this.viewuploadNonMarriage = false;\r\n            //}\r\n            //this.eduCount -= 1;\r\n            //if (this.eduCount >= 2) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n        }\r\n    }\r\n    addExpenseDetails(details: FundRequestExpensesDtlList) {\r\n        debugger;\r\n        //if (this.claim.educationDetails.claimAmount == undefined) { this.claim.educationDetails.claimAmount = 0; }\r\n        if (this.validateExpenseDetails(details)) {\r\n            //details.statusId = ClaimStatus.Submitted;\r\n            if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) == -1 && this.rowIndex == -1) {\r\n                //for (var i = 0; i < this.expensesTypesLov.length; i++) {\r\n                //    if (this.expensesTypesLov[i].lovDtlId == details.itemId) {\r\n                //        details.itemName = this.expensesTypesLov[i].optionName;\r\n                //    }\r\n                //}\r\n                details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                this.expensesDetailsArray.push(details);\r\n                this.expensesModal.hide();\r\n            }\r\n            else if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) != -1 && this.rowIndex == -1) {\r\n                alert(\"already added please select another expense type\"); return;\r\n            }\r\n            else {\r\n                if (this.rowIndex != -1) {\r\n                    if (this.expensesDetailsArray.findIndex(x => x.itemId == details.itemId) == this.rowIndex) {\r\n                        //this.expensesDetailsArray.splice(this.rowIndex, 1);\r\n                        //details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n                        //this.expensesDetailsArray.push(details);\r\n                        this.rowIndex = -1;\r\n                        this.expensesModal.hide();\r\n                    }\r\n                    else {\r\n                        alert(\"already added please select another expense type\"); return;\r\n                    }\r\n                }\r\n            }\r\n            this.expensesDetails = {} as FundRequestExpensesDtlList;\r\n        }\r\n    }\r\n    editExpenseDetails(details: FundRequestExpensesDtlList) {\r\n        //details.itemName = this.expensesTypesLov.find(x => x.lovDtlId == details.itemId).optionName;\r\n        this.expensesDetails = details;\r\n        //this.rowEligibleAmount = details.eligibleAmount;\r\n        this.rowIndex = this.expensesDetailsArray.indexOf(details);\r\n        this.expensesModal.show();\r\n    }\r\n    removeExpenseDetails(details: FundRequestExpensesDtlList) {\r\n        const index: number = this.expensesDetailsArray.indexOf(details);\r\n        if (index !== -1) {\r\n            //this.claim.educationDetails.claimAmount -= this.expensesDetailsArray[index].eligibleAmount;\r\n            this.expensesDetailsArray.splice(index, 1);\r\n            //if (this.expensesDetailsArray.findIndex(x => x.presentlyReadingName == \"Assistance of Completion of UG Education or Equivalent Skill Development\") != -1) {\r\n            //    this.viewuploadNonMarriage = true;\r\n            //}\r\n            //else {\r\n            //    this.viewuploadNonMarriage = false;\r\n            //}\r\n            //this.eduCount -= 1;\r\n            //if (this.eduCount >= 2) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n        }\r\n    }\r\n    clearExpenses() {\r\n        //this.expensesDetails = {} as FundRequestExpensesDtlList;\r\n        //this.expensesDetailsArray = [];\r\n        this.expenseTypeValid = true;\r\n        this.fundRequiredValid = true;\r\n    }\r\n    validateExpenseDetails(details: FundRequestExpensesDtlList): boolean {\r\n        let isValid = true;\r\n        this.expenseTypeValid = true;\r\n        this.fundRequiredValid = true;\r\n        if (details.itemId == undefined || details.itemId <= 0) { this.expenseTypeValid = isValid = false; }\r\n        if (details.fundsRequired == undefined) { this.fundRequiredValid = isValid = false; }\r\n        return isValid;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>{{pageHeader}} </h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Payment Processing Date: </strong>{{paymentProcessDetails.paymentProcessingDateString}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section style=\\\"display:none\\\">\\r\\n                                    <header>Fund Status at RLO</header>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\" style=\\\"display:none\\\">\\r\\n                                            <label><strong>Balance as on today : </strong>{{RloOfficeAddress.balanceOfTheAmount}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Approved Claims Amount: </strong>{{officeDetails.approvedClaimsAmount}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Amount Shortfall: </strong>{{AmountShortfall}}</label>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-10\\\">\\r\\n                                            <div class=\\\"inline-group\\\">\\r\\n                                                <label class=\\\"radio\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"GetFundVisible\\\" disabled>\\r\\n                                                    <i></i>Payment Against Release Order\\r\\n                                                </label>\\r\\n                                                <label class=\\\"radio\\\" style=\\\"margin-top:10px !important\\\">\\r\\n                                                    <input type=\\\"radio\\\" name=\\\"radio-inline\\\" [value]=\\\"false\\\" [(ngModel)]=\\\"GetFundVisible\\\" disabled>\\r\\n                                                    <i></i>Payment without Release Order\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" style=\\\"margin-top:15px;\\\">\\r\\n                                        <div class=\\\"col col-6 selectContainer\\\">\\r\\n                                            <label><strong>Release Order Date: </strong>{{paymentProcessDetails.paymentReleaseDateString}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Fund Request No: </strong>{{paymentProcessDetails.fundRequestId}}</label>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please select atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </section>\\r\\n                                <!--<section *ngIf=\\\"GetFundVisible\\\">\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top:15px;\\\">\\r\\n            <div class=\\\"col col-6 selectContainer\\\">\\r\\n                <label><strong>Release Order: </strong>{{paymentProcessDetails.fundRequestId}}</label>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </section>-->\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- widget grid *ngIf=\\\"GetClaimVisible\\\"-->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                             \\r\\n                                <div>\\r\\n\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"widget-body no-padding\\\">\\r\\n                                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>SSIN</th>\\r\\n                                                    <th>Beneficiary Name</th>\\r\\n                                                    <th>Beneficiary Type</th>\\r\\n                                                    <th>Claim Reference No.</th>\\r\\n                                                    <th>Claim Category</th>\\r\\n                                                    <th>Submission Date</th>\\r\\n                                                    <th>Amount</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <!--<tbody *ngIf=\\\"claimsData.length==0\\\">\\r\\n                                        <tr >\\r\\n                                            <td colspan=\\\"8\\\">\\r\\n                                                No data available\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>-->\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let claim of claimsData\\\">\\r\\n                                                    <td>{{claim.ssin}}</td>\\r\\n                                                    <td>{{claim.benName}}</td>\\r\\n                                                    <td>{{claim.benType}}</td>\\r\\n                                                    <td>{{claim.claimRefernceNo}}</td>\\r\\n                                                    <td>{{getTypeName(claim.claimType)}}</td>\\r\\n                                                    <td>{{claim.submittedDateString}}</td>\\r\\n                                                    <td>{{claim.approvedAmount}}</td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"8\\\"></td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </article>\\r\\n\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n\\r\\n            <form class=\\\"smart-form\\\">\\r\\n                <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                <footer>\\r\\n                    <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelclick()\\\"> Cancel</a>\\r\\n                </footer>\\r\\n            </form>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, ClaimConstants} from '../../claim/pipes/constnts.model';\r\nimport { PaymentProcessMasterData } from '../../models/paymentProcessDetails.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { PaymentProcessModel, PaymentClaims, PaymentClaimList } from '../../claim/models/paymentprocess.model';\r\nimport { ClaimTypes } from '../../models/ClaimTypes.model';\r\nimport { FundRequestModel, PaymentModel } from '../../models/fundRequestProcess.model';\r\nimport { FundRequest } from '../../models/fundRequest.model';\r\n\r\n@Component({\r\n  selector: 'app-reviewpaymentprocess',\r\n  templateUrl: './reviewpaymentprocess.component.html',\r\n  styleUrls: ['./reviewpaymentprocess.component.css']\r\n})\r\nexport class ReviewpaymentprocessComponent implements OnInit {\r\n    private route$: Subscription;\r\n    private paymentProcessId: any;\r\n    mode: string;\r\n    editmode: boolean = false;\r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    AmountShortfall: any;\r\n    paymentProcessDetails: PaymentProcessModel;\r\n    claimsData: PaymentClaimList[];\r\n    GetFundVisible: boolean = false;\r\n    fundRequestId: any;\r\n    pageHeader: string;\r\n    statusId: any;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        \r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.paymentProcessId = params[\"paymentProcessId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.statusId = params[\"statusId\"];\r\n                if (this.statusId == ClaimStatus.PaymentProcessingbyALC) {\r\n                    this.pageHeader = \"Payment Process View\";\r\n                }\r\n                else if (this.statusId == ClaimStatus.PaymentReleasebyTreasurer) {\r\n                    this.pageHeader = \"Payment Release View\";\r\n                }\r\n                if (this.mode == \"edit\") {\r\n                    this.editmode = true;\r\n                }\r\n                else\r\n                    this.editmode = false;\r\n            });\r\n        this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.getPaymentProcessById(this.paymentProcessId);\r\n  }\r\n    cancelclick() {\r\n        this.router.navigate(['alc/paymentprocessedlist']);\r\n    }\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n                if (this.officeDetails.approvedClaimsAmount > this.RloOfficeAddress.balanceOfTheAmount)\r\n                    this.AmountShortfall = (this.officeDetails.approvedClaimsAmount - this.RloOfficeAddress.balanceOfTheAmount);\r\n                else\r\n                    this.AmountShortfall = 0;\r\n\r\n            });\r\n    }\r\n\r\n    getPaymentProcessById(paymentProcessId: any) {\r\n        debugger;\r\n        this.claimsData = [];\r\n        this.dataService\r\n            .getPaymentProcessById(paymentProcessId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.paymentProcessDetails = data;\r\n                this.claimsData = data.paymentClaimList;\r\n                this.fundRequestId = this.paymentProcessDetails.fundRequestId;\r\n                debugger;\r\n                if (this.fundRequestId != null) {\r\n                        this.GetFundVisible = true;\r\n                }\r\n                else\r\n                    this.GetFundVisible = false;\r\n            });\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Search Student </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <label class=\\\"label\\\">Student Name </label>\\r\\n                            <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"advancedSearchTextbox\\\" [(ngModel)]=\\\"studentName\\\" placeholder=\\\"Search Student Name\\\"\\r\\n                                   maxlength=\\\"50\\\" #name=\\\"ngModel\\\" required>\\r\\n                            <button (click)=\\\"searchStudent()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <!--<span [style.color]=\\\"!nameValid?'red':''\\\"><b>*</b></span>\\r\\n                                <div *ngIf=\\\"!nameValid\\\">\\r\\n                                <span style=\\\"color: red;\\\">Student Name is required </span>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>Education</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { WorkflowTrans, pagination } from '../../claim/pipes/constnts.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search-student',\r\n  templateUrl: './search-student.component.html',\r\n  styleUrls: ['./search-student.component.css']\r\n})\r\nexport class SearchStudentComponent implements OnInit {\r\n    claimsData: Claims[] = [];\r\n    nameValid: boolean = true;\r\n    studentName: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    searchStudent() {\r\n        debugger;\r\n        this.getEducationClaimsSubmittedbyStudentName(this.studentName, this.page, this.pageSize);\r\n    }\r\n    ngOnInit() {\r\n        //this.getEducationClaimsSubmittedbyStudentName('montu', this.page, this.pageSize);\r\n    }\r\n    getEducationClaimsSubmittedbyStudentName(name: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getEducationClaimsSubmittedbyStudentName(name, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"search\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"search\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    changepage(page) {\r\n        this.getEducationClaimsSubmittedbyStudentName(this.studentName, this.page, this.pageSize);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Sent Back </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                                <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                                <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benType\\\">Beneficiary Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Claim Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDateString\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"sentBackDate\\\">Sent back Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let user of mf.data|grdFilter: {ssin: searchText, claimAmount: searchText,submittedDateString: searchText, sentBackDateString: searchText,\\r\\n       benName: searchText, claimType: searchText, claimRefernceNo:searchText,  benType: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onTrackClaimClick(user)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                        <a (click)=\\\"onreviewClick(user)\\\" title=\\\"Review\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-check-square-o fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{user.ssin}}</td>\\r\\n                                    <td>{{user.benName}}</td>\\r\\n                                    <td>{{user.benType}}</td>\\r\\n                                    <td>{{user.claimRefernceNo}}</td>\\r\\n                                    <td>{{getTypeName(user.claimType)}}</td>\\r\\n                                    <td>{{user.submittedDateString}}</td>\\r\\n                                    <td>{{user.claimAmount}}</td>\\r\\n                                    <td>{{user.sentBackDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, WorkflowTrans, ClaimConstants, pagination} from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-sendback-claims',\r\n  templateUrl: './sendback-claims.component.html',\r\n  styleUrls: ['./sendback-claims.component.css']\r\n})\r\nexport class SendbackClaimsComponent implements OnInit {\r\n\r\n    public claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    onreviewClick(item: any) {\r\n        this.router.navigate(['alc/reviewclaims', { claimId: item.claimId, claimType: item.claimType, transactionId: item.transactionId, mode: \"sendback\", workflowId: WorkflowTrans.workflow, chronologicalOrder: -1 }], { skipLocationChange: true });\r\n\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['alc/claimtrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"sendback\", workflowId: WorkflowTrans.workflow}], { skipLocationChange: true });\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        \r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromALC, WorkflowTrans.workflow,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n\r\n    getApprovalClaims(id: number, type: any, status: any, wfId: any, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        \r\n        this.dataService\r\n            .GetPendingApprovals(id, type, status, wfId, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n                console.log(this.claimsData);\r\n            });\r\n    }\r\n\r\n\r\n    //page change event\r\n    changepage(page) {\r\n        this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromALC, WorkflowTrans.workflow,\"0\",\"0\", page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchPendingApprovals(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getApprovalClaims(this.userService.user.deptUserid, this.userService.user.userTpe, ClaimStatus.SendbackfromALC, WorkflowTrans.workflow, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Track Claim</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <fieldset>\\r\\n                            <section>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                                        <div class=\\\"well well-sm\\\">\\r\\n                                            <div class=\\\"smart-timeline\\\">\\r\\n                                                <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                    <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                {{item.actionComments}}\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <!--<li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>25th july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>ALC Review - Send Back </strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Provided Bill is out of the date, for which claim can't be processed. Resubmit the right bill\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>23rd july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Inspector Review - Forwarded to ALC</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Forwarded to AL at 10.30am\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>22nd July 2018</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Resubmission by Beneficiary</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Here attached the document\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>21st july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Inspector Review - Sent Back</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Can you please submit your Medicall Bill?\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>18th July 2018</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Claim Submission - Beneficiary</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Sir, Can you please review and approve my claim\\r\\n                                                            </p>\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>-->\\r\\n                                                    <!--<li class=\\\"text-center\\\">\\r\\n                                                        <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-arrow-down text-muted\\\"></i> LOAD MORE</a>\\r\\n                                                    </li>-->\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                        </fieldset>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n    <div class=\\\"smart-form\\\">\\r\\n        <footer>\\r\\n            <a class=\\\"btn btn-danger\\\" (click)=\\\"onBackClaimClick()\\\">Cancel</a>\\r\\n        </footer>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { EducationDetailModel, EducationHdrModel } from '../../claim/models/education.model';\r\nimport { ClaimTrack } from '../../claim/models/track.model';\r\nimport { Beneficiary } from '../../claim/models/ben.model';\r\nimport { window } from 'rxjs-compat/operator/window';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans } from '../../claim/pipes/constnts.model';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-timetrack',\r\n    templateUrl: './timetrack.component.html',\r\n    styleUrls: ['./timetrack.component.css']\r\n})\r\nexport class TimetrackComponent implements OnInit {\r\n\r\n    private route$: Subscription;\r\n    private tranctionType: any;\r\n    private transactionId: any;\r\n    private workflowId: any;\r\n\r\n    mode: string;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.transactionId = params[\"transactionId\"];\r\n                this.tranctionType = params[\"tranctionType\"];\r\n                this.mode = params[\"mode\"];\r\n                this.workflowId = params[\"workflowId\"];\r\n            }\r\n        );\r\n        this.getClaimDetailsByClaimId(this.transactionId, ClaimConstants[this.tranctionType], this.workflowId)\r\n    }\r\n    getClaimDetailsByClaimId(transactionId: any, tranctionType: any,wfId:any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType,wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n            });\r\n    }\r\n\r\n    onBackClaimClick() {\r\n        if (this.mode == \"reject\") {\r\n            this.router.navigate(['alc/rejectclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"sendback\") {\r\n            this.router.navigate(['alc/sendbackclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"pending\") {\r\n            this.router.navigate(['alc/pendingapprovalclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"approval\") {\r\n            this.router.navigate(['alc/approvalclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"referalreject\") {\r\n            this.router.navigate(['alc/referralreject'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"referalsendback\") {\r\n            this.router.navigate(['alc/referralsendback'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"referal\") {\r\n            this.router.navigate(['alc/referclaims'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"referallapprove\") {\r\n            this.router.navigate(['alc/referralapproval'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"claimstatus\") {\r\n            this.router.navigate(['alc/claimstatus'], { skipLocationChange: true });\r\n        }\r\n        if (this.mode == \"search\") {\r\n            this.router.navigate(['alc/searchstudent'], { skipLocationChange: true });\r\n\r\n        }\r\n    }\r\n\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Utilisation Certificate </h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>ALC Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>ALC Name: </strong>{{officeDetails.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{RloOfficeAddress.rloOfficeName}} <br /> {{RloOfficeAddress.addressLine1}} &nbsp; {{RloOfficeAddress.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" style=\\\"margin-top:10px;\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label>Board<span [style.color]=\\\"!boardIdValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"select\\\">\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"boardId\\\" (change)=\\\"getData()\\\"\\r\\n                                                        [(ngModel)]=\\\"utilizationCertificate.boardId\\\" #boardId=\\\"ngModel\\\" \\r\\n                                                        [ngClass]=\\\"{'invalid-data':boardId.invalid && (!boardIdValid ||  boardId.touched), 'valid-data': boardId.valid && boardIdValid}\\\"\\r\\n                                                        required [disabled]=\\\"viewMode\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose a Board</option>\\r\\n                                                    <option value=\\\"{{board.boardId}}\\\" *ngFor=\\\"let board of boardList\\\">{{board.boardName}}</option>\\r\\n                                                </select> <i></i>\\r\\n                                            </label>\\r\\n                                                <div *ngIf=\\\" (!boardIdValid )\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Board is required </span>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label>Financial Year <span [style.color]=\\\"!financialYearValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"select\\\">\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"financialYear\\\" (change)=\\\"getData()\\\"\\r\\n                                                        [(ngModel)]=\\\"utilizationCertificate.financialYearId\\\"\\r\\n                                                        #financialYear=\\\"ngModel\\\"\\r\\n                                                        [ngClass]=\\\"{'invalid-data':financialYear.invalid && (!financialYearValid ||  financialYear.touched), 'valid-data': financialYear.valid && financialYearValid}\\\"\\r\\n                                                        required [disabled]=\\\"viewMode\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{year.financialYearId}}\\\" *ngFor=\\\"let year of financialYears\\\">{{year.financialYear}}</option>\\r\\n                                                </select> <i></i>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"financialYear.invalid && (!financialYearValid ||  financialYear.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Financial Year is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <!--<section class=\\\"col col-6\\\" id=\\\"secFirstApp\\\" *ngIf=\\\"viewDateOfFirstAppointment\\\"-->\\r\\n                                            <label>Utilisation Certificate Date <span [style.color]=\\\"!utilizationCertificateDateValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"utilizationCertificateDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                       [maxDate]=\\\"maxDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                       readonly #utilizationCertificateDate=\\\"ngModel\\\" [(ngModel)]=\\\"utilizationCertificate.date\\\"\\r\\n                                                       value=\\\"{{ utilizationCertificate.date | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':utilizationCertificateDate.invalid && (!utilizationCertificateDateValid), 'valid-data': utilizationCertificateDate.valid && utilizationCertificateDateValid}\\\"\\r\\n                                                       required [disabled]=\\\"viewMode\\\">\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"utilizationCertificateDate.invalid && (!utilizationCertificateDateValid)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Utilisation Certificate Date is required </span>\\r\\n                                            </div>\\r\\n\\r\\n                                            <!--</section>-->\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\" style=\\\"margin-top:10px;\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please select atleast one record to proceed.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"certificatesVisible\\\" class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                <section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\">\\r\\n                                <div>\\r\\n                                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                                    </div>\\r\\n                                    <fieldset>\\r\\n                                        <div class=\\\"widget-body no-padding\\\">\\r\\n                                            <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                                                   [mfData]=\\\"fundReleaseOrder\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\" [disabled] =\\\"viewMode\\\"></th>\\r\\n                                                        <th>Fund Request Type</th>\\r\\n                                                        <th>Fund Release Order</th>\\r\\n                                                        <th>Request Date</th>\\r\\n                                                        <th>Amount</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let order of mf.data\\\">\\r\\n                                                        <td class=\\\"\\\">\\r\\n                                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"order.selected\\\" (change)=\\\"checkIfAllSelected(order);\\\" [disabled] =\\\"viewMode\\\">\\r\\n                                                        </td>\\r\\n                                                        <td>{{order.fundRequestTypeName}}</td>\\r\\n                                                        <td>{{order.fundReleaseOrderHdrId}}</td>\\r\\n                                                        <td>{{order.requestDateString}}</td>\\r\\n                                                        <td>{{order.sanctionedAmount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot>\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"8\\\" style=\\\"border-bottom:0px !important\\\">\\r\\n                                                            <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tfoot>\\r\\n                                            </table>\\r\\n\\r\\n                                        </div>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </article>\\r\\n\\r\\n                    </div>\\r\\n                </section>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"certificatesVisible\\\">\\r\\n                <div class=\\\"jarviswidget-editbox\\\">\\r\\n                </div>\\r\\n                <div class=\\\"widget-body no-padding\\\">\\r\\n                    <form class=\\\"smart-form smart-form-main\\\">\\r\\n                        <fieldset>\\r\\n                            <section>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col col-6\\\">\\r\\n                                        <label>Opening Balance <span [style.color]=\\\"!openingBalanceValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"openingBalance\\\" placeholder=\\\"Opening Balance\\\" [(ngModel)]=\\\"utilizationCertificate.openingBalance\\\"\\r\\n                                                   #openingBalance=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': openingBalance.invalid && ( !openingBalanceValid || openingBalance.touched ),\\r\\n                                                        'valid-data': otherHospitalValid && otherHospital.valid  }\\\" required (change)=\\\"getBalance($event)\\\" [disabled] =\\\"viewMode\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"openingBalance.invalid && (!openingBalanceValid || openingBalance.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Opening Balance is required </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-6\\\">\\r\\n                                        <label>Received During</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"receivedDuring\\\" placeholder=\\\"Received During\\\" NumbersOnly [(ngModel)]=\\\"utilizationCertificate.fundRecieved\\\"\\r\\n                                                   #receivedDuring=\\\"ngModel\\\" disabled=\\\"disabled\\\">\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col col-6\\\">\\r\\n                                        <label>Utilized <span [style.color]=\\\"!utilizedValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"utilized\\\" placeholder=\\\"Utilized\\\" [(ngModel)]=\\\"utilizationCertificate.fundUtilized\\\"\\r\\n                                                   #utilized=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': utilized.invalid && ( !utilizedValid || utilized.touched ),\\r\\n                                                        'valid-data': utilizedValid && utilized.valid  }\\\" required (change)=\\\"getBalance($event)\\\" [disabled] =\\\"viewMode\\\">\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"utilized.invalid && (!utilizedValid || utilized.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Utilized is required </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-6\\\">\\r\\n                                        <label>Balance</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"balance\\\" placeholder=\\\"Balance\\\" NumbersOnly [(ngModel)]=\\\"utilizationCertificate.balance\\\"\\r\\n                                                   #balance=\\\"ngModel\\\" disabled=\\\"disabled\\\">\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                        </fieldset>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- widget grid -->\\r\\n            <form class=\\\"smart-form\\\" *ngIf=\\\"certificatesVisible\\\">\\r\\n                <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                <footer>\\r\\n                    <a class=\\\"btn btn-warning\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                    <a *ngIf=\\\"!viewMode\\\" id=\\\"btnSava\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SubmitRequest()\\\"> Submit </a>\\r\\n\\r\\n                </footer>\\r\\n            </form>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute, Data } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, ClaimConstants, LovConstants } from '../../claim/pipes/constnts.model';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { AlcDetails, RloOfficeInformation, RloOffice } from '../../models/AlcDetails.model';\r\nimport { PaymentProcessModel, PaymentClaims } from '../../claim/models/paymentprocess.model';\r\nimport { Dictionary } from 'lodash'\r\nimport * as Collections from 'typescript-collections';\r\nimport { forEach } from 'typescript-collections/dist/lib/arrays';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { BoardMasterDetails } from '../../models/boardDetails.model';\r\nimport { WorkFlowMaster } from '../../models/workerTypeDetails.model';\r\nimport { LocationsMaster } from '../../models/locationsDetails.model';\r\nimport { ClaimTypes } from '../../models/ClaimTypes.model';\r\nimport { FundRequestModel, PaymentModel } from '../../models/fundRequestProcess.model';\r\nimport { LovDetails } from '../../claim/models/Lov.model';\r\nimport { FundRequestExpensesHdr, FundRequestExpensesDtlList } from '../../models/expenses.model';\r\nimport { FundReleaseOrder } from '../../models/fundReleaseOrder.model';\r\nimport { DATE } from 'ngx-bootstrap/chronos/units/constants';\r\nimport { DatepickerOptions } from 'ng2-datepicker';\r\nimport { FinancialYearModel } from 'src/app/models/financialYear.model';\r\nimport { UtilizationCertificate } from '../../models/utilizationcertificate.model';\r\nimport { Subscription } from 'rxjs';\r\n@Component({\r\n  selector: 'app-utilizationcertificate',\r\n  templateUrl: './utilizationcertificate.component.html',\r\n  styleUrls: ['./utilizationcertificate.component.css']\r\n})\r\nexport class UtilizationcertificateComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('expensesModal') public expensesModal: ModalDirective;\r\n\r\n  \r\n    officeDetails: RloOfficeInformation;\r\n    RloOfficeAddress: RloOffice;\r\n    selectedAll: any;\r\n    showErrorMessage: boolean = false;\r\n    successMessage: string;\r\n    sumofAmount: any = 0;\r\n    route$: Subscription;\r\n    ucId: number = 0;\r\n    mode: string = \"\";\r\n    public fundReleaseOrder: FundReleaseOrder[] = [];\r\n    //utilizationDate: any;\r\n    //financialYearId: any;\r\n    datePickerConfig: any;\r\n    financialYears: FinancialYearModel[];\r\n    certificatesVisible: boolean = false;\r\n    utilizationCertificateDateValid: boolean = true;\r\n    financialYearValid: boolean = true;\r\n    openingBalanceValid: boolean = true;\r\n    utilizedValid: boolean = true;\r\n    utilizationCertificate = {} as UtilizationCertificate;\r\n    selectedReleaseOrdersList: Array<number> = [];\r\n    viewMode: boolean = false;\r\n    maxDate: Date;\r\n    boardList: BoardMasterDetails[];\r\n    boardIdValid: boolean = true;\r\n    //boardId: any;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: AlcDataService, private userService: UserService) {\r\n        this.maxDate = new Date();\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.GetRLOOfficeUserInformation(this.userService.user.deptUserid, this.userService.user.userTpe);\r\n        this.GetFinancialYears();\r\n        this.getBoardDetails();\r\n        //this.boardId = 0;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.ucId = params[\"ucId\"] != null ? Number(params[\"ucId\"]) : 0;\r\n                this.mode = params[\"mode\"];\r\n            }\r\n        );\r\n        if (this.ucId > 0 && this.mode == \"view\") {\r\n            this.viewMode = true;\r\n            this.certificatesVisible = true;\r\n            this.getUtilizationCertificateDetails(this.ucId);\r\n        }\r\n    }\r\n    onItemSelect(item: any) {\r\n        console.log(item);\r\n    }\r\n    onSelectAll(items: any) {\r\n        console.log(items);\r\n    }\r\n    GetFinancialYears() {\r\n        this.dataService\r\n            .GetFinancialYears()\r\n            .subscribe((data: any) => {\r\n                this.financialYears = data;\r\n            });\r\n    }\r\n    GetReleaseOrders(rloOfficeId: number, finYear: number, boardId: number) {\r\n        debugger;\r\n        this.dataService\r\n            .GetReleaseOrders(rloOfficeId, finYear, boardId)\r\n            .subscribe((data: any) => {\r\n                this.fundReleaseOrder = data;\r\n            });\r\n    }\r\n    //GetAlcInformation(deptUserid: number) {\r\n    //    this.dataService\r\n    //        .GetAlcInformation(deptUserid)\r\n    //        .subscribe((data: any) => {\r\n    //            this.alcDetails = data;\r\n    //            if (this.alcDetails.approvedClaimsAmount > this.alcDetails.balanceOfTheAmount)\r\n    //                this.AmountShortfall = (this.alcDetails.approvedClaimsAmount - this.alcDetails.balanceOfTheAmount);\r\n    //            else\r\n    //                this.AmountShortfall = 0;\r\n    //        });\r\n    //}\r\n\r\n    GetRLOOfficeUserInformation(deptUserid: number, userType: any) {\r\n        this.dataService\r\n            .getRLOOfficeUserInformation(deptUserid, userType)\r\n            .subscribe((data: any) => {\r\n                this.officeDetails = data;\r\n                this.RloOfficeAddress = data.rloOffices[0];\r\n            });\r\n    }\r\n    financialYearChange(year) {\r\n        this.GetReleaseOrders(this.RloOfficeAddress.rloOfficeId, year, this.utilizationCertificate.boardId);\r\n        this.certificatesVisible = true;\r\n    }\r\n    getData() {\r\n        if (this.utilizationCertificate.financialYearId != undefined && this.utilizationCertificate.financialYearId > 0\r\n            && this.utilizationCertificate.boardId != undefined && this.utilizationCertificate.boardId > 0) {\r\n            this.GetReleaseOrders(this.RloOfficeAddress.rloOfficeId, this.utilizationCertificate.financialYearId, this.utilizationCertificate.boardId);\r\n            this.certificatesVisible = true;\r\n        }\r\n    }\r\n    SubmitRequest() {\r\n        debugger;\r\n\r\n        if (this.validateDetails()) {\r\n            this.selectedReleaseOrders();\r\n                this.showErrorMessage = false;\r\n            if (this.selectedReleaseOrdersList != null && this.selectedReleaseOrdersList.length > 0) {\r\n                this.utilizationCertificate.rloOfficeID = this.RloOfficeAddress.rloOfficeId;\r\n                this.utilizationCertificate.createdBy = this.userService.user.deptUserid;\r\n                this.utilizationCertificate.statusId = 1;\r\n                this.utilizationCertificate.createdDate = new Date();\r\n                //this.utilizationCertificate.boardId = this.boardId;\r\n                this.utilizationCertificate.fundReleaseOrdersList = this.selectedReleaseOrdersList;\r\n                //this.claimData.fundRequested = this.sumofAmount;\r\n\r\n                if (confirm(\"Are you sure to proceed \")) {\r\n                    this.dataService\r\n                        .saveUtilizationCertificate(this.utilizationCertificate)\r\n                        .then((data: any) => {\r\n                            if (data) {\r\n                                this.successMessage = \"Utilization Certificate created successfully\"; \r\n                                this.sumofAmount = 0;\r\n                            }\r\n                            else {\r\n                                this.successMessage = \"Invalid transaction\";\r\n                            }\r\n                            this.successModal.show();\r\n                        });\r\n                }\r\n            }\r\n            else { this.showErrorMessage = true; }\r\n        }\r\n    }\r\n    selectAll() {\r\n        this.showErrorMessage = false;\r\n        for (var i = 0; i < this.fundReleaseOrder.length; i++) {\r\n            this.fundReleaseOrder[i].selected = this.selectedAll;\r\n            if (this.selectedAll) {\r\n                this.sumofAmount += this.fundReleaseOrder[i].sanctionedAmount;\r\n            }\r\n        }\r\n        this.utilizationCertificate.fundRecieved = this.sumofAmount;\r\n    }\r\n    checkIfAllSelected(itemData) {\r\n        this.showErrorMessage = false;\r\n        this.selectedAll = this.fundReleaseOrder.every(function (item: any) {\r\n            return item.selected == true;\r\n        })\r\n\r\n        if (itemData.selected == true) { this.sumofAmount += itemData.sanctionedAmount; }\r\n        else { this.sumofAmount -= itemData.sanctionedAmount; }\r\n        this.utilizationCertificate.fundRecieved = this.sumofAmount;\r\n    }\r\n    selectedReleaseOrders() {\r\n        var res = this.fundReleaseOrder.filter(x => x.selected == true);\r\n        this.selectedReleaseOrdersList = [];\r\n        for (var i = 0; i < res.length; i++) {\r\n            this.selectedReleaseOrdersList.push(res[i].fundReleaseOrderHdrId);\r\n        }\r\n    }\r\n    cancelClick() {\r\n        this.router.navigate(['alc/utilizationcertificatelist']);\r\n    }\r\n    validateDetails(): boolean {\r\n        let isValid = true;\r\n        this.utilizationCertificateDateValid = this.financialYearValid = this.openingBalanceValid = this.utilizedValid = true;\r\n        this.showErrorMessage = false;\r\n        if (this.utilizationCertificate.date == undefined) { this.utilizationCertificateDateValid = isValid = false }\r\n        if (this.utilizationCertificate.financialYearId == 0 || this.utilizationCertificate.financialYearId == undefined) { this.financialYearValid = isValid = false }\r\n        if (this.utilizationCertificate.openingBalance == undefined || this.utilizationCertificate.openingBalance <= 0) { this.openingBalanceValid = isValid = false; }\r\n        if (this.utilizationCertificate.fundUtilized == undefined || this.utilizationCertificate.fundUtilized <= 0) { this.utilizedValid = isValid = false; }\r\n        return isValid;\r\n    }\r\n    getBalance(event: any) {\r\n        debugger;\r\n        let a: number = 0;\r\n        let b: number = 0;\r\n        let c: number = 0;\r\n        a = this.utilizationCertificate.openingBalance != undefined ? +this.utilizationCertificate.openingBalance : 0;\r\n        b = this.utilizationCertificate.fundRecieved != undefined ? +this.utilizationCertificate.fundRecieved : 0;\r\n        c = this.utilizationCertificate.fundUtilized != undefined ? +this.utilizationCertificate.fundUtilized : 0;\r\n        //alert((a + b) - c);\r\n        this.utilizationCertificate.balance = ((a + b) - c);\r\n    }\r\n    getUtilizationCertificateDetails(ucId: number) {\r\n        this.dataService\r\n            .getUtilizationCertificateDetails(ucId)\r\n            .subscribe((data: any) => {\r\n                this.utilizationCertificate = data;\r\n                this.fundReleaseOrder = data.certificateReleaseOrders;\r\n\r\n                this.utilizationCertificate.date = new Date(this.utilizationCertificate.date);\r\n            });\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        window.location.href = \"alc/utilizationcertificatelist\";\r\n    }\r\n    getBoardDetails() {\r\n        this.dataService\r\n            .getBoardMasterData()\r\n            .subscribe((data: any) => {\r\n                this.boardList = data;\r\n            });\r\n    }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>utilisation Certificate Status</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"utilizationCertificateDetails\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"rloOfficeName\\\">RLO</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"dateString\\\">Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"openingBalance\\\">Opening Balance</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundRecieved\\\">Fund Received</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"fundUtilized\\\">FundUtilized</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"balance\\\">Balance</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"financialYear\\\">Financial Year</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {rloOfficeName: searchText,dateString: searchText,openingBalance: searchText,\\r\\n                                    fundRecieved: searchText, fundUtilized: searchText, balance: searchText, financialYear: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onViewClick(data)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a (click)=\\\"onPDFViewClick(data)\\\" title=\\\"PDF View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{data.rloOfficeName}}</td>\\r\\n                                    <td>{{data.dateString}}</td>\\r\\n                                    <td>{{data.openingBalance}}</td>\\r\\n                                    <td>{{data.fundRecieved}}</td>\\r\\n                                    <td>{{data.fundUtilized}}</td>\\r\\n                                    <td>{{data.balance}}</td>\\r\\n                                    <td>{{data.financialYear}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\">\\r\\n                                        <div *ngIf=\\\"utilizationCertificateDetails.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n<div bsModal #pdfModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Form-V Pdf</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                Utilisation Certificate genarated, Please print or download.\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf('print')\\\">\\r\\n                    Print Utilisation Certificate\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf('download')\\\">\\r\\n                    Download Utilisation Certificate\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlcDataService } from '../services/alc-data.service';\r\nimport { UtilizationCertificate } from '../../models/utilizationcertificate.model';\r\nimport { UserService } from '../../UserService';\r\nimport { pagination } from '../../claim/pipes/constnts.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport * as FileSaver from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-utilizationcertificatelist',\r\n  templateUrl: './utilizationcertificatelist.component.html',\r\n  styleUrls: ['./utilizationcertificatelist.component.css']\r\n})\r\nexport class UtilizationcertificatelistComponent implements OnInit {\r\n    @ViewChild('pdfModal') public pdfModal: ModalDirective;\r\n    //public claimsData: Claims[];\r\n    public utilizationCertificateDetails: UtilizationCertificate[] = [];\r\n    ucId: number;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: AlcDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    onViewClick(item: any) {\r\n            this.router.navigate(['alc/utilizationcertificate', { ucId: item.utilizationCertificateHdrId, mode: \"view\"}], { skipLocationChange: true });\r\n    }\r\n    onPDFViewClick(item: any) {\r\n        debugger;\r\n        this.ucId = item.utilizationCertificateHdrId;\r\n        this.pdfModal.show();\r\n    }\r\n    downLoadPdf(type) {\r\n        debugger;\r\n        this.dataService\r\n            .downloadUtilizationCertificate(this.ucId)\r\n            .then((data: any) => {\r\n                var blob = new Blob([data.body], { type: 'application/pdf' });\r\n                if (type == 'print') {\r\n                    const blobUrl = URL.createObjectURL(blob);\r\n                    const iframe = document.createElement('iframe');\r\n                    iframe.style.display = 'none';\r\n                    iframe.src = blobUrl;\r\n                    document.body.appendChild(iframe);\r\n                    iframe.contentWindow.print();\r\n                }\r\n                else {\r\n                    FileSaver.saveAs(blob, \"UtilizationCertificate.pdf\");\r\n                }\r\n                this.pdfModal.hide();\r\n            });\r\n    }\r\n    ngOnInit() {\r\n        this.getUtilizationCertificates(this.userService.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n\r\n    getUtilizationCertificates(id: number, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getUtilizationCertificates(id, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.utilizationCertificateDetails = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n\r\n    changepage(page) {\r\n        this.getUtilizationCertificates(this.userService.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n\r\n}"],"sourceRoot":""}