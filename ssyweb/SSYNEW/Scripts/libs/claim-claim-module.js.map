{"version":3,"sources":["webpack:///./src/app/claim/adjustemententryform/adjustemententryform.component.css","webpack:///./src/app/claim/adjustemententryform/adjustemententryform.component.html","webpack:///./src/app/claim/adjustemententryform/adjustemententryform.component.ts","webpack:///./src/app/claim/agent-claim-entry/agent-claim-entry.component.css","webpack:///./src/app/claim/agent-claim-entry/agent-claim-entry.component.html","webpack:///./src/app/claim/agent-claim-entry/agent-claim-entry.component.ts","webpack:///./src/app/claim/agent-claims/agent-claims.component.css","webpack:///./src/app/claim/agent-claims/agent-claims.component.html","webpack:///./src/app/claim/agent-claims/agent-claims.component.ts","webpack:///./src/app/claim/agent-draft/agent-draft.component.css","webpack:///./src/app/claim/agent-draft/agent-draft.component.html","webpack:///./src/app/claim/agent-draft/agent-draft.component.ts","webpack:///./src/app/claim/agent-pf-collection-form/agent-pf-collection-form.component.css","webpack:///./src/app/claim/agent-pf-collection-form/agent-pf-collection-form.component.html","webpack:///./src/app/claim/agent-pf-collection-form/agent-pf-collection-form.component.ts","webpack:///./src/app/claim/agent-pf-deposit/agent-pf-deposit.component.css","webpack:///./src/app/claim/agent-pf-deposit/agent-pf-deposit.component.html","webpack:///./src/app/claim/agent-pf-deposit/agent-pf-deposit.component.ts","webpack:///./src/app/claim/agent-pf-deposited-list/agent-pf-deposited-list.component.css","webpack:///./src/app/claim/agent-pf-deposited-list/agent-pf-deposited-list.component.html","webpack:///./src/app/claim/agent-pf-deposited-list/agent-pf-deposited-list.component.ts","webpack:///./src/app/claim/agent-referrall/agent-referrall.component.css","webpack:///./src/app/claim/agent-referrall/agent-referrall.component.html","webpack:///./src/app/claim/agent-referrall/agent-referrall.component.ts","webpack:///./src/app/claim/ben-pf-details/ben-pf-details.component.css","webpack:///./src/app/claim/ben-pf-details/ben-pf-details.component.html","webpack:///./src/app/claim/ben-pf-details/ben-pf-details.component.ts","webpack:///./src/app/claim/bulkpfdeposit/bulkpfdeposit.component.css","webpack:///./src/app/claim/bulkpfdeposit/bulkpfdeposit.component.html","webpack:///./src/app/claim/bulkpfdeposit/bulkpfdeposit.component.ts","webpack:///./src/app/claim/bulkpfdepositcollection-list/bulkpfdepositcollection-list.component.css","webpack:///./src/app/claim/bulkpfdepositcollection-list/bulkpfdepositcollection-list.component.html","webpack:///./src/app/claim/bulkpfdepositcollection-list/bulkpfdepositcollection-list.component.ts","webpack:///./src/app/claim/bulkpfdepositlist/bulkpfdepositlist.component.css","webpack:///./src/app/claim/bulkpfdepositlist/bulkpfdepositlist.component.html","webpack:///./src/app/claim/bulkpfdepositlist/bulkpfdepositlist.component.ts","webpack:///./src/app/claim/claim-draft/claim-draft.component.css","webpack:///./src/app/claim/claim-draft/claim-draft.component.html","webpack:///./src/app/claim/claim-draft/claim-draft.component.ts","webpack:///./src/app/claim/claim-entry/claim-entry.component.css","webpack:///./src/app/claim/claim-entry/claim-entry.component.html","webpack:///./src/app/claim/claim-entry/claim-entry.component.ts","webpack:///./src/app/claim/claim-track/claim-track.component.css","webpack:///./src/app/claim/claim-track/claim-track.component.html","webpack:///./src/app/claim/claim-track/claim-track.component.ts","webpack:///./src/app/claim/claim-view/claim-view.component.css","webpack:///./src/app/claim/claim-view/claim-view.component.html","webpack:///./src/app/claim/claim-view/claim-view.component.ts","webpack:///./src/app/claim/claim.module.ts","webpack:///./src/app/claim/claimlanding.component.html","webpack:///./src/app/claim/claimlanding.component.ts","webpack:///./src/app/claim/claims-referral/claims-referral.component.css","webpack:///./src/app/claim/claims-referral/claims-referral.component.html","webpack:///./src/app/claim/claims-referral/claims-referral.component.ts","webpack:///./src/app/claim/claims/claims.component.css","webpack:///./src/app/claim/claims/claims.component.html","webpack:///./src/app/claim/claims/claims.component.ts","webpack:///./src/app/claim/claimviewdata/claimviewdata.component.css","webpack:///./src/app/claim/claimviewdata/claimviewdata.component.html","webpack:///./src/app/claim/claimviewdata/claimviewdata.component.ts","webpack:///./src/app/claim/directives/number.directive.ts","webpack:///./src/app/claim/gripsresponse/gripsresponse.component.css","webpack:///./src/app/claim/gripsresponse/gripsresponse.component.html","webpack:///./src/app/claim/gripsresponse/gripsresponse.component.ts","webpack:///./src/app/claim/legacy-claim-entry/legacy-claim-entry.component.css","webpack:///./src/app/claim/legacy-claim-entry/legacy-claim-entry.component.html","webpack:///./src/app/claim/legacy-claim-entry/legacy-claim-entry.component.ts","webpack:///./src/app/claim/legacy-list/legacy-list.component.css","webpack:///./src/app/claim/legacy-list/legacy-list.component.html","webpack:///./src/app/claim/legacy-list/legacy-list.component.ts","webpack:///./src/app/claim/legacypfdetails/legacypfdetails.component.css","webpack:///./src/app/claim/legacypfdetails/legacypfdetails.component.html","webpack:///./src/app/claim/legacypfdetails/legacypfdetails.component.ts","webpack:///./src/app/claim/models/pf.months.model.ts","webpack:///./src/app/claim/payinslip-deposited-list/payinslip-deposited-list.component.css","webpack:///./src/app/claim/payinslip-deposited-list/payinslip-deposited-list.component.html","webpack:///./src/app/claim/payinslip-deposited-list/payinslip-deposited-list.component.ts","webpack:///./src/app/claim/services/api-dictionary.ts","webpack:///./src/app/claim/services/claim-data.service.ts","webpack:///./src/app/claim/submittedlegacypfdetails/submittedlegacypfdetails.component.css","webpack:///./src/app/claim/submittedlegacypfdetails/submittedlegacypfdetails.component.html","webpack:///./src/app/claim/submittedlegacypfdetails/submittedlegacypfdetails.component.ts"],"names":[],"mappings":"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","file":"claim-claim-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Adjustement Entry Form</h2>\\r\\n                </header>\\r\\n\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">LWFC Code: {{user.user.userid}}</label>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Agent Code: {{user.user.userid}}</label>\\r\\n                                        </section>\\r\\n                                    </div>-->\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isBenVisible\\\">\\r\\n                                        <section>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Beneficiary Name: {{beneficiary?.benFullName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">SSIN/PF Number: {{beneficiary?.benSSINOrPFAccountNo}}</label>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">SSIN/PF Number: <span [style.color]=\\\"!ssinValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" id=\\\"number\\\" name=\\\"ssin\\\" [(ngModel)]=\\\"adjustment.ssinORPFNumber\\\" placeholder=\\\"SSIN/PF Number\\\"\\r\\n                                                           (change)=\\\"searchSSINNo($event.target.value)\\\" (keydown.enter)=\\\"searchSSINNo($event.target.value)\\\" maxlength=\\\"50\\\"\\r\\n                                                           [ngClass]=\\\"{'invalid-data':!ssinValid, 'valid-data': ssinValid}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!ssinValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">SSIN/PF Number is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Adjustment Date: <span [style.color]=\\\"!adjustmentDateReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"adjustmentDate\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                           [maxDate]=\\\"toDayDate\\\" #adjustmentDate=\\\"ngModel\\\"\\r\\n                                                           placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"adjustment.adjustmentDate\\\"\\r\\n                                                           value=\\\"{{adjustment.adjustmentDate | date: 'dd/MM/yyyy' }}\\\" \\r\\n                                                           [ngClass]=\\\"{'invalid-data': (!adjustmentDateReq), 'valid-data': adjustmentDateReq}\\\"\\r\\n                                                           required>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!adjustmentDateReq\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Adjustment Date is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Ben Contribution Adjustment Amount: <span [style.color]=\\\"!benAdjustmentAmountReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"benadjustmentAmount\\\" placeholder=\\\"Adjustment Amount\\\" [(ngModel)]=\\\"adjustment.benAdjustmentAmount\\\" NumbersOnly\\r\\n                                                           required />\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!benAdjustmentAmountReq\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Ben Contribution Adjustment Amount is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Govt Contribution Adjustment Amount: <span [style.color]=\\\"!govtAdjustmentAmountReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"govtAdjustmentAmount\\\" placeholder=\\\"Adjustment Amount\\\" [(ngModel)]=\\\"adjustment.govtAdjustmentAmount\\\" NumbersOnly\\r\\n                                                           required />\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!govtAdjustmentAmountReq\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Govt Contribution Adjustment Amount is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Adjustment Type: <span [style.color]=\\\"!typeIsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <!--<select class=\\\"form-control select\\\" name=\\\"adjustmentType\\\" [(ngModel)]=\\\"adjustment.adjustmentTypeId\\\"\\r\\n                                                            [ngClass]=\\\"{'invalid-data': !typeIsValid, 'valid-data': typeIsValid }\\\"\\r\\n                                                            required (change)=\\\"adjustmentTypeChange($event)\\\">\\r\\n                                                        <option value=\\\"0\\\" selected disabled>Choose an option</option>\\r\\n                                                        <option value=\\\"1\\\">Adjustment Credit</option>\\r\\n                                                        <option value=\\\"2\\\">Adjustment Debit</option>\\r\\n                                                        <option value=\\\"3\\\">Opening Balance(Cr)</option>\\r\\n                                                        <option value=\\\"4\\\">Other(Cr)</option>\\r\\n                                                        <option value=\\\"5\\\">Other(Dr)</option>\\r\\n                                                    </select>-->\\r\\n\\r\\n                                                    <select class=\\\"form-control select\\\" name=\\\"adjustmentType\\\" (change)=\\\"adjustmentTypeChange($event)\\\"\\r\\n                                                            [ngClass]=\\\"{'invalid-data': !typeIsValid, 'valid-data': typeIsValid }\\\"\\r\\n                                                            [(ngModel)]=\\\"adjustment.adjustmentTypeId\\\" required>\\r\\n                                                        <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                        <option value=\\\"{{type.lovDtlId}}\\\" *ngFor=\\\"let type of adjustmentTypeLov\\\">{{type.optionName}}</option>\\r\\n                                                    </select><i></i>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"!typeIsValid\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Adjustment Type is required </span>\\r\\n                                                </div>\\r\\n                                            </section>\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Reference Number: </label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"referenceNumber\\\" placeholder=\\\"Reference Number\\\" [(ngModel)]=\\\"adjustment.reference\\\" />\\r\\n                                                </label>\\r\\n                                                <!--<div *ngIf=\\\"!referencenumberReq\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">Reference Number is required </span>\\r\\n                                                    </div>-->\\r\\n                                            </section>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <section class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Remarks: </label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <input type=\\\"text\\\" name=\\\"remarks\\\" placeholder=\\\"Remarks\\\" [(ngModel)]=\\\"adjustment.remarks\\\" />\\r\\n                                                </label>\\r\\n                                                <!--<div *ngIf=\\\"!remarksReq\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Remarks is required </span>\\r\\n                                                </div>-->\\r\\n                                            </section>\\r\\n                                        </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <footer>\\r\\n                                <button type=\\\"button\\\" name=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveAdjustment()\\\">\\r\\n                                    Submit\\r\\n                                </button>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancleClick()\\\">Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { AdjustmentModel } from '../models/adjustment.model';\r\nimport { Beneficiary } from '../models/ben.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { LovConstants } from '../pipes/constnts.model';\r\nimport { LovDetails } from '../models/Lov.model';\r\n\r\n@Component({\r\n    selector: 'app-adjustemententryform',\r\n    templateUrl: './adjustemententryform.component.html',\r\n    styleUrls: ['./adjustemententryform.component.css']\r\n})\r\nexport class AdjustemententryformComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    successMessage: string;\r\n    datePickerConfig: any;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    adjustment: AdjustmentModel = {} as AdjustmentModel;\r\n    isBenVisible: boolean = false;\r\n    ssinValid: boolean = true;\r\n    adjustmentDateReq: boolean = true;\r\n    //adjustmentAmountReq: boolean = true;\r\n    benAdjustmentAmountReq: boolean = true;\r\n    govtAdjustmentAmountReq: boolean = true;\r\n    typeIsValid: boolean = true;\r\n    referencenumberReq: boolean = true;\r\n    remarksReq: boolean = true;\r\n    toDayDate: Date;\r\n    adjustmentTypeLov: LovDetails[];\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        this.toDayDate = new Date();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getAdjustmentType();\r\n    }\r\n    validateAdjustment(): boolean {\r\n        let isValid = true;\r\n        if (this.adjustment.ssinORPFNumber == undefined || this.adjustment.ssinORPFNumber == \"\") { this.ssinValid = isValid = false; }\r\n        if (this.adjustment.adjustmentDate == undefined || this.adjustment.adjustmentDate == null) { this.adjustmentDateReq = isValid = false; }\r\n        if (this.adjustment.benAdjustmentAmount == undefined || this.adjustment.benAdjustmentAmount == null || this.adjustment.benAdjustmentAmount.toString() == \"\") { this.benAdjustmentAmountReq = isValid = false; }\r\n        if (this.adjustment.govtAdjustmentAmount == undefined || this.adjustment.govtAdjustmentAmount == null || this.adjustment.govtAdjustmentAmount.toString() == \"\") { this.govtAdjustmentAmountReq = isValid = false; }\r\n        if (this.adjustment.adjustmentType == undefined || this.adjustment.adjustmentType == null) { this.typeIsValid = isValid = false; }\r\n        //if (this.adjustment.reference == undefined || this.adjustment.reference == null || this.adjustment.reference.trim() == \"\") { this.referencenumberReq = isValid = false; }\r\n        //if (this.adjustment.remarks == undefined || this.adjustment.remarks == null || this.adjustment.remarks.trim() == \"\") { this.remarksReq = isValid = false; }\r\n        return isValid;\r\n    }\r\n    searchSSINNo(ssnNo: any) {\r\n        this.isBenVisible = false;\r\n        if (ssnNo != undefined && ssnNo.trim() != \"\") {\r\n            this.clearValues();\r\n            this.dataService\r\n                .getAdjustmentBeneficiaryBasicDetailsByID(ssnNo.trim())\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    this.beneficiary = data;\r\n                    this.isBenVisible = true;\r\n                });\r\n        }\r\n        else {\r\n            this.beneficiary = {} as Beneficiary;\r\n        }\r\n    }\r\n    saveAdjustment() {\r\n        this.adjustment.benSno = this.beneficiary.benSno;\r\n        if (this.validateAdjustment()) {\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .saveAdjustment(this.adjustment)\r\n                    .then((data: any) => {\r\n                        //if (data) {\r\n                        this.successMessage = \"Adjustment is saved successfully\";\r\n                        this.successModal.show();\r\n                        //}\r\n                        //else {\r\n                        //    this.successMessage = \"Invalid transaction\";\r\n                        //    this.successModal.show();\r\n                        //}\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    clearValues() {\r\n        this.adjustment.adjustmentDate = null;\r\n        this.adjustment.benAdjustmentAmount = null;\r\n        this.adjustment.govtAdjustmentAmount = null;\r\n        this.adjustment.adjustmentTypeId = 0;\r\n        this.adjustment.reference = \"\";\r\n        this.adjustment.remarks = \"\";\r\n    }\r\n    okClick() {\r\n        this.clearValues()\r\n        this.successModal.hide();\r\n    }\r\n    adjustmentTypeChange(args) {\r\n        debugger;\r\n        this.adjustment.adjustmentType = args.target.options[args.target.selectedIndex].text; \r\n    }\r\n    getAdjustmentType() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.AdjustmentType)\r\n            .subscribe((data: any) => {\r\n                this.adjustmentTypeLov = data;\r\n            });\r\n    }\r\n}\r\n\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <!-- row -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <!-- Widget ID (each widget will need unique ID)-->\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Claim Entry</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form\\\">\\r\\n                            <header>Beneficiary Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"beneficiary==null\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please enter valid SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"benficiaryInactive\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Your registration application is in Inactive/Sent Back/Pending status and you are not eligible to this feature.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"validateDependent\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please add atleast one claim to proceed</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"noDependents\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>No dependents available for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"maxLimitExceeded\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red\\\">\\r\\n                                            <label>Maximum claims limit has been reached for this year</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"maxHelathClaimLimitExceeded\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red\\\">\\r\\n                                            <label>Maximum claims limit for health has been reached for this year</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"pfExsits\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>No pf available for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isPFSubmitted\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>PF claim already submitted for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!isNomineesExist\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Beneficiary doesn't have nominees</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isBenNomineeSubmittedClaim\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Claims are entered through the nominee/agent with the reason of death, till it is resolved you are not allowed to submit the claim</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isBenNomineeSubmittedPFClaim\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>PF claim already submitted with the nominee for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isHFSubmitted\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Your not eligible for Health & Family claim for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isEduSubmitted\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Your not eligible for Education claim for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isBenDeath\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>The given SSIN number is in death status</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isCAFUpdated\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please update details</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isClaimEffectiveDate\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Can not raise/submit claims before {{claimEffectiveDate | date: 'dd/MM/yyyy'}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Reason for Apply <span [style.color]=\\\"!reasonForApplyValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"select\\\">\\r\\n                                                <select name=\\\"reasonForApply\\\" id=\\\"selclaim\\\" [(ngModel)]=\\\"claim.reasonForApply\\\" (change)=\\\"reasonForApplyChange($event.target.value)\\\">\\r\\n                                                    <option value=\\\"0\\\">Choose mode</option>\\r\\n                                                    <option value=\\\"{{rfa.lovDtlId}}\\\" *ngFor=\\\"let rfa of reasonForApply\\\">{{rfa.optionName}}</option>\\r\\n                                                </select> <i></i>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"viewDeathFieldsAndNominee\\\">\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\" (change)=\\\"radioChange(1)\\\" />\\r\\n                                                <i></i>SSIN\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" (change)=\\\"radioChange(2)\\\" />\\r\\n                                                <!--[(ngModel)]=\\\"fundRequestType\\\" value=\\\"expenses\\\">-->\\r\\n                                                <i></i>Old Registration No.\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-3\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateCAFDetails()\\\" *ngIf=\\\"isCAFUpdated\\\">\\r\\n                                                Please update details\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!viewDeathFieldsAndNominee\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">SSIN <span [style.color]=\\\"!ssinReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-search\\\" (click)=\\\"searchSSINNo(claim.ssin)\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"benSno\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ssin\\\" placeholder=\\\"Enter SSIN\\\" (change)=\\\"searchSSINNo($event.target.value)\\\" (keydown.enter)=\\\"valuechange($event.target.value)\\\" NumbersOnly maxlength=\\\"50\\\">\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"viewDeathFieldsAndNominee\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">SSIN/Old Registration No. <span [style.color]=\\\"!ssinReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-search\\\" (click)=\\\"searchSSINNo(claim.ssin)\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"benSno\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ssin\\\" placeholder=\\\"Enter SSIN/Old Registration No.\\\" (change)=\\\"searchSSINNo($event.target.value)\\\" (keydown.enter)=\\\"valuechange($event.target.value)\\\" maxlength=\\\"50\\\">\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"viewDeathFieldsAndNominee\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Nominee <span [style.color]=\\\"!nomineeRequired?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <!--<label class=\\\"select\\\">-->\\r\\n                                            <select class=\\\"form-control select\\\" name=\\\"nomineeId\\\" [(ngModel)]=\\\"claim.nomineeId\\\" (change)=\\\"nomineeChange($event.target.value)\\\">\\r\\n                                                <option value=\\\"0\\\" selected>Choose Nominee</option>\\r\\n                                                <option value=\\\"{{ben.benNomineeSno}}\\\" *ngFor=\\\"let ben of benficiaryNominee\\\">{{ben.benNomineeName}} - {{ben.benNomineeRelation}}</option>\\r\\n                                            </select><i></i>\\r\\n                                            <!--</label>-->\\r\\n                                            <div *ngIf=\\\"!nomineeRequired\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Select a Nominee </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Nominee Address</label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <textarea name=\\\"nomineeAddress\\\" class=\\\"form-control\\\" rows=\\\"4\\\" cols=\\\"40\\\" placeholder=\\\"Nominee Address\\\" [(ngModel)]=\\\"claim.nomineeAddress\\\" maxlength=\\\"500\\\"></textarea>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Beneficiary Name: </strong>{{beneficiary?.benFirstName}} {{beneficiary?.benMiddleName}} {{beneficiary?.benLastName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>SSIN: </strong>{{beneficiary?.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\" id=\\\"CheckBoxList\\\">\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input name=\\\"pf\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disablePFCheckbox\\\" type=\\\"checkbox\\\" [checked]=\\\"viewPf\\\" (change)=\\\"pfChange($event)\\\"><i></i>PF(Provident Fund)</label>\\r\\n                                        <!--<label class=\\\"checkbox state-success\\\"><input disabled=\\\"disabled\\\" type=\\\"checkbox\\\" name=\\\"checkbox\\\" [checked]=\\\"viewPf\\\" (change)=\\\"pfChange($event)\\\"><i></i>PF(Provident Fund)</label>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disableHealthCheckbox\\\" type=\\\"checkbox\\\" name=\\\"checkbox4\\\" [checked]=\\\"viewHealth\\\" (change)=\\\"healthChange($event)\\\"><i></i>Health & Family</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-2\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox3\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disableDisabilityCheckbox \\\" [(checked)]=\\\"viewDisability\\\" (change)=\\\"disabilityChangeEvent($event)\\\"><i></i>Disablity</label>\\r\\n                                        <!--<label class=\\\"checkbox state-success\\\"><input disabled=\\\"disabled\\\" type=\\\"checkbox\\\" name=\\\"viewDeath1\\\" [checked]=\\\"viewDeath\\\" (change)=\\\"deathChange($event)\\\"><i></i>Death</label>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-2\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox2\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disableDeathCheckbox\\\" [(checked)]=\\\"viewDeath\\\" (change)=\\\"deathChange($event)\\\"><i></i>Death</label>\\r\\n                                        <!--<label class=\\\"checkbox state-success\\\"><input disabled=\\\"disabled\\\" type=\\\"checkbox\\\" name=\\\"viewDeath1\\\" [checked]=\\\"viewDeath\\\" (change)=\\\"deathChange($event)\\\"><i></i>Disability</label>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-2\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox1\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disableEducationCheckbox\\\" [(checked)]=\\\"viewEducation\\\" (change)=\\\"educationChange($event)\\\"><i></i>Education</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"form-pf\\\" *ngIf=\\\"viewPf\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    PF No. {{beneficiary.regNumber}}\\r\\n                                                </label>\\r\\n                                                <!--removed as per 17th discussions, in future this has to be open-->\\r\\n                                                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pFNO\\\" placeholder=\\\" PF Number\\\" [(ngModel)]=\\\"claim.providentFundDetails.pFNO\\\">-->\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Claim Amount {{pfClaimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Date of Maturity {{benMaturityDate  | date: 'dd/MM/yyyy'}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Locking Period Up-to {{pfLockingPeriod  | date: 'dd/MM/yyyy'}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Type of Claim <span [style.color]=\\\"!pfTypeOfClaimValid?'red':''\\\"><b>*</b></span>\\r\\n                                                </label>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"pfTypeOfClaim\\\" id=\\\"selclaim\\\"\\r\\n                                                        (change)=\\\"pfTypeOfClaimChange($event.target.value)\\\"\\r\\n                                                        [(ngModel)]=\\\"claim.providentFundDetails.typeOfClaim\\\"\\r\\n                                                        #pfTypeOfClaim=\\\"ngModel\\\"\\r\\n                                                        [ngClass]=\\\"{'invalid-data': pfTypeOfClaim.invalid && ( !pfTypeOfClaimValid || pfTypeOfClaim.touched ),\\r\\n                                                        'valid-data': pfTypeOfClaimValid && pfTypeOfClaim.valid  }\\\"\\r\\n                                                        required [disabled]=\\\"disablePFTypeOfClaim\\\">\\r\\n                                                    <option value=\\\"0\\\" disabled>Choose a Type of Claim</option>\\r\\n                                                    <option value=\\\"{{pf.claimConfigId}}\\\" *ngFor=\\\"let pf of pfConfig\\\">\\r\\n                                                        {{pf.claimConfigOptionName}}\\r\\n                                                    </option>\\r\\n                                                </select><i></i>\\r\\n                                                <div *ngIf=\\\"pfTypeOfClaim.invalid && (!pfTypeOfClaimValid || pfTypeOfClaim.touched)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Select a Type of Claim </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Reason for Preclosure<span [style.color]=\\\"!reasonForPreclosureValid?'red':''\\\"><b>*</b></span>\\r\\n                                                </label>\\r\\n                                                <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                    <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"reasonForPreclosure\\\" placeholder=\\\"Reason for Preclosure\\\"\\r\\n                                                              [(ngModel)]=\\\"claim.providentFundDetails.reasonForPreClosure\\\" #reasonForPreclosure=\\\"ngModel\\\"\\r\\n                                                              [ngClass]=\\\"{'invalid-data': reasonForPreclosure.invalid && ( !reasonForPreclosureValid || reasonForPreclosure.touched ),\\r\\n                                                'valid-data': reasonForPreclosureValid && reasonForPreclosure.valid }\\\"\\r\\n                                                              required></textarea>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"reasonForPreclosure.invalid && (!reasonForPreclosureValid || reasonForPreclosure.touched)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Reason For Preclosure is required </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"viewNomineeShare\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Nominee Share Amount {{benNomineeShareAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"health-family\\\" *ngIf=\\\"viewHealth\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Type of Claim<span [style.color]=\\\"!typeOfClaimValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"typeOfClaim\\\" id=\\\"selclaim\\\"\\r\\n                                                (change)=\\\"typeOfClaimChange($event.target.value)\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.typeOfClaim\\\"\\r\\n                                                #typeOfClaim=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': typeOfClaim.invalid && ( !typeOfClaimValid || typeOfClaim.touched ),\\r\\n                                        'valid-data': typeOfClaimValid && typeOfClaim.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose a Type of Claim</option>\\r\\n                                            <option value=\\\"{{health.claimConfigId}}\\\" *ngFor=\\\"let health of healthConfig\\\">{{health.claimConfigOptionName}}</option>\\r\\n                                        </select> <i></i>\\r\\n                                        <div *ngIf=\\\"typeOfClaim.invalid && (!typeOfClaimValid || typeOfClaim.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select a Type of Claim </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Hospital <span [style.color]=\\\"!hospital?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"hospitalId\\\" id=\\\"ddlhospital\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.hospitalId\\\"\\r\\n                                                #hospitalId=\\\"ngModel\\\" (change)=\\\"hospitalChange($event.target.value)\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': hospitalId.invalid && ( !hospital || hospitalId.touched ),\\r\\n                                        'valid-data': hospital && hospitalId.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose a Hospital</option>\\r\\n                                            <option value=\\\"{{hospital.hospitalId}}\\\" *ngFor=\\\"let hospital of hospotalList\\\">{{hospital.hospitalName}}</option>\\r\\n                                        </select> <i></i>\\r\\n\\r\\n                                        <div *ngIf=\\\"hospitalId.invalid && (!hospital || hospitalId.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select a Hospital </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"isOtherHospital\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Govt./Municipal Hospital <span [style.color]=\\\"!otherHospitalValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"otherHospital\\\" placeholder=\\\"Govt./Municipal Hospital\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.otherHospital\\\"\\r\\n                                                   maxlength=\\\"150\\\" #otherHospital=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': otherHospital.invalid && ( !otherHospitalValid || otherHospital.touched ),\\r\\n                                                        'valid-data': otherHospitalValid && otherHospital.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"otherHospital.invalid && (!otherHospitalValid || otherHospital.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Govt./Municipal Hospital is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"inoutward\\\">\\r\\n                                        <label class=\\\"label\\\">Hospitalization/OPD <span [style.color]=\\\"!hospitalization?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"typeOfHospitalization\\\" id=\\\"ddinward\\\" (change)=\\\"hospitalizationChange($event.target.value)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.typeOfHospitalization\\\"\\r\\n                                                #typeOfHospitalization=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': typeOfHospitalization.invalid && (!hospitalization || typeOfHospitalization.touched ),\\r\\n                                        'valid-data': hospitalization && typeOfHospitalization.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{hosp.lovDtlId}}\\\" *ngFor=\\\"let hosp of hospitalizationLov\\\">{{hosp.optionName}}</option>\\r\\n                                        </select><i></i>\\r\\n\\r\\n                                        <div *ngIf=\\\"typeOfHospitalization.invalid && (!hospitalization || typeOfHospitalization.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Hospitalization/OPD </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Patient Id </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"patientId\\\" placeholder=\\\"Patient Id\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.patientId\\\" maxlength=\\\"50\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"viewDateOfFirstAppointment\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Name of Disease </label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"nameOfDisease\\\" id=\\\"ddinward\\\" (change)=\\\"nameOfDiseaseChange($event.target.value)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.nameOfTheDisease\\\">\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{dise.lovDtlId}}\\\" *ngFor=\\\"let dise of diseasesLov\\\">{{dise.optionName}}</option>\\r\\n                                        </select><i></i>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewNameOfClinicalTest\\\">\\r\\n                                        <label class=\\\"label\\\">Name of clinical test </label>\\r\\n                                        <ng-multiselect-dropdown name=\\\"nameOfClinicalTest\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                 [data]=\\\"clinicalTestLov\\\"\\r\\n                                                                 [(ngModel)]=\\\"nameOfClinicalTestIds\\\"\\r\\n                                                                 [settings]=\\\"clinicalTestSettings\\\"\\r\\n                                                                 (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                                 (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                        </ng-multiselect-dropdown>\\r\\n                                        <!--<select class=\\\"form-control select\\\" name=\\\"nameOfClinicalTest\\\" id=\\\"ddinward\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.nameOfClinicalTest\\\">\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{clin.lovDtlId}}\\\" *ngFor=\\\"let clin of clinicalTestLov\\\">{{clin.optionName}}</option>\\r\\n                                        </select><i></i>-->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section id=\\\"chkAccident\\\" class=\\\"col col-6\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                        <label class=\\\"label\\\">Met with an Accident?</label>\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isAccident\\\" id=\\\"chkAcc\\\" (change)=\\\"chkAccidentChange($event,claim.healthFamilyDetails.isAccident)\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.isAccident\\\"><i></i>Yes</label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secFirstApp\\\" *ngIf=\\\"viewDateOfFirstAppointment\\\">\\r\\n                                        <label class=\\\"label\\\">Date of First Appointment <span [style.color]=\\\"!dateofAppointment?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"firstAppointmentDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.healthFamilyDetails.firstAppointmentDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"claim.healthFamilyDetails.firstAppointmentDate\\\" readonly\\r\\n                                                   #firstAppointmentDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':firstAppointmentDate.invalid && (!dateofAppointment), 'valid-data': firstAppointmentDate.valid && dateofAppointment}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"firstAppointmentDate.invalid && (!dateofAppointment)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of First Appointment is required </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"viewDateOfAdmit\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secAdmit\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Admission to Hospital <span [style.color]=\\\"!dateofAdmin?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"dateofAdmit\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.healthFamilyDetails.admittedDate | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.admittedDate\\\" (bsValueChange)=\\\"dateofadminchange($event)\\\" readonly>-->\\r\\n\\r\\n                                            <input type=\\\"text\\\" name=\\\"admittedDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   #admittedDate=\\\"ngModel\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.admittedDate\\\"\\r\\n                                                   value=\\\"{{ claim.healthFamilyDetails.admittedDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   (bsValueChange)=\\\"dateofadminchange($event)\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':admittedDate.invalid && (!dateofAdmin), 'valid-data':admittedDate.valid && dateofAdmin}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"admittedDate.invalid && (!dateofAdmin)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of Admission to Hospital is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secDischarge\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Discharge <span [style.color]=\\\"!dateofDischargeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"dateofDischarge\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" [minDate]=\\\"dischargeMinDt\\\" [disabled]=\\\"disableDischarge\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"claim.healthFamilyDetails.dischargeDate | date: 'dd/MM/yyyy'\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.dischargeDate\\\" (bsValueChange)=\\\"dateofdischargechange($event)\\\" readonly>-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"dischargeDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   [minDate]=\\\"dischargeMinDt\\\" [disabled]=\\\"disableDischarge\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   #dischargeDate=\\\"ngModel\\\"\\r\\n                                                   [(ngModel)]=\\\"claim.healthFamilyDetails.dischargeDate\\\"\\r\\n                                                   value=\\\"{{claim.healthFamilyDetails.dischargeDate | date: 'dd/MM/yyyy'}}\\\"\\r\\n                                                   (bsValueChange)=\\\"dateofdischargechange($event)\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':dischargeDate.invalid && (!dateofDischargeValid), 'valid-data':dischargeDate.valid && dateofDischargeValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"dischargeDate.invalid && (!dateofDischargeValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of discharge is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Cost of Clinical Test </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfClinicalTest\\\" placeholder=\\\"Cost of Clinical Test\\\" NumbersOnly [(ngModel)]=\\\"claim.healthFamilyDetails.costOfClinicalTest\\\" [disabled]=\\\"disableCost\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n\\r\\n                                        <label class=\\\"label\\\">Cost of Medicine </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfMedicine\\\" placeholder=\\\"Cost of Medicine\\\" NumbersOnly [(ngModel)]=\\\"claim.healthFamilyDetails.costOfMedicine\\\" [disabled]=\\\"disableCost\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Claim for <span [style.color]=\\\"!claimForValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"claimFor\\\" id=\\\"claimFor\\\" (change)=\\\"claimForChange($event)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.claimFor\\\"\\r\\n                                                #claimFor=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data':claimFor.invalid && (!claimForValid ||  claimFor.touched ), 'valid-data': claimFor.valid && claimForValid}\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{htype.lovDtlId}}\\\" *ngFor=\\\"let htype of healthtypeofClaim\\\">{{htype.optionName}}</option>\\r\\n                                        </select> <i></i>\\r\\n\\r\\n\\r\\n                                        <div *ngIf=\\\"claimFor.invalid && (!claimForValid ||  claimFor.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Claim for is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewDateOfAdmit\\\">\\r\\n                                        <label class=\\\"label\\\">Cost of Hospitalization </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfHospitalization\\\" NumbersOnly placeholder=\\\"Cost of Hospitalization\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.costOfHospitalization\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"family\\\" *ngIf=\\\"viewFamily\\\">\\r\\n                                        <label class=\\\"label\\\">Family Member <span [style.color]=\\\"!familyMember?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select class=\\\"form-control select\\\" name=\\\"familyMemberId\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.familyMemberId\\\"\\r\\n                                                    #familyMemberId=\\\"ngModel\\\"\\r\\n                                                    [ngClass]=\\\"{'invalid-data':familyMemberId.invalid && (!familyMember ||  familyMemberId.touched), 'valid-data': familyMemberId.valid && familyMember}\\\"\\r\\n                                                    required>\\r\\n                                                <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{benf.benFamilyMemSno}}\\\" *ngFor=\\\"let benf of benficiaryFamilybyHealth\\\">{{benf.benDependentName}} - {{benf.benDependentRelation}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"familyMemberId.invalid && (!familyMember ||  familyMemberId.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Family Member is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"enableReasonForDelaySubmissionInHealth\\\">\\r\\n                                        <label class=\\\"label\\\"> Reason for Delay Submission <span [style.color]=\\\"!reasonForHealthDelayValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"reasonForHealthDelay\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.reasonForDelaySubmission\\\" placeholder=\\\"Reason for Delay Submission\\\"></textarea>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!reasonForHealthDelayValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Reason for Delay Submission is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row top-10\\\" id=\\\"lossOfEmployment\\\" *ngIf=\\\"viewSelf\\\">\\r\\n                                    <section class=\\\"col col-12\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Loss of Employment</strong></label>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row top-10\\\" id=\\\"daterangeloe\\\" *ngIf=\\\"viewSelf\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">From Date<span [style.color]=\\\"!loeFromDate?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"lossOfEmploymentFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\"\\r\\n                                                   [disabled]=\\\"true\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   [ngModel]=\\\"claim.healthFamilyDetails.loeFromDate | date: 'dd/MM/yyyy'\\\" readonly\\r\\n                                                   #lossOfEmploymentFromDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':lossOfEmploymentFromDate.invalid && (!loeFromDate ||  lossOfEmploymentFromDate.touched), 'valid-data': lossOfEmploymentFromDate.valid && loeFromDate}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"lossOfEmploymentFromDate.invalid && (!loeFromDate ||  lossOfEmploymentFromDate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Form Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">To Date<span [style.color]=\\\"!loeToDate?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"lossOfEmploymentToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\"\\r\\n                                                   [disabled]=\\\"true\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   [ngModel]=\\\"claim.healthFamilyDetails.loeToDate | date: 'dd/MM/yyyy'\\\" readonly\\r\\n                                                   #lossOfEmploymentToDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':lossOfEmploymentToDate.invalid && (!loeToDate ||  lossOfEmploymentToDate.touched), 'valid-data': lossOfEmploymentToDate.valid && loeToDate}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"lossOfEmploymentToDate.invalid && (!loeToDate ||  lossOfEmploymentToDate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">To Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewLOEAmount\\\">\\r\\n                                        <label class=\\\"label\\\" style=\\\"margin-top:30px;\\\">Loss of Employment Benefit: {{lossOfEmploymentAmount}}/- </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Packages</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <a (click)=\\\"viewPackages()\\\" class=\\\"smart-form-link\\\">View All Packages</a>\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                    <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                <td>{{pak.packageName}}</td>\\r\\n                                                <td>{{pak.packageCode}}</td>\\r\\n                                                <td>{{pak.ailmentName}}</td>\\r\\n                                                <td>{{pak.amount}}</td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"showDisCertUpload\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">\\r\\n                                            Discharge Certificate from Govt./Empanelled Hospital\\r\\n                                            <span [style.color]=\\\"!dischargeCertificate?'red':''\\\"><b>*</b></span>\\r\\n                                        </label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'dischargeCertificate')\\\">Browse</span>\\r\\n                                            <input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"(!dischargeCertificate) && (healthDischargeCertificate.fileName =='' || healthDischargeCertificate.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Discharge certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthDischargeCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Original Vouchers </label>  <!--<span [style.color]=\\\"!originalVoucher?'red':''\\\"><b>*</b></span>-->\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" (change)=\\\"changeCertificate($event,'originalVoucher')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <!--<div *ngIf=\\\"(!originalVoucher) && (healthOriginalVoucher.fileName =='' || healthOriginalVoucher.fileName ==undefined)\\\">\\r\\n                <span style=\\\"color: red;\\\">Original vouchers is required </span>\\r\\n            </div>-->\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthOriginalVoucher.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Self attested copy of doctor's last prescription <span [style.color]=\\\"!hospitalselfAttested?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'healthselfAttest')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!hospitalselfAttested) && (healthSelfAttached.fileName =='' || healthSelfAttached.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Self attested is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthSelfAttached.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Expenses Sheet </label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'healthExpensesSheet')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthExpensesSheet.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"enableReasonForDelaySubmissionInHealth\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Condonation certificate  <span [style.color]=\\\"!healthCondolationCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"healthCondolationCertificate\\\" (change)=\\\"changeCertificate($event,'healthCondolationCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!healthCondolationCertificateUploaded) && (healthCondolationCertificate.fileName =='' || healthCondolationCertificate.fileName == undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Condonation certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthCondolationCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isCertifynotESI\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.isCertifynotESI\\\"\\r\\n                                                       #isCertifynotESI=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':isCertifynotESI.invalid && (!rigisterESI ||  isCertifynotESI.touched), 'valid-data': isCertifynotESI.valid && rigisterESI}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that\\r\\n                                                I am not registered under ESI Act, 1948 or RSBY or Swasthya Sathi or WBTWSSS\\r\\n                                                <span [style.color]=\\\"!rigisterESI?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isCertifynotESI.invalid && (!rigisterESI ||  isCertifynotESI.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of ESI Act is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"diasability\\\" *ngIf=\\\"viewDisability\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Date of release from hospital/Accident <span [style.color]=\\\"!dateofrelease1?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"request\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" [(bsValue)]=\\\"claim.disabilityDetails.dateofrelease\\\" readonly>-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"request2\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"claim.disabilityDetails.dateofRelease\\\" (bsValueChange)=\\\"disabilityDateofReleaseChange($event)\\\"\\r\\n                                                   value=\\\"{{ claim.disabilityDetails.dateofRelease | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   #request2=\\\"ngModel\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':request2.invalid && (!dateofrelease1), 'valid-data':request2.valid && dateofrelease1}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"request2.invalid && (!dateofrelease1)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of release from hospital/Accident is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Nature of Disability <span [style.color]=\\\"!natureOfDisability?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select name=\\\"gender\\\" id=\\\"natureOfDisabilityDropdown\\\" (change)=\\\"disabilityChange($event.target.value)\\\" [(ngModel)]=\\\"claim.disabilityDetails.natureOfDisability\\\"\\r\\n                                                    #natureOfDisabilityDropdown=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': natureOfDisabilityDropdown.invalid && ( !natureOfDisability || natureOfDisabilityDropdown.touched ),\\r\\n                                                    'valid-data': natureOfDisability && natureOfDisabilityDropdown.valid  }\\\" required>\\r\\n                                                <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{dis.claimConfigId}}\\\" *ngFor=\\\"let dis of disabilityConfig\\\">{{dis.claimConfigOptionName}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!checkNatureOfDisability\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Claim has been already submitted with this nature of disability </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"natureOfDisabilityDropdown.invalid && (!natureOfDisability || natureOfDisabilityDropdown.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Nature of Disability </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"> Details of Disability</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"request\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.disabilityDetails.detailsOfDisability\\\" placeholder=\\\"Details of disability\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"enableReasonForDelaySubmission\\\">\\r\\n                                        <label class=\\\"label\\\"> Reason for Delay Submission <span [style.color]=\\\"!reasonForDelayValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"reasonForDelay\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.disabilityDetails.reasonForDelaySubmission\\\" placeholder=\\\"Reason for Delay Submission\\\"></textarea>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!reasonForDelayValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Reason for Delay Submission is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"enableDeathEligibility\\\">\\r\\n                                        <label class=\\\"label\\\">Eligible Amount: {{disableEligibility}} </label>\\r\\n                                        <!--<div class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\"><strong>Eligible Amount:</strong> </label>\\r\\n            </div>\\r\\n            <div class=\\\"col col-6\\\">\\r\\n                <label id=\\\"amtbasedonDisability\\\">{{disableEligibility}}</label>\\r\\n            </div>-->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Certificate of disability from the competent authority <span [style.color]=\\\"!disabilityCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'disablityCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                            <!--<span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" onchange=\\\"this.parentNode.nextSibling.value = this.value\\\">Browse</span><input type=\\\"text\\\" readonly>-->\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!disabilityCertificateUploaded) && (disabilityCertificate.fileName =='' || disabilityCertificate.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Discharge certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{disabilityCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"enableReasonForDelaySubmission\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Condolation certificate  <span [style.color]=\\\"!condolationCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'condolationCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!condolationCertificateUploaded) && (condolationCertificate.fileName =='' || condolationCertificate.fileName == undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Condolation certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{condolationCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyintentional\\\" [(ngModel)]=\\\"claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyintentional\\\"\\r\\n                                                       #isDeathorpermanentdisabilitynotcausedbyintentional=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathorpermanentdisabilitynotcausedbyintentional.invalid && (!isDeathorpermanent1 ||  isDeathorpermanentdisabilitynotcausedbyintentional.touched), 'valid-data': isDeathorpermanentdisabilitynotcausedbyintentional.valid && isDeathorpermanent1}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that\\r\\n                                                permanent disability not caused by intentional self injury, suicide or attempted suicide, insanity or immorality or under influence of intoxicating liquor, drug or narcotic\\r\\n                                                <span [style.color]=\\\"!isDeathorpermanent1?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathorpermanentdisabilitynotcausedbyintentional.invalid && (!isDeathorpermanent1 ||  isDeathorpermanentdisabilitynotcausedbyintentional.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of permanent disability not caused by intentional self injury is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyinjuries\\\" [(ngModel)]=\\\"claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyinjuries\\\"\\r\\n                                                       #isDeathorpermanentdisabilitynotcausedbyinjuries=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathorpermanentdisabilitynotcausedbyinjuries.invalid && (!isDeathorpermanent2 ||  isDeathorpermanentdisabilitynotcausedbyinjuries.touched), 'valid-data': isDeathorpermanentdisabilitynotcausedbyinjuries.valid && isDeathorpermanent2}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that permanent disability not caused by injuries resulting from riots, civil commotions, or racing of any kind\\r\\n                                                <span [style.color]=\\\"!isDeathorpermanent2?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathorpermanentdisabilitynotcausedbyinjuries.invalid && (!isDeathorpermanent2 ||  isDeathorpermanentdisabilitynotcausedbyinjuries.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of permanent disability not caused by injuries is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isOtherFinancialAssistance\\\" [(ngModel)]=\\\"claim.disabilityDetails.isOtherFinancialAssistance\\\"\\r\\n                                                       #isOtherFinancialAssistance=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isOtherFinancialAssistance.invalid && (!isDeathorpermanent3 ||  isOtherFinancialAssistance.touched), 'valid-data': isOtherFinancialAssistance.valid && isDeathorpermanent3}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that I am not in receipt of any financial assistance of similar nature from the government\\r\\n                                                <span [style.color]=\\\"!isDeathorpermanent3?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isOtherFinancialAssistance.invalid && (!isDeathorpermanent3 ||  isOtherFinancialAssistance.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of not in receipt of any financial assistance is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"death\\\" *ngIf=\\\"viewDeath\\\">\\r\\n                                <header>Death</header>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdeath1\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <!--<label class=\\\"label\\\">Nature of Death</label>\\r\\n            <label class=\\\"select\\\">\\r\\n                <select name=\\\"natureofDeath\\\" id=\\\"selnature\\\" (change)=\\\"natureOfDeathChange($event.target.value)\\\" [(ngModel)]=\\\"claim.deathDetails.natureofDeath\\\">\\r\\n                    <option value=\\\"0\\\">Choose an Option</option>\\r\\n                    <option value=\\\"{{death.claimConfigId}}\\\" *ngFor=\\\"let death of deathConfig\\\">{{death.claimConfigOptionName}}</option>\\r\\n\\r\\n                </select> <i></i>\\r\\n            </label>-->\\r\\n                                        <label class=\\\"label\\\">Nature of Death <span [style.color]=\\\"!natureOfDeath?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select name=\\\"gender\\\" id=\\\"natureofDeathDropdown\\\" (change)=\\\"natureOfDeathChange($event.target.value)\\\" [(ngModel)]=\\\"claim.deathDetails.natureofDeath\\\"\\r\\n                                                    #natureofDeathDropdown=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': natureofDeathDropdown.invalid && ( !natureOfDeath || natureofDeathDropdown.touched ),\\r\\n                                                    'valid-data': natureOfDeath && natureofDeathDropdown.valid  }\\\" required>\\r\\n                                                <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{death.claimConfigId}}\\\" *ngFor=\\\"let death of deathConfig\\\">{{death.claimConfigOptionName}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"natureofDeathDropdown.invalid && (!natureOfDeath || natureofDeathDropdown.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Nature of Death </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Death <span [style.color]=\\\"!dateofDeath?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"deathDatePicker\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                [(bsValue)]=\\\"claim.deathDetails.dateofDeath\\\" readonly>-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"dateofDeathDatePicker\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"claim.deathDetails.dateofDeath\\\"\\r\\n                                                   value=\\\"{{ claim.deathDetails.dateofDeath | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   #dateofDeathDatePicker=\\\"ngModel\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':dateofDeathDatePicker.invalid && (!dateofDeath), 'valid-data':dateofDeathDatePicker.valid && dateofDeath}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"dateofDeathDatePicker.invalid && (!dateofDeath)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of Death is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdeath2\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"PlaceOfDeath\\\" *ngIf=\\\"viewAccidental\\\">\\r\\n                                        <!--<label class=\\\"label\\\">Place of Death </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"placeofDeath\\\" placeholder=\\\" Place of Death\\\"\\r\\n                   [(ngModel)]=\\\"claim.deathDetails.placeofDeath\\\">-->\\r\\n                                        <label class=\\\"label\\\">Place of Death<span [style.color]=\\\"!placeOfDeathValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"placeofDeath\\\" placeholder=\\\" Place of Death\\\" #placeofDeath=\\\"ngModel\\\"\\r\\n                                               [(ngModel)]=\\\"claim.deathDetails.placeofDeath\\\"\\r\\n                                               [ngClass]=\\\"{'invalid-data': placeofDeath.invalid && (!placeOfDeathValid || placeofDeath.touched), 'valid-data': placeofDeath.valid && placeOfDeathValid }\\\" required />\\r\\n                                        <div *ngIf=\\\"placeofDeath.invalid && (!placeOfDeathValid ||placeofDeath.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Place of Death is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"> Details of Death</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"detailsofDeath\\\" rows=\\\"4\\\" cols=\\\"72\\\" placeholder=\\\"Details of disability\\\" [(ngModel)]=\\\"claim.deathDetails.detailsofDeath\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"eligibleAmountdeath\\\" *ngIf=\\\"viewEligibilityAmount\\\">\\r\\n                                        <label class=\\\"label\\\">Eligible Amount: {{deathEligibility}} </label>\\r\\n                                        <!--<div class=\\\"col col-6\\\">\\r\\n                <label class=\\\"label\\\"><strong>Eligible Amount:</strong> </label>\\r\\n            </div>\\r\\n            <div class=\\\"col col-6\\\">\\r\\n                <label id=\\\"amtbasedonDisability\\\">{{deathEligibility}}</label>\\r\\n            </div>-->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Attested copy of Death Certificate <span [style.color]=\\\"!deathCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'deathCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                            <!--<span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" onchange=\\\"this.parentNode.nextSibling.value = this.value\\\">Browse</span><input type=\\\"text\\\" readonly>-->\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!deathCertificateUploaded) && (deathCertificate.fileName =='' || deathCertificate.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Death certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{deathCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">First Page of Bank Passbook <span [style.color]=\\\"!bankPassbookUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'bankPassbook')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!bankPassbookUploaded) && (bankPassbook.fileName =='' || bankPassbook.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">First Page of Bank Passbook is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{bankPassbook.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathnotcausedbyintentional\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional\\\"\\r\\n                                                       #isDeathnotcausedbyintentional=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathnotcausedbyintentional.invalid && (!isDeath1 ||  isDeathnotcausedbyintentional.touched), 'valid-data': isDeathnotcausedbyintentional.valid && isDeath1}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that the\\r\\n                                                Death or permanent disability not caused by intentional self injury, suicide or attempted suicide, insanity or immorality or under influence of intoxicating liquor, drug or narcotic\\r\\n                                                <span [style.color]=\\\"!isDeath1?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathnotcausedbyintentional.invalid && (!isDeath1 ||  isDeathnotcausedbyintentional.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of Death or permanent disability not caused by intentional self injury is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathnotcausedbyinjuries\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries\\\"\\r\\n                                                       #isDeathnotcausedbyinjuries=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathnotcausedbyinjuries.invalid && (!isDeath2 ||  isDeathnotcausedbyinjuries.touched), 'valid-data': isDeathnotcausedbyinjuries.valid && isDeath2}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that Death or permanent disability not caused by injuries resulting from riots, civil commotions, or racing of any kind\\r\\n                                                <span [style.color]=\\\"!isDeath2?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathnotcausedbyinjuries.invalid && (!isDeath2 ||  isDeathnotcausedbyinjuries.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of Death or permanent disability not caused by injuries is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathOtherFinancialAssistance\\\" [(ngModel)]=\\\"claim.deathDetails.isOtherFinancialAssistance\\\"\\r\\n                                                       #isDeathOtherFinancialAssistance=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathOtherFinancialAssistance.invalid && (!isDeath3 ||  isDeathOtherFinancialAssistance.touched), 'valid-data': isDeathOtherFinancialAssistance.valid && isDeath3}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that I am not in receipt of any financial assistance of similar nature from the government\\r\\n                                                <span [style.color]=\\\"!isDeath3?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathOtherFinancialAssistance.invalid && (!isDeath3 ||  isDeathOtherFinancialAssistance.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of not in receipt of any financial assistance is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"education\\\" *ngIf=\\\"viewEducation\\\" [disabled]=\\\"disableEdu\\\">\\r\\n                                <header>Education </header>\\r\\n\\r\\n                                <fieldset id=\\\"addbutton\\\">\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"eduCount<2 && benficiaryChildren.length !=0\\\">\\r\\n                                        <a class=\\\"btn btn-primary\\\" (click)=\\\"openModel()\\\" style=\\\"width :55px;height:30px;padding:5px;\\\"> Add </a>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>Name of the Student</th>\\r\\n                                                    <th>Name of the Institution</th>\\r\\n                                                    <th>Contact Number of the Institution</th>\\r\\n                                                    <th>Registration No./Roll No./Year</th>\\r\\n                                                    <th> Present Reading</th>\\r\\n                                                    <th></th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngIf=\\\"educationDetailsArray.length==0\\\"><td colspan=\\\"6\\\">No student details</td></tr>\\r\\n                                                <tr *ngFor=\\\"let education of educationDetailsArray\\\">\\r\\n                                                    <td>{{education.dependentName}}</td>\\r\\n                                                    <td>{{education.institutionName}}</td>\\r\\n                                                    <td>{{education.institutionContact}}</td>\\r\\n                                                    <td>{{education.registrationRollNo}}</td>\\r\\n                                                    <td>{{education.presentlyReadingName}}</td>\\r\\n                                                    <td>\\r\\n                                                        <a class=\\\"btn btn-labeled btn-primary\\\" (click)=\\\"editEducationDetails(education)\\\" style=\\\"margin-right:5px;\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i> Edit</a>\\r\\n                                                        <a class=\\\"btn btn-labeled btn-danger\\\" (click)=\\\"removeEducationDetails(education)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Amount Claimed</label>\\r\\n                                        <label class=\\\"form-control\\\" disabled>{{claim.educationDetails.claimAmount}}</label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isanyothersourceofthegovernment\\\"\\r\\n                                                       [(ngModel)]=\\\"claim.educationDetails.isanyothersourceofthegovernment\\\"\\r\\n                                                       #isanyothersourceofthegovernment=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':isanyothersourceofthegovernment.invalid && (!educationCheck ||  isanyothersourceofthegovernment.touched), 'valid-data': isanyothersourceofthegovernment.valid && educationCheck}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that My son or daughter is not availing or has not availed any scholarship for the above mentioned courses from any other source of the government\\r\\n                                                <span [style.color]=\\\"!educationCheck?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isanyothersourceofthegovernment.invalid && (!educationCheck ||  isanyothersourceofthegovernment.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Check education terms and conditions </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"viewPf || viewHealth || viewDisability || viewDeath|| viewEducation\\\">\\r\\n                                <header>Upload Documents</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Form - V duly filled and signed <span [style.color]=\\\"!uplaodmain?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <div class=\\\"input input-file\\\">\\r\\n                                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'main')\\\"\\r\\n                                                                                [disabled]=\\\"!(SubmitVisible && !disableSubmitbutton && !restrictSave)\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                                </div>\\r\\n                                                <div *ngIf=\\\"(!uplaodmain) && (mainUpload?.fileName =='' || mainUpload?.fileName ==undefined )\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Form - V is required </span>\\r\\n                                                </div>\\r\\n                                                <div>\\r\\n                                                    {{mainUpload?.fileName}}\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <footer *ngIf=\\\"GenaratePdfVisible && disableSubmitbutton && !restrictSave\\\"><a class=\\\"btn btn-success\\\" (click)=\\\"GenaratePdf(claim,3)\\\">Generate Pdf</a></footer>\\r\\n                            <footer>\\r\\n                                <!--<a *ngIf=\\\"GenaratePdfVisible && disableSubmitbutton && !restrictSave\\\" class=\\\"btn btn-success\\\" (click)=\\\"GenaratePdf(claim,3)\\\">Generate Pdf</a>-->\\r\\n                                <a *ngIf=\\\"SubmitVisible && !disableSubmitbutton && !restrictSave\\\" name=\\\"save\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveClaimsData(claim,2)\\\">Submit</a>\\r\\n                                <a class=\\\"btn btn-primary\\\" *ngIf=\\\"SaveVisible && !restrictSave\\\" (click)=\\\"saveClaimsData(claim,1,$event)\\\">Save as Draft</a>\\r\\n                                <a class=\\\"btn btn-default\\\" (click)=\\\"claerClaim()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancleClick()\\\">Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n<!-- end widget grid -->\\r\\n<div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"lgModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Add Student Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divAddEducationDetails\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label control-label\\\"> Name of the Student <span [style.color]=\\\"!studentNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select class=\\\"form-control select\\\" name=\\\"dependentId\\\" (change)=\\\"selectDependent($event)\\\" [(ngModel)]=\\\"educationDetails.dependentId\\\"\\r\\n                                        #dependentId=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': dependentId.invalid && ( !studentNameValid || dependentId.touched ),\\r\\n                                        'valid-data': studentNameValid && dependentId.valid  }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose a Student</option>\\r\\n                                    <option value=\\\"{{ben.benFamilyMemSno}}\\\" *ngFor=\\\"let ben of benficiaryFamily\\\">{{ben.benDependentName}} - {{ben.benDependentRelation}}</option>\\r\\n                                </select>\\r\\n                                <i></i>\\r\\n                                <div *ngIf=\\\"dependentId.invalid && (!studentNameValid || dependentId.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Select a Student </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"isDuplicateDependent\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Already submitted for this year please select another dependent </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Name of the Institution <span [style.color]=\\\"!institutionNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"institutionName\\\" placeholder=\\\"Name of the Institution\\\" [(ngModel)]=\\\"educationDetails.institutionName\\\"\\r\\n                                       #institutionName=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': institutionName.invalid && (!institutionNameValid || institutionName.touched), 'valid-data': institutionName.valid && institutionNameValid}\\\" class=\\\"form-control\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"institutionName.invalid && (!institutionNameValid ||institutionName.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Name of the Institution is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Name of the Principal/Head Master of the institution</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"institutionPrinicipleName\\\" placeholder=\\\"Institution Principal Name\\\" [(ngModel)]=\\\"educationDetails.institutionPrinicipleName\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Contact Number of the Institution</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"institutionContact\\\" placeholder=\\\"Institution Contact\\\" [(ngModel)]=\\\"educationDetails.institutionContact\\\"\\r\\n                                       NumbersOnly maxlength=\\\"15\\\"\\r\\n                                       #institutionContact=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !institutionContactValid }\\\">\\r\\n                                <div *ngIf=\\\"!institutionContactValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Invalid IContact Number of the Institution</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Registration No./Roll No. of last exam passed  <span [style.color]=\\\"!registrationNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"registrationRollNo\\\" placeholder=\\\"Registration No./Roll No. of last exam passed \\\" [(ngModel)]=\\\"educationDetails.registrationRollNo\\\"\\r\\n                                       #registrationRollNo=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': registrationRollNo.invalid && (!registrationNoValid || registrationRollNo.touched), 'valid-data': registrationRollNo.valid && registrationNoValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"registrationRollNo.invalid && (!registrationNoValid ||registrationRollNo.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Registration No./Roll No. of last exam passed  is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Year of Examination <span [style.color]=\\\"!educationYearValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" placeholder=\\\"Year\\\" [(ngModel)]=\\\"educationDetails.year\\\" maxlength=\\\"4\\\" NumbersOnly>  <!--readonly-->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\" *ngIf=\\\"isMarried\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div>\\r\\n                                    <label for=\\\"label\\\">Is Married <span [style.color]=\\\"!marriedValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <input type=\\\"radio\\\" value=\\\"1\\\" name=\\\"gender\\\" required #gender=\\\"ngModel\\\" [(ngModel)]=\\\"educationDetails.isMarried\\\"> Yes\\r\\n                                    <input type=\\\"radio\\\" value=\\\"0\\\" name=\\\"gender\\\" required #gender=\\\"ngModel\\\" [(ngModel)]=\\\"educationDetails.isMarried\\\">No\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"!marriedValid\\\">\\r\\n                                    <!--*ngIf=\\\"gender.invalid && (!marriedValid || gender.touched)\\\"-->\\r\\n                                    <span style=\\\"color: red;\\\">Is Married is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Last Exam Passed</label>\\r\\n                                <select name=\\\"lastExamPassed\\\" class=\\\"form-control\\\" (change)=\\\"selectLastExamPassed($event,educationDetails)\\\" [(ngModel)]=\\\"educationDetails.lastExamPassed\\\">\\r\\n                                    <option value=\\\"00\\\" disabled>Choose Reading</option>\\r\\n                                    <option value=\\\"{{lep.lovDtlId}}\\\" *ngFor=\\\"let lep of lastExampassed\\\">{{lep.optionName}}</option>\\r\\n\\r\\n                                </select> <i></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Date of Admission <span *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\" [style.color]=\\\"!dateOfAdmissionValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"dateofAdmission\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                       #dateofAdmission=\\\"ngModel\\\" [disabled]=\\\"isDisabledBaseOnLastExamPassed\\\"\\r\\n                                       [(ngModel)]=\\\"educationDetails.dateofAdmission\\\" readonly\\r\\n                                       value=\\\"{{ educationDetails.dateofAdmission | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data':dateofAdmission.invalid && (!dateOfAdmissionValid || dateofAdmission.touched), 'valid-data':dateofAdmission.valid && dateOfAdmissionValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"dateofAdmission.invalid && (!dateOfAdmissionValid || dateofAdmission.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Date of Admission is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Presently Reading <span *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\" [style.color]=\\\"!presentlyReadingValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select name=\\\"presentlyReading\\\" class=\\\"form-control\\\" (change)=\\\"selectPresentlyReading($event,educationDetails)\\\"\\r\\n                                        [(ngModel)]=\\\"educationDetails.presentlyReading\\\" #presentlyReading=\\\"ngModel\\\" [disabled]=\\\"isDisabledBaseOnLastExamPassed\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': presentlyReading.invalid && ( !presentlyReadingValid || presentlyReading.touched ),\\r\\n                                        'valid-data': presentlyReadingValid && presentlyReading.valid  }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" disabled>Choose Reading</option>\\r\\n                                    <option value=\\\"{{edu.claimConfigId}}\\\" *ngFor=\\\"let edu of educationConfig\\\">{{edu.claimConfigOptionName}}</option>\\r\\n                                </select> <i></i>\\r\\n                                <div *ngIf=\\\"presentlyReading.invalid && (!presentlyReadingValid || presentlyReading.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Select a Presently reading </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Eligible Amount</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"eligibleAmount\\\" [(ngModel)]=\\\"educationDetails.eligibleAmount\\\" disabled />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 smart-form\\\">\\r\\n                        <header>Upload Documents</header>\\r\\n                        <div class=\\\"row\\\" *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\">\\r\\n                            <section class=\\\"col col-10 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Certificate from head of institution for not availing any scholarship <span [style.color]=\\\"!uploadCertificatetValid?'red':''\\\"><b>*</b></span> </label>\\r\\n\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\">\\r\\n                                        <input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'certificate')\\\">Browse\\r\\n                                    </span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                    <label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!uploadCertificatetValid && educertificates.length==0\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Certificate required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr *ngFor=\\\"let item of educertificates\\\">\\r\\n                                            <td>{{item.fileName}}</td>\\r\\n                                            <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'certificate')\\\">      <i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <!--<section style=\\\"padding-top:30px\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" *ngIf=\\\"viewuploadNonMarriage\\\">\\r\\n                            <section class=\\\"col col-10 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Non marriage certificate of Daughter <span [style.color]=\\\"!uploadNonMarriageValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'nonMarriage')\\\" id=\\\"file\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                    <label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!uploadNonMarriageValid && eduNonMarriage.length==0\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Non marriage certificate of Daughter required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr *ngFor=\\\"let item of eduNonMarriage\\\">\\r\\n                                            <td>{{item.fileName}}</td>\\r\\n                                            <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'nonMarriage')\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <!--<section style=\\\"padding-top:30px\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <section class=\\\"col col-10 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Self attested copy of last exam passing certificate <span [style.color]=\\\"!uploadselfattestedValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'selfAttest')\\\">Browse</span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                    <label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!uploadselfattestedValid && eduSelfAttested.length==0\\\">\\r\\n                                    <span style=\\\"color: red;\\\"> Self attested required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr *ngFor=\\\"let item of eduSelfAttested\\\">\\r\\n                                            <td>{{item.fileName}}</td>\\r\\n                                            <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'selfAttest')\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <!--<section style=\\\"padding-top:30px\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"lgModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addEducationDetails(educationDetails)\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div bsModal #packageModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"packageModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Packages</h4>\\r\\n            </div>\\r\\n             <div class=\\\"modal-body\\\" style=\\\"max-height:500px; overflow-x:scroll\\\">\\r\\n                <div *ngFor=\\\"let item of result\\\" border=\\\"1\\\">\\r\\n                    <strong>{{item.name}}</strong>                    \\r\\n                    <table class=\\\"table table-striped\\\" [mfData]=\\\"item.values\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th><!--<input type=\\\"checkbox\\\" value=\\\"checkAll\\\" name=\\\"checkall\\\" (change)=\\\"checkAll($event,item.name)\\\" />--></th>\\r\\n                                <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let value of mf.data;let i=index;\\\">\\r\\n                                <td><input type=\\\"checkbox\\\" name=\\\"{{i}}\\\" [(ngModel)]=\\\"value.isChecked\\\" (change)=\\\"checkIfAllSelected(item);\\\" /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{value.packageName}}</td>\\r\\n                                <td>{{value.packageCode}}</td>\\r\\n                                <td>{{value.amount}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitClick()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #pdfModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Form-V Pdf</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                Form-V genarated, Please print or download.\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf(claim,'print')\\\">\\r\\n                    Print FormV\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf(claim,'download')\\\">\\r\\n                    Download FormV\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ClaimModel } from '../models/claim.model';\r\nimport { HealthFamilyModel, HealthFamilyPackageModel } from \"../models/health-and-family.model\";\r\nimport { EducationHdrModel, EducationDetailModel } from \"../models/education.model\";\r\nimport { DeathModel } from '../models/death.model';\r\nimport { DisabilityModel } from '../models/disability.modl';\r\nimport { ProvidentFund } from '../models/providentfund.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { LovDetails } from '../models/Lov.model';\r\nimport { ClaimConfig } from '../models/claimconfig.model';\r\nimport { ClaimNomineeDataService } from '../../services/claim-data.service';\r\nimport { Router, Params, ActivatedRoute } from '@angular/router';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans, HealthClaimEligibility, PFTypeOfClaim, UserType, EducationBenefitConfiguration, HealthFamilyBenefitConfiguration, DisabilityBenefitConfiguration, DeathBenefitConfiguration, PFStatusMaster } from '../pipes/constnts.model';\r\nimport { Beneficiary } from '../models/ben.model';\r\nimport { BenFamilyMember } from '../models/ben.family.model';\r\nimport { HospitalModel } from '../models/hospital.model';\r\nimport { AttachmentModel } from '../models/attachment.model';\r\nimport { DATE } from 'ngx-bootstrap/chronos/units/constants';\r\nimport { DatepickerOptions } from 'ng2-datepicker';\r\nimport * as frLocale from 'date-fns/locale/fr';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { fail } from 'assert';\r\nimport { retry } from 'rxjs/operators';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { BenNominee } from '../models/ben.nominee.model';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ClaimExceptionDetailsModel } from '../../models/claimExceptionDetails';\r\nimport { PFBalanceDetails } from '../../models/pfBalanceDetails';\r\nimport { stream } from 'xlsx/types';\r\nimport { forEach } from 'typescript-collections/dist/lib/arrays';\r\nimport { ClaimTypes } from '../../models/ClaimTypes.model';\r\nimport { ClinicalTestModel } from 'src/app/models/ClinicalTest.model';\r\nimport { BenefitConfigData } from 'src/app/models/benefitConfigData.model';\r\nimport { PFConfigurationModel } from 'src/app/models/pfconfiguration.model';\r\nimport { moment } from 'ngx-bootstrap/chronos/test/chain';\r\nimport { ClaimConfigHdr } from '../models/claimconfighdr.model';\r\nimport { BeneficiaryPFAccountDetails } from '../models/ben.pfaccount.model';\r\n\r\n@Component({\r\n    selector: 'app-agent-claim-entry',\r\n    templateUrl: './agent-claim-entry.component.html',\r\n    styleUrls: ['./agent-claim-entry.component.css']\r\n})\r\nexport class AgentClaimEntryComponent implements OnInit, OnDestroy {\r\n    @ViewChild('lgModal') public lgModal: ModalDirective;\r\n    @ViewChild('packageModal') public packageModal: ModalDirective;\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('pdfModal') public pdfModal: ModalDirective;\r\n\r\n    route$: Subscription;\r\n    ssin: any;\r\n    claimId: number = 0;\r\n    claimType: number;\r\n    claimTypeString: any;\r\n    claimStatus: number = 0;\r\n    claimReference: number;\r\n    viewuploadNonMarriage: boolean = false;\r\n    viewPf: boolean = false;\r\n    viewHealth: boolean = false;\r\n    viewDeath: boolean = false;\r\n    viewEducation: boolean = false;\r\n    viewDisability: boolean = false;\r\n    viewDateOfFirstAppointment: boolean = false;\r\n    viewDateOfAdmit: boolean = false;\r\n    viewMetWithAnAccident: boolean = false;\r\n    viewFamily: boolean = false;\r\n    viewSelf: boolean = false;\r\n    viewLOEAmount: boolean = false;\r\n    viewAccidental: boolean = false;\r\n    viewEligibilityAmount: boolean = false;\r\n    viewDeathFieldsAndNominee: boolean = false;\r\n    viewDisabilityFieldsAndNominee: boolean = false;\r\n    enableDeathEligibility: boolean = false;\r\n    disableSubmitbutton: boolean = true;\r\n    disabledssin: boolean = false;\r\n    disableEducationCheckbox = false;\r\n    disableHealthCheckbox = false;\r\n    claim: ClaimModel = {} as ClaimModel;\r\n    educationDetails: EducationDetailModel = {} as EducationDetailModel;\r\n    educationDetailsArray: Array<EducationDetailModel> = [];\r\n    hospitalizationLov: Array<LovDetails> = [];\r\n    healthtypeofClaim: Array<LovDetails> = [];\r\n    healthConfig: Array<ClaimConfig> = [];\r\n    pfConfig: Array<ClaimConfig> = [];\r\n    deathConfig: Array<ClaimConfig> = [];\r\n    disabilityConfig: Array<ClaimConfig> = [];\r\n    educationConfig: Array<ClaimConfig> = [];\r\n    configConfig: Array<ClaimConfig> = [];\r\n    lastExampassed: Array<LovDetails> = [];\r\n    reasonForApply: Array<LovDetails> = [];\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    benficiaryFamily: Array<BenFamilyMember> = [];\r\n    benficiaryFamilybyHealth: BenFamilyMember[];\r\n    benficiaryChildren: Array<BenFamilyMember> = [];\r\n    benficiaryNominee: Array<BenNominee> = [];\r\n    hospotalList: Array<HospitalModel> = [];\r\n    deathEligibility: any;\r\n    disableEligibility: any;\r\n    successMessage: string;\r\n    maxHelathClaimLimitExceeded: boolean = false;\r\n    //Validation Education variables\r\n    studentNameValid: boolean = true;\r\n    institutionNameValid: boolean = true;\r\n    registrationNoValid: boolean = true;\r\n    institutionContactValid: boolean = true;\r\n    educationYearValid: boolean = true;\r\n    dateOfAdmissionValid: boolean = true;\r\n    presentlyReadingValid: boolean = true;\r\n    disableEdu: boolean = false;\r\n    maxLimitExceeded: boolean = false;\r\n    myGroup: any;\r\n    educationCheck: boolean = true;\r\n    uploadselfattestedValid: boolean = true;\r\n    uploadNonMarriageValid: boolean = true;\r\n    uploadCertificatetValid: boolean = true;\r\n    uplaodmain: boolean = true;\r\n    reasonForApplyValid: boolean = true;\r\n    ssinReq: boolean = true;\r\n    eduCount: number = 0;\r\n    rowIndex = -1;\r\n    totalHealthClaimAmount = 0;\r\n    typeOfAilmentClaimedAmount = 0\r\n    surgeryClaimedAmount = 0\r\n    lossOfEmploymentAmount = 0;\r\n    rowEligibleAmount = 0;\r\n    saveType: number;\r\n    validateDependent: boolean = false;\r\n    noDependents: boolean = false;\r\n    benficiaryInactive: boolean = false;\r\n    disableDischarge: boolean = true;\r\n    dischargeMinDt: Date;\r\n    minAppointmentDate = new Date(new Date().getTime() - (60 * 24 * 60 * 60 * 1000));\r\n    mode: string = \"\";\r\n    mainUpload: AttachmentModel;\r\n    educertificates: AttachmentModel[] = [] as AttachmentModel[];\r\n    eduNonMarriage: AttachmentModel[] = [] as AttachmentModel[];\r\n    eduSelfAttested: AttachmentModel[] = [] as AttachmentModel[];\r\n    mainUploadList: AttachmentModel[] = [] as AttachmentModel[];\r\n\r\n    healthOriginalVoucher: AttachmentModel = {} as AttachmentModel;\r\n    healthSelfAttached: AttachmentModel = {} as AttachmentModel;\r\n    healthDischargeCertificate: AttachmentModel = {} as AttachmentModel;\r\n    healthExpensesSheet: AttachmentModel = {} as AttachmentModel;\r\n    healthAttachmentList: AttachmentModel[] = [] as AttachmentModel[];\r\n    diseasesLov: LovDetails[];\r\n    clinicalTestLov: LovDetails[];\r\n    // health & family \r\n    typeOfClaimValid: boolean = false;\r\n    hospital: boolean = false;\r\n    hospitalization: boolean = false;\r\n    dateofAdmin: boolean = false;\r\n    dateofDischargeValid: boolean = false;\r\n    claimForValid: boolean = false;\r\n    familyMember: boolean = false;\r\n    hospitalselfAttested: boolean = false;\r\n    isOtherHospital: boolean = false;\r\n    otherHospitalValid: boolean = false;\r\n    hospotalId: number = 0;\r\n    disableCost: boolean = true;\r\n    //originalVoucher: boolean = false;\r\n    dischargeCertificate: boolean = false;\r\n    rigisterESI: boolean = false;\r\n    dateofAppointment: boolean = false;\r\n    loeFromDate: boolean = false;\r\n    loeToDate: boolean = false;\r\n    showDisCertUpload: boolean = true;\r\n    viewNameOfClinicalTest: boolean = false;\r\n    healthCondolationCertificate: AttachmentModel = {} as AttachmentModel;\r\n    reasonForHealthDelayValid: boolean = false;\r\n    enableReasonForDelaySubmissionInHealth: boolean = false;\r\n    isHealthClaimEdit: boolean = false;\r\n    healthCondolationCertificateUploaded: boolean = false;\r\n\r\n    //Button variables\r\n    GenaratePdfVisible: boolean = true;\r\n    SubmitVisible: boolean = true;\r\n    SaveVisible: boolean = true;\r\n    restrictSave: boolean = false;\r\n    ClaimStatusId: number = 0;\r\n    isVisable: boolean = true;\r\n    maxDate: any;\r\n    maxAdmitDate: any;\r\n    minDate: any;\r\n    minLOEDate: Date;\r\n    isLOEToDate: boolean = true;\r\n    datePickerConfig: any;\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    result: any[];\r\n    //expection: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    educationClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    healthClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    //Disability\r\n    disableDisabilityCheckbox = true;\r\n    disabilityCertificate: AttachmentModel = {} as AttachmentModel;\r\n    disabilityAttachmentList: AttachmentModel[] = [] as AttachmentModel[];\r\n    condolationCertificate: AttachmentModel = {} as AttachmentModel;\r\n    disabilityCertificateUploaded: boolean = false;\r\n    condolationCertificateUploaded: boolean = false;\r\n    dateofrelease1: boolean = false;\r\n    natureOfDisability: boolean = false;\r\n    reasonForDelayValid: boolean = false;\r\n    checkNatureOfDisability: boolean = true;\r\n    isDeathorpermanent1: boolean = false;\r\n    isDeathorpermanent2: boolean = false;\r\n    isDeathorpermanent3: boolean = false;\r\n    natureOfDisabilityName: string;\r\n    enableReasonForDelaySubmission: boolean = false;\r\n    isDisabilityClaimEdit: boolean = false;\r\n    //Death\r\n    disableDeathCheckbox = true;\r\n    deathCertificate: AttachmentModel = {} as AttachmentModel;\r\n    bankPassbook: AttachmentModel = {} as AttachmentModel;\r\n    deathAttachmentList: AttachmentModel[] = [] as AttachmentModel[];\r\n    deathCertificateUploaded: boolean = false;\r\n    bankPassbookUploaded: boolean = false;\r\n    dateofDeath: boolean = false;\r\n    natureOfDeath: boolean = false;\r\n    isDeath1: boolean = false;\r\n    isDeath2: boolean = false;\r\n    isDeath3: boolean = false;\r\n    placeOfDeathValid: boolean = false;\r\n    natureofDeathName: string;\r\n    beneficiaryAppliedDisabilities: number[] = [] as number[];\r\n    disabilityClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    deathClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n\r\n    //PF\r\n    pfBalanceDetails: PFBalanceDetails;\r\n    pfExsits: boolean = false;\r\n    pfClaimAmount: any;\r\n    disablePFCheckbox = false;\r\n    isPrematureClaim: boolean = false;\r\n    pfTypeOfClaimValid: boolean = false;\r\n    // pfLockingPeriodDate: string;\r\n    pfAccountStatus: string;\r\n    isPFSubmitted: boolean = false;\r\n    benNomineeShareAmount: number = 0;\r\n    viewNomineeShare: boolean = false;\r\n    disablePFTypeOfClaim: boolean = false;\r\n    reasonForPreclosureValid: boolean = false;\r\n    benMaturityDate: Date = null;\r\n    pfLockingPeriod: Date = null;\r\n    isNomineesExist: boolean = true;\r\n    pfClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    nomineeRequired: boolean = true;\r\n\r\n    isBenNomineeSubmittedClaim: boolean = false;\r\n    isBenNomineeSubmittedPFClaim: boolean = false;\r\n    //deathCheckBox: boolean = false;\r\n    //pfCheckBox: boolean = false;\r\n    isEduSubmitted: boolean = false;\r\n    isHFSubmitted: boolean = false;\r\n    //healthCheckBox: boolean = false;\r\n    //educationCheckBox: boolean = false;\r\n    pfExsitsValue: boolean = false;\r\n    isClaimEdit: boolean = false;\r\n    clinicalTestSettings = {};\r\n    nameOfClinicalTestIds: Array<any> = [];\r\n    clinicalTestDetails: ClinicalTestModel[] = [] as ClinicalTestModel[];\r\n\r\n    disabilityBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    healthFamilyBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    educationBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    deathBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    pfBenefitConfigDetails: PFConfigurationModel = {} as PFConfigurationModel;\r\n    isDisabledBaseOnLastExamPassed: boolean = false;\r\n    maturityDate: any;\r\n    marriedValid: boolean = true;\r\n    isMarried: boolean = false;\r\n    isDuplicateDependent: boolean = false;\r\n    isBenDeath: boolean = false;\r\n    isRegistrationNo: boolean = false;\r\n    isCAFUpdated: boolean = false;\r\n\r\n    //Claims Effective Dates\r\n    pfClaimEffectiveDate: Date = null;\r\n    healthFamilyClaimEffectiveDate: Date = null;\r\n    disabilityClaimEffectiveDate: Date = null;\r\n    deathClaimEffectiveDate: Date = null;\r\n    educationClaimEffectiveDate: Date = null;\r\n\r\n    claimConfigHdrDetails: ClaimConfigHdr[] = [] as ClaimConfigHdr[];\r\n    isClaimEffectiveDate: boolean = false;\r\n    claimEffectiveDate: Date = null;\r\n\r\n    beneficiaryPFAccountDetails: BeneficiaryPFAccountDetails = {} as BeneficiaryPFAccountDetails;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n        this.claim.educationDetails = {} as EducationHdrModel;\r\n        this.claim.deathDetails = {} as DeathModel;\r\n        this.claim.disabilityDetails = {} as DisabilityModel;\r\n        this.claim.providentFundDetails = {} as ProvidentFund;\r\n        this.maxDate = new Date();\r\n        this.maxAdmitDate = new Date();\r\n        //this.maxDate = new Date(new Date().setMonth(new Date().getMonth() + 3));\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        this.minAppointmentDate = new Date(this.minAppointmentDate);\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.pfTypeOfClaimValid = this.otherHospitalValid = true;//this.disablePFCheckbox = true;\r\n        this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded = this.reasonForHealthDelayValid = true;// this.originalVoucher =\r\n        this.dateofrelease1 = this.natureOfDisability = this.disabilityCertificateUploaded = this.isDeathorpermanent1 = this.isDeathorpermanent2 = this.isDeathorpermanent3 = this.checkNatureOfDisability = this.condolationCertificateUploaded = this.reasonForDelayValid = true;\r\n        this.natureOfDeath = this.dateofDeath = this.deathCertificateUploaded = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = this.bankPassbookUploaded = true;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n\r\n                this.claimId = params[\"claimId\"] != null ? Number(params[\"claimId\"]) : 0;\r\n                this.mode = params[\"mode\"];\r\n                this.claimTypeString = params[\"tranctionType\"];\r\n                this.claimStatus = params[\"claimStatus\"] != null ? Number(params[\"claimStatus\"]) : 0;\r\n                //if (this.claimStatus >= ClaimStatus.Submitted) {\r\n                //    this.GenaratePdfVisible = false;\r\n                //    this.disableSubmitbutton = false;\r\n                //    this.SaveVisible = false;\r\n                //}\r\n                //else {\r\n                //    this.claimStatus = ClaimStatus.Submitted;\r\n                //}\r\n            }\r\n        );\r\n        this.clinicalTestSettings = {\r\n            singleSelection: false,\r\n            idField: 'lovDtlId',\r\n            textField: 'optionName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        };\r\n        //this.claim.ssin=\"\"\r\n        //this.claimId = 137;//params[\"claimId\"];\r\n        //this.claimType = ClaimConstants.Education;\r\n        this.getDisabilityBenefitConfigurationDetails();\r\n        this.getHealthFamilyBenefitConfigurationDetails();\r\n        this.getPFBenefitConfigurationDetails();\r\n        this.getEducationBenefitConfigurationDetails();\r\n        this.getDeathBenefitConfigurationDetails();\r\n        this.getClaimsConfiguartionDetails();\r\n        if (this.claimId > 0) {\r\n            this.getAllLoads()\r\n            this.deleteClaimExceptions(this.claimId);\r\n            this.getClaimDetailsByClaimId(this.claimId);\r\n        }\r\n        else {\r\n            this.getAllLoads();\r\n        }\r\n\r\n    }\r\n    getClaimsConfiguartionDetails(): any {\r\n\r\n        this.dataService.getClaimConfigurationMaster()\r\n            .subscribe((data: any) => {\r\n                this.claimConfigHdrDetails = data;\r\n                debugger;\r\n                if (this.claimConfigHdrDetails != null) {\r\n                    this.pfClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 1).cliamEffectiveDate;\r\n                    this.healthFamilyClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 2).cliamEffectiveDate;\r\n                    this.disabilityClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 3).cliamEffectiveDate;\r\n                    this.deathClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 4).cliamEffectiveDate;\r\n                    this.educationClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 5).cliamEffectiveDate;\r\n                }\r\n            });\r\n    }\r\n    getAllLoads() {\r\n        this.getDeathConfiguration();\r\n        this.getDisabIlityConfiguration();\r\n        this.getEducationConfiguration();\r\n        this.getHealthandFamilyConfiguration();\r\n        this.getPfConfiguration();\r\n        this.getHospitalization();\r\n        this.getHealthClainFor();\r\n        this.getHospitals();\r\n        this.getDiseases();\r\n        this.getClinicalTests();\r\n        this.getLastExamPassed();\r\n        this.getReasonForApply();\r\n        this.getPackages();\r\n    }\r\n    getDiseases() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.Diseases)\r\n            .subscribe((data: any) => {\r\n                this.diseasesLov = data;\r\n            });\r\n    }\r\n    getClinicalTests() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.ClinicalTests)\r\n            .subscribe((data: any) => {\r\n                this.clinicalTestLov = data;\r\n            });\r\n    }\r\n    openModel() {\r\n        this.isDuplicateDependent = false;\r\n        this.studentNameValid = this.institutionNameValid = this.registrationNoValid = this.institutionContactValid = this.educationYearValid = this.dateOfAdmissionValid = this.presentlyReadingValid = this.marriedValid = true;\r\n        this.uploadCertificatetValid = this.uploadselfattestedValid = true;\r\n        this.rowIndex = -1;\r\n        this.rowEligibleAmount = 0;\r\n        this.eduSelfAttested = [] as AttachmentModel[];\r\n        this.educertificates = [] as AttachmentModel[];\r\n        this.eduNonMarriage = [] as AttachmentModel[];\r\n        this.educationDetails = {} as EducationDetailModel;\r\n        this.educationDetails.year = new Date().getFullYear();\r\n        this.lgModal.show();\r\n    }\r\n    getClaimDetailsByClaimId(id: any) {\r\n        this.dataService\r\n            .getClaimDetailsById(id)\r\n            .subscribe((data: any) => {\r\n                this.claim = data;\r\n                this.isClaimEdit = this.isDisabilityClaimEdit = this.isHealthClaimEdit = true;\r\n                if (this.claim != null) {\r\n                    //if (this.claimTypeString == \"Education\") { this.disableHealthCheckbox = true; }\r\n                    //else if (this.claimTypeString == \"HealthFamily\") { this.disableEducationCheckbox = true; this.disableEdu = true; }\r\n                    if (this.claimTypeString == undefined || this.claimTypeString == null) {\r\n                        if (this.claim.educationDetails != null && this.claim.educationDetails.educationHdrId > 0) {\r\n                            this.viewEducation = true;\r\n                            if (this.claim.educationDetails.educationDetailList != null && this.claim.educationDetails.educationDetailList.length > 0) {\r\n                                this.educationDetailsArray = this.claim.educationDetails.educationDetailList;\r\n                                this.rowIndex = this.rowIndex + this.educationDetailsArray.length;\r\n                                if (this.educationDetailsArray != null && this.educationDetailsArray.length > 0) {\r\n                                    for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                                        if (this.educationDetailsArray[i].presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                        if (this.educationDetailsArray[i].lastExamPassedName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.isDisabledBaseOnLastExamPassed = true;\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.isDisabledBaseOnLastExamPassed = false;\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                        //Duplicate Dependent\r\n                                        if (this.educationDetailsArray[i].isDuplicate) {\r\n                                            //const data1 = this.benficiaryFamily.find(x => x.benFamilyMemSno == this.educationDetailsArray[i].dependentId);\r\n                                            //var stringMsg = \"Already this Dependent \" + data1.benDependentName + \" has submitted for this year please select another dependent\";\r\n                                            this.isDuplicateDependent = true;\r\n                                            //alert(\"Already claim has submitted for this dependent in this year please select another dependent\");\r\n                                            //                    isValid = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (this.claim.healthFamilyDetails != null && this.claim.healthFamilyDetails.healthFamilyId > 0) {\r\n                            this.viewHealth = true;\r\n                            if (this.claim.healthFamilyDetails.hospitalId != null && this.claim.healthFamilyDetails.hospitalId != undefined && this.claim.healthFamilyDetails.otherHospital != undefined && this.claim.healthFamilyDetails.otherHospital != null) {\r\n                                this.isOtherHospital = true;\r\n                                this.hospotalId = this.claim.healthFamilyDetails.hospitalId;\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.claimFor === 5) {\r\n                                this.viewSelf = true;\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.claimFor === 6) {\r\n                                this.viewFamily = true;\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                                this.viewDateOfAdmit = true;\r\n                                this.disableCost = false;\r\n                                if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                                this.viewDateOfFirstAppointment = true;\r\n                                this.showDisCertUpload = false;\r\n                                if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                                    this.disableCost = false;\r\n                                    if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                                        this.viewNameOfClinicalTest = true;\r\n                                        if (this.claim.healthFamilyDetails.clinicalTestDetails != null && this.claim.healthFamilyDetails.clinicalTestDetails.length > 0) {\r\n                                            if (this.clinicalTestLov != null && this.clinicalTestLov.length > 0) {\r\n                                                const selectedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n                                                const deletedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n\r\n                                                for (var i = 0; i < this.claim.healthFamilyDetails.clinicalTestDetails.length; i++) {\r\n                                                    var t = this.claim.healthFamilyDetails.clinicalTestDetails[i].clinicalTest;\r\n                                                    var s = this.clinicalTestLov.filter(x => x.lovDtlId == t);\r\n\r\n                                                    if (s != null) {\r\n                                                        for (var j = 0; j < deletedClinicalTestDetails.length; j++) {\r\n                                                            if (s[0].lovDtlId == deletedClinicalTestDetails[j].lovDtlId) {\r\n                                                                deletedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                                if (deletedClinicalTestDetails != null && deletedClinicalTestDetails.length > 0) {\r\n                                                    for (var i = 0; i < deletedClinicalTestDetails.length; i++) {\r\n                                                        for (var j = 0; j < selectedClinicalTestDetails.length; j++) {\r\n                                                            if (selectedClinicalTestDetails[j].lovDtlId == deletedClinicalTestDetails[i].lovDtlId) {\r\n                                                                selectedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                for (var j = 0; j < selectedClinicalTestDetails.length; j++) { }\r\n                                                this.nameOfClinicalTestIds = selectedClinicalTestDetails;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.admittedDate != null && this.claim.healthFamilyDetails.admittedDate != undefined)\r\n                                this.claim.healthFamilyDetails.admittedDate = new Date(this.claim.healthFamilyDetails.admittedDate);\r\n                            if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined)\r\n                                this.claim.healthFamilyDetails.dischargeDate = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n\r\n                            if (this.claim.healthFamilyDetails.firstAppointmentDate != null) {\r\n                                this.claim.healthFamilyDetails.firstAppointmentDate = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                            }\r\n                            this.claim.healthFamilyDetails.attachmentDTOList.forEach((eachObj) => {\r\n                                if (eachObj.attachmentType === AttachmentType.OriginalVouchers) {\r\n                                    this.healthOriginalVoucher = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DischargeCertificate) {\r\n                                    this.healthDischargeCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DoctorPrescription) {\r\n                                    this.healthSelfAttached = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.ExpensesSheet) {\r\n                                    this.healthExpensesSheet = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                    this.healthCondolationCertificate = eachObj;\r\n                                }\r\n                            });\r\n\r\n                            let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                            for (var i = 0; i < data.length; i++) {\r\n                                this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                            }\r\n                            this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                            var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                            this.result = [];\r\n                            groups.forEach(g =>\r\n                                this.result.push({\r\n                                    name: g,\r\n                                    values: this.packages.filter(i => i.ailmentName === g)\r\n                                }\r\n                                ))\r\n                        }\r\n                        if (this.claim.deathDetails != null && this.claim.deathDetails.deathId > 0) {\r\n                            this.viewDeath = true;\r\n                            if (this.claim.deathDetails.dateofDeath != null) {\r\n                                this.claim.deathDetails.dateofDeath = new Date(this.claim.deathDetails.dateofDeath);\r\n                            }\r\n                            if (this.claim.deathDetails.natureofDeath > 0) {\r\n                                this.deathEligibility = this.claim.deathDetails.claimAmount;\r\n                                this.viewEligibilityAmount = true;\r\n\r\n                                if (this.claim.deathDetails.natureofDeath == 16) {\r\n                                    this.viewAccidental = true;\r\n                                }\r\n                            }\r\n                            this.claim.deathDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                                if (eachObj.attachmentType === AttachmentType.DeathCertificate) {\r\n                                    this.deathCertificate = eachObj;\r\n                                }\r\n\r\n                                if (eachObj.attachmentType === AttachmentType.FirstPageofBankPassbook) {\r\n                                    this.bankPassbook = eachObj;\r\n                                }\r\n\r\n                            });\r\n                        }\r\n                        if (this.claim.disabilityDetails != null && this.claim.disabilityDetails.disabilityId > 0) {\r\n                            this.viewDisability = true;\r\n                            if (this.claim.disabilityDetails.dateofRelease != null) {\r\n                                this.claim.disabilityDetails.dateofRelease = new Date(this.claim.disabilityDetails.dateofRelease);\r\n                            }\r\n                            if (this.claim.disabilityDetails.natureOfDisability != null) {\r\n                                this.enableDeathEligibility = true;\r\n                                this.disableEligibility = this.claim.disabilityDetails.claimAmount;\r\n                            }\r\n                            this.claim.disabilityDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                                if (eachObj.attachmentType === AttachmentType.DisabilityCertificate) {\r\n                                    this.disabilityCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                    this.condolationCertificate = eachObj;\r\n                                }\r\n                            });\r\n                        }\r\n                        if (this.claim.providentFundDetails != null && this.claim.providentFundDetails.pfId > 0) {\r\n\r\n                            this.viewPf = true;\r\n                            if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                                this.isPrematureClaim = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"Education\") {\r\n                        this.disableHealthCheckbox = true;\r\n                        this.disableEducationCheckbox = true;\r\n                        if (this.claim.educationDetails != null && this.claim.educationDetails.educationHdrId > 0) {\r\n                            this.viewEducation = true;\r\n                            if (this.claim.educationDetails.educationDetailList != null && this.claim.educationDetails.educationDetailList.length > 0) {\r\n                                this.educationDetailsArray = this.claim.educationDetails.educationDetailList;\r\n                                this.rowIndex = this.rowIndex + this.educationDetailsArray.length;\r\n                                if (this.educationDetailsArray != null && this.educationDetailsArray.length > 0) {\r\n                                    for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                                        if (this.educationDetailsArray[i].presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                        debugger;\r\n                                        if (this.educationDetailsArray[i].lastExamPassedName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                            this.isDisabledBaseOnLastExamPassed = true;\r\n                                            this.viewuploadNonMarriage = true;\r\n                                        }\r\n                                        else {\r\n                                            this.isDisabledBaseOnLastExamPassed = false;\r\n                                            this.viewuploadNonMarriage = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"HealthFamily\") {\r\n                        this.disableHealthCheckbox = true;\r\n                        this.disableEducationCheckbox = true;\r\n                        if (this.claim.healthFamilyDetails != null && this.claim.healthFamilyDetails.healthFamilyId > 0) {\r\n                            this.viewHealth = true;\r\n                            if (this.claim.healthFamilyDetails.claimFor === 5) {\r\n                                this.viewSelf = true;\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.claimFor === 6) {\r\n                                this.viewFamily = true;\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                                this.viewDateOfAdmit = true;\r\n                                this.disableCost = false;\r\n                                if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                            }\r\n                            else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                                this.viewDateOfFirstAppointment = true;\r\n                                this.showDisCertUpload = false;\r\n                                if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                                    this.disableCost = false;\r\n                                    if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                                        this.viewNameOfClinicalTest = true;\r\n                                        if (this.claim.healthFamilyDetails.clinicalTestDetails != null && this.claim.healthFamilyDetails.clinicalTestDetails.length > 0) {\r\n                                            if (this.clinicalTestLov != null && this.clinicalTestLov.length > 0) {\r\n                                                const selectedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n                                                const deletedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n\r\n                                                for (var i = 0; i < this.claim.healthFamilyDetails.clinicalTestDetails.length; i++) {\r\n                                                    var t = this.claim.healthFamilyDetails.clinicalTestDetails[i].clinicalTest;\r\n                                                    var s = this.clinicalTestLov.filter(x => x.lovDtlId == t);\r\n\r\n                                                    if (s != null) {\r\n                                                        for (var j = 0; j < deletedClinicalTestDetails.length; j++) {\r\n                                                            if (s[0].lovDtlId == deletedClinicalTestDetails[j].lovDtlId) {\r\n                                                                deletedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                                if (deletedClinicalTestDetails != null && deletedClinicalTestDetails.length > 0) {\r\n                                                    for (var i = 0; i < deletedClinicalTestDetails.length; i++) {\r\n                                                        for (var j = 0; j < selectedClinicalTestDetails.length; j++) {\r\n                                                            if (selectedClinicalTestDetails[j].lovDtlId == deletedClinicalTestDetails[i].lovDtlId) {\r\n                                                                selectedClinicalTestDetails.splice(j, 1);\r\n                                                            }\r\n\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                for (var j = 0; j < selectedClinicalTestDetails.length; j++) { }\r\n                                                this.nameOfClinicalTestIds = selectedClinicalTestDetails;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (this.claim.healthFamilyDetails.admittedDate != null && this.claim.healthFamilyDetails.admittedDate != undefined)\r\n                                this.claim.healthFamilyDetails.admittedDate = new Date(this.claim.healthFamilyDetails.admittedDate);\r\n                            if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined)\r\n                                this.claim.healthFamilyDetails.dischargeDate = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n\r\n                            if (this.claim.healthFamilyDetails.firstAppointmentDate != null) {\r\n                                this.claim.healthFamilyDetails.firstAppointmentDate = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                            }\r\n                            this.claim.healthFamilyDetails.attachmentDTOList.forEach((eachObj) => {\r\n                                if (eachObj.attachmentType === AttachmentType.OriginalVouchers) {\r\n                                    this.healthOriginalVoucher = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DischargeCertificate) {\r\n                                    this.healthDischargeCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.DoctorPrescription) {\r\n                                    this.healthSelfAttached = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.ExpensesSheet) {\r\n                                    this.healthExpensesSheet = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                    this.healthCondolationCertificate = eachObj;\r\n                                }\r\n                            });\r\n\r\n                            let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                            for (var i = 0; i < data.length; i++) {\r\n                                this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                            }\r\n                            this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                            var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                            this.result = [];\r\n                            groups.forEach(g =>\r\n                                this.result.push({\r\n                                    name: g,\r\n                                    values: this.packages.filter(i => i.ailmentName === g)\r\n                                }\r\n                                ))\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"Death\") {\r\n                        this.disableDeathCheckbox = true;\r\n                        this.disableHealthCheckbox = true;\r\n                        this.disableEducationCheckbox = true;\r\n                        if (this.claim.deathDetails != null && this.claim.deathDetails.deathId > 0) {\r\n                            this.viewDeath = true;\r\n                            if (this.claim.deathDetails.dateofDeath != null) {\r\n                                this.claim.deathDetails.dateofDeath = new Date(this.claim.deathDetails.dateofDeath);\r\n                            }\r\n                            //if (this.claim.deathDetails.natureofDeath == 16) {\r\n                            //    this.viewAccidental = true;\r\n                            //}\r\n                            if (this.claim.deathDetails.natureofDeath > 0) {\r\n                                this.deathEligibility = this.claim.deathDetails.claimAmount;\r\n                                this.viewEligibilityAmount = true;\r\n\r\n                                if (this.claim.deathDetails.natureofDeath == 16) {\r\n                                    this.viewAccidental = true;\r\n                                }\r\n                            }\r\n                            this.claim.deathDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                                if (eachObj.attachmentType === AttachmentType.DeathCertificate) {\r\n                                    this.deathCertificate = eachObj;\r\n                                }\r\n                                if (eachObj.attachmentType === AttachmentType.FirstPageofBankPassbook) {\r\n                                    this.bankPassbook = eachObj;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.claimTypeString == \"Disability\") {\r\n                        this.disableDisabilityCheckbox = true;\r\n                        //this.disableDeathCheckbox = true;\r\n                        this.disableHealthCheckbox = true;\r\n                        this.disableEducationCheckbox = true;\r\n                        if (this.claim.disabilityDetails != null && this.claim.disabilityDetails.disabilityId > 0) {\r\n                            this.viewDisability = true;\r\n                            if (this.claim.disabilityDetails.dateofRelease != null) {\r\n                                this.claim.disabilityDetails.dateofRelease = new Date(this.claim.disabilityDetails.dateofRelease);\r\n                            }\r\n                            if (this.claim.disabilityDetails.natureOfDisability != null) {\r\n                                this.enableDeathEligibility = true;\r\n                                this.disableEligibility = this.claim.disabilityDetails.claimAmount;\r\n                            }\r\n                        }\r\n                        this.claim.disabilityDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                            if (eachObj.attachmentType === AttachmentType.DisabilityCertificate) {\r\n                                this.disabilityCertificate = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                this.condolationCertificate = eachObj;\r\n                            }\r\n                        });\r\n                    }\r\n                    if (this.claimTypeString == \"PF\") {\r\n                        if (this.claim.providentFundDetails != null && this.claim.providentFundDetails.pfId > 0) {\r\n                            this.viewPf = true;\r\n                            if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                                this.isPrematureClaim = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.claim.attachment != null && this.claim.attachment.length > 0) {\r\n                        this.mainUpload = this.claim.attachment[0];\r\n                    }\r\n\r\n                    //  this.mainUpload = this.claim.attachment[0];\r\n                    //console.log(this.claim);\r\n                    //this.getBenficiaryFamilyDetails(this.claim.benSno);\r\n                    //this.getBenficiaryEduCount(this.claim.benSno);\r\n                    this.ssin = this.claim.ssin;\r\n                    this.searchSSINNo(this.claim.ssin);\r\n                }\r\n            });\r\n    }\r\n    getBeneficiaryAppliedDisabilities(id: any, claimId: any) {\r\n        this.dataService\r\n            .getBeneficiaryAppliedDisabilities(id, claimId)\r\n            .subscribe((data: any) => {\r\n                this.beneficiaryAppliedDisabilities = data;\r\n\r\n            });\r\n    }\r\n\r\n    changeCertificate(inputValue: any, type): void {\r\n        var file: File = inputValue.target.files[0];\r\n        if (type == \"main\") {\r\n            if (file.type != \"application/pdf\") {\r\n                alert(\"Only accept pdf file\");\r\n                return;\r\n            }\r\n        }\r\n        if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n            myReader.onloadend = (e) => {\r\n                const model: AttachmentModel = {} as AttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = ClaimStatus.Submitted;\r\n\r\n                switch (type) {\r\n\r\n                    case \"certificate\":\r\n                        model.attachmentType = AttachmentType.Scholarship;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.educertificates.push(model);\r\n                        break;\r\n                    case \"nonMarriage\":\r\n                        model.attachmentType = AttachmentType.NonMarriage;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.eduNonMarriage.push(model);\r\n                        break;\r\n                    case \"selfAttest\":\r\n                        model.attachmentType = AttachmentType.PassingExamCertificate;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.eduSelfAttested.push(model);\r\n                        break;\r\n                    case \"dischargeCertificate\":\r\n                        model.attachmentType = AttachmentType.DischargeCertificate;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthDischargeCertificate = model;\r\n                        break;\r\n                    case \"originalVoucher\":\r\n                        model.attachmentType = AttachmentType.OriginalVouchers;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthOriginalVoucher = model\r\n                        break;\r\n                    case \"healthselfAttest\":\r\n                        model.attachmentType = AttachmentType.DoctorPrescription;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthSelfAttached = model;\r\n                        break;\r\n                    case \"main\":\r\n                        model.attachmentType = AttachmentType.FormV;\r\n                        model.claimType = null;\r\n                        this.mainUpload = model;\r\n                        break;\r\n                    case \"disablityCertificate\":\r\n                        model.attachmentType = AttachmentType.DisabilityCertificate;\r\n                        model.claimType = ClaimConstants.Disability;\r\n                        this.disabilityCertificate = model;\r\n                        break;\r\n                    case \"deathCertificate\":\r\n                        model.attachmentType = AttachmentType.DeathCertificate;\r\n                        model.claimType = ClaimConstants.Death;\r\n                        this.deathCertificate = model;\r\n                        break;\r\n                    case \"healthExpensesSheet\":\r\n                        model.attachmentType = AttachmentType.ExpensesSheet;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthExpensesSheet = model;\r\n                        break;\r\n                    case \"bankPassbook\":\r\n                        model.attachmentType = AttachmentType.FirstPageofBankPassbook;\r\n                        model.claimType = ClaimConstants.Death;\r\n                        this.bankPassbook = model;\r\n                        break;\r\n                    case \"condolationCertificate\":\r\n                        model.attachmentType = AttachmentType.Condolationcertificate;\r\n                        model.claimType = ClaimConstants.Disability;\r\n                        this.condolationCertificate = model;\r\n                        break;\r\n                    case \"healthCondolationCertificate\":\r\n                        model.attachmentType = AttachmentType.Condolationcertificate;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthCondolationCertificate = model;\r\n                        break;\r\n                }\r\n\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n\r\n    removeUploadCertificates(edu, type) {\r\n        if (type == \"certificate\") {\r\n            const index: number = this.educertificates.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.educertificates.splice(index, 1);\r\n            }\r\n        }\r\n        if (type == \"nonMarriage\") {\r\n            const index: number = this.eduNonMarriage.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.eduNonMarriage.splice(index, 1);\r\n            }\r\n        }\r\n        if (type == \"selfAttest\") {\r\n            const index: number = this.eduSelfAttested.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.eduSelfAttested.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public showChildModal(): void {\r\n        this.lgModal.show();\r\n    }\r\n\r\n    public hideChildModal(): void {\r\n        this.lgModal.hide();\r\n    }\r\n    pfChange(eve) {\r\n\r\n        this.isBenNomineeSubmittedClaim = this.isBenNomineeSubmittedPFClaim = this.isHFSubmitted = this.isEduSubmitted = this.isPFSubmitted = this.maxLimitExceeded = this.maxHelathClaimLimitExceeded = this.pfExsits = false;\r\n        if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n            if (this.pfExsitsValue == false) {\r\n                if (this.claim.reasonForApply != 16) {\r\n                    this.validatePfSubmit(this.ssin.trim(), 0, eve);\r\n                }\r\n                else\r\n                    this.validatePfSubmit(this.ssin.trim(), this.claim.nomineeId, eve);\r\n\r\n            }\r\n            else {\r\n                this.viewPf = false;\r\n                eve.target.checked = false;\r\n                this.disablePFCheckbox = true;\r\n                this.pfExsits = true;\r\n            }\r\n            //if (this.claim.reasonForApply == 16) {\r\n            //    this.validatePfSubmit(this.ssin.trim(), this.claim.nomineeId, eve);\r\n            //    //this.isSameBenNomineeClaimSubmitted(this.beneficiary.benSno, this.claim.nomineeId, ClaimConstants.PF, eve);\r\n            //}\r\n            //else {\r\n            //    this.pfCode();\r\n            //}\r\n        }\r\n        else {\r\n            this.viewPf = false;\r\n            eve.target.checked = false;\r\n            this.disablePFCheckbox = true;\r\n            this.pfExsits = true;\r\n        }\r\n    }\r\n    pfCode() {\r\n        let share = 0;\r\n        //this.pfCheckBox = !this.viewPf;\r\n        this.viewPf = !this.viewPf;\r\n        if (this.viewPf) {//this.viewDeathFieldsAndNominee = true && \r\n            //16-On Death of Beneficiary\r\n            if (this.claim.reasonForApply == 16) {\r\n                this.viewNomineeShare = true;\r\n                if (this.benficiaryNominee != null && this.benficiaryNominee != undefined) {\r\n                    share = this.benficiaryNominee.find(n => n.benNomineeSno == this.claim.nomineeId).benNomineeSharePercentage;\r\n                    if (this.benficiaryNominee.length == 1) {\r\n                        if (share == 0) {\r\n                            share = 100;\r\n                        }\r\n                    }\r\n                    if (this.pfClaimAmount != undefined && this.pfClaimAmount != null && this.pfClaimAmount > 0)\r\n                        this.benNomineeShareAmount = Math.round(this.pfClaimAmount * (share / 100));\r\n                }\r\n\r\n                this.claim.providentFundDetails.typeOfClaim = PFTypeOfClaim.FinalPayment;\r\n                this.disablePFTypeOfClaim = true;\r\n            }\r\n        }\r\n    }\r\n    healthChange(eve) {\r\n        this.isBenNomineeSubmittedClaim = this.isBenNomineeSubmittedPFClaim = this.isHFSubmitted = this.isEduSubmitted = this.isPFSubmitted = this.maxLimitExceeded = this.maxHelathClaimLimitExceeded = this.pfExsits = false;\r\n        if (this.claim.reasonForApply == 16) {\r\n            this.getNomineeClaimEntryValidation(this.beneficiary.benSno, ClaimConstants.HealthFamily, eve);\r\n        }\r\n        else {\r\n            this.healthCode();\r\n        }\r\n    }\r\n    healthCode() {\r\n        this.benficiaryInactive = this.validateDependent = this.noDependents = this.maxLimitExceeded = false;\r\n        this.restrictSave = false; this.viewEducation = false; this.disableEdu = false; this.noDependents = false;\r\n        this.viewHealth = !this.viewHealth;\r\n        this.getBeneficiaryHealthClaimAmount(this.beneficiary.benSno);\r\n    }\r\n\r\n    deathChange(eve) {\r\n\r\n        this.isBenNomineeSubmittedClaim = this.isBenNomineeSubmittedPFClaim = this.isHFSubmitted = this.isEduSubmitted = this.isPFSubmitted = this.maxLimitExceeded = this.maxHelathClaimLimitExceeded = this.pfExsits = false;\r\n        this.isSameBenNomineeClaimSubmitted(this.beneficiary.benSno, this.claim.nomineeId, ClaimConstants.Death, eve);\r\n\r\n    }\r\n    disabilityChangeEvent(eve) {\r\n\r\n        this.isBenNomineeSubmittedClaim = this.isBenNomineeSubmittedPFClaim = this.isHFSubmitted = this.isEduSubmitted = this.isPFSubmitted = this.maxLimitExceeded = this.maxHelathClaimLimitExceeded = this.pfExsits = false;\r\n        this.viewDisability = !this.viewDisability;\r\n    }\r\n    educationChange(eve) {\r\n        this.isBenNomineeSubmittedClaim = this.isBenNomineeSubmittedPFClaim = this.isHFSubmitted = this.isEduSubmitted = this.isPFSubmitted = this.maxLimitExceeded = this.maxHelathClaimLimitExceeded = this.pfExsits = false;\r\n        if (this.claim.reasonForApply == 16) {\r\n            this.getNomineeClaimEntryValidation(this.beneficiary.benSno, ClaimConstants.Education, eve);\r\n        }\r\n        else {\r\n            this.educationCode(eve);\r\n        }\r\n    }\r\n    educationCode(eve) {\r\n        if (this.eduCount >= 2 && this.claimId == 0) {\r\n            this.disableEdu = true;\r\n            this.maxLimitExceeded = true;\r\n            this.restrictSave = true;\r\n            this.viewEducation = false;\r\n            //this.viewHealth = false;\r\n            eve.target.checked = false;\r\n            return;\r\n        }\r\n        if (this.benficiaryFamily == null || this.benficiaryFamily.length == 0) {\r\n            this.restrictSave = true; this.viewEducation = false; this.disableEdu = true; this.noDependents = true;\r\n            this.viewEducation = false;\r\n            eve.target.checked = false;\r\n            //this.viewHealth = false;\r\n            return;\r\n        }\r\n        this.viewEducation = eve.target.checked;\r\n        this.validateDependent = false;\r\n    }\r\n    disabilityChange(id: any) {\r\n\r\n        if (id != 0) {\r\n            this.enableDeathEligibility = true;\r\n            let data = this.disabilityConfig.find(x => x.claimConfigId == id);\r\n            this.disableEligibility = data.annualLimit;\r\n            this.natureOfDisabilityName = data.claimConfigOptionName;\r\n\r\n            let data1 = this.beneficiaryAppliedDisabilities.find(x => x == this.claim.disabilityDetails.natureOfDisability);\r\n            if (data1) {\r\n                this.checkNatureOfDisability = false;\r\n                //alert(\"Claim has been already submitted with this nature of disability\");\r\n                //return;\r\n            }\r\n            else {\r\n                this.checkNatureOfDisability = true;\r\n            }\r\n        }\r\n        else {\r\n            this.enableDeathEligibility = false;\r\n            this.disableEligibility = 0;\r\n        }\r\n    }\r\n    getPfBalance(benSno: any) {\r\n        this.pfExsitsValue = false;\r\n        this.dataService\r\n            .getPfBalance(benSno)\r\n            .subscribe((data: any) => {\r\n                this.pfBalanceDetails = data;\r\n\r\n                if (this.pfBalanceDetails != null && this.pfBalanceDetails != undefined) {\r\n                    if (this.pfBalanceDetails.code == \"000\") {\r\n                        //this.viewPf = !this.viewPf;\r\n                        //claim amount=   balance + cantribution +( (Contribution/25 ) * 30)\r\n                        this.pfClaimAmount = this.pfBalanceDetails.balance + this.pfBalanceDetails.contribution + ((this.pfBalanceDetails.contribution / 25) * 30);\r\n                        //this.pfLockingPeriodDate = this.pfBalanceDetails.lockingPeriodDate;\r\n                        this.pfAccountStatus = this.pfBalanceDetails.accountStatus;\r\n\r\n                        if (this.pfBenefitConfigDetails != null) {\r\n                            var date = new Date(this.beneficiary.benDob);\r\n                            //this.benMaturityDate = new Date(date.getFullYear() + 60, date.getMonth(), date.getDate());\r\n                            this.benMaturityDate = new Date(date.getFullYear() + this.pfBenefitConfigDetails.maturityAge, date.getMonth(), date.getDate());\r\n                            //pf Locking Period 3 year\r\n                            if (this.beneficiary.benRegDate != null) {\r\n                                var lockingDate = new Date(this.beneficiary.benRegDate);\r\n                                //this.pfLockingPeriod = new Date(lockingDate.getFullYear() + 3, lockingDate.getMonth(), lockingDate.getDate());\r\n                                this.pfLockingPeriod = new Date(lockingDate.getFullYear(), lockingDate.getMonth() + this.pfBenefitConfigDetails.pfLockingPeriodMonths, lockingDate.getDate());\r\n                            }\r\n                        }\r\n                        //this.pfExsits = false;\r\n                        this.pfExsitsValue = false;\r\n                    }\r\n                    else {\r\n                        //\r\n                        //this.disablePFCheckbox = false;\r\n                        this.pfExsitsValue = true;\r\n                        //this.pfExsits = true;\r\n                        //this.viewPf = false;\r\n                    }\r\n                }\r\n                //if (this.pfExsits == false) {\r\n                //    this.validatePfSubmit(this.ssin.trim(), 0);\r\n\r\n                //}\r\n                //else {\r\n                //    this.disablePFCheckbox = true;\r\n                //}\r\n            });\r\n    }\r\n    pfTypeOfClaimChange(eve) {\r\n\r\n        if (this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n            this.isPrematureClaim = true;\r\n            this.reasonForPreclosureValid = true;\r\n        }\r\n        else {\r\n            this.isPrematureClaim = false;\r\n        }\r\n    }\r\n    typeOfClaimChange(eve) {\r\n        if (this.claim.healthFamilyDetails.typeOfClaim == 5) {\r\n            this.claim.healthFamilyDetails.typeOfHospitalization = 1;\r\n        }\r\n        else if (this.claim.healthFamilyDetails.typeOfClaim == 0) {\r\n            this.claim.healthFamilyDetails.typeOfHospitalization = 0;\r\n        }\r\n        this.getBeneficiaryHealthClaimAmount(this.beneficiary.benSno, this.claim.healthFamilyDetails.typeOfClaim);\r\n        this.hospitalizationChange(eve);\r\n    }\r\n    getBeneficiaryHealthClaimAmount(benSno: any, typeOfClaim?: any) {\r\n        this.maxHelathClaimLimitExceeded = false;\r\n        this.dataService\r\n            .getBeneficiaryHealthClaimAmount(benSno, typeOfClaim)\r\n            .subscribe((data: any) => {\r\n                let maxEligibleAmount: number = 0;\r\n                if (typeOfClaim != 0) {\r\n                    if (typeOfClaim == 4) { maxEligibleAmount = HealthClaimEligibility.TreatmentOfAilment; this.typeOfAilmentClaimedAmount = data; }\r\n                    else { maxEligibleAmount = HealthClaimEligibility.Surgery; this.surgeryClaimedAmount = data; }\r\n                    if (data >= maxEligibleAmount) {\r\n                        alert(\"Maximum claim limit has been reached for the selected claim type.\");\r\n                        this.claim.healthFamilyDetails.typeOfClaim = 0;\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    this.totalHealthClaimAmount = data;\r\n                    maxEligibleAmount = HealthClaimEligibility.TreatmentOfAilment + HealthClaimEligibility.Surgery;\r\n                    if (this.totalHealthClaimAmount >= maxEligibleAmount) {\r\n                        this.viewHealth = false;\r\n                        this.maxHelathClaimLimitExceeded = true;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    hospitalChange(eve) {\r\n\r\n        if (this.hospotalList.length > 0) {\r\n            var hos = this.hospotalList.find(x => x.hospitalId == eve);\r\n            this.hospotalId = 0;\r\n            if (hos != null) {\r\n                if (hos.hospitalName.toLowerCase() == \"not in the list\") {\r\n\r\n                    this.hospotalId = hos.hospitalId;\r\n                }\r\n            }\r\n            if (this.hospotalId > 0) {\r\n\r\n                this.isOtherHospital = true;\r\n                this.otherHospitalValid = true;\r\n            }\r\n            else {\r\n                this.isOtherHospital = false;\r\n                this.claim.healthFamilyDetails.otherHospital = undefined;\r\n            }\r\n        }\r\n    }\r\n    hospitalizationChange(eve) {\r\n        this.viewDateOfFirstAppointment = this.viewDateOfAdmit = this.viewMetWithAnAccident = this.viewNameOfClinicalTest = false;\r\n        this.showDisCertUpload = this.disableCost = true;\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n            this.viewDateOfAdmit = true;\r\n            this.disableCost = false;\r\n            if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n\r\n            this.claim.healthFamilyDetails.nameOfTheDisease = undefined;\r\n            this.claim.healthFamilyDetails.nameOfClinicalTest = undefined;\r\n        }\r\n        else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n            this.viewDateOfFirstAppointment = true;\r\n            this.showDisCertUpload = false;\r\n\r\n            this.claim.healthFamilyDetails.costOfClinicalTest = undefined;\r\n            this.claim.healthFamilyDetails.costOfMedicine = undefined;\r\n\r\n            if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                this.disableCost = false;\r\n                if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                    this.viewNameOfClinicalTest = true;\r\n                }\r\n            }\r\n        }\r\n        this.claimForChange(eve);\r\n    }\r\n    nameOfDiseaseChange(eve) {\r\n        this.viewNameOfClinicalTest = this.disableCost = false;\r\n        if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n            this.viewNameOfClinicalTest = true;\r\n        }\r\n        else {\r\n            this.viewNameOfClinicalTest = false;\r\n            this.claim.healthFamilyDetails.nameOfClinicalTest = undefined;\r\n        }\r\n    }\r\n\r\n    claimForChange(eve) {\r\n        this.viewSelf = this.viewFamily = false;\r\n        if (this.claim.healthFamilyDetails.claimFor == 5) {\r\n            if (this.claim.healthFamilyDetails.typeOfHospitalization != 2) {\r\n                this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n                this.viewSelf = true;\r\n            }\r\n        }\r\n        else if (this.claim.healthFamilyDetails.claimFor == 6) {\r\n            this.viewFamily = true;\r\n        }\r\n    }\r\n    natureOfDeathChange(natureOfDeathData) {\r\n        this.viewAccidental = this.viewEligibilityAmount = false;\r\n        if (this.claim.deathDetails.natureofDeath > 0) {\r\n            const data = this.deathConfig.find(x => x.claimConfigId == natureOfDeathData);\r\n            this.viewEligibilityAmount = true; this.deathEligibility = data.annualLimit;\r\n            this.natureofDeathName = data.claimConfigOptionName;\r\n        }\r\n        if (this.claim.deathDetails.natureofDeath == 16) {\r\n            this.viewAccidental = true;\r\n        }\r\n    }\r\n    selectDependent(args) {\r\n        const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == args.target.value);\r\n        this.dataService\r\n            .isDuplicateDependentSubmitted(data.benSno, data.benFamilyMemSno, this.claimId, this.claim.reasonForApply == 16? false:true)\r\n            .subscribe((data1: any) => {\r\n                debugger;\r\n                if (!data1) {\r\n                    //--------------\r\n                    if (this.educationDetailsArray.findIndex(x => x.dependentId == args.target.value) != -1 && this.rowIndex == -1) {\r\n                        alert(\"already added please select another dependent\"); this.educationDetails.dependentId = 0; return;\r\n                    }\r\n\r\n                    if (data.benDependentRelation.toLowerCase() == \"daughter\") {\r\n                        this.isMarried = this.marriedValid = true;\r\n                        this.getEducationConfiguration();\r\n                        this.getLastExamPassed();\r\n                    }\r\n                    else if (data.benDependentRelation.toLowerCase() == \"son\") {\r\n                        this.educationConfig = this.dataService.eduConfig;\r\n                        const index = this.educationConfig.findIndex(x => x.claimConfigOptionName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\");\r\n                        this.educationConfig.splice(index, 1);\r\n                        // remove item from last Exam passed option\r\n                        const indexLastExamPassed = this.lastExampassed.findIndex(l => l.optionName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\");\r\n                        this.lastExampassed.splice(indexLastExamPassed, 1);\r\n                        //var timeDiff = Math.abs(Date.now() - Date.parse(data.dob));\r\n                        //const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\r\n                        //if (age >= 21) {\r\n                        //    alert(\"your dependent not suitable for this claim beacause your son age 21\");\r\n                        //    return;\r\n                        //}\r\n                        this.isMarried = false;\r\n                    }\r\n                    else {\r\n                        this.getEducationConfiguration();\r\n                        this.getLastExamPassed();\r\n                    }\r\n                    this.isDuplicateDependent = false;\r\n                }\r\n                else {\r\n                    this.isDuplicateDependent = true;\r\n                }\r\n                //-------------------\r\n            });\r\n        this.educationDetails.dependentName = args.target.options[args.target.selectedIndex].text;\r\n        this.educationDetails.dependentRelation = args.target.options[args.target.selectedIndex].text.split('-')[1];\r\n    }\r\nselectLastExamPassed(args, education: EducationDetailModel) {\r\n    this.educationDetails.lastExamPassedName = args.target.options[args.target.selectedIndex].text;\r\n    if (args.target.options[args.target.selectedIndex].text == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n        this.isDisabledBaseOnLastExamPassed = true;\r\n        this.educationDetails.eligibleAmount = 25000;\r\n        this.viewuploadNonMarriage = true;\r\n        this.educationDetails.presentlyReading = undefined;\r\n        this.educationDetails.dateofAdmission = undefined;\r\n    }\r\n    else {\r\n        this.isDisabledBaseOnLastExamPassed = false;\r\n        this.educationDetails.eligibleAmount = 0;\r\n        this.viewuploadNonMarriage = false;\r\n        this.educationDetails.presentlyReading = undefined;\r\n        this.educationDetails.dateofAdmission = undefined;\r\n    }\r\n}\r\nselectPresentlyReading(args, education: EducationDetailModel) {\r\n    const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == education.dependentId);\r\n    this.educationDetails.presentlyReadingName = args.target.options[args.target.selectedIndex].text;\r\n    if (this.educationDetails.presentlyReading > 0) {\r\n        const data = this.educationConfig.find(x => x.claimConfigId == this.educationDetails.presentlyReading);\r\n        this.educationDetails.eligibleAmount = data.annualLimit;\r\n    }\r\n    else {\r\n        this.educationDetails.eligibleAmount = 0;\r\n    }\r\n\r\n    if (data.benDependentRelation.toLowerCase() == \"daughter\" && this.educationDetails.presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n        this.viewuploadNonMarriage = true;\r\n    }\r\n    else {\r\n        this.viewuploadNonMarriage = false;\r\n    }\r\n}\r\n\r\n    reasonForApplyChange(mode) {\r\n    this.isRegistrationNo = false;\r\n    this.isBenNomineeSubmittedClaim = this.isBenNomineeSubmittedPFClaim = this.isBenDeath= false;\r\n    this.disablePFCheckbox = this.disableHealthCheckbox = this.disableEducationCheckbox = false;\r\n    //this.disablePFCheckbox = this.disableHealthCheckbox = this.disableDisabilityCheckbox = this.disableDeathCheckbox = this.disableEducationCheckbox = true;\r\n    this.viewDisability = false;\r\n    this.viewDeath = false;\r\n    this.viewPf = false;\r\n    this.viewHealth = false;\r\n    this.viewEducation = false;\r\n    this.viewDeathFieldsAndNominee = false;\r\n    this.claim.healthFamilyDetails.claimFor = 0;\r\n    this.isNomineesExist = true;\r\n    //16-On Death of Beneficiary / On Request of Nominee\r\n    //17-On Disability of Beneficiary\r\n    //18-On Request of Beneficiary\r\n    if (mode == 16) {\r\n        this.isBenDeath = false;\r\n        this.disableDisabilityCheckbox = true;\r\n        this.disableDeathCheckbox = false;\r\n        this.viewDeathFieldsAndNominee = true;\r\n        if (this.ssin != undefined && this.ssin.trim() != \"\" && this.beneficiary != null) {\r\n            this.getBeneficiaryNomineeDetails(this.beneficiary.benSno);\r\n            if (this.benficiaryNominee.length == 0)\r\n                this.isNomineesExist = false;\r\n            else\r\n                this.isNomineesExist = true;\r\n        }\r\n        //this.getNomineeClaimEntryValidation(this.beneficiary.benSno);\r\n    }\r\n    else {\r\n        if (this.beneficiary != null && this.beneficiary.benDeathStatus == 1) {\r\n            this.isBenDeath = true;\r\n            this.disableDeathCheckbox = true;\r\n            this.disableEducationCheckbox = true;\r\n            this.disableDisabilityCheckbox = true;\r\n            this.disableHealthCheckbox = true;\r\n            this.disablePFCheckbox = true;\r\n        }\r\n        else {\r\n            if (this.claim.reasonForApply == 17) {\r\n                this.disableEducationCheckbox = true;\r\n                this.disableHealthCheckbox = true;\r\n                this.disablePFCheckbox = true;\r\n            }\r\n                this.disableDeathCheckbox = true;\r\n                this.disableDisabilityCheckbox = false;\r\n                this.isBenNomineeClaimSubmitted(this.beneficiary.benSno);\r\n        }\r\n    }\r\n    if (mode == 16 || mode == 17) {\r\n        this.claim.healthFamilyDetails.claimFor = 5;\r\n    }\r\n   \r\n    this.claimForChange(null);\r\n}\r\nnomineeChange(nomineeSno) {\r\n    //this.validatePfSubmit(this.ssin.trim(), nomineeSno);\r\n    this.claim.nomineeId = nomineeSno;\r\n    if (this.benficiaryNominee.length > 0) {\r\n        var nominee = this.benficiaryNominee.find(x => x.benNomineeSno == nomineeSno);\r\n        if (nominee != null) {\r\n            this.claim.nomineeName =  nominee.benNomineeName;\r\n            this.claim.nomineeBankAccount = nominee.benNomineeBankAccNo;\r\n            this.claim.nomineeIFSCCode = nominee.benNomineeBankIfscCode;\r\n        }\r\n    }\r\n}\r\nchkAccidentChange(args, value) {\r\n    if (value == true) { this.claim.healthFamilyDetails.claimFor = 5; }\r\n    else { this.claim.healthFamilyDetails.claimFor = 0; }\r\n    this.claimForChange(args);\r\n}\r\nvalidateEducationDetails(details: EducationDetailModel): boolean {\r\n    let isValid = true;\r\n    this.studentNameValid = this.institutionNameValid = this.registrationNoValid = this.institutionContactValid = this.educationYearValid = this.dateOfAdmissionValid = this.presentlyReadingValid = true;\r\n    if (details.dependentId == undefined || details.dependentId <= 0) { this.studentNameValid = isValid = false; }\r\n    if (details.institutionName == undefined || details.institutionName == \"\") { this.institutionNameValid = isValid = false; }\r\n    if (details.registrationRollNo == undefined || details.registrationRollNo == \"\") { this.registrationNoValid = isValid = false; }\r\n    if (details.institutionContact != undefined && details.institutionContact.toString().length > 0 && details.institutionContact.toString().length < 10) {\r\n        this.institutionContactValid = isValid = false;\r\n    }\r\n    if (details.year == undefined) { this.educationYearValid = isValid = false; }\r\n    if (this.viewuploadNonMarriage) {\r\n        if (this.eduNonMarriage.length == 0) { this.uploadNonMarriageValid = isValid = false }\r\n    }\r\n\r\n    if (this.educertificates.length == 0 && !this.isDisabledBaseOnLastExamPassed) { this.uploadCertificatetValid = isValid = false }\r\n    if (this.eduSelfAttested.length == 0) { this.uploadselfattestedValid = isValid = false }\r\n    if (details.dateofAdmission == undefined && !this.isDisabledBaseOnLastExamPassed) { this.dateOfAdmissionValid = isValid = false; }\r\n    if ((details.presentlyReading == undefined || details.presentlyReading <= 0) && !this.isDisabledBaseOnLastExamPassed) { this.presentlyReadingValid = isValid = false; }\r\n    debugger;\r\n    if (this.isMarried && (details.isMarried == undefined || details.isMarried == null)) { this.marriedValid = isValid = false; }\r\n    else if (this.isMarried && details.isMarried == \"1\") {\r\n        isValid = false;\r\n        alert(\"This benefit not applicable for married student\");\r\n        return;\r\n    }\r\n    if (this.isDuplicateDependent) { isValid = false; }\r\n    return isValid;\r\n}\r\naddEducationDetails(details: EducationDetailModel) {\r\n    if (this.claim.educationDetails.claimAmount == undefined) { this.claim.educationDetails.claimAmount = 0; }\r\n    if (this.validateEducationDetails(details)) {\r\n        details.statusId = ClaimStatus.Submitted;\r\n        if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) == -1 && this.rowIndex == -1) {\r\n\r\n            const attachedList: AttachmentModel[] = [];\r\n            if (this.educertificates.length > 0) {\r\n                this.educertificates.forEach(contact => {\r\n                    attachedList.push(contact);\r\n                });\r\n            }\r\n            if (this.eduNonMarriage.length > 0) {\r\n                this.eduNonMarriage.forEach(contact => {\r\n                    attachedList.push(contact);\r\n                });\r\n            }\r\n            if (this.eduSelfAttested.length > 0) {\r\n                this.eduSelfAttested.forEach(contact => {\r\n                    attachedList.push(contact);\r\n                });\r\n            }\r\n            details.attachmentDetailsList = attachedList;\r\n            details.isDuplicate = false;\r\n            this.educationDetailsArray.push(details);\r\n            this.claim.educationDetails.claimAmount -= this.rowEligibleAmount == undefined ? 0 : this.rowEligibleAmount;\r\n            this.eduCount += 1;\r\n            this.lgModal.hide();\r\n        }\r\n        else if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) != -1 && this.rowIndex == -1) {\r\n            alert(\"already added please select another dependent\"); return;\r\n        }\r\n        else {\r\n            if (this.rowIndex != -1) {\r\n                if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) == this.rowIndex) {\r\n                    this.educationDetailsArray.splice(this.rowIndex, 1);\r\n                    this.claim.educationDetails.claimAmount -= this.rowEligibleAmount == undefined ? 0 : this.rowEligibleAmount;\r\n                    const attachedList: AttachmentModel[] = [];\r\n                    if (this.educertificates.length > 0) {\r\n                        this.educertificates.forEach(contact => {\r\n                            attachedList.push(contact);\r\n                        });\r\n                    }\r\n                    if (this.eduNonMarriage.length > 0) {\r\n                        this.eduNonMarriage.forEach(contact => {\r\n                            attachedList.push(contact);\r\n                        });\r\n                    }\r\n                    if (this.eduSelfAttested.length > 0) {\r\n                        this.eduSelfAttested.forEach(contact => {\r\n                            attachedList.push(contact);\r\n                        });\r\n                    }\r\n                    details.attachmentDetailsList = attachedList;\r\n                    details.isDuplicate = false;\r\n                    this.educationDetailsArray.push(details);\r\n                    this.rowIndex = -1;\r\n                    this.rowEligibleAmount = 0;\r\n                    this.lgModal.hide();\r\n                }\r\n                else {\r\n                    alert(\"already added please select another dependent\"); return;\r\n                }\r\n            }\r\n        }\r\n        if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n            var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toString());\r\n            if (eduBenefit != null) {\r\n                var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n            }\r\n            if (cond) { this.maxLimitExceeded = true; }\r\n        }\r\n        //if (this.eduCount >= 2) { this.maxLimitExceeded = true; }\r\n        const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == details.dependentId);\r\n        this.claim.educationDetails.claimAmount += details.eligibleAmount == undefined ? 0 : details.eligibleAmount;\r\n\r\n        this.educationDetails = {} as EducationDetailModel;\r\n    }\r\n}\r\neditEducationDetails(details: EducationDetailModel) {\r\n    this.educationDetails = details;\r\n    this.eduSelfAttested = [] as AttachmentModel[];\r\n    this.educertificates = [] as AttachmentModel[];\r\n    this.eduNonMarriage = [] as AttachmentModel[];\r\n    this.educationDetails.dateofAdmission = new Date(details.dateofAdmission);\r\n    this.educationDetails.attachmentDetailsList.forEach((eachObj) => {\r\n        if (eachObj.attachmentType === AttachmentType.Scholarship) {\r\n            this.educertificates.push(eachObj);\r\n        }\r\n        if (eachObj.attachmentType === AttachmentType.NonMarriage) {\r\n            this.eduNonMarriage.push(eachObj);\r\n        }\r\n        if (eachObj.attachmentType === AttachmentType.PassingExamCertificate) {\r\n            this.eduSelfAttested.push(eachObj);\r\n        }\r\n    });\r\n    this.rowEligibleAmount = details.eligibleAmount;\r\n    this.rowIndex = this.educationDetailsArray.indexOf(details);\r\n    this.lgModal.show();\r\n}\r\nremoveEducationDetails(details: EducationDetailModel) {\r\n    const index: number = this.educationDetailsArray.indexOf(details);\r\n    if (index !== -1) {\r\n        this.claim.educationDetails.claimAmount -= this.educationDetailsArray[index].eligibleAmount == undefined ? 0 : this.educationDetailsArray[index].eligibleAmount;\r\n        this.educationDetailsArray.splice(index, 1);\r\n        if (this.educationDetailsArray.findIndex(x => x.presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") != -1) {\r\n            this.viewuploadNonMarriage = true;\r\n        }\r\n        else {\r\n            this.viewuploadNonMarriage = false;\r\n        }\r\n        this.eduCount -= 1;\r\n        if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n            var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n            if (eduBenefit != null) {\r\n                var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n            }\r\n            if (cond) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n        }\r\n        //if (this.eduCount >= 2) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n    }\r\n}\r\ngetHospitalization() {\r\n    this.dataService\r\n        .getlovDetails(LovConstants.Hospitalization)\r\n        .subscribe((data: any) => {\r\n            this.hospitalizationLov = data;\r\n        });\r\n}\r\ngetHealthClainFor() {\r\n    this.dataService\r\n        .getlovDetails(LovConstants.ClaimFor)\r\n        .subscribe((data: any) => {\r\n            this.healthtypeofClaim = data;\r\n        });\r\n}\r\ngetLastExamPassed() {\r\n    this.dataService\r\n        .getlovDetails(LovConstants.LastExamPassed)\r\n        .subscribe((data: any) => {\r\n            this.lastExampassed = data;\r\n        });\r\n}\r\ngetReasonForApply() {\r\n    this.dataService\r\n        .getlovDetails(LovConstants.ReasonForApply)\r\n        .subscribe((data: any) => {\r\n            this.reasonForApply = data;\r\n        });\r\n}\r\n\r\ngetPfConfiguration() {\r\n    this.dataService\r\n        .getClaimConfiguration(ClaimConstants.PF)\r\n        .subscribe((data: any) => {\r\n            this.pfConfig = data;\r\n        });\r\n}\r\ngetHealthandFamilyConfiguration() {\r\n    this.dataService\r\n        .getClaimConfiguration(ClaimConstants.HealthFamily)\r\n        .subscribe((data: any) => {\r\n            this.healthConfig = data;\r\n        });\r\n}\r\ngetEducationConfiguration() {\r\n    this.dataService\r\n        .getClaimConfiguration(ClaimConstants.Education)\r\n        .subscribe((data: any) => {\r\n            this.educationConfig = data;\r\n            this.dataService.eduConfig = data;\r\n        });\r\n}\r\ngetDeathConfiguration() {\r\n    this.dataService\r\n        .getClaimConfiguration(ClaimConstants.Death)\r\n        .subscribe((data: any) => {\r\n            this.deathConfig = data;\r\n        });\r\n}\r\ngetDisabIlityConfiguration() {\r\n    this.dataService\r\n        .getClaimConfiguration(ClaimConstants.Disability)\r\n        .subscribe((data: any) => {\r\n            this.disabilityConfig = data;\r\n        });\r\n}\r\n    searchSSINNo(ssnNo: any) {\r\n        this.benficiaryNominee=[];\r\n    this.pfExsits = this.isPFSubmitted = this.isCAFUpdated = false;\r\n    this.benficiaryInactive = this.validateDependent = this.noDependents = this.maxLimitExceeded = false;\r\n    if (this.claimId <= 0) {\r\n        this.viewDisability = false;\r\n        this.viewDeath = false;\r\n        this.viewPf = false;\r\n    }\r\n   // this.viewDeathFieldsAndNominee = false;\r\n    //this.viewDisability = this.viewDeath = this.disableDisabilityCheckbox = this.disableDeathCheckbox = false;\r\n        if (ssnNo != undefined && ssnNo.trim() != \"\") {\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                debugger;\r\n                if (this.viewDeathFieldsAndNominee) {\r\n                    this.dataService.isCAFUpdated(ssnNo.trim(), this.isRegistrationNo).subscribe((data1: any) => {\r\n                        debugger;\r\n                        if (!data1)\r\n                            this.isCAFUpdated = true;\r\n                        else {\r\n                            this.dataService\r\n                                .getBeneficiaryBasicDetailsByNo(ssnNo.trim(), this.isRegistrationNo)\r\n                                .subscribe((data: any) => {\r\n                                    this.beneficiary = data;\r\n                                    if (this.beneficiary != null && this.beneficiary.benSno > 0) {\r\n                                        if (this.beneficiary.isActive) {\r\n                                            this.ssin = this.beneficiary.ssI_Number;\r\n                                            this.disabledssin = true;\r\n                                            this.benficiaryInactive = false;\r\n                                            this.getBenficiaryFamilyDetails(this.beneficiary.benSno);\r\n                                            this.getBenficiaryFamilyDetailsByHealth(this.beneficiary.benSno);\r\n                                            this.getBenficiaryEduCount(this.beneficiary.benSno);\r\n                                            this.getBeneficiaryNomineeDetails(this.beneficiary.benSno); debugger;\r\n\r\n\r\n                                            this.getBeneficiaryAppliedDisabilities(this.beneficiary.benSno, this.claimId);\r\n                                            if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n                                                this.dataService.getBeneficiaryPFAccountDetails(this.beneficiary.benSno).subscribe((data1: any) => {\r\n                                                    debugger;\r\n                                                    this.beneficiaryPFAccountDetails = data1;\r\n                                                    if (this.beneficiaryPFAccountDetails != null && (this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != null && this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != \"\")) {\r\n                                                        if (this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.Active || this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.PartialClosed) {\r\n                                                            this.getPfBalance(this.beneficiary.benSno);\r\n                                                        }\r\n                                                        else\r\n                                                            alert(\"Your Pf Account is closed/Inactive\");\r\n                                                    }\r\n                                                    else\r\n                                                        alert(\"No pf details available for this given SSIN number\");\r\n                                                });\r\n                                            }\r\n                                            debugger;\r\n                                            if (this.claim.reasonForApply == 16) {\r\n                                                this.isBenDeath = false;\r\n                                                this.disableDisabilityCheckbox = true;\r\n                                                this.disableDeathCheckbox = false;\r\n                                                this.viewDeathFieldsAndNominee = true;\r\n\r\n                                            }\r\n                                            else {\r\n                                                if (this.beneficiary != null && this.beneficiary.benDeathStatus == 1) {\r\n                                                    this.isBenDeath = true;\r\n                                                    this.disableDeathCheckbox = true;\r\n                                                    this.disableEducationCheckbox = true;\r\n                                                    this.disableDisabilityCheckbox = true;\r\n                                                    this.disableHealthCheckbox = true;\r\n                                                    this.disablePFCheckbox = true;\r\n                                                }\r\n                                                else {\r\n                                                    if (this.claim.reasonForApply == 17) {\r\n                                                        this.disableEducationCheckbox = true;\r\n                                                        this.disableHealthCheckbox = true;\r\n                                                        this.disablePFCheckbox = true;\r\n                                                    }\r\n                                                    this.disableDeathCheckbox = true;\r\n                                                    this.disableDisabilityCheckbox = false;\r\n                                                    this.isBenNomineeClaimSubmitted(this.beneficiary.benSno);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            this.benficiaryInactive = true;\r\n                                            this.restrictSave = true;\r\n                                            this.viewEducation = false;\r\n                                            this.disableEdu = true;\r\n\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                        this.isCAFUpdated = true;\r\n\r\n                                    console.log(this.beneficiary);\r\n                                });\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if (!this.isCAFUpdated) {\r\n                        this.dataService\r\n                            .getBeneficiaryBasicDetailsByNo(ssnNo.trim(), this.isRegistrationNo)\r\n                            .subscribe((data: any) => {\r\n                                this.beneficiary = data;\r\n                                if (this.beneficiary != null) {\r\n                                    if (this.beneficiary.isActive) {\r\n                                        this.disabledssin = true;\r\n                                        this.benficiaryInactive = false;\r\n                                        this.getBenficiaryFamilyDetails(this.beneficiary.benSno);\r\n                                        this.getBenficiaryFamilyDetailsByHealth(this.beneficiary.benSno);\r\n                                        this.getBenficiaryEduCount(this.beneficiary.benSno);\r\n                                        this.getBeneficiaryNomineeDetails(this.beneficiary.benSno); debugger;\r\n\r\n\r\n                                        this.getBeneficiaryAppliedDisabilities(this.beneficiary.benSno, this.claimId);\r\n                                        if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n                                            this.dataService.getBeneficiaryPFAccountDetails(this.beneficiary.benSno).subscribe((data1: any) => {\r\n                                                debugger;\r\n                                                this.beneficiaryPFAccountDetails = data1;\r\n                                                if (this.beneficiaryPFAccountDetails != null && (this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != null && this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != \"\")) {\r\n                                                    if (this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.Active || this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.PartialClosed) {\r\n                                                        this.getPfBalance(this.beneficiary.benSno);\r\n                                                    }\r\n                                                    else\r\n                                                        alert(\"Your Pf Account is closed/Inactive\");\r\n                                                }\r\n                                                else\r\n                                                    alert(\"No pf details available for this given SSIN number\");\r\n                                            });\r\n                                        }\r\n                                        //-----------------\r\n                                        //16-On Death of Beneficiary / On Request of Nominee\r\n                                        //17-On Disability of Beneficiary\r\n                                        //18-On Request of Beneficiary\r\n                                        debugger;\r\n                                        if (this.claim.reasonForApply == 16) {\r\n                                            this.isBenDeath = false;\r\n                                            this.disableDisabilityCheckbox = true;\r\n                                            this.disableDeathCheckbox = false;\r\n                                            this.viewDeathFieldsAndNominee = true;\r\n\r\n                                        }\r\n                                        else {\r\n                                            if (this.beneficiary != null && this.beneficiary.benDeathStatus == 1) {\r\n                                                this.isBenDeath = true;\r\n                                                this.disableDeathCheckbox = true;\r\n                                                this.disableEducationCheckbox = true;\r\n                                                this.disableDisabilityCheckbox = true;\r\n                                                this.disableHealthCheckbox = true;\r\n                                                this.disablePFCheckbox = true;\r\n                                            }\r\n                                            else {\r\n                                                if (this.claim.reasonForApply == 17) {\r\n                                                    this.disableEducationCheckbox = true;\r\n                                                    this.disableHealthCheckbox = true;\r\n                                                    this.disablePFCheckbox = true;\r\n                                                }\r\n                                                this.disableDeathCheckbox = true;\r\n                                                this.disableDisabilityCheckbox = false;\r\n                                                this.isBenNomineeClaimSubmitted(this.beneficiary.benSno);\r\n                                            }\r\n                                        }\r\n                                        //------=====================\r\n                                    }\r\n                                    else {\r\n                                        this.benficiaryInactive = true;\r\n                                        this.restrictSave = true;\r\n                                        this.viewEducation = false;\r\n                                        this.disableEdu = true;\r\n\r\n                                    }\r\n                                }\r\n                                console.log(this.beneficiary);\r\n                            });\r\n                    }\r\n                }\r\n            }\r\n    }\r\n    else {\r\n        this.beneficiary = {} as Beneficiary;\r\n        this.viewEducation = false;\r\n    }\r\n}\r\ngetHospitals() {\r\n    this.dataService\r\n        .getAllHospitals()\r\n        .subscribe((data: any) => {\r\n            this.hospotalList = data;\r\n            console.log(this.hospotalList);\r\n        });\r\n}\r\n\r\ngetBenficiaryEduCount(id: any) {\r\n    this.dataService\r\n        .getBeneficiaryEduCount(id)\r\n        .subscribe((data: any) => {\r\n            this.eduCount = data;\r\n            if (this.mode == \"draft\" && (this.educationDetailsArray != null && this.educationDetailsArray.length > 0)) {\r\n                this.eduCount = this.eduCount + this.educationDetailsArray.length;\r\n            }\r\n            if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n                if (eduBenefit != null) {\r\n                    var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n\r\n                    if (cond && this.claimId == 0) {\r\n                        //if (this.eduCount >= 2 && this.claimId == 0) {\r\n                        //this.disableEdu = true;\r\n                        //this.maxLimitExceeded = true;\r\n                        //this.restrictSave = true;\r\n                    }\r\n                    else {\r\n                        this.disableEdu = false;\r\n                        this.maxLimitExceeded = false;\r\n                        this.restrictSave = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n}\r\ngetBenficiaryFamilyDetailsByHealth(id: any) {\r\n    this.dataService\r\n        .getBeneficiaryFamilyDetails(id, ClaimConstants.HealthFamily)\r\n        .subscribe((data: any) => {\r\n            this.benficiaryFamilybyHealth = data;\r\n        });\r\n}\r\ngetBenficiaryFamilyDetails(id: any, type?: any) {\r\n    this.dataService\r\n        .getBeneficiaryFamilyDetails(id, ClaimConstants.Education)\r\n        .subscribe((data: any) => {\r\n            this.benficiaryChildren = data;\r\n            this.benficiaryFamily = data;\r\n        });\r\n}\r\ngetBeneficiaryNomineeDetails(id: any) {\r\n\r\n    this.dataService\r\n        .getBeneficiaryNomineeDetails(id)\r\n        .subscribe((data: any) => {\r\n            this.benficiaryNominee = data;\r\n            if (this.benficiaryNominee.length == 0)\r\n                this.isNomineesExist = false;\r\n            else\r\n                this.isNomineesExist = true;\r\n        });\r\n}\r\nvalidateHealthData(claimData: ClaimModel, id: any): boolean {\r\n    let isValid = true;\r\n    this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded = true;//this.originalVoucher =\r\n    this.isClaimEffectiveDate = false;\r\n    if (id == 1) {\r\n        if (this.beneficiary.benSno == undefined) { this.ssinReq = isValid = false }\r\n        return isValid\r\n    }\r\n    if (id == 2) {\r\n        if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n    }\r\n    if (this.hospotalId > 0) {\r\n        if (this.claim.healthFamilyDetails.otherHospital == undefined) { this.otherHospitalValid = isValid = false };\r\n    }\r\n    if (this.claim.healthFamilyDetails.claimFor == undefined || this.claim.healthFamilyDetails.claimFor == 0) { this.claimForValid = isValid = false }\r\n    if (this.claim.healthFamilyDetails.typeOfClaim == undefined) { this.typeOfClaimValid = isValid = false }\r\n    if (this.claim.healthFamilyDetails.hospitalId == 0 || this.claim.healthFamilyDetails.hospitalId == undefined) { this.hospital = isValid = false }\r\n    if (this.claim.healthFamilyDetails.typeOfHospitalization == 0 || this.claim.healthFamilyDetails.typeOfHospitalization == undefined) { this.hospitalization = isValid = false }\r\n    if (this.claim.healthFamilyDetails.isCertifynotESI == false || this.claim.healthFamilyDetails.isCertifynotESI == undefined) { this.rigisterESI = isValid = false }\r\n    if (this.healthSelfAttached.fileName == undefined) { this.hospitalselfAttested = isValid = false };\r\n    //if (this.healthOriginalVoucher.fileName == undefined) { this.originalVoucher = isValid = false };\r\n    if (this.showDisCertUpload && this.healthDischargeCertificate.fileName == undefined) { this.dischargeCertificate = isValid = false };\r\n\r\n    if (this.viewDateOfAdmit) {\r\n        if (this.claim.healthFamilyDetails.admittedDate == undefined) { this.dateofAdmin = isValid = false }\r\n        else {\r\n            if (this.claim.healthFamilyDetails.admittedDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                this.isClaimEffectiveDate = true;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.claim.healthFamilyDetails.dischargeDate == undefined) { this.dateofDischargeValid = isValid = false }\r\n        else {\r\n            if (this.claim.healthFamilyDetails.dischargeDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                this.isClaimEffectiveDate = true;\r\n                isValid = false;\r\n            }\r\n        }\r\n    }\r\n    if (this.viewDateOfFirstAppointment) {\r\n        if (this.claim.healthFamilyDetails.firstAppointmentDate == undefined) { this.dateofAppointment = isValid = false }\r\n        else {\r\n            if (this.claim.healthFamilyDetails.firstAppointmentDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                this.isClaimEffectiveDate = true;\r\n                isValid = false;\r\n            }\r\n        }\r\n    }\r\n    if (this.viewFamily) {\r\n        if (this.claim.healthFamilyDetails.familyMemberId == 0 || this.claim.healthFamilyDetails.familyMemberId == undefined) { this.rigisterESI = isValid = false }\r\n    }\r\n    if (this.viewSelf) {\r\n        if (this.claim.healthFamilyDetails.loeFromDate == undefined) { this.loeFromDate = isValid = false }\r\n        else {\r\n            if (this.claim.healthFamilyDetails.loeFromDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                this.isClaimEffectiveDate = true;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.claim.healthFamilyDetails.loeToDate == undefined) { this.loeToDate = isValid = false }\r\n        else {\r\n            if (this.claim.healthFamilyDetails.loeToDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                this.isClaimEffectiveDate = true;\r\n                isValid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (this.claim.healthFamilyDetails.costOfClinicalTest == undefined && (this.viewDateOfAdmit && this.claim.healthFamilyDetails.costOfHospitalization == undefined) && this.claim.healthFamilyDetails.costOfMedicine == undefined) {\r\n        isValid = false;\r\n        alert(\"Please enter atleast one cost\");\r\n        return;\r\n    }\r\n    else {\r\n        if (this.claim.healthFamilyDetails.costOfClinicalTest == 0 && this.claim.healthFamilyDetails.costOfHospitalization == 0 && this.claim.healthFamilyDetails.costOfMedicine == 0) {\r\n            isValid = false;\r\n            alert(\"Please enter atleast one valid cost\");\r\n            return;\r\n        }\r\n        let amount = Number(claimData.healthFamilyDetails.costOfClinicalTest != undefined ? claimData.healthFamilyDetails.costOfClinicalTest : 0) + Number(claimData.healthFamilyDetails.costOfHospitalization != undefined ? claimData.healthFamilyDetails.costOfHospitalization : 0) + Number(claimData.healthFamilyDetails.costOfMedicine != undefined ? claimData.healthFamilyDetails.costOfMedicine : 0);\r\n        if (amount == 0) {\r\n            isValid = false;\r\n            alert(\"Please enter atleast one valid cost\");\r\n            return;\r\n        }\r\n        let remainingAmount = 0;\r\n        if (this.claim.healthFamilyDetails.typeOfClaim == 4) {\r\n            remainingAmount = HealthClaimEligibility.TreatmentOfAilment - this.typeOfAilmentClaimedAmount;\r\n        }\r\n        else {\r\n            remainingAmount = HealthClaimEligibility.Surgery - this.surgeryClaimedAmount;\r\n        }\r\n\r\n        if (amount > remainingAmount) {\r\n            isValid = false;\r\n            alert(\"Cost of Clinical Test, Cost of Medicine, Cost of Hospitalization should not be more than \" + remainingAmount);\r\n            return;\r\n        }\r\n    }\r\n    if (this.enableReasonForDelaySubmissionInHealth) {\r\n        if (this.claim.healthFamilyDetails.reasonForDelaySubmission == undefined) { this.reasonForHealthDelayValid = isValid = false };\r\n        if (this.healthCondolationCertificate.fileName == undefined) { this.healthCondolationCertificateUploaded = isValid = false };\r\n    }\r\n\r\n    return isValid;\r\n}\r\nvalidateClaimsData(claimData: ClaimModel, id: any): boolean {\r\n    let isValid = true;\r\n    this.ssinReq = this.reasonForApplyValid = this.uploadselfattestedValid = this.uploadNonMarriageValid = this.uploadCertificatetValid = this.educationCheck = this.nomineeRequired = true;\r\n    if (id == 1) {\r\n        if (this.beneficiary.benSno == undefined) { this.ssinReq = isValid = false }\r\n        return isValid\r\n    }\r\n\r\n    if (this.claim.reasonForApply <= 0 || this.claim.reasonForApply == undefined) { this.reasonForApplyValid = isValid = false }\r\n    // Death of Beneficiary\r\n    if (this.claim.reasonForApply == 16) {\r\n        if (this.claim.nomineeId <= 0 || this.claim.nomineeId == undefined) { this.nomineeRequired = isValid = false }\r\n    }\r\n    if (this.beneficiary.benSno == undefined) { this.ssinReq = isValid = false }\r\n    if (id == 2) {\r\n        if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n    }\r\n    return isValid;\r\n}\r\nvalidateDisabilityData(claimData: ClaimModel, id: any): boolean {\r\n    let isValid = true;\r\n    this.natureOfDisability = this.dateofrelease1 = this.disabilityCertificateUploaded = this.isDeathorpermanent1 = this.isDeathorpermanent2 = this.isDeathorpermanent3 = this.checkNatureOfDisability = this.condolationCertificateUploaded = true;\r\n    this.isClaimEffectiveDate = false;\r\n    if (id == 2) {\r\n        if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n    }\r\n    if (this.disabilityCertificate.fileName == undefined) { this.disabilityCertificateUploaded = isValid = false };\r\n    if (this.claim.disabilityDetails.dateofRelease == undefined) { this.dateofrelease1 = isValid = false };\r\n    //if (this.claim.disabilityDetails.natureOfDisability == undefined) { this.natureOfDisability = isValid = false }\r\n    if (this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyintentional == false || this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyintentional == undefined) { this.isDeathorpermanent1 = isValid = false }\r\n    if (this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == false || this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == undefined) { this.isDeathorpermanent2 = isValid = false }\r\n    if (this.claim.disabilityDetails.isOtherFinancialAssistance == false || this.claim.disabilityDetails.isOtherFinancialAssistance == undefined) { this.isDeathorpermanent3 = isValid = false }\r\n    if (this.claim.disabilityDetails.natureOfDisability == undefined) {\r\n        this.natureOfDisability = isValid = false\r\n    }\r\n    else {\r\n        let data = this.beneficiaryAppliedDisabilities.find(x => x == this.claim.disabilityDetails.natureOfDisability);\r\n        if (data) {\r\n            this.checkNatureOfDisability = isValid = false;\r\n            //alert(\"Claim has been already submitted with this nature of disability\");\r\n            //return;\r\n        }\r\n    }\r\n    if (this.enableReasonForDelaySubmission) {\r\n        if (this.claim.disabilityDetails.reasonForDelaySubmission == undefined) { this.reasonForDelayValid = isValid = false };\r\n        if (this.condolationCertificate.fileName == undefined) { this.condolationCertificateUploaded = isValid = false };\r\n    }\r\n    if (this.claim.disabilityDetails.dateofRelease != undefined) {\r\n        if (this.claim.disabilityDetails.dateofRelease < new Date(this.disabilityClaimEffectiveDate)) {\r\n            this.claimEffectiveDate = this.disabilityClaimEffectiveDate;\r\n            this.isClaimEffectiveDate = true;\r\n            isValid = false;\r\n        }\r\n    }\r\n    return isValid;\r\n}\r\nvalidateDeathData(claimData: ClaimModel, id: any): boolean {\r\n    let isValid = true;\r\n    this.natureOfDeath = this.dateofDeath = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = true;\r\n    this.isClaimEffectiveDate = false;\r\n    if (id == 2) {\r\n        if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n    }\r\n    if (this.deathCertificate.fileName == undefined) { this.deathCertificateUploaded = isValid = false };\r\n    if (this.bankPassbook.fileName == undefined) { this.bankPassbookUploaded = isValid = false };\r\n    if (this.claim.deathDetails.natureofDeath == undefined) { this.natureOfDeath = isValid = false };\r\n    if (this.claim.deathDetails.dateofDeath == undefined) { this.dateofDeath = isValid = false }\r\n    else {\r\n        if (this.claim.deathDetails.dateofDeath < new Date(this.deathClaimEffectiveDate)) {\r\n            this.claimEffectiveDate = this.deathClaimEffectiveDate;\r\n            this.isClaimEffectiveDate = true;\r\n            isValid = false;\r\n        }\r\n    }\r\n    if (this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional == false || this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional == undefined) { this.isDeath1 = isValid = false }\r\n    if (this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == false || this.claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == undefined) { this.isDeath2 = isValid = false }\r\n    if (this.claim.deathDetails.isOtherFinancialAssistance == false || this.claim.deathDetails.isOtherFinancialAssistance == undefined) { this.isDeath3 = isValid = false }\r\n    if (this.viewAccidental == true && this.claim.deathDetails.placeofDeath == undefined) { this.placeOfDeathValid = isValid = false };\r\n    return isValid;\r\n}\r\nvalidatePFData(claimData: ClaimModel, id: any): boolean {\r\n    let isValid = true;\r\n    //this.natureOfDeath = this.dateofDeath = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = true;\r\n    if (id == 2) {\r\n        if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n    }\r\n    if (this.claim.providentFundDetails.typeOfClaim == undefined) { this.pfTypeOfClaimValid = isValid = false }\r\n    else if (this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) //Premature\r\n    {\r\n        if (this.claim.providentFundDetails.reasonForPreClosure == undefined) { this.reasonForPreclosureValid = isValid = false };\r\n\r\n        if (this.pfLockingPeriod != undefined && this.pfLockingPeriod != null) {\r\n            debugger;\r\n            var date1 = new Date(this.pfLockingPeriod);\r\n            var timeDiff = (this.maxDate.getTime() - date1.getTime());\r\n            //var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n            if (timeDiff < 0) {\r\n                alert(\"Premature can not be possible before locking period\");\r\n                return;\r\n            }\r\n            if (timeDiff < 0 && this.pfAccountStatus.toLowerCase() == \"suspend\") {\r\n                alert(\"Irrespective of the locking period I can apply for premature\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    else if (this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.FinalPayment && this.claim.reasonForApply != 16) //FinalPayment and Not Death of Benficiary\r\n    {\r\n        if (this.pfBenefitConfigDetails != null) {\r\n            //final payment  - age > 60 \r\n            debugger;\r\n            var date1 = new Date(this.beneficiary.benDob);\r\n            var age = this.maxDate.getFullYear() - date1.getFullYear();\r\n            var m = this.maxDate.getMonth() - date1.getMonth();\r\n            if (m < 0 || (m === 0 && this.maxDate.getDate() < date1.getDate())) {\r\n                age--;\r\n            }\r\n\r\n            var cond = eval(age + this.pfBenefitConfigDetails.maturityAgeLogic + this.pfBenefitConfigDetails.maturityAge);\r\n            // if (age < 60) {\r\n            if (cond) {\r\n                alert(\"you are not eligible for this claim beacause your age less than 60\");\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    return isValid;\r\n}\r\nvalidatePfSubmit(ssiNumber: any, nomineeId: any, eve) {\r\n    let share = 0;\r\n    if (nomineeId > 0) {\r\n        this.dataService\r\n            .validatePfSubmit(ssiNumber, 0)\r\n            .subscribe((data: any) => {\r\n                this.isPFSubmitted = data;\r\n                if (this.isPFSubmitted) {\r\n                    this.viewPf = false;\r\n                    eve.target.checked = false;\r\n                    this.disablePFCheckbox = true;\r\n                    this.pfExsits = true;\r\n                }\r\n                else {\r\n\r\n                    this.dataService\r\n                        .validatePfSubmit(ssiNumber, nomineeId)\r\n                        .subscribe((data: any) => {\r\n                            this.isPFSubmitted = data;\r\n                            if (this.isPFSubmitted) {\r\n                                this.viewPf = false;\r\n                                eve.target.checked = false;\r\n                                this.disablePFCheckbox = true;\r\n                                this.pfExsits = true;\r\n                            }\r\n                            else {\r\n\r\n                                this.pfCode();\r\n                            }\r\n                            //else {\r\n                            //    \r\n                            //    this.disablePFCheckbox = false;\r\n                            //    if (this.viewPf && nomineeId > 0) {\r\n                            //        //16-On Death of Beneficiary\r\n                            //        if (this.claim.reasonForApply == 16) {\r\n                            //            this.viewNomineeShare = true;\r\n                            //            if (this.benficiaryNominee != null && this.benficiaryNominee != undefined) {\r\n                            //                share = this.benficiaryNominee.find(n => n.benNomineeSno == this.claim.nomineeId).benNomineeSharePercentage;\r\n                            //                if (this.benficiaryNominee.length == 1) {\r\n                            //                    if (share == 0) {\r\n                            //                        share = 100;\r\n                            //                    }\r\n                            //                }\r\n                            //                if (this.pfClaimAmount != undefined && this.pfClaimAmount != null && this.pfClaimAmount > 0)\r\n                            //                    this.benNomineeShareAmount = Math.round(this.pfClaimAmount * (share / 100));\r\n                            //            }\r\n\r\n                            //            this.claim.providentFundDetails.typeOfClaim = PFTypeOfClaim.FinalPayment;\r\n                            //            this.disablePFTypeOfClaim = true;\r\n                            //        }\r\n                            //        //else {\r\n                            //        //    this.pfCode();\r\n                            //        //}\r\n                            //    }\r\n                            //}\r\n                        });\r\n                }\r\n\r\n            });\r\n    }\r\n    else {\r\n        this.dataService\r\n            .validatePfSubmit(ssiNumber, nomineeId)\r\n            .subscribe((data: any) => {\r\n                this.isPFSubmitted = data;\r\n                if (this.isPFSubmitted) {\r\n                    this.viewPf = false;\r\n                    eve.target.checked = false;\r\n                    this.disablePFCheckbox = true;\r\n                    this.pfExsits = true;\r\n                }\r\n                else {\r\n                    this.pfCode();\r\n                }\r\n                //else {\r\n                //    this.disablePFCheckbox = false;\r\n                //    if (this.viewPf && nomineeId > 0) {\r\n                //        //16-On Death of Beneficiary\r\n                //        if (this.claim.reasonForApply == 16) {\r\n                //            this.viewNomineeShare = true;\r\n                //            if (this.benficiaryNominee != null && this.benficiaryNominee != undefined) {\r\n                //                share = this.benficiaryNominee.find(n => n.benNomineeSno == this.claim.nomineeId).benNomineeSharePercentage;\r\n                //                if (this.benficiaryNominee.length == 1) {\r\n                //                    if (share == 0) {\r\n                //                        share = 100;\r\n                //                    }\r\n                //                }\r\n                //                if (this.pfClaimAmount != undefined && this.pfClaimAmount != null && this.pfClaimAmount > 0)\r\n                //                    this.benNomineeShareAmount = Math.round(this.pfClaimAmount * (share / 100));\r\n                //            }\r\n\r\n                //            this.claim.providentFundDetails.typeOfClaim = PFTypeOfClaim.FinalPayment;\r\n                //            this.disablePFTypeOfClaim = true;\r\n                //        }\r\n                //        else {\r\n                //            this.pfCode();\r\n                //        }\r\n                //    }\r\n                //}\r\n            });\r\n    }\r\n\r\n}\r\nokClick() {\r\n    //this.successModal.hide();\r\n    if (this.mode == \"draft\") {\r\n        window.location.href = \"agent/DraftClaims\";\r\n    }\r\n    else if (this.mode == \"claim\") {\r\n        window.location.href = \"agent/claims\";\r\n    }\r\n    else if (this.mode == \"referal\") {\r\n        window.location.href = \"agent/agentreferral\";\r\n    }\r\n    else {\r\n        window.location.href = \"agent/claims\";\r\n    }\r\n}\r\ncancleClick() {\r\n    if (this.mode == \"draft\") {\r\n        window.location.href = \"agent/DraftClaims\";\r\n    }\r\n    else if (this.mode == \"claim\") {\r\n        window.location.href = \"agent/claims\";\r\n    }\r\n    else if (this.mode == \"referal\") {\r\n        window.location.href = \"agent/agentreferral\";\r\n    }\r\n    else {\r\n        window.location.href = \"agent/claims\";\r\n\r\n    }\r\n}\r\ndownLoadPdf(claimData: ClaimModel, type) {\r\n\r\n    if (!this.viewPf) {\r\n        this.claim.providentFundDetails = null;\r\n    }\r\n    if (!this.viewDeath) {\r\n        this.claim.deathDetails = null;\r\n    }\r\n    else {\r\n        claimData.deathDetails.natureofDeathName = this.natureofDeathName;\r\n        claimData.deathDetails.claimAmount = this.deathEligibility;\r\n    }\r\n    if (!this.viewDisability) {\r\n        this.claim.disabilityDetails = null;\r\n    }\r\n    else {\r\n        claimData.disabilityDetails.natureOfDisabilityName = this.natureOfDisabilityName;\r\n    }\r\n    if (!this.viewHealth) {\r\n        this.claim.healthFamilyDetails = null;\r\n    }\r\n    if (!this.viewEducation) {\r\n        this.claim.educationDetails = null;\r\n    }\r\n    else {\r\n        claimData.educationDetails.educationDetailList = this.educationDetailsArray;\r\n    }\r\n    this.claim.benSno = this.beneficiary.benSno;\r\n    claimData.benSno = this.claim.benSno;\r\n    claimData.benName = this.beneficiary.benFullName;\r\n    claimData.attachment = this.mainUploadList;\r\n    claimData.ssin = this.beneficiary.ssI_Number;\r\n\r\n    if (this.user.user.userTpe == UserType.CA.toString())\r\n        claimData.entryPoint = EntryPoint.CA;\r\n    else if (this.user.user.userTpe == UserType.Lwfc.toString())\r\n        claimData.entryPoint = EntryPoint.Lwfc;\r\n    else\r\n        claimData.entryPoint = EntryPoint.Agent;\r\n    //claimData.entryPoint = EntryPoint.Agent;\r\n    if (claimData.reasonForApply == 16)\r\n        this.claim.onBehalfBen = false;\r\n    else\r\n        this.claim.onBehalfBen = true;\r\n\r\n    this.dataService\r\n        .genaratePdfFormV(claimData)\r\n        .then((data: any) => {\r\n            var blob = new Blob([data.body], { type: 'application/pdf' });\r\n            if (type == 'print') {\r\n                const blobUrl = URL.createObjectURL(blob);\r\n                const iframe = document.createElement('iframe');\r\n                iframe.style.display = 'none';\r\n                iframe.src = blobUrl;\r\n                document.body.appendChild(iframe);\r\n                iframe.contentWindow.print();\r\n            }\r\n            else {\r\n                FileSaver.saveAs(blob, \"FormV.pdf\");\r\n            }\r\n            this.disableSubmitbutton = false;\r\n            this.pdfModal.hide();\r\n            //var url = window.URL.createObjectURL(blob);\r\n            //this.disableSubmitbutton = false;\r\n            //window.open(url);\r\n        });\r\n}\r\n\r\nGenaratePdf(claimData: ClaimModel, type) {\r\n\r\n    let isValid = true;\r\n    if (this.viewHealth) {\r\n        if (this.validateHealthData(claimData, type)) {\r\n            if (this.claim.healthFamilyDetails.claimFor == 5 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                claimData.healthFamilyDetails.loeAmount = this.lossOfEmploymentAmount;\r\n            }\r\n            else {\r\n                claimData.healthFamilyDetails.loeAmount = 0;\r\n            }\r\n        }\r\n        else {\r\n            //return;\r\n            isValid = false;\r\n        }\r\n    }\r\n    if (this.viewDisability) {\r\n        if (!this.validateDisabilityData(claimData, type)) {\r\n            //return;\r\n            isValid = false;\r\n        }\r\n    }\r\n    if (this.viewDeath) {\r\n        if (!this.validateDeathData(claimData, type)) {\r\n            //return;\r\n            isValid = false;\r\n        }\r\n    }\r\n    if (this.viewPf) {\r\n        if (!this.validatePFData(claimData, type)) {\r\n            //return;\r\n            isValid = false;\r\n        }\r\n        else {\r\n\r\n            claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n        }\r\n    }\r\n    //Keep Education Validations after all the health,pf,death, disability validations\r\n    if (this.viewEducation) {\r\n        if (this.educationDetailsArray.length == 0) {\r\n            alert(\"Please add atleast one student\");\r\n            //return;\r\n            isValid = false;\r\n        }\r\n        else if (this.educationDetailsArray.length > 0) {\r\n            for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                if (this.educationDetailsArray[i].isDuplicate) {\r\n                    alert(\"Already claim has submitted for this dependent in this year please select another dependent\");\r\n                    isValid = false;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (!claimData.educationDetails.isanyothersourceofthegovernment)\r\n        {\r\n            return this.educationCheck = isValid = false;\r\n        }\r\n        this.isClaimEffectiveDate = false;\r\n        for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n            if (this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n                if (new Date(this.educationDetailsArray[i].dateofAdmission) < new Date(this.educationClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.educationClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (isValid == false) {\r\n        return;\r\n    }\r\n    if (this.validateClaimsData(claimData, 3)) {\r\n        this.pdfModal.show();\r\n    }\r\n    else {\r\n        return;\r\n    }\r\n\r\n}\r\n\r\nsaveClaimsData(claimData: ClaimModel, type: number) {\r\n    let isValid = true;\r\n    let hasNomineeShare = true;\r\n    this.validateDependent = false;\r\n    if (type != 1) {\r\n        if (this.viewHealth) {\r\n            if (!this.validateHealthData(claimData, type)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.viewDisability) {\r\n            if (!this.validateDisabilityData(claimData, type)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.viewDeath) {\r\n            if (!this.validateDeathData(claimData, type)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.viewPf) {\r\n            if (!this.validatePFData(claimData, type)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        //Keep Education Validations after all the health,pf,death, disability validations\r\n        if (this.viewEducation) {\r\n            if (this.educationDetailsArray.length == 0) {\r\n                alert(\"Please add atleast one student\");\r\n                //return;\r\n                isValid = false;\r\n            }\r\n            if (!claimData.educationDetails.isanyothersourceofthegovernment)\r\n            {\r\n                //return\r\n                this.educationCheck = isValid = false;\r\n            }\r\n            this.isClaimEffectiveDate = false;\r\n            for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                if (this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n                    if (new Date(this.educationDetailsArray[i].dateofAdmission) < new Date(this.educationClaimEffectiveDate)) {\r\n                        this.claimEffectiveDate = this.educationClaimEffectiveDate;\r\n                        this.isClaimEffectiveDate = true;\r\n                        isValid = false;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    if (isValid == false) {\r\n        return;\r\n    }\r\n    if (this.validateClaimsData(claimData, type)) {\r\n        this.UpdateClaimStatusIdByStatus(type);\r\n\r\n        if (this.ClaimStatusId <= 7)\r\n            claimData.workflowId = WorkflowTrans.workflow;\r\n        else\r\n            claimData.workflowId = WorkflowTrans.workflowreferral;\r\n\r\n        const attachedList: Array<AttachmentModel> = [];\r\n        if (!this.viewPf) {\r\n            this.claim.providentFundDetails = null;\r\n        }\r\n        if (!this.viewDeath) {\r\n            this.claim.deathDetails = null;\r\n        }\r\n        if (!this.viewDisability) {\r\n            this.claim.disabilityDetails = null;\r\n        }\r\n        if (!this.viewHealth) {\r\n            this.claim.healthFamilyDetails = null;\r\n        }\r\n        if (!this.viewEducation) {\r\n            this.claim.educationDetails = null;\r\n        }\r\n\r\n        // this.mainUploadList.push(this.mainUpload);\r\n        this.claim.benSno = this.beneficiary.benSno;\r\n        if (this.mainUpload != undefined) {\r\n            // claimData.attachment.push(this.mainUpload);\r\n            this.mainUploadList.push(this.mainUpload);\r\n        }\r\n        claimData.attachment = this.mainUploadList;\r\n        this.claim.benSno = this.beneficiary.benSno;\r\n        claimData.ssin = this.beneficiary.ssI_Number;\r\n\r\n        if (this.user.user.userTpe == UserType.CA.toString())\r\n            claimData.entryPoint = EntryPoint.CA;\r\n        else if (this.user.user.userTpe == UserType.Lwfc.toString())\r\n            claimData.entryPoint = EntryPoint.Lwfc;\r\n        else\r\n            claimData.entryPoint = EntryPoint.Agent;\r\n        if (this.claim.educationDetails != null) {\r\n            if (this.educationDetailsArray.length > 0) {\r\n                claimData.educationDetails.educationDetailList = this.educationDetailsArray;\r\n                //---------------------------\r\n                this.educationClaimExceptionDetails = [];\r\n\r\n                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                    const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == this.educationDetailsArray[i].dependentId);\r\n                    if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                        //Exception Rule - 1 (if currentdate-admissiondate >90) \r\n                        if (this.educationDetailsArray[i].dateofAdmission != null && this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n\r\n                            var date1 = new Date(this.educationDetailsArray[i].dateofAdmission);\r\n                            var date2 = new Date(Date.now());\r\n                            var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n                            var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.DateofAdmissionExceeding.toLowerCase());\r\n                            if (eduBenefit != null) {\r\n                                var cond = eval(diffDays + eduBenefit.logic + eduBenefit.value);\r\n\r\n                                //if (diffDays > 90) {\r\n                                if (cond) {\r\n\r\n                                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                    exp.exceptionText = \"Student (Dependent) \" + data.benDependentName + \" admission date exceeding 90 days\";\r\n                                    exp.exceptionCapturedDate = new Date();\r\n                                    exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                                    this.educationClaimExceptionDetails.push(exp);\r\n                                }\r\n                            }\r\n                            //Exception Rule - 2 IF(BenDependentSonAge by admissiondate> 21) \r\n                            if (data.benDependentRelation.toLowerCase() == \"son\") {\r\n\r\n                                var date1 = new Date(this.educationDetailsArray[i].dateofAdmission);\r\n                                var date2 = new Date(data.dob);\r\n                                var timeDiff = Math.abs(date1.getTime() - date2.getTime());\r\n                                const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\r\n                                var eduBenefit2 = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.SonAgeExceeding.toLowerCase());\r\n                                if (eduBenefit2 != null) {\r\n                                    var cond2 = eval(age + eduBenefit2.logic + eduBenefit2.value);\r\n                                    //if (age >= 21) {\r\n                                    if (cond2) {\r\n\r\n                                        const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                        exp.exceptionText = \"Student (Dependent) \" + data.benDependentName + \" age exceeding 21\";\r\n                                        exp.exceptionCapturedDate = new Date();\r\n                                        exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                                        this.educationClaimExceptionDetails.push(exp);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // claimData.educationDetails.educationClaimExceptionDetails = this.educationClaimExceptionDetails;\r\n\r\n                \r\n            }\r\n            else\r\n                claimData.educationDetails.educationDetailList = null;\r\n            //claimData.educationDetails.attachmentDetailsList = attachedList;\r\n            claimData.educationDetails.claimType = ClaimConstants.Education;\r\n            claimData.educationDetails.statusId = this.ClaimStatusId;\r\n            claimData.educationDetails.CreatedBy = this.user.user.deptUserid;\r\n        }\r\n        if (this.claim.healthFamilyDetails != null) {\r\n            //-------------------------------\r\n            this.healthClaimExceptionDetails = [];\r\n            if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n                //Exception Rule - 4 if(Currentdate-Firstappointmentdate >60 and OPD)\r\n                if (this.claim.healthFamilyDetails.firstAppointmentDate != null && this.claim.healthFamilyDetails.firstAppointmentDate != undefined) {\r\n\r\n                    var date1 = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                    var date2 = new Date(Date.now());\r\n                    var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                    var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.DateofFirstAppointmentExceeding.toLowerCase());\r\n                    if (helBenefit != null) {\r\n                        var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                        if (cond && this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                            //if (diffDays > 60 && this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n\r\n                            const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                            exp.exceptionText = \"First appointment date exceeding 60 days\";\r\n                            exp.exceptionCapturedDate = new Date();\r\n                            exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                            this.healthClaimExceptionDetails.push(exp);\r\n                        }\r\n                    }\r\n                }\r\n                //Exception Rule - 5 if(Currentdate-Dischargedate>60 and Hospitalization)\r\n                if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined) {\r\n\r\n                    var date1 = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n                    var date2 = new Date(Date.now());\r\n                    var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                    var helBenefit2 = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.DateofDischargeExceeding.toLowerCase());\r\n                    if (helBenefit2 != null) {\r\n                        var cond2 = eval(diffDays + helBenefit2.logic + helBenefit2.value);\r\n                        if (cond2 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                            // if (diffDays > 60 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n\r\n                            const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                            exp.exceptionText = \"Discharge date exceeding 60 days\";\r\n                            exp.exceptionCapturedDate = new Date();\r\n                            exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                            this.healthClaimExceptionDetails.push(exp);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // claimData.healthFamilyDetails.healthClaimExceptionDetails = this.healthClaimExceptionDetails;\r\n            //--------------------\r\n            this.healthFamilyPackages = [];\r\n            claimData.healthFamilyDetails.healthFamilyPackages = [];\r\n            for (var i = 0; i < this.selectedPackages.length; i++) {\r\n                const oo: HealthFamilyPackage = {} as HealthFamilyPackage;\r\n\r\n                if (claimData.claimId > 0) {\r\n                    oo.healthFamilyId = claimData.healthFamilyDetails.healthFamilyId;\r\n                }\r\n                oo.packageID = this.selectedPackages[i].packageID;\r\n                oo.ailmentName = this.selectedPackages[i].ailmentName;\r\n                oo.packageName = this.selectedPackages[i].packageName;\r\n                this.healthFamilyPackages.push(oo);\r\n            }\r\n            claimData.healthFamilyDetails.healthFamilyPackages = this.healthFamilyPackages;\r\n            claimData.healthFamilyDetails.claimAmount = Number(claimData.healthFamilyDetails.costOfClinicalTest != undefined ? claimData.healthFamilyDetails.costOfClinicalTest : 0) + Number(claimData.healthFamilyDetails.costOfHospitalization != undefined ? claimData.healthFamilyDetails.costOfHospitalization : 0) + Number(claimData.healthFamilyDetails.costOfMedicine != undefined ? claimData.healthFamilyDetails.costOfMedicine : 0) + ((this.viewSelf) ? claimData.healthFamilyDetails.loeAmount : 0);\r\n            claimData.healthFamilyDetails.claimType = ClaimConstants.HealthFamily;\r\n            claimData.healthFamilyDetails.statusId = this.ClaimStatusId\r\n            claimData.healthFamilyDetails.loeAmount = this.lossOfEmploymentAmount;\r\n            claimData.healthFamilyDetails.createdBy = this.user.user.deptUserid;\r\n            if (!this.isOtherHospital) {\r\n                claimData.healthFamilyDetails.otherHospital == undefined;\r\n            }\r\n            else {\r\n                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                exp.exceptionText = \"Application has been submitted with a non listed hospital\";\r\n                exp.exceptionCapturedDate = new Date();\r\n                exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                // this.expection.push(exp);\r\n                this.healthClaimExceptionDetails.push(exp);\r\n            }\r\n            if (!this.viewDateOfAdmit) {\r\n                claimData.healthFamilyDetails.admittedDate == undefined;\r\n                claimData.healthFamilyDetails.dischargeDate == undefined;\r\n                claimData.healthFamilyDetails.costOfHospitalization == undefined;\r\n            }\r\n            if (!this.viewDateOfFirstAppointment) {\r\n                claimData.healthFamilyDetails.firstAppointmentDate == undefined;\r\n                claimData.healthFamilyDetails.nameOfTheDisease == undefined;\r\n                //claimData.healthFamilyDetails.nameOfClinicalTest == undefined;\r\n                this.nameOfClinicalTestIds = [];\r\n            }\r\n            else {\r\n                if (!this.viewNameOfClinicalTest) {\r\n                    // claimData.healthFamilyDetails.nameOfClinicalTest == undefined;\r\n                    this.nameOfClinicalTestIds = [];\r\n                }\r\n                else {\r\n                    if (this.nameOfClinicalTestIds != null && this.nameOfClinicalTestIds.length > 0) {\r\n                        this.clinicalTestDetails = [];\r\n                        for (var i = 0; i < this.nameOfClinicalTestIds.length; i++) {\r\n                            const testId: ClinicalTestModel = {} as ClinicalTestModel;\r\n                            var t = this.nameOfClinicalTestIds[i].lovDtlId;\r\n                            testId.clinicalTest = Number(t);\r\n                            this.clinicalTestDetails.push(testId);\r\n                        }\r\n\r\n                        if (this.clinicalTestDetails.length > 0) {\r\n                            claimData.healthFamilyDetails.clinicalTestDetails = this.clinicalTestDetails;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!this.viewSelf) {\r\n                claimData.healthFamilyDetails.loeFromDate = undefined;\r\n                claimData.healthFamilyDetails.loeToDate = undefined;\r\n            }\r\n            this.healthAttachmentList.push(this.healthOriginalVoucher);\r\n            this.healthAttachmentList.push(this.healthSelfAttached);\r\n            if (this.healthDischargeCertificate.fileName != undefined) {\r\n                this.healthAttachmentList.push(this.healthDischargeCertificate);\r\n            }\r\n            if (this.healthExpensesSheet.fileName != undefined) {\r\n                this.healthAttachmentList.push(this.healthExpensesSheet);\r\n            }\r\n            if (this.enableReasonForDelaySubmissionInHealth) {\r\n                this.healthAttachmentList.push(this.healthCondolationCertificate);\r\n            }\r\n            claimData.healthFamilyDetails.attachmentDTOList = this.healthAttachmentList;\r\n        }\r\n        if (this.claim.reasonForApply == 16 || this.claim.reasonForApply == 17) {\r\n            if (this.benficiaryNominee != null && this.benficiaryNominee.length > 0) {\r\n                for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n                    if ((this.benficiaryNominee[i].benNomineeBankAccNo == null || this.benficiaryNominee[i].benNomineeBankAccNo == undefined) && (this.benficiaryNominee[i].benNomineeBankIfscCode == null || this.benficiaryNominee[i].benNomineeBankIfscCode == undefined)) {\r\n                        const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                        exp.exceptionText = \"bank details does not exists for nominee\";\r\n                        exp.exceptionCapturedDate = new Date();\r\n                        exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                        this.educationClaimExceptionDetails.push(exp);\r\n                        this.healthClaimExceptionDetails.push(exp);\r\n                    }\r\n                }\r\n                //Nominee Details\r\n                var nominee = this.benficiaryNominee.find(x => x.benNomineeSno == claimData.nomineeId);\r\n                if (nominee != null) {\r\n                    claimData.nomineeName = nominee.benNomineeName;\r\n                    //claimData.nomineeContact\r\n                    claimData.nomineeDOB = nominee.dob;\r\n                    claimData.nomineeBankAccount = nominee.benNomineeBankAccNo;\r\n                    claimData.nomineeIFSCCode = nominee.benNomineeBankIfscCode;\r\n                    claimData.nomineeRelationwithBen = nominee.relationshipID;\r\n                }\r\n            }\r\n        }\r\n        if (this.claim.disabilityDetails != null) {\r\n            this.disabilityClaimExceptionDetails = [];\r\n\r\n            claimData.disabilityDetails.claimType = ClaimConstants.Disability;\r\n            claimData.disabilityDetails.statusId = this.ClaimStatusId;\r\n            claimData.disabilityDetails.createdBy = this.user.user.deptUserid;\r\n            claimData.disabilityDetails.claimAmount = this.disableEligibility;\r\n            this.disabilityAttachmentList.push(this.disabilityCertificate);\r\n            if (this.enableReasonForDelaySubmission) {\r\n                this.disabilityAttachmentList.push(this.condolationCertificate);\r\n            }\r\n            claimData.disabilityDetails.attachmentDTOList = this.disabilityAttachmentList;\r\n\r\n            //Disability Exceptions\r\n            //Exception Rule - Selected Other Nature Of Disability\r\n\r\n            //let data = this.beneficiaryAppliedDisabilities.find(x => x == this.claim.disabilityDetails.natureOfDisability);\r\n            //if (data == undefined) {\r\n            if (this.beneficiaryAppliedDisabilities.length > 0) {\r\n                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                exp.exceptionText = \"Beneficiary applied another nature of disability\";\r\n                exp.exceptionCapturedDate = new Date();\r\n                exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                this.disabilityClaimExceptionDetails.push(exp);\r\n                //alert(\"Claim has been already submitted with this nature of disability\");\r\n                //return;\r\n            }\r\n            //Exception Rule - if(Currentdate-dateofRelease >90)\r\n            if (this.claim.disabilityDetails.dateofRelease != null && this.claim.disabilityDetails.dateofRelease != undefined) {\r\n\r\n                var date1 = new Date(this.claim.disabilityDetails.dateofRelease);\r\n                var date2 = new Date(Date.now());\r\n                var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n                if (this.disabilityBenefitConfigDetails != null && this.disabilityBenefitConfigDetails.length > 0) {\r\n                    var disBenefit = this.disabilityBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == DisabilityBenefitConfiguration.DateOfReleaseExceeding.toLowerCase());\r\n                    if (disBenefit != null) {\r\n                        var cond = eval(diffDays + disBenefit.logic + disBenefit.value);\r\n                        if (cond) {\r\n                            //if (diffDays > 90) {\r\n\r\n                            const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                            exp.exceptionText = \"Date of release from hospital/Accident date exceeding 90 days\";\r\n                            exp.exceptionCapturedDate = new Date();\r\n                            exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                            this.disabilityClaimExceptionDetails.push(exp);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.claim.deathDetails != null) {\r\n            this.deathClaimExceptionDetails = [];\r\n            claimData.deathDetails.claimType = ClaimConstants.Death;\r\n            claimData.deathDetails.statusId = this.ClaimStatusId;\r\n            claimData.deathDetails.createdBy = this.user.user.deptUserid;\r\n            claimData.deathDetails.claimAmount = this.deathEligibility;\r\n            this.deathAttachmentList.push(this.deathCertificate);\r\n            this.deathAttachmentList.push(this.bankPassbook);\r\n            claimData.deathDetails.attachmentDTOList = this.deathAttachmentList;\r\n\r\n            //Death Exceptions\r\n            //Exception Rule - if(Currentdate-dateofDeath >90)\r\n            if (this.claim.deathDetails.dateofDeath != null && this.claim.deathDetails.dateofDeath != undefined) {\r\n\r\n                var date1 = new Date(this.claim.deathDetails.dateofDeath);\r\n                var date2 = new Date(Date.now());\r\n                var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                if (this.deathBenefitConfigDetails != null && this.deathBenefitConfigDetails.length > 0) {\r\n                    var deaBenefit = this.deathBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == DeathBenefitConfiguration.DateofDeathExceeding.toLowerCase());\r\n                    if (deaBenefit != null) {\r\n                        var cond = eval(diffDays + deaBenefit.logic + deaBenefit.value);\r\n                        if (cond) {\r\n                            //if (diffDays > 90) {\r\n\r\n                            const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                            exp.exceptionText = \"Date of Death exceeding 90 days\";\r\n                            exp.exceptionCapturedDate = new Date();\r\n                            exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                            this.deathClaimExceptionDetails.push(exp);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.claim.providentFundDetails != null) {\r\n\r\n            //claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n            claimData.providentFundDetails.claimType = ClaimConstants.PF;\r\n            claimData.providentFundDetails.statusId = this.ClaimStatusId;\r\n            claimData.providentFundDetails.createdBy = this.user.user.deptUserid;\r\n            claimData.providentFundDetails.nomineeId = this.claim.nomineeId;\r\n            claimData.providentFundDetails.maturityDate = this.benMaturityDate;\r\n            claimData.providentFundDetails.lockingPeriodDate = this.pfLockingPeriod;\r\n\r\n            if (this.beneficiaryPFAccountDetails != null && (this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != null && this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != \"\")) {\r\n                claimData.providentFundDetails.pFNO = this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO;\r\n            }\r\n            else {\r\n                claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n            }\r\n\r\n            if (this.claim.reasonForApply == 16) {\r\n                //share = this.benficiaryNominee.find(n => n.benNomineeSno == this.claim.nomineeId).benNomineeSharePercentage;\r\n                //if(share == 0)\r\n                claimData.providentFundDetails.claimAmount = this.benNomineeShareAmount;\r\n            }\r\n            else\r\n                claimData.providentFundDetails.claimAmount = this.pfClaimAmount;\r\n\r\n            //PF Exceptions\r\n            if (this.benficiaryNominee.length > 1) {\r\n                for (var i = 0; i < this.benficiaryNominee.length; i++) {\r\n                    if (this.benficiaryNominee[i].benNomineeSharePercentage == 0) {\r\n                        hasNomineeShare = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (hasNomineeShare == false) {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Nominees doesn't have share allocation\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                    this.pfClaimExceptionDetails.push(exp);\r\n                }\r\n            }\r\n        }\r\n        //16-On Death of Beneficiary / On Request of Nominee\r\n        //17-On Disability of Beneficiary\r\n        //18-On Request of Beneficiary\r\n        if (this.claim.reasonForApply == 17 || this.claim.reasonForApply == 18) {\r\n            if (this.beneficiary.benRegDate != null && this.beneficiary.benRegDate != undefined) {\r\n                debugger;\r\n                var benregDate = new Date(this.beneficiary.benRegDate);\r\n                var todayDate = new Date();\r\n                var diffYears = todayDate.getFullYear() - benregDate.getFullYear();\r\n                var m = todayDate.getMonth() - benregDate.getMonth();\r\n                if (m < 0 || (m === 0 && todayDate.getDate() < benregDate.getDate())) {\r\n                    diffYears--;\r\n                }\r\n\r\n                if (diffYears < 1) {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Beneficiary has not completed one year of registration\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                    this.healthClaimExceptionDetails.push(exp);\r\n                    this.educationClaimExceptionDetails.push(exp);\r\n                    this.disabilityClaimExceptionDetails.push(exp);\r\n                    this.deathClaimExceptionDetails.push(exp);\r\n                }\r\n            }\r\n            //--------------------\r\n            debugger;\r\n            if ((this.beneficiary.benBankAccNo == undefined || this.beneficiary.benBankAccNo == null || this.beneficiary.benBankAccNo == \"\")) {\r\n                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                exp.exceptionText = \"Benificiary does not have bank account number\";\r\n                exp.exceptionCapturedDate = new Date();\r\n                exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                this.healthClaimExceptionDetails.push(exp);\r\n                this.educationClaimExceptionDetails.push(exp);\r\n                this.disabilityClaimExceptionDetails.push(exp);\r\n                this.deathClaimExceptionDetails.push(exp);\r\n                this.pfClaimExceptionDetails.push(exp);\r\n            }\r\n            else {\r\n                if (this.beneficiary.isAssignedMultiple) {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Bank account number assigned to the multiple beneficiaries\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = this.user.user.deptUserid;\r\n\r\n                    this.healthClaimExceptionDetails.push(exp);\r\n                    this.educationClaimExceptionDetails.push(exp);\r\n                    this.disabilityClaimExceptionDetails.push(exp);\r\n                    this.deathClaimExceptionDetails.push(exp);\r\n                    this.pfClaimExceptionDetails.push(exp);\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (type != 1) {\r\n            if (this.claim.educationDetails != null && this.educationClaimExceptionDetails.length > 0) {\r\n                claimData.educationDetails.educationClaimExceptionDetails = this.educationClaimExceptionDetails;\r\n            }\r\n            if (this.claim.healthFamilyDetails != null && this.healthClaimExceptionDetails.length > 0) {\r\n                claimData.healthFamilyDetails.healthClaimExceptionDetails = this.healthClaimExceptionDetails;\r\n            }\r\n            if (this.claim.disabilityDetails != null && this.disabilityClaimExceptionDetails.length > 0) {\r\n                claimData.disabilityDetails.disabilityClaimExceptionDetails = this.disabilityClaimExceptionDetails;\r\n            }\r\n            if (this.claim.deathDetails != null && this.deathClaimExceptionDetails.length > 0) {\r\n                claimData.deathDetails.deathClaimExceptionDetails = this.deathClaimExceptionDetails;\r\n            }\r\n            if (this.claim.providentFundDetails != null && this.pfClaimExceptionDetails.length > 0) {\r\n                claimData.providentFundDetails.pfClaimExceptionDetails = this.pfClaimExceptionDetails;\r\n            }\r\n        }\r\n        claimData.StatusId = this.ClaimStatusId;\r\n        claimData.CreatedBy = this.user.user.deptUserid;\r\n        this.saveType = type;\r\n        this.successMessage = \"\";\r\n        console.log(claimData);\r\n        if (this.claimId > 0) {\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .updateClaim(claimData)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            if (type == 1) {\r\n                                this.mode = \"draft\";\r\n                                this.successMessage = \"Your claim was updated successfully\";\r\n                            }\r\n                            else {\r\n                                let refNo;\r\n                                if (this.viewHealth) {\r\n                                    refNo = data.item2 + \" (Health & Family) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item2 + \" (Health & Family) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewDisability) {\r\n                                    refNo = data.item4 + \" (Disability) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item4 + \" (Disability) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewDeath) {\r\n                                    refNo = data.item5 + \" (Death) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item4 + \" (Death) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewPf) {\r\n                                    refNo = data.item1 + \" (PF) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item1 + \" (PF) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewEducation) {\r\n                                    if (refNo == undefined) {\r\n                                        refNo = data.item3 + \" (Education) \";\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \" (Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                    }\r\n                                    else {\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \"(Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n                                        refNo = \" (PF) \" + data.item1 + \" , \" + \" (Health & Family) \" + data.item2 + \" , \" + \" (Education) \" + data.item3 + \" , \" + \" (Disability) \" + data.item4 + \" , \" + \" (Death) \" + data.item4;\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .createClaim(claimData)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            if (type == 1) {\r\n                                this.mode = \"draft\";\r\n                                this.successMessage = \"Your claim was saved successfully\";\r\n                            }\r\n                            else {\r\n                                let refNo;\r\n                                if (this.viewHealth) {\r\n                                    refNo = data.item2 + \" (Health & Family) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item2 + \" (Health & Family) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewDisability) {\r\n                                    refNo = data.item4 + \" (Disability) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item4 + \" (Disability) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewDeath) {\r\n                                    refNo = data.item5 + \" (Death) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item4 + \" (Death) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewPf) {\r\n                                    refNo = data.item1 + \" (PF) \";\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item1 + \" (PF) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                }\r\n                                if (this.viewEducation) {\r\n                                    if (refNo == undefined) {\r\n                                        refNo = data.item3 + \" (Education) \";\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \" (Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                    }\r\n                                    else {\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \"(Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n                                        refNo = \" (PF) \" + data.item1 + \" , \" + \" (Health & Family) \" + data.item2 + \" , \" + \" (Education) \" + data.item3 + \" , \" + \" (Disability) \" + data.item4 + \" , \" + \" (Death) \" + data.item4;\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return;\r\n    }\r\n\r\n\r\n}\r\n    claerClaim() {\r\n       this.isRegistrationNo = false;\r\n        this.isCAFUpdated = false;\r\n    this.isHFSubmitted = this.isEduSubmitted = this.isBenNomineeSubmittedClaim = this.isBenNomineeSubmittedPFClaim = this.isBenDeath= false;\r\n    //this.deathCheckBox = this.pfCheckBox = this.healthCheckBox = this.educationCheckBox = false;\r\n    this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded = true;//this.originalVoucher =\r\n    this.restrictSave = false; this.viewEducation = false; this.disableEdu = false; this.noDependents = false;\r\n    this.uplaodmain = this.uploadselfattestedValid = this.uploadNonMarriageValid = this.uploadCertificatetValid = this.educationCheck = true;\r\n    this.claim = {} as ClaimModel;\r\n    this.educationDetailsArray = [];\r\n    this.viewEducation = false;\r\n    this.viewHealth = false;\r\n    this.viewDeath = false;\r\n    this.viewDisability = false;\r\n    this.viewPf = false;\r\n    this.rowIndex = -1;\r\n    this.ssin = \"\";\r\n    this.eduCount = 0;\r\n    this.rowEligibleAmount = 0;\r\n    this.educationDetailsArray = [];\r\n    this.healthOriginalVoucher = {} as AttachmentModel;\r\n    this.healthSelfAttached = {} as AttachmentModel;\r\n    this.healthDischargeCertificate = {} as AttachmentModel;\r\n    this.healthExpensesSheet = {} as AttachmentModel;\r\n    this.healthAttachmentList = [] as AttachmentModel[];\r\n    this.mainUploadList = [] as AttachmentModel[];\r\n    this.educertificates = [] as AttachmentModel[];\r\n    this.eduNonMarriage = [] as AttachmentModel[];\r\n    this.eduSelfAttested = [] as AttachmentModel[];\r\n    this.disabilityAttachmentList = [] as AttachmentModel[];\r\n    this.disabilityCertificate = {} as AttachmentModel;\r\n    this.deathAttachmentList = [] as AttachmentModel[];\r\n    this.deathCertificate = {} as AttachmentModel;\r\n    this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n    this.claim.educationDetails.isanyothersourceofthegovernment = false;\r\n    this.disabilityCertificateUploaded = this.natureOfDisability = this.dateofrelease1 = this.isDeathorpermanent1 = this.isDeathorpermanent2 = this.isDeathorpermanent3 = this.checkNatureOfDisability = this.condolationCertificateUploaded =  true;\r\n    this.natureOfDeath = this.dateofDeath = this.deathCertificateUploaded = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = this.bankPassbookUploaded = true;\r\n    this.condolationCertificate = {} as AttachmentModel;\r\n    this.healthCondolationCertificate = {} as AttachmentModel;\r\n    this.pfTypeOfClaimValid = true;\r\n    this.viewDeathFieldsAndNominee = false;\r\n    if (this.claim.claimId == undefined) {\r\n        this.claim = {} as ClaimModel;\r\n        this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n        this.claim.educationDetails = {} as EducationHdrModel;\r\n        this.claim.educationDetails.educationDetailList = [];\r\n    }\r\n    else {\r\n\r\n        this.getClaimDetailsByClaimId(this.claimId);\r\n    }\r\n}\r\n\r\n    UpdateClaimStatusIdByStatus(type: any) {\r\n        debugger;\r\n    if (type == 1)\r\n        this.ClaimStatusId = 1;\r\n    else {\r\n        if (this.claimStatus < 5)\r\n            this.ClaimStatusId = 2;\r\n        else if (this.claimStatus == 5) this.ClaimStatusId = 4;\r\n        else if (this.claimStatus == 6 || this.claimStatus == 10) this.ClaimStatusId = 8;\r\n        else if (this.claimStatus == 9 || this.claimStatus == 13) this.ClaimStatusId = 12;\r\n    }\r\n}\r\nloeFromDateChange(eve) {\r\n    //alert(this.claim.healthFamilyDetails.loeFromDate);\r\n    this.minLOEDate = new Date(this.claim.healthFamilyDetails.loeFromDate);\r\n    this.isLOEToDate = false;\r\n\r\n}\r\nloeToDateChange(eve) {\r\n    this.calculateLossOfEmploymentAmount();\r\n}\r\n\r\ndateofadminchange(eve) {\r\n    this.disableDischarge = false;\r\n    if (eve != null) {\r\n        if (!this.isClaimEdit) {\r\n            this.claim.healthFamilyDetails.dischargeDate = null;\r\n            this.claim.healthFamilyDetails.loeToDate = null;\r\n        }\r\n        else {\r\n            this.isClaimEdit = false;\r\n        }\r\n    }\r\n\r\n    this.dischargeMinDt = eve;\r\n    this.lossOfEmploymentAmount = 0;\r\n    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n        this.claim.healthFamilyDetails.loeFromDate = eve;\r\n        this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n    }\r\n}\r\n\r\ndateofdischargechange(eve) {\r\n    this.lossOfEmploymentAmount = 0;\r\n    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n        this.claim.healthFamilyDetails.loeToDate = eve;\r\n        this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n    }\r\n\r\n    if (eve != null) {\r\n        if (!this.isHealthClaimEdit) {\r\n            var date1 = new Date(eve);\r\n            var date2 = new Date(Date.now());\r\n            var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n            if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n                var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.ReasonForDelaySubmission.toLowerCase());\r\n                if (helBenefit != null) {\r\n                    var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                    if (cond) { this.enableReasonForDelaySubmissionInHealth = true; }\r\n                    else {\r\n                        this.claim.healthFamilyDetails.reasonForDelaySubmission = null;\r\n                        this.healthCondolationCertificate = null;\r\n                        this.enableReasonForDelaySubmissionInHealth = false;\r\n                    }\r\n                }\r\n            }\r\n            //if (diffDays > 90) {\r\n            //    this.enableReasonForDelaySubmissionInHealth = true;\r\n            //}\r\n            //else {\r\n            //    this.claim.healthFamilyDetails.reasonForDelaySubmission = null;\r\n            //    this.healthCondolationCertificate = null;\r\n            //    this.enableReasonForDelaySubmissionInHealth = false;\r\n            //}\r\n        }\r\n        else {\r\n            this.isHealthClaimEdit = false;\r\n            if (this.claim.healthFamilyDetails.reasonForDelaySubmission != undefined || this.claim.healthFamilyDetails.reasonForDelaySubmission != null)\r\n                this.enableReasonForDelaySubmissionInHealth = true;\r\n            else\r\n                this.enableReasonForDelaySubmissionInHealth = false;\r\n\r\n        }\r\n    }\r\n}\r\n\r\n    calculateLossOfEmploymentAmount() {\r\n        debugger;\r\n        var calculatedAmount = 0;\r\n        if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n            if (this.claim.healthFamilyDetails.claimFor != undefined && this.claim.healthFamilyDetails.claimFor == 5) {\r\n                if (this.claim.healthFamilyDetails.claimFor != undefined && this.claim.healthFamilyDetails.typeOfHospitalization != 2) {\r\n                    if (this.claim.healthFamilyDetails.loeFromDate != undefined && this.claim.healthFamilyDetails.loeToDate != undefined) {\r\n                        var date1 = new Date(this.claim.healthFamilyDetails.loeFromDate);\r\n                        var date2 = new Date(this.claim.healthFamilyDetails.loeToDate);\r\n                        var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                        if (diffDays != NaN) {\r\n                            diffDays += 1;\r\n                            //-----------------------\r\n\r\n                            var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.LossOfEmploymentDateDiffernce.toLowerCase());\r\n                            if (helBenefit != null) {\r\n                                var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                                if (cond) {\r\n                                    calculatedAmount = 0;\r\n                                    this.viewLOEAmount = false;\r\n                                    this.viewSelf = false;\r\n                                }\r\n                                else {\r\n                                    if (diffDays > Number(helBenefit.value))\r\n                                        calculatedAmount = (200 * Number(helBenefit.value)) + ((diffDays - Number(helBenefit.value)) * 100); //calculatedAmount = (200 * 5) + ((diffDays - 5) * 100);\r\n                                    else\r\n                                        calculatedAmount = diffDays * 200; //calculatedAmount = diffDays * 200;\r\n\r\n                                    this.viewSelf = true;\r\n                                    this.viewLOEAmount = true;\r\n                                }\r\n                            }\r\n\r\n                            //if (diffDays <= 5) {\r\n                            //    //calculatedAmount = diffDays * 200;\r\n                            //    this.viewLOEAmount = false;\r\n                            //}\r\n                            //else {\r\n                            //    this.viewLOEAmount = true;\r\n                            //    calculatedAmount = (200 * 5) + ((diffDays - 5) * 100);\r\n                            //}\r\n                        }\r\n                    }\r\n                    var helBenefit2 = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.LossOfEmploymentAmountExceeding.toLowerCase());\r\n                    if (helBenefit2 != null) {\r\n                        var cond2 = eval(calculatedAmount + helBenefit2.logic + helBenefit2.value);\r\n                        if (cond2) { calculatedAmount = 10000; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //if (calculatedAmount > 10000) { calculatedAmount = 10000; }\r\n        return calculatedAmount;\r\n    }\r\n    checkAll(e, item: any) {\r\n    if (e.target.checked) {\r\n        this.result.filter(x => x.name == item)[0].values.forEach((item) => {\r\n            item.isChecked = true;\r\n        });\r\n    } else {\r\n        this.result.filter(x => x.name == item)[0].values.forEach((item) => {\r\n            item.isChecked = false;\r\n        });\r\n    }\r\n}\r\nsubmitClick() {\r\n    this.selectedPackages = [];\r\n    for (var i = 0; i < this.result.length; i++) {\r\n\r\n        for (var j = 0; j < this.result[i].values.length; j++) {\r\n            if (this.result[i].values[j].isChecked) {\r\n                this.selectedPackages.push(this.result[i].values[j]);\r\n            }\r\n        }\r\n    }\r\n    this.packageModal.hide();\r\n}\r\ncheckIfAllSelected(item: any) {\r\n\r\n}\r\nviewPackages() {\r\n    this.packageModal.show();\r\n}\r\ngetPackages() {\r\n    this.dataService\r\n        .getPackages()\r\n        .subscribe((data: any) => {\r\n            this.packages = data;\r\n            console.log(this.packages);\r\n            var groups = new Set(this.packages.map(item => item.ailmentName));\r\n            this.result = [];\r\n            groups.forEach(g =>\r\n                this.result.push({\r\n                    name: g,\r\n                    values: this.packages.filter(i => i.ailmentName === g)\r\n                }\r\n                ))\r\n        });\r\n}\r\nisBenNomineeClaimSubmitted(id: any) {\r\n    this.dataService\r\n        .isBenNomineeClaimSubmitted(id)\r\n        .subscribe((data: any) => {\r\n\r\n            this.isBenNomineeSubmittedClaim = data;\r\n            if (this.isBenNomineeSubmittedClaim) {\r\n                this.disablePFCheckbox = this.disableHealthCheckbox = this.disableDisabilityCheckbox = this.disableDeathCheckbox = this.disableEducationCheckbox = true;\r\n            }\r\n        });\r\n}\r\nisSameBenNomineeClaimSubmitted(id: any, nomineeId: any, claimType: any , eve) {\r\n    this.dataService\r\n        .isSameBenNomineeClaimSubmitted(id, nomineeId, claimType)\r\n        .subscribe((data: any) => {\r\n\r\n            if (claimType == ClaimConstants.Death) {\r\n                this.isBenNomineeSubmittedClaim = data;\r\n                if (this.isBenNomineeSubmittedClaim) {\r\n                    this.viewDeath = false;\r\n                    //this.deathCheckBox = false;\r\n                    eve.target.checked = false;\r\n                    this.disableDeathCheckbox = true;\r\n                }\r\n                else {\r\n                    //this.deathCheckBox = !this.viewDeath;\r\n                    this.viewDeath = !this.viewDeath;\r\n                }\r\n            }\r\n            else if (claimType == ClaimConstants.PF) {\r\n                this.isBenNomineeSubmittedPFClaim = data;\r\n                if (this.isBenNomineeSubmittedPFClaim) {\r\n                    this.viewPf = false;\r\n                    //this.pfCheckBox = false;\r\n                    eve.target.checked = false;\r\n                    this.disablePFCheckbox = true;\r\n                }\r\n                else {\r\n                    this.pfCode();\r\n                }\r\n            }\r\n        });\r\n}\r\ngetNomineeClaimEntryValidation(id: any, claimType: any ,eve) {\r\n    this.dataService\r\n        .getNomineeClaimEntryValidation(id)\r\n        .subscribe((data: any) => {\r\n            if (data) {\r\n                var healthCount = data.item1;\r\n                var eduCount = data.item2;\r\n                //health Check box\r\n                if (claimType == ClaimConstants.HealthFamily) {\r\n                    if (healthCount > 0) {\r\n                        this.isHFSubmitted = false;\r\n                        this.disableHealthCheckbox = false;\r\n                        this.healthCode();\r\n                    }\r\n                    else {\r\n                        this.isHFSubmitted = true;\r\n                        this.disableHealthCheckbox = true;\r\n                        //this.healthCheckBox = false;\r\n                        eve.target.checked = false;\r\n                    }\r\n                }\r\n                //Education Check box\r\n                if (claimType == ClaimConstants.Education) {\r\n                    if (eduCount > 0) {\r\n                        this.isEduSubmitted = false;\r\n                        this.disableEducationCheckbox = false;\r\n                        this.educationCode(eve);\r\n                    }\r\n                    else {\r\n                        this.isEduSubmitted = true;\r\n                        this.disableEducationCheckbox = true;\r\n                        //this.educationCheckBox = false;\r\n                        eve.target.checked = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n}\r\ndisabilityDateofReleaseChange(eve) {\r\n\r\n    if (eve != null) {\r\n        if (!this.isDisabilityClaimEdit) {\r\n            var date1 = new Date(eve);\r\n            var date2 = new Date(Date.now());\r\n            var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n            if (this.disabilityBenefitConfigDetails != null && this.disabilityBenefitConfigDetails.length > 0) {\r\n                var disBenefit = this.disabilityBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == DisabilityBenefitConfiguration.ReasonForDelaySubmission.toLowerCase());\r\n                if (disBenefit != null) {\r\n                    var cond = eval(diffDays + disBenefit.logic + disBenefit.value);\r\n                    if (cond) {\r\n                        // if (diffDays > 90) {\r\n                        this.enableReasonForDelaySubmission = true;\r\n                    }\r\n                    else {\r\n                        this.claim.disabilityDetails.reasonForDelaySubmission = null;\r\n                        this.condolationCertificate = null;\r\n                        this.enableReasonForDelaySubmission = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.isDisabilityClaimEdit = false;\r\n            if (this.claim.disabilityDetails.reasonForDelaySubmission != undefined || this.claim.disabilityDetails.reasonForDelaySubmission != null)\r\n                this.enableReasonForDelaySubmission = true;\r\n            else\r\n                this.enableReasonForDelaySubmission = false;\r\n\r\n        }\r\n    }\r\n}\r\ngetDisabilityBenefitConfigurationDetails() {\r\n\r\n    this.dataService\r\n        .getBenefitConfigurationDetails(ClaimConstants.Disability)\r\n        .subscribe((data: any) => {\r\n\r\n            this.disabilityBenefitConfigDetails = data;\r\n        });\r\n}\r\ngetHealthFamilyBenefitConfigurationDetails() {\r\n\r\n    this.dataService\r\n        .getBenefitConfigurationDetails(ClaimConstants.HealthFamily)\r\n        .subscribe((data: any) => {\r\n\r\n            this.healthFamilyBenefitConfigDetails = data;\r\n        });\r\n}\r\ngetEducationBenefitConfigurationDetails() {\r\n\r\n    this.dataService\r\n        .getBenefitConfigurationDetails(ClaimConstants.Education)\r\n        .subscribe((data: any) => {\r\n\r\n            this.educationBenefitConfigDetails = data;\r\n        });\r\n}\r\ngetDeathBenefitConfigurationDetails() {\r\n\r\n    this.dataService\r\n        .getBenefitConfigurationDetails(ClaimConstants.Education)\r\n        .subscribe((data: any) => {\r\n\r\n            this.deathBenefitConfigDetails = data;\r\n        });\r\n}\r\ngetPFBenefitConfigurationDetails() {\r\n    this.dataService\r\n        .getPFConfigurationDetails(0)\r\n        .subscribe((data: any) => {\r\n\r\n            this.pfBenefitConfigDetails = data;\r\n        });\r\n    }\r\n    deleteClaimExceptions(id: any) {\r\n        this.dataService\r\n            .deleteClaimExceptions(id)\r\n            .subscribe((data: any) => { });\r\n    }\r\n\r\n    radioChange(id: any) {\r\n        if (id == 1)\r\n            this.isRegistrationNo = false;\r\n        if (id == 2)\r\n            this.isRegistrationNo = true;\r\n    }\r\n    updateCAFDetails() {\r\n       \r\n        if (this.isRegistrationNo)\r\n            window.location.href = \"/Registration/DeathclaimFrom?ID=\" + this.ssin;\r\n        else {\r\n            this.dataService\r\n                .getRegistrationNumber(this.ssin)\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    if(data)\r\n                        window.location.href = \"/Registration/DeathclaimFrom?ID=\" + data;\r\n                    else\r\n                        window.location.href = \"/Registration/DeathclaimFrom?ID=\" + this.ssin;\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Claim Status</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"lastActionDateString\\\">Last Action</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let claims of mf.data|grdFilter: {ssin:searchText, claimRefernceNo: searchText,benName:searchText,submittedDateString: searchText, claimAmount: searchText, claimType: searchText,\\r\\n           statusName: searchText, lastActionDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onEditClaimClick(claims)\\\" *ngIf=\\\"claims.isEdit\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n\\r\\n                                        <a (click)=\\\"onViewClaimClick(claims)\\\" *ngIf=\\\"!claims.isEdit\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a (click)=\\\"downloadRecept(claims)\\\" title=\\\"Receipt\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></a>\\r\\n                                        <a (click)=\\\"onTrackClaimClick(claims)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{claims.ssin}}</td>\\r\\n                                    <td>{{claims.benName}}</td>\\r\\n                                    <td>{{claims.claimRefernceNo}}</td>\\r\\n                                    <td>{{claims.submittedDateString }}</td>\\r\\n                                    <td>{{claims.claimAmount}}</td>\\r\\n                                    <td>{{claims.statusName}}</td>\\r\\n                                    <td>{{claims.lastActionDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Claims } from '../models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { EntryPoint, WorkflowTrans, ClaimConstants, pagination, UserType } from '../pipes/constnts.model';\r\n\r\n@Component({\r\n    selector: 'app-agent-claims',\r\n    templateUrl: './agent-claims.component.html',\r\n    styleUrls: ['./agent-claims.component.css']\r\n})\r\nexport class AgentClaimsComponent implements OnInit {\r\n\r\n    claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    entryPoint: any;\r\n\r\n    constructor(public router: Router, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.userService.user.userTpe == UserType.CA.toString())\r\n            this.entryPoint = EntryPoint.CA;\r\n        else if (this.userService.user.userTpe == UserType.Lwfc.toString())\r\n            this.entryPoint = EntryPoint.Lwfc;\r\n        else\r\n            this.entryPoint = EntryPoint.Agent;\r\n        this.getClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getClaimsByAgentID(id, entrypoint, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getAllClaimsByAgent(id, entrypoint, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    trackClaim(item) {\r\n        this.router.navigate(['claim/ClaimTrack'], { skipLocationChange: true });\r\n    }\r\n    onEditClaimClick(item) {\r\n        this.router.navigate(['claim/agentclaimentry', { claimId: item.claimId, mode: \"claim\", claimStatus: item.statusId, tranctionType: item.claimType}], { skipLocationChange: true });\r\n    }\r\n    onViewClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimView', { claimId: item.claimId, tranctionType: item.claimType, transactionId: item.transactionId, mode: \"claim\", workflowId: WorkflowTrans.workflow  }], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimTrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"claim\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    downloadRecept(claim: Claims) {\r\n        this.dataService\r\n            .downloadReceipt(claim.benName, claim.ssin, claim.claimRefernceNo, claim.claimAmount, this.getTypeName(claim.claimType))\r\n            .then((data: any) => {\r\n                let dd = data;\r\n                var url = window.URL.createObjectURL(data);\r\n                window.open(url);\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchAllClaimsByAgent(this.userService.user.deptUserid, this.entryPoint, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Draft Claims  </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <!--<input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">-->\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                    <mfDefaultSorter by=\\\"statusName\\\">Last Action</mfDefaultSorter>\\r\\n\\r\\n                </th>-->\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let claims of mf.data|grdFilter: {ssin:searchText,benName:searchText, claimRefernceNo: searchText,submittedDateString: searchText, claimAmount: searchText, claimType: searchText,\\r\\n           statusName: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onEditClaimClick(claims)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\" *ngIf=\\\"claims.statusName=='Saved'\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onDeleteClaimClick(claims)\\\" title=\\\"Delete\\\" class=\\\"txt-color-red\\\" *ngIf=\\\"claims.statusName=='Saved'\\\"><i class=\\\"fa fa-trash-o fa-lg\\\"></i></a>\\r\\n\\r\\n                                    </td>\\r\\n                                    <td>{{claims.ssin}}</td>\\r\\n                                    <td>{{claims.benName}}</td>\\r\\n                                    <td>{{claims.claimRefernceNo}}</td>\\r\\n                                    <td>{{ claims.submittedDateString}}</td>\\r\\n                                    <td>{{claims.claimAmount}}</td>\\r\\n                                    <td>{{claims.statusName}}</td>\\r\\n                                    <!--<td>{{claims.submittedDateString}}</td>-->\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                              <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"successModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Claims } from '../models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { EntryPoint, UserType } from '../pipes/constnts.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-agent-draft',\r\n  templateUrl: './agent-draft.component.html',\r\n  styleUrls: ['./agent-draft.component.css']\r\n})\r\nexport class AgentDraftComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    deleteStatus: boolean = false;\r\n    successMessage: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    entryPoint: any;\r\n\r\n\r\n    constructor(public router: Router, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.userService.user.userTpe == UserType.CA.toString())\r\n           this.entryPoint = EntryPoint.CA;\r\n        else if (this.userService.user.userTpe == UserType.Lwfc.toString())\r\n            this.entryPoint = EntryPoint.Lwfc;\r\n        else\r\n            this.entryPoint = EntryPoint.Agent;\r\n        this.getClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint,\"0\", this.page, this.pageSize);\r\n        //this.getClaimsByAgentID(this.userService.user.deptUserid, EntryPoint.Agent, this.page, this.pageSize);\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getClaimsByAgentID(id, entrypoint, ssin: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getAllDraftClaimsByAgent(id, entrypoint, ssin, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onEditClaimClick(item) {\r\n        this.router.navigate(['claim/agentclaimentry', { claimId: item.claimId, mode: \"draft\", claimStatus: item.statusId }], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    downloadRecept(claim: Claims) {\r\n        this.dataService\r\n            .downloadReceipt(claim.benName, claim.ssin, claim.claimRefernceNo, claim.claimAmount, claim.claimType)\r\n            .then((data: any) => {\r\n                let dd = data;\r\n                var url = window.URL.createObjectURL(data);\r\n                window.open(url);\r\n            });\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.getClaimsByAgentID(this.userService.user.deptUserid, EntryPoint.Agent, this.page, this.pageSize);\r\n\r\n    }\r\n    onDeleteClaimClick(item) {\r\n        if (confirm(\"Are you sure to proceed \")) {\r\n            this.dataService.deleteClaimById(item.claimId)\r\n                .subscribe((data: any) => {\r\n                    this.deleteStatus = data;\r\n                    if (this.deleteStatus) {\r\n                        this.successMessage = \"Your claim was deleted successfully\";\r\n                    }\r\n                    else {\r\n                        this.successMessage = \"Invalid transaction\";\r\n                    }\r\n                    this.successModal.show();\r\n\r\n                })\r\n        }\r\n    }\r\n    changepage(page) {\r\n       // this.getClaimsByAgentID(this.userService.user.deptUserid, EntryPoint.Agent, this.page, this.pageSize);\r\n        this.getClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint,\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n            this.strSSIN = this.ssinSearchText.trim();\r\n        else\r\n            this.strSSIN = \"0\";\r\n        this.getClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint, this.strSSIN, pagination.pageNo, pagination.pageSize);\r\n    }\r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Collection </h2>\\r\\n                </header>\\r\\n\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header *ngIf=\\\"!agentInfo\\\">Agent Details</header>\\r\\n                            <fieldset *ngIf=\\\"!agentInfo\\\">\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" >\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Agent Name: </strong>{{agentUserName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Agent ARN No: </strong>{{agentARNCode}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4\\\" *ngIf=\\\"!isAllDepositsPayInSlipsUploaded\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Agent didn't upload the PayIn Slips, Can't create Collections </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4\\\" *ngIf=\\\"agentInfo\\\">\\r\\n                                            <label>\\r\\n                                                <strong>Agent ARN No: </strong>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"agentName\\\" id=\\\"ddlAgentName\\\" [(ngModel)]=\\\"agentUserId\\\"\\r\\n                                                        (change)=\\\"agentChange($event.target.value)\\\" [disabled]=\\\"isAgentLoggedin\\\">\\r\\n                                                    <option value=\\\"{{agent.userid}}\\\" *ngFor=\\\"let agent of agentList\\\">{{agent.userCode}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-4\\\" *ngIf=\\\"agentInfo\\\">\\r\\n                                            <label><strong>Agent Name: </strong>{{agentUserName}}</label>\\r\\n                                        </div>\\r\\n                                        <!--<div class=\\\"col col-4\\\"  *ngIf=\\\"agentInfo\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{agentRLOOfficeAddress}}</label>\\r\\n                                        </div>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4\\\">\\r\\n                                        <label>\\r\\n                                            <strong>Collection Date: </strong><span [style.color]=\\\"!collectionDateReq?'red':''\\\"><b>*</b></span>\\r\\n                                        </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"collectionDate\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"toDayDate\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"collectionDate\\\"\\r\\n                                                   value=\\\"{{collectionDate | date: 'dd/MM/yyyy' }}\\\" [ngClass]=\\\"{'invalid-data': (!collectionDateReq), 'valid-data': collectionDateReq}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!collectionDateReq\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Collection Date is required </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4\\\">\\r\\n                                            <label>Beneficiary Search(SSIN/Adhar/Reg.No./PF No.) <span [style.color]=\\\"!ssinValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-search\\\" (click)=\\\"searchSSINNo($event.target.value)\\\"></i>\\r\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"benSno\\\" [(ngModel)]=\\\"ssin\\\" placeholder=\\\"Enter SSIN\\\" (change)=\\\"searchSSINNo($event.target.value)\\\"\\r\\n                                                       (keydown.enter)=\\\"searchSSINNo($event.target.value)\\\" NumbersOnly maxlength=\\\"50\\\"\\r\\n                                                       #benSno=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data': benSno.invalid && (!ssinValid || benSno.touched), 'valid-data': benSno.valid && ssinValid}\\\"\\r\\n                                                       required>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"benSno.invalid && (!ssinValid || benSno.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Search criteria is required </span>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"beneficiary.benSno==0\\\">\\r\\n                                                <span style=\\\"color: red;\\\">{{beneficiary.errorMessage}}</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset *ngIf=\\\"beneficiary.benSno>0\\\">\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                            <img height=\\\"70\\\" width=\\\"70\\\" id=\\\"benImage\\\" src=\\\"{{weburl+beneficiary.benPhoto}}\\\" />\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                            <label><strong>Beneficiary Name: </strong> {{beneficiary.benFullName}} </label>\\r\\n                                            <label><strong>Mobile : </strong> {{beneficiary.benMobileNo}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                            <label class=\\\"control-label\\\">\\r\\n                                                <strong>Address: </strong>\\r\\n                                                {{beneficiary.benAddress}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-4\\\">\\r\\n                                            <label>\\r\\n                                                <strong>Last Collection Date: </strong><span [style.color]=\\\"!LastCollectionDateReq?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"lastCollectionDate\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                       [maxDate]=\\\"toDayDate\\\" #lastCollectionDate=\\\"ngModel\\\" [disabled]=\\\"isbenLastCollectionDate\\\"\\r\\n                                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"benLastCollectionDate\\\"\\r\\n                                                       value=\\\"{{benLastCollectionDate | date: 'dd/MM/yyyy' }}\\\" [ngClass]=\\\"{'invalid-data': (!LastCollectionDateReq), 'valid-data': LastCollectionDateReq}\\\"\\r\\n                                                       required>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!lastCollectionDateReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Last Collection Date is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                                <label><strong>Last Month Paid: </strong></label>\\r\\n                                                <select class=\\\"form-control\\\" name=\\\"lastPaidMonth\\\" id=\\\"lastPaidMonth\\\" [(ngModel)]=\\\"pfLastPaidMonth\\\" #lastPaidMonth=\\\"ngModel\\\" (change)=\\\"lastPaidMonthChange($event.target.value)\\\"\\r\\n                                                        required>\\r\\n                                                    <option value=\\\"0\\\" selected>Choose month</option>\\r\\n                                                    <option value=\\\"{{pf.monthId}}\\\" *ngFor=\\\"let pf of collectionMonths\\\">{{pf.monthName + ' ' + (pf.Id > 9 ? this.fEndYear : (pf.Id == 0 ? (this.fStartYear -1) :this.fStartYear)) }}</option>\\r\\n                                                </select>\\r\\n                                                <i></i>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-4\\\">\\r\\n                                                <label><strong>Month up to: </strong><span [style.color]=\\\"!pfMonthIsValid?'red':''\\\"><b>*</b></span>  </label>\\r\\n                                                <select class=\\\"form-control\\\" name=\\\"pfselectionmonth\\\" id=\\\"selectedMonth\\\" [(ngModel)]=\\\"pfSelectedMonth\\\" (change)=\\\"pfMonthChange($event.target.value)\\\"\\r\\n                                                        #pfselectionmonth=\\\"ngModel\\\"\\r\\n                                                        [ngClass]=\\\"{'invalid-data': pfselectionmonth.invalid && (!pfMonthIsValid || pfselectionmonth.touched),\\r\\n                                        'valid-data':pfselectionmonth.valid && pfMonthIsValid }\\\"\\r\\n                                                        required>\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose month</option>\\r\\n                                                    <option value=\\\"{{pf.monthId}}\\\" *ngFor=\\\"let pf of pfMonths\\\">{{pf.monthName}}</option>\\r\\n                                                </select>\\r\\n                                                <div *ngIf=\\\"pfselectionmonth.invalid &&(pfselectionmonth.touched || !pfMonthIsValid)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Month is required </span>\\r\\n                                                </div>\\r\\n                                                <i></i>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-4\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Year : </strong>  {{currentyear}}</label>\\r\\n                                                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" placeholder=\\\"Year\\\" [(ngModel)]=\\\"currentyear\\\" maxlength=\\\"4\\\" width=\\\"300px\\\" NumbersOnly readonly>-->\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <section *ngIf=\\\"pfDetailsVisible\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                                    <thead>\\r\\n                                                        <tr>\\r\\n                                                            <th>Month</th>\\r\\n                                                            <th>Year</th>\\r\\n                                                            <th>Amount</th>\\r\\n                                                        </tr>\\r\\n                                                    </thead>\\r\\n                                                    <tbody>\\r\\n                                                        <tr *ngFor=\\\"let pf of pfSelectedMonths\\\">\\r\\n                                                            <td>{{pf.monthName}}</td>\\r\\n                                                            <td>{{pf.year}}</td>\\r\\n                                                            <td>{{pf.amount}}</td>\\r\\n                                                        </tr>\\r\\n                                                    </tbody>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                                    <label><strong>Book No.: </strong><span [style.color]=\\\"!bookNoIsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                    <select class=\\\"form-control\\\" name=\\\"bookNo\\\" [(ngModel)]=\\\"pfDetails.bookNo\\\" (change)=\\\"bookNoChange($event.target.value)\\\"\\r\\n                                                            #bookNo=\\\"ngModel\\\"\\r\\n                                                            [ngClass]=\\\"{'invalid-data': bookNo.invalid && (!bookNoIsValid || bookNo.touched),\\r\\n                                        'valid-data':bookNo.valid && bookNoIsValid }\\\"\\r\\n                                                            required>\\r\\n                                                        <option value=\\\"0\\\" selected disabled>Choose book</option>\\r\\n                                                        <option value=\\\"{{book.id}}\\\" *ngFor=\\\"let book of agentReceiptBooks\\\">{{book.bookNo}}</option>\\r\\n                                                    </select>\\r\\n                                                    <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"BookNo\\\" placeholder=\\\"Book No\\\" [(ngModel)]=\\\"pfDetails.bookNo\\\" maxlength=\\\"6\\\"\\r\\n                #BookNo=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{'invalid-data': BookNo.invalid && (!bookNoIsValid || BookNo.touched), 'valid-data': BookNo.valid && bookNoIsValid}\\\"\\r\\n                required />-->\\r\\n\\r\\n                                                    <div *ngIf=\\\"bookNo.invalid && (!bookNoIsValid || bookNo.touched)\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">Book No. is required </span>\\r\\n                                                    </div>\\r\\n\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4\\\">\\r\\n                                                    <label><strong>Receipt No.: </strong><span [style.color]=\\\"!receiptNoIsValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                                    <label class=\\\"input\\\">\\r\\n                                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ReceiptNo\\\" placeholder=\\\"Receipt No\\\" [(ngModel)]=\\\"pfDetails.receiptNo\\\" NumbersOnly maxlength=\\\"6\\\"\\r\\n                                                               #ReceiptNo=\\\"ngModel\\\"\\r\\n                                                               [ngClass]=\\\"{'invalid-data': ReceiptNo.invalid && (!receiptNoIsValid || ReceiptNo.touched), 'valid-data': ReceiptNo.valid && receiptNoIsValid}\\\"\\r\\n                                                               required [disabled]=\\\"!receiptGenerated\\\" (change)=\\\"checkReceiptNoForAgentBook($event.target.value, pfDetails.bookNo)\\\" />\\r\\n                                                    </label>\\r\\n                                                    <div *ngIf=\\\"ReceiptNo.invalid && (!receiptNoIsValid || ReceiptNo.touched)\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">Receipt No. is required </span>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"!receiptGenerated\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">All Receipt No's are generated. Please select another book No. </span>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"receiptValue==1\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">Receipt No is already generated. </span>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"receiptValue==2\\\">\\r\\n                                                        <span style=\\\"color: red;\\\">Receipt No is not in the range. </span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-4 selectContainer\\\">\\r\\n                                                    <label><strong>Amount: </strong> {{pfTotalAmount}} </label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div *ngIf=\\\"agentPfValidation\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Collection amount exceeds</span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <footer>\\r\\n                                            <a *ngIf=\\\"isAllDepositsPayInSlipsUploaded\\\" id=\\\"btnPfCollect\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SavePFCollectionDetails(pfDetails)\\\">Submit</a>\\r\\n                                            <a class=\\\"btn btn-warning\\\" (click)=\\\"cancelClick()\\\">Cancel</a>\\r\\n                                        </footer>\\r\\n</section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n\\r\\n    </div>\\r\\n    </section>\\r\\n    <div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n         aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n        <div class=\\\"modal-dialog modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n\\r\\n                    <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                        Download Receipt\\r\\n                    </button>-->\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                        Ok\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n   \\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { FinancialYearMonths, Months, CollectionMonths, PfMonths, PfPaidDetails, PFMasterConfigAmount } from '../models/pf.months.model';\r\nimport { FinancialYearModel } from 'src/app/models/financialYear.model';\r\nimport { fail } from 'assert';\r\nimport { PFDetails } from '../models/PFDetails.model';\r\nimport { PFBeneficiaryDetails } from '../models/pf.beneficiaryBasic.model';\r\nimport { PFPaymentCollectionDetails } from '../models/pfpayment.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { environment } from '../../../environments/environment';\r\nimport { NewRegUsers } from 'src/app/models/newReg.model';\r\nimport { UserType } from '../pipes/constnts.model';\r\nimport { DATE } from 'ngx-bootstrap/chronos/units/constants';\r\nimport { DatepickerOptions } from 'ng2-datepicker';\r\nimport { ReceiptBookModel } from '../../models/receiptbook.model';\r\n\r\n@Component({\r\n    selector: 'app-agent-pf-collection-form',\r\n    templateUrl: './agent-pf-collection-form.component.html',\r\n    styleUrls: ['./agent-pf-collection-form.component.css']\r\n})\r\nexport class AgentPfCollectionFormComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    successMessage: string;\r\n    toDayDate: Date;\r\n    benficiaryInactive: boolean = false;\r\n    beneficiary: PFBeneficiaryDetails = {} as PFBeneficiaryDetails;\r\n    ssin: number;\r\n    userName: string;\r\n    userCode: string;\r\n    IsValidssin: boolean = false;\r\n    ssinValid: boolean = true;\r\n    months = Months;\r\n    collectionMonths = CollectionMonths;\r\n    currentyear: any;\r\n    fStartYear: any;\r\n    fEndYear: any;\r\n    pfDetailsVisible: boolean = false;\r\n    pfMonths: FinancialYearMonths[] = [] as FinancialYearMonths[];\r\n    pfSelectedMonths: PfMonths[] = [] as PfMonths[];\r\n    lastPaidDetails: PfPaidDetails = {} as PfPaidDetails;\r\n    pfDetails: PFDetails = {} as PFDetails;\r\n    pfCollectionDetails: PFPaymentCollectionDetails = {} as PFPaymentCollectionDetails;\r\n    pfMasterConfig: PFMasterConfigAmount = {} as PFMasterConfigAmount;\r\n    agentPfCollectAmount: number;\r\n    pfTotalAmount: number;\r\n    agentPfValidation: boolean = false;\r\n    //Validation Props\r\n    bookNoIsValid: boolean = true;\r\n    receiptNoIsValid: boolean = true;\r\n    pfMonthIsValid: boolean = true;\r\n    weburl: string = environment.weburl;\r\n    agentList: Array<NewRegUsers> = [];\r\n    agentUserId: number;\r\n    agentUserName: string;\r\n    isAgentLoggedin: boolean=false;\r\n    collectionDate: Date;\r\n    collectionDateReq: boolean = true;\r\n    datePickerConfig: any;\r\n    agentInfo: boolean = true;\r\n    receiptGenerated: boolean = true;\r\n    agentReceiptBooks: ReceiptBookModel[] = [] as ReceiptBookModel[];\r\n    isAllDepositsPayInSlipsUploaded: boolean = true;\r\n    rloOffcieId: number;\r\n\r\n    receiptValue: number;\r\n    pfSelectedMonth: number;\r\n    lastPaidMonthValid: boolean = true;\r\n    pfLastPaidMonth: number;\r\n\r\n    agentARNCode: string;\r\n    isbenLastCollectionDate: boolean = false;\r\n    benLastCollectionDate: Date;\r\n    lastCollectionDateReq: boolean = true;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n\r\n        this.toDayDate = new Date();\r\n        this.currentyear = new Date().getFullYear();\r\n        let currentMonth = new Date().getMonth();\r\n        if (currentMonth <= 3) {\r\n            this.fStartYear = this.currentyear - 1;\r\n            this.fEndYear = this.currentyear;\r\n        }\r\n        else {\r\n            this.fStartYear = this.currentyear;\r\n            this.fEndYear = this.currentyear+1;\r\n        }\r\n\r\n        this.currentyear = this.fStartYear + '-' + this.fEndYear;\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getAgentList();\r\n        this.userName = this.user.user.userName;\r\n        this.userCode = this.user.user.userTypeName;\r\n        this.getPFMasterConfigDetails();\r\n        this.weburl = environment.weburl;\r\n        if (this.user.user.userTpe == UserType.ServiceProvider.toString() || this.user.user.userTpe == UserType.CA.toString()) {\r\n            this.agentInfo = false;\r\n\r\n            this.checkAgentDepositsPayInSlipsUploaded(this.user.user.deptUserid);\r\n        }\r\n    }\r\n    getAgentCollectedAmount(userId: number) {\r\n        this.dataService\r\n            .getAgentCollectedAmount(userId)\r\n            .subscribe((data: any) => {\r\n                this.agentPfCollectAmount = data;\r\n            });\r\n    }\r\n    getPFMasterConfigDetails() {\r\n        this.dataService\r\n            .getPFMasterConfigDetails()\r\n            .subscribe((data: any) => {\r\n                this.pfMasterConfig = data;\r\n                if (this.pfMasterConfig != null) {\r\n\r\n                }\r\n\r\n            });\r\n    }\r\n    searchSSINNo(ssnNo: any) {\r\n        debugger;\r\n\r\n\r\n        this.benficiaryInactive = false;\r\n        this.isbenLastCollectionDate = false;\r\n        if (ssnNo != undefined && ssnNo.trim() != \"\") {\r\n            this.clearValues();\r\n            this.dataService\r\n                .getBeneficiaryDetailsBySearch(ssnNo.trim())\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    this.beneficiary = data;\r\n                    if (this.beneficiary != null) {\r\n\r\n                        if (this.beneficiary.benLastCollectionDate != null) {\r\n                            this.benLastCollectionDate = new Date(this.beneficiary.benLastCollectionDate);\r\n                            this.isbenLastCollectionDate = true;\r\n                        }\r\n\r\n                        if (this.beneficiary.isActive && this.beneficiary.status==1) {\r\n                            this.ssinValid = true;\r\n\r\n                            //this.getPaymentDetailsBybenSno(this.beneficiary.benSno);\r\n                        }\r\n                        else {\r\n                            this.ssinValid = false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.ssinValid = false;\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            this.beneficiary = {} as PFBeneficiaryDetails;\r\n            this.ssinValid = true;\r\n        }\r\n    }\r\n    getPaymentDetailsBybenSno(benSno: number): any {\r\n        this.dataService\r\n            .getLastPaidPfDetails(benSno)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.lastPaidDetails = data;\r\n                if (this.lastPaidDetails != null && (this.lastPaidDetails.lastPaid != null || this.lastPaidDetails.lastPaid.trim() != '')) {\r\n                    debugger;\r\n                    this.displayMonthList(this.lastPaidDetails.monthPaid, this.lastPaidDetails.yearPaid);\r\n                }\r\n                else {\r\n                    this.pfMonths = this.months;\r\n                }\r\n            });\r\n    }\r\n\r\n    displayMonthList(monthId: any, year: any) {\r\n        //let monthid = this.months.find(x => x.monthId == monthId).monthId;\r\n        if (year == this.fStartYear && monthId <= 3) {\r\n            this.pfMonths = this.months;\r\n        }\r\n        else {\r\n            let id = this.months.find(x => x.monthId == monthId).Id;\r\n            this.pfMonths = this.months.filter(x => x.Id > id);\r\n        }\r\n    }\r\n    lastPaidMonthChange(value) {\r\n        debugger;\r\n        this.pfTotalAmount = 0;\r\n        if (value != 0) {\r\n            this.lastPaidDetails = {} as PfPaidDetails;\r\n            this.lastPaidDetails.monthPaid = value;\r\n            if (value <= 3)\r\n                this.lastPaidDetails.yearPaid = this.fEndYear\r\n            else\r\n                this.lastPaidDetails.yearPaid = this.fStartYear\r\n            this.displayMonthList(this.lastPaidDetails.monthPaid, this.lastPaidDetails.yearPaid);\r\n        }\r\n        else if (value == 0)\r\n        {\r\n            this.lastPaidDetails = {} as PfPaidDetails;\r\n            this.lastPaidDetails.monthPaid = 0;\r\n           \r\n            this.lastPaidDetails.yearPaid = this.fStartYear\r\n            this.displayMonthList(this.lastPaidDetails.monthPaid, this.lastPaidDetails.yearPaid);\r\n        }\r\n        else {\r\n            this.lastPaidDetails = null;\r\n            this.pfMonths = this.months;\r\n        }\r\n        this.pfSelectedMonth = 0;\r\n        this.pfSelectedMonths = null;\r\n    }\r\n    pfMonthChange(value) {\r\n        this.pfTotalAmount = 0;\r\n        let s = null;\r\n        let id = this.months.find(x => x.monthId == value).Id;\r\n        let m = this.months.filter(x => x.Id <= id);\r\n        if (this.lastPaidDetails != null && this.lastPaidDetails.monthPaid > 0) {\r\n            let lastId = this.months.find(x => x.monthId == this.lastPaidDetails.monthPaid).Id;\r\n            let mon = this.months.filter(x => x.Id > lastId && x.Id <= id);\r\n            s = mon;\r\n            //s = m.filter(x => x.monthId > this.lastPaidDetails.monthPaid);\r\n        }\r\n        else {\r\n            s = m;\r\n        }\r\n\r\n        if (s != null && s != undefined) {\r\n            this.pfDetailsVisible = true;\r\n            this.pfSelectedMonths = s;\r\n            this.pfSelectedMonths.filter(x => x.amount = this.pfMasterConfig.beneficiaryPFContribution);\r\n            this.pfSelectedMonths.filter(x => x.year = (x.Id >= 10 ? this.fEndYear : this.fStartYear));\r\n            for (let i = 0; i < this.pfSelectedMonths.length; i++) {\r\n                this.pfTotalAmount += +this.pfSelectedMonths[i].amount;\r\n            }\r\n            let totalAmount = (this.agentPfCollectAmount + this.pfTotalAmount); debugger;\r\n            if (this.user.user.userTpe == UserType.ServiceProvider.toString() || this.user.user.userTpe == UserType.CA.toString())\r\n            {\r\n                if (totalAmount < this.pfMasterConfig.agentCollectionLimit) {\r\n                    this.agentPfValidation = false;\r\n                }\r\n                else {\r\n                    this.agentPfValidation = true;\r\n                }\r\n            }\r\n        }\r\n    }   \r\n    \r\n    SavePFCollectionDetails(pfDetails: PFDetails) {\r\n        if (this.pfSelectedMonths == undefined || this.pfSelectedMonths.length == 0) { this.pfMonthIsValid = false; }\r\n        if (pfDetails.bookNo == undefined || pfDetails.bookNo == 0) { this.bookNoIsValid = false; }\r\n        if (pfDetails.receiptNo == undefined || pfDetails.receiptNo == 0) { this.receiptNoIsValid = false; }\r\n        if (this.collectionDate == undefined || this.collectionDate == null) { this.collectionDateReq = false; }\r\n        if (this.benLastCollectionDate == undefined || this.benLastCollectionDate == null) { this.lastCollectionDateReq = false; }\r\n\r\n        if (!this.pfMonthIsValid || !this.bookNoIsValid || !this.receiptNoIsValid || !this.collectionDateReq || !this.lastCollectionDateReq ) return;\r\n        debugger;\r\n        this.pfCollectionDetails.BenSno = this.beneficiary.benSno;\r\n        this.pfCollectionDetails.AgentNo = this.agentUserId;//this.user.user.deptUserid;\r\n        this.pfCollectionDetails.BookNo = pfDetails.bookNo;\r\n        this.pfCollectionDetails.CollectionAmount = this.pfTotalAmount;\r\n        this.pfCollectionDetails.CollectionDate = this.collectionDate;\r\n        this.pfCollectionDetails.ReceiptNo = pfDetails.receiptNo;\r\n        this.pfCollectionDetails.BenPFAccountId = this.beneficiary.benPFAccountId;\r\n        this.pfCollectionDetails.RLOOfficeId = this.rloOffcieId;\r\n        this.pfCollectionDetails.LastCollectionDate = this.benLastCollectionDate;\r\n     \r\n        if (!this.agentPfValidation) {\r\n            this.pfCollectionDetails.PFCollectionDtlList = [];\r\n            for (let i = 0; i < this.pfSelectedMonths.length; i++) {\r\n                this.pfCollectionDetails.PFCollectionDtlList.push({ MonthPaid: this.pfSelectedMonths[i].monthId, YearPaid: this.pfSelectedMonths[i].year, Amount: this.pfSelectedMonths[i].amount });\r\n            }\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .savePFCollectionDetails(this.pfCollectionDetails)\r\n                    .then((data: any) => {\r\n                        debugger;\r\n                        if (data) {\r\n                            this.successMessage = \"PF collections successfully submitted\";\r\n                            this.pfTotalAmount = 0;\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                        }\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    okClick() {\r\n        this.successModal.hide();\r\n        //this.ngOnInit();\r\n        //this.beneficiary = {} as PFBeneficiaryDetails;\r\n        //this.ssin = null;\r\n\r\n        if (this.user.user.userTpe == UserType.Inspector.toString())\r\n            window.location.href = \"Inspector/PfCollectionForm\";\r\n        else if (this.user.user.userTpe == UserType.AsstLabourCom.toString())\r\n            window.location.href = \"ALC/PfCollectionForm\";\r\n        else\r\n            window.location.href = \"Agent/PfCollectionForm\";\r\n       // this.router.navigate(['claim/PfCollectionForm']);\r\n    }\r\n    cancelClick() {\r\n        this.router.navigate(['claim/PfDeposit']);\r\n    }\r\n    clearValues() {\r\n        this.lastPaidDetails = {} as PfPaidDetails;\r\n        this.pfTotalAmount = 0;\r\n        this.beneficiary = {} as PFBeneficiaryDetails;\r\n        this.pfSelectedMonths=[];\r\n        this.pfDetails = {} as PFDetails;\r\n        this.pfDetailsVisible = false;\r\n        this.collectionDateReq = true;\r\n    }\r\n\r\n    getAgentList() {\r\n        this.dataService\r\n            .getAgentList(0)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.agentList = data;\r\n                if (this.agentList != null && this.agentList.length > 0) {\r\n                    for (var i = 0; i <= this.agentList.length; i++) {\r\n                        debugger;\r\n                        if (this.agentList[i].userid == this.user.user.deptUserid) {\r\n                            this.agentUserId = this.agentList[i].userid;\r\n                            this.agentUserName = this.agentList[i].firstname + \" \" + this.agentList[i].lastname;\r\n                            this.agentARNCode = this.agentList[i].userCode;\r\n                            this.rloOffcieId = this.agentList[i].rloOfficeId;\r\n                            this.isAgentLoggedin = true;\r\n                            this.getAgentCollectedAmount(this.user.user.deptUserid);\r\n                            this.getAgentReceiptBooks(this.user.user.deptUserid);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    agentChange(eve) {\r\n        debugger;\r\n        this.agentUserId = eve;\r\n        this.agentUserName = this.agentList.find(x => x.userid == eve).firstname + \" \" + this.agentList.find(x => x.userid == eve).lastname;\r\n        this.rloOffcieId = this.agentList.find(x => x.userid == eve).rloOfficeId;        \r\n        this.getAgentCollectedAmount(eve);\r\n        this.getAgentReceiptBooks(eve);\r\n        this.checkAgentDepositsPayInSlipsUploaded(eve);\r\n    }\r\n    getAgentReceiptBooks(userId: number) {\r\n        this.dataService\r\n            .getAgentBooks(userId)\r\n            .subscribe((data: any) => {\r\n                this.agentReceiptBooks = data;\r\n            });\r\n    }\r\n    bookNoChange(value) {\r\n        this.receiptGenerated = true;\r\n        this.dataService\r\n            .getNextReceiptNo(value)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                if (data == -1)\r\n                {\r\n                    this.pfDetails.receiptNo = 0;\r\n                    this.receiptGenerated = false;\r\n                }\r\n                else\r\n                    this.pfDetails.receiptNo = data;\r\n            });\r\n    }\r\n\r\n    checkAgentDepositsPayInSlipsUploaded(userId: number) {\r\n        this.dataService\r\n            .isAgentAllDepositsPayInSlipsUploaded(userId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.isAllDepositsPayInSlipsUploaded = data;\r\n            });\r\n    }\r\n    checkReceiptNoForAgentBook(eve,bookId) {\r\n        this.dataService\r\n            .checkReceiptNoForAgentBook(bookId, eve)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.receiptValue = data;\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Deposit </h2>\\r\\n                </header>\\r\\n                <div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>Agent Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Agent Name: </strong>{{agentDetails?.userName}} </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>RLO Office Name & Address: </strong>{{agentDetails?.agentRLOInformation?.rloOfficeName}} <br /> {{agentDetails?.agentRLOInformation?.addressLine1}} &nbsp; {{agentDetails?.agentRLOInformation?.addressLine2}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label><strong>Agent ARN No: </strong>{{agentDetails?.userCode}} </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label>\\r\\n                                                <label><strong>Worker Type: </strong></label>\\r\\n                                            </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"ddlWorkerType\\\" name=\\\"workerType\\\" [(ngModel)]=\\\"workerTypeId\\\"\\r\\n                                                        (change)=\\\"workerTypeChange($event.target.value)\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{type.workerTypeId}}\\\" *ngFor=\\\"let type of WorkerTypeList\\\">{{type.workerTypeName}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!workerTypeReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Worker Type is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-5\\\">\\r\\n                                            <label>\\r\\n                                                <strong>Deposit Date: </strong><span [style.color]=\\\"!depositDateReq?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"depositDate\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                       [maxDate]=\\\"toDayDate\\\"\\r\\n                                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"depositDate\\\"\\r\\n                                                       value=\\\"{{depositDate | date: 'dd/MM/yyyy' }}\\\" [ngClass]=\\\"{'invalid-data': (!depositDateReq), 'valid-data': depositDateReq}\\\"\\r\\n                                                       required>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositDateReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit Date is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isWorkerTypeSelected\\\">\\r\\n                                        <div class=\\\"col col-5\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" checked=\\\"checked\\\" (change)=\\\"radioChange(1)\\\" />\\r\\n                                                <i></i>Non Grips\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-5\\\">\\r\\n                                            <label class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" name=\\\"radio-inline\\\" (change)=\\\"radioChange(2)\\\" />\\r\\n                                                <i></i>Grips\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!gripsDeptCodeError\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Grips is not configured for this worker type </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isWorkerTypeSelected\\\">\\r\\n                                        <div class=\\\"col col-6\\\" *ngIf=\\\"!isGrips\\\">\\r\\n                                            <label><strong>Deposit Bank: </strong><span [style.color]=\\\"!depositBankReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"ddlDepositBank\\\" name=\\\"depositBank\\\" [(ngModel)]=\\\"bankId\\\">\\r\\n                                                    <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{bank.bankCode}}\\\" *ngFor=\\\"let bank of bankDetails\\\">{{bank.accountNumber}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositBankReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit Bank is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-5\\\">\\r\\n                                            <label><strong>Amount Pending for deposit: </strong>{{sumofAmount}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                        <form method=\\\"post\\\" #form1 id=\\\"form1\\\" name=\\\"form1\\\" style=\\\"display:none\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"ENCDATA\\\" id=\\\"ENCDATA\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" id=\\\"DEPT_CD\\\">\\r\\n                            <button type=\\\"submit\\\" (click)=\\\"form1.submit()\\\">Submit</button>\\r\\n                        </form>\\r\\n                        <!--UAT-->\\r\\n                        <!--<form action=\\\"http://202.61.117.90/GRIPS/v1epay.do\\\" method=\\\"post\\\" #form1 id=\\\"form1\\\" name=\\\"form1\\\" style=\\\"display:none\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"ENCDATA\\\" id=\\\"ENCDATA\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" id=\\\"DEPT_CD\\\">\\r\\n                            <button type=\\\"submit\\\" (click)=\\\"form1.submit()\\\">Submit</button>\\r\\n                        </form>-->\\r\\n                        <!--Live-->\\r\\n                        <!--<form action=\\\"https://wbifms.gov.in/GRIPS/v1epay.do\\\" method=\\\"post\\\" #form1 id=\\\"form1\\\" name=\\\"form1\\\" style=\\\"display:none\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"ENCDATA\\\" id=\\\"ENCDATA\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" id=\\\"DEPT_CD\\\">\\r\\n                            <button type=\\\"submit\\\" (click)=\\\"form1.submit()\\\">Submit</button>\\r\\n                        </form>-->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <!--<table class=\\\"table table-striped\\\" [mfData]=\\\"PFCollectionDetails1\\\" #mf=\\\"mfDataTable\\\">-->\\r\\n                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                               [mfData]=\\\"PFCollectionDetails1\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssI_Number\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benFullName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"receiptNo\\\">Receipt No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"bookNo\\\">Book No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"collectionDateString\\\">Collection Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paidFromMonth\\\">Paid From</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paidToMonth\\\">Paid To</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"collectionAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let deposits of mf.data|grdFilter: {ssI_Number:searchText, benFullName: searchText, receiptNo: searchText, collectionDateString: searchText, bookNo: searchText, paidFromMonth: searchText,\\r\\n           paidToMonth: searchText, collectionAmount: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"deposits.selected\\\" (change)=\\\"checkIfAllSelected(deposits);\\\">\\r\\n                                    </td>\\r\\n                                    <td>{{deposits.ssI_Number}}</td>\\r\\n                                    <td>{{deposits.benFullName}}</td>\\r\\n                                    <td>{{deposits.receiptNo}}</td>\\r\\n                                    <td>{{deposits.bookName}}</td>\\r\\n                                    <td>{{deposits.collectionDateString}}</td>\\r\\n                                    <td>{{deposits.paidFromMonth}}</td>\\r\\n                                    <td>{{deposits.paidToMonth}}</td>\\r\\n                                    <td>{{deposits.collectionAmount}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"PFCollectionDetails1 != null && PFCollectionDetails1.length>0\\\">\\r\\n                                            <!--<ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>-->\\r\\n                                            <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <!--<table class=\\\"table table-striped\\\" [mfData]=\\\"PFCollectionDetails.results\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                             <thead>\\r\\n                                                 <tr>\\r\\n                                                     <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"selectedAll\\\" (change)=\\\"selectAll();\\\"></th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"ssI_Number\\\">SSIN</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"benFullName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"receiptNo\\\">Receipt No</mfDefaultSorter>\\r\\n\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"bookNo\\\">Book No</mfDefaultSorter>\\r\\n\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"collectionDateString\\\">Collection Date</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"paidFromMonth\\\">Paid From</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"paidToMonth\\\">Paid To</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n                                                     <th>\\r\\n                                                         <mfDefaultSorter by=\\\"collectionAmount\\\">Amount</mfDefaultSorter>\\r\\n                                                     </th>\\r\\n\\r\\n\\r\\n\\r\\n                                                 </tr>\\r\\n                                             </thead>\\r\\n                                             <tbody>\\r\\n                                                 <tr *ngFor=\\\"let deposits of mf.data|grdFilter: {ssI_Number:searchText, benFullName: searchText, receiptNo: searchText, collectionDateString: searchText, bookNo: searchText, paidFromMonth: searchText,\\r\\n                        paidToMonth: searchText, collectionAmount: searchText}; let i=index;\\\">\\r\\n                                                     <td class=\\\"\\\">\\r\\n                                                         <input type=\\\"checkbox\\\" [(ngModel)]=\\\"deposits.selected\\\" (change)=\\\"checkIfAllSelected(deposits);\\\">\\r\\n                                                     </td>\\r\\n                                                     <td>{{deposits.ssI_Number}}</td>\\r\\n                                                     <td>{{deposits.benFullName}}</td>\\r\\n                                                     <td>{{deposits.receiptNo}}</td>\\r\\n                                                     <td>{{deposits.bookNo}}</td>\\r\\n                                                     <td>{{deposits.collectionDateString}}</td>\\r\\n                                                     <td>{{deposits.paidFromMonth}}</td>\\r\\n                                                     <td>{{deposits.paidToMonth}}</td>\\r\\n                                                     <td>{{deposits.collectionAmount}}</td>\\r\\n                                                 </tr>\\r\\n                                             </tbody>\\r\\n                                             <tfoot>\\r\\n                                                 <tr>\\r\\n                                                     <td colspan=\\\"9\\\">\\r\\n                                                         <div *ngIf=\\\"PFCollectionDetails.results.length>0\\\">\\r\\n                                                             <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                                         </div>\\r\\n                                                     </td>\\r\\n                                                 </tr>\\r\\n                                             </tfoot>\\r\\n                                         </table>-->\\r\\n                        <div class=\\\"row\\\" *ngIf=\\\"showErrorMessage\\\" style=\\\"margin-top:10px;\\\">\\r\\n                            <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                <label>Please select atleast one record to proceed.</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <footer *ngIf=\\\"PFCollectionDetails1 != null && PFCollectionDetails1.length>0\\\">\\r\\n                            <div class=\\\"modal-footer\\\">\\r\\n                                <a id=\\\"btnPfCollect\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitPFDepositDetails(PFCollectionDetails1)\\\">Submit</a>\\r\\n\\r\\n                                <a id=\\\"btnGenerate\\\" class=\\\"btn btn-primary\\\" (click)=\\\"GenaratePdf()\\\" *ngIf=\\\"!isGrips\\\">Generate PayIn-Slip</a>\\r\\n                            </div>\\r\\n                        </footer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #pdfModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">PayIn Slip Pdf</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                PayIn Slip generated, Please print or download.\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf('print')\\\">\\r\\n                    Print PayIn Slip\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf('download')\\\">\\r\\n                    Download PayIn Slip\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { PFCollectionDetails, PFCollectionDetailsList } from '../models/pf.collectiondetails.model';\r\nimport { ClaimConstants, pagination, PFDepositeStatus } from '../pipes/constnts.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { PFDepositDetails, PFDepositDtlDetails } from '../models/pf.deposit.details.model';\r\nimport { RloBankDetails } from 'src/app/models/rlobankdetails.model';\r\nimport { NewRegUsers } from 'src/app/models/newReg.model';\r\nimport { WorkFlowMaster } from 'src/app/models/workerTypeDetails.model';\r\nimport * as FileSaver from 'file-saver';\r\nimport { GeneratePayInSlipDetails } from '../models/generatePayInSlip.model';\r\nimport { URLSearchParams } from \"@angular/http\"\r\nimport { environment } from 'src/environments/environment';\r\nimport { LwcBankMst } from 'src/app/models/lwcBankMst.model';\r\n\r\n@Component({\r\n    selector: 'app-agent-pf-deposit',\r\n    templateUrl: './agent-pf-deposit.component.html',\r\n    styleUrls: ['./agent-pf-deposit.component.css']\r\n})\r\nexport class AgentPfDepositComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('pdfModal') public pdfModal: ModalDirective;\r\n\r\n    successMessage: string;\r\n    datePickerConfig: any;\r\n    toDayDate: Date;\r\n    userName: string;\r\n    userCode: string;\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //PFCollectionDetails: PFCollectionDetails = {} as PFCollectionDetails;\r\n    PFDepositDetails: PFDepositDetails = {} as PFDepositDetails;\r\n    //PFDepositDetailsObj: PFDepositDtlDetails = {} as PFDepositDtlDetails;\r\n    depositDateReq: boolean = true;\r\n    depositDate: Date;\r\n    bankId: number;\r\n    rloOfficeId: number;\r\n    bankDetails: Array<LwcBankMst> = [];\r\n    agentDetails: NewRegUsers = {} as NewRegUsers;\r\n    sumofAmount: number = 0;\r\n    selectedAll: any;\r\n    selectedCollectionsList: Array<number> = [];\r\n    PFCollectionDetails1: PFCollectionDetailsList[];\r\n\r\n    WorkerTypeList: WorkFlowMaster[];\r\n    workerTypeId: number;\r\n    showErrorMessage: boolean = false;\r\n    depositBankReq: boolean = true;\r\n    workerTypeReq: boolean = true;\r\n    generatePayInSlip: GeneratePayInSlipDetails = {} as GeneratePayInSlipDetails;\r\n    encData: string;\r\n    isGrips: boolean = false;\r\n    isWorkerTypeSelected: boolean = false;\r\n    gripsDeptCode: string = '';\r\n    gripsDeptCodeError: boolean = true;\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n\r\n        this.toDayDate = new Date();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userName = this.user.user.userName;\r\n        this.userCode = this.user.user.userTypeName;\r\n        //this.getPFPendingDepositItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.pending,0, this.page, this.pageSize);\r\n        this.getAgentDetailsForDeposit(this.user.user.deptUserid);\r\n        this.getWorkerTypeDetails();\r\n       \r\n    }\r\n    getAgentDetailsForDeposit(userId: any) {\r\n        this.dataService\r\n            .getAgentDetailsForDeposit(userId)\r\n            .subscribe((data: any) => {\r\n                this.agentDetails = data;\r\n\r\n                if (this.agentDetails != null)\r\n                {\r\n                    if (this.agentDetails.agentRLOInformation != null)\r\n                        this.rloOfficeId = this.agentDetails.agentRLOInformation.rloOfficeId;\r\n                    //this.getSubDivRLOBankDetails(this.agentDetails.subDivId)\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n    getPFPendingDepositItemsByAgent(userId: any, status: any, workerTypeId: any,pageNo: any, pageSize: any) {\r\n        this.dataService\r\n            .getPFDepositDetailsByAgentId(userId, 0, workerTypeId, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.PFCollectionDetails1 = data;\r\n                //this.PFCollectionDetails = data;\r\n                //this.totalRows = this.PFCollectionDetails.rowCount;\r\n                if (this.PFCollectionDetails1 != null && this.PFCollectionDetails1.length > 0) {\r\n                    this.selectedAll = true;\r\n                    this.selectAll();\r\n                }\r\n                else {\r\n                    this.selectedAll = false;\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n    changepage(page) {\r\n        //this.getPFPendingDepositItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.pending, page, this.pageSize);\r\n    }\r\n\r\n    submitPFDepositDetails(DepositDetails: PFCollectionDetailsList[]) {\r\n        debugger;\r\n        if (this.validatePFDeposit()) {\r\n            this.selectedCollections();\r\n            this.showErrorMessage = false;\r\n            if (this.selectedCollectionsList != null && this.selectedCollectionsList.length > 0) {\r\n                this.PFDepositDetails.agentNo = this.user.user.deptUserid;\r\n                this.PFDepositDetails.rloOfficeId = this.rloOfficeId;\r\n                //this.PFDepositDetails.bankId = this.bankId;\r\n                this.PFDepositDetails.lwcBankCode = this.bankId;\r\n                this.PFDepositDetails.payinSlipNo = 0;\r\n                this.PFDepositDetails.collectionIds = this.selectedCollectionsList;\r\n                this.PFDepositDetails.workerTypeId = this.workerTypeId;\r\n                this.PFDepositDetails.depositDate = this.depositDate;\r\n\r\n                if (this.isGrips) {\r\n                    if (confirm(\"Do you want to proceed with GRIPS\")) {\r\n                        this.PFDepositDetails.mode = \"grips\";\r\n                        this.PFDepositDetails.lwcBankCode = 0;\r\n                        this.dataService\r\n                            .submitPFDepositDetails(this.PFDepositDetails)\r\n                            .then((data: any) => {\r\n                                debugger;\r\n                                if (data) {\r\n                                    this.encData = data;\r\n                                    var input = <HTMLInputElement>document.getElementById('ENCDATA');\r\n                                    input.value = this.encData;\r\n                                    var input1 = <HTMLInputElement>document.getElementById('DEPT_CD');\r\n                                    input1.value = this.gripsDeptCode;\r\n                                    \r\n                                    var myForm = <HTMLFormElement>document.getElementById('form1');\r\n                                    myForm.action = environment.gripsurl;\r\n                                    myForm.submit();\r\n                                    //this.successMessage = \"PF amount sucessfully deposited\";\r\n                                }\r\n                                else {\r\n                                    this.successMessage = \"Invalid transaction\";\r\n                                    this.successModal.show();\r\n                                }\r\n                                //this.successModal.show();\r\n                            });\r\n                    }\r\n                }\r\n                else {\r\n                    if (confirm(\"Are you sure to proceed\")) {\r\n                        this.PFDepositDetails.mode = \"default\";\r\n                        this.dataService\r\n                            .submitPFDepositDetails(this.PFDepositDetails)\r\n                            .then((data: any) => {\r\n                                debugger;\r\n                                if (data == \"true\") {\r\n                                    this.successMessage = \"PF amount sucessfully deposited\";\r\n                                }\r\n                                else {\r\n                                    this.successMessage = \"Invalid transaction\";\r\n                                }\r\n                                this.successModal.show();\r\n                            });\r\n                    }\r\n                }\r\n\r\n            }\r\n            else { this.showErrorMessage = true; }\r\n        }\r\n    }\r\n\r\n    okClick() {\r\n        this.getPFPendingDepositItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.pending,0, this.page, this.pageSize);\r\n        this.depositDate = null;\r\n        this.sumofAmount = 0;\r\n        this.workerTypeId = 0;\r\n        this.bankId = 0;\r\n        this.successModal.hide();\r\n    }\r\n    getSubDivRLOBankDetails(id: any, workerTypeId:any) {\r\n        this.dataService\r\n            .getSubDivRLOBankDetails(id, workerTypeId)\r\n            .subscribe((data: any) => {\r\n                this.bankDetails = data;\r\n            });\r\n    }\r\n    getLWCBankDetails(userId: any, workerTypeId: any) {\r\n        this.dataService\r\n            .getLWCBankDetails(userId, workerTypeId)\r\n            .subscribe((data: any) => {\r\n                this.bankDetails = data;\r\n            });\r\n    }\r\n    selectAll() {\r\n        debugger;\r\n        this.sumofAmount = 0;\r\n        for (var i = 0; i < this.PFCollectionDetails1.length; i++) {\r\n            this.PFCollectionDetails1[i].selected = this.selectedAll;\r\n            if (this.selectedAll) {\r\n                this.sumofAmount += this.PFCollectionDetails1[i].collectionAmount;\r\n            }\r\n        }\r\n    }\r\n    checkIfAllSelected(itemData) {\r\n        this.selectedAll = this.PFCollectionDetails1.every(function (item: any) {\r\n            return item.selected == true;\r\n        })\r\n\r\n        if (itemData.selected == true) { this.sumofAmount += itemData.collectionAmount; }\r\n        else { this.sumofAmount -= itemData.collectionAmount; }\r\n    }\r\n    selectedCollections() {\r\n        var res = this.PFCollectionDetails1.filter(x => x.selected == true);\r\n        this.selectedCollectionsList = [];\r\n        for (var i = 0; i < res.length; i++) {\r\n            this.selectedCollectionsList.push(res[i].pfCollectionId);\r\n        }\r\n    }\r\n    getWorkerTypeDetails() {\r\n        this.dataService\r\n            .getWorkerTypeMasterData()\r\n            .subscribe((data: any) => {\r\n                this.WorkerTypeList = data;              \r\n            });\r\n    }\r\n    workerTypeChange(typeId) {\r\n        debugger;\r\n        this.gripsDeptCodeError = true;\r\n        this.selectedCollectionsList = [];\r\n        this.sumofAmount = 0;\r\n        this.showErrorMessage = false;\r\n        //this.getSubDivRLOBankDetails(this.agentDetails.subDivId, typeId);\r\n        this.getLWCBankDetails(this.user.user.deptUserid, typeId);\r\n        this.getPFPendingDepositItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.pending, typeId, this.page, this.pageSize);\r\n        this.isWorkerTypeSelected = true;\r\n        this.gripsDeptCode = this.WorkerTypeList.find(a => a.workerTypeId == typeId).gripsDeptCode;\r\n        if (this.isGrips && (this.gripsDeptCode == '' || this.gripsDeptCode == undefined))\r\n            this.gripsDeptCodeError = false;\r\n    }\r\n\r\n    validatePFDeposit(): boolean {\r\n        debugger;\r\n        let isValid = true;\r\n        this.workerTypeReq = this.depositBankReq = this.depositDateReq = true;\r\n        //this.showErrorMessage = false;\r\n        if (this.depositDate == undefined || this.depositDate == null) { this.depositDateReq = isValid = false; }\r\n        if (this.workerTypeId == undefined || this.workerTypeId == null) { this.workerTypeReq = isValid = false; }\r\n        if (!this.isGrips) {\r\n            if (this.bankId == undefined || this.bankId == null) { this.depositBankReq = isValid = false; }\r\n        }\r\n        else {\r\n            if (this.gripsDeptCode == '' || this.gripsDeptCode == undefined) { this.gripsDeptCodeError = isValid = false; }\r\n        }\r\n        return isValid;\r\n    }\r\n    GenaratePdf() {\r\n        if (this.validatePFDeposit())\r\n            this.pdfModal.show();\r\n    }\r\n    downLoadPdf(type) {\r\n        debugger;\r\n        this.generatePayInSlip.depositDate = this.depositDate;\r\n        this.generatePayInSlip.depositBankId = this.bankId;\r\n        this.generatePayInSlip.agentName = this.userName;\r\n        this.generatePayInSlip.agentCode = this.userCode;\r\n        this.generatePayInSlip.totalAmount = this.sumofAmount;\r\n        this.generatePayInSlip.deptUserId = this.user.user.deptUserid;\r\n        this.dataService\r\n            .genaratePdfPayInSlip(this.generatePayInSlip)\r\n            .then((data: any) => {\r\n                debugger;\r\n                var blob = new Blob([data.body], { type: 'application/pdf' });\r\n                if (type == 'print') {\r\n                    const blobUrl = URL.createObjectURL(blob);\r\n                    const iframe = document.createElement('iframe');\r\n                    iframe.style.display = 'none';\r\n                    iframe.src = blobUrl;\r\n                    document.body.appendChild(iframe);\r\n                    iframe.contentWindow.print();\r\n                }\r\n                else {\r\n                    FileSaver.saveAs(blob, \"PayIn-Slip.pdf\");\r\n                }\r\n                this.pdfModal.hide();\r\n            });\r\n    }\r\n    radioChange(id: any) {\r\n        this.gripsDeptCodeError = true;\r\n        this.isGrips = (id == 1 ? false : true);\r\n        if (this.isGrips && (this.gripsDeptCode == '' || this.gripsDeptCode == undefined))\r\n            this.gripsDeptCodeError = false;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\" >\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Deposited </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"pFDepositDetails.results\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"pfDepositId\\\">DEPT_REF_NO</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositAmount\\\">Deposit Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositDateString\\\">Deposit Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter by=\\\"payinSlipNo\\\">Payin Slip No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"scrollNumber\\\">Scroll Number</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"bankDepositDateString\\\">BankDepositDate</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>PayIn Slip</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"gRN\\\">GRN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paymentStatus\\\">Payment Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"isGrips\\\">Is Grips</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let deposits of mf.data|grdFilter: {depositAmount:searchText, depositDateString: searchText, payinSlipNo: searchText, scrollNumber: searchText, bankDepositDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onRePayClick(deposits)\\\" title=\\\"RePay\\\" class=\\\"txt-color-red\\\" *ngIf=\\\"deposits.transactionStatus==3 && deposits.isGrips\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onVerifyClick(deposits)\\\" title=\\\"Verify\\\" class=\\\"txt-color-red\\\" *ngIf=\\\"(deposits.transactionStatus==2 || deposits.transactionStatus==0)&& deposits.isGrips\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a (click)=\\\"onPDFViewClick(deposits)\\\" title=\\\"PDF View\\\" class=\\\"txt-color-red\\\" *ngIf=\\\"deposits.isGrips\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></a>\\r\\n                                        <a (click)=\\\"getAttachments(deposits.pfDepositId)\\\" title=\\\"View Attachments\\\" class=\\\"txt-color-red\\\" *ngIf=\\\"deposits.isPayInSlipUploaded\\\"><i class=\\\"fa fa-file-o\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{deposits.pfDepositId}}</td>\\r\\n                                    <td>{{deposits.depositAmount}}</td>\\r\\n                                    <td>{{deposits.depositDateString}}</td>\\r\\n                                    <!--<td>{{deposits.payinSlipNo}}</td>-->\\r\\n                                    <td>{{deposits.scrollNumber}}</td>\\r\\n                                    <td>{{deposits.bankDepositDateString}}</td>\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <div *ngIf=\\\"!deposits.isPayInSlipUploaded\\\">\\r\\n                                            <a *ngIf=\\\"!deposits.isGrips\\\" (click)=\\\"upload(deposits)\\\" title=\\\"Upload\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-upload fa-lg\\\"></i></a>\\r\\n                                            <a *ngIf=\\\"deposits.isGrips && deposits.transactionStatus==1\\\" (click)=\\\"uploadGripsFormIV(deposits)\\\" title=\\\"Upload Form IV\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-upload fa-lg\\\"></i></a>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>{{deposits.grn}}</td>\\r\\n                                    <td>{{deposits.paymentStatus}}</td>\\r\\n                                    <td>{{deposits.isGrips}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"11\\\">\\r\\n                                        <div *ngIf=\\\"pFDepositDetails.results.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div>\\r\\n    <form method=\\\"post\\\" #form1 id=\\\"form1\\\" name=\\\"form1\\\" style=\\\"display:none\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"xmlString\\\" id=\\\"xmlString\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"Dept_Cd\\\" id=\\\"Dept_Cd\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"form1.submit()\\\">Submit</button>\\r\\n    </form>\\r\\n\\r\\n    <form method=\\\"post\\\" #form1 id=\\\"form2\\\" name=\\\"form2\\\" style=\\\"display:none\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"ENCDATA\\\" id=\\\"ENCDATA\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" id=\\\"DEPT_CD\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"form2.submit()\\\">Submit</button>\\r\\n    </form>\\r\\n    <!--UAT-->\\r\\n    <!--<form action=\\\"http://202.61.117.90/GRIPS/DeptVarifyPayment.do\\\" method=\\\"post\\\" #form1 id=\\\"form1\\\" name=\\\"form1\\\" style=\\\"display:none\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"xmlString\\\" id=\\\"xmlString\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"Dept_Cd\\\" id=\\\"Dept_Cd\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"form1.submit()\\\">Submit</button>\\r\\n    </form>\\r\\n\\r\\n    <form action=\\\"http://202.61.117.90/GRIPS/v1epay.do\\\" method=\\\"post\\\" #form1 id=\\\"form2\\\" name=\\\"form2\\\" style=\\\"display:none\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"ENCDATA\\\" id=\\\"ENCDATA\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" id=\\\"DEPT_CD\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"form2.submit()\\\">Submit</button>\\r\\n    </form>-->\\r\\n    <!--LIVE-->\\r\\n    <!--<form action=\\\"https://wbifms.gov.in/GRIPS/DeptVarifyPayment.do\\\" method=\\\"post\\\" #form1 id=\\\"form1\\\" name=\\\"form1\\\" style=\\\"display:none\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"xmlString\\\" id=\\\"xmlString\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"Dept_Cd\\\" id=\\\"Dept_Cd\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"form1.submit()\\\">Submit</button>\\r\\n    </form>\\r\\n\\r\\n    <form action=\\\"https://wbifms.gov.in/GRIPS/v1epay.do\\\" method=\\\"post\\\" #form1 id=\\\"form2\\\" name=\\\"form2\\\" style=\\\"display:none\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"ENCDATA\\\" id=\\\"ENCDATA\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" id=\\\"DEPT_CD\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"form2.submit()\\\">Submit</button>\\r\\n    </form>-->\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #payInSlipModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"payInSlipModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divUploadPayInSlip\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <label>Bank Deposited Date <span [style.color]=\\\"!dateOfDepostValid?'red':''\\\"><b>*</b></span></label>\\r\\n                            <label class=\\\"input\\\">\\r\\n                                <!--<i class=\\\"icon-append fa fa-calendar\\\"></i>-->\\r\\n                                <input type=\\\"text\\\" name=\\\"depositDate\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                       placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                       #depositDate=\\\"ngModel\\\"\\r\\n                                       [maxDate]=\\\"toDayDate\\\"\\r\\n                                       [(ngModel)]=\\\"bankDepositDate\\\"\\r\\n                                       value=\\\"{{ depositedDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data':!dateOfDepostValid, 'valid-data': dateOfDepostValid}\\\"\\r\\n                                       required>\\r\\n                            </label>\\r\\n                            <div *ngIf=\\\"!dateOfDepostValid\\\">\\r\\n                                <span style=\\\"color: red;\\\">Deposited Date is required </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Scroll Number </label>  <!--<span [style.color]=\\\"!payInSlipNumberValid?'red':''\\\"><b>*</b></span>-->\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"payInSlip\\\" numbersOnly [(ngModel)]=\\\"scrollNumber\\\" />\\r\\n                                <!--<div *ngIf=\\\"!payInSlipNumberValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Scroll Number is required </span>\\r\\n                                </div>-->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-12 smart-form\\\">\\r\\n                            <section class=\\\"col col-6 top-5\\\">\\r\\n                                <label class=\\\"label\\\">PayIn Slip <span [style.color]=\\\"!payInSlipUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event, 'payinslip')\\\">Browse</span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!payInSlipUploaded) && (payInSlipCertificate.fileName =='' || payInSlipCertificate.fileName == undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">PayIn Slip is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>{{payInSlipCertificate.fileName}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"GenaratePdf()\\\">\\r\\n                            Generate Form-IV\\r\\n                        </button>\\r\\n                        <div *ngIf=\\\"!isVisible && (!formIVUploaded) && (formIVCertificate.fileName =='' || formIVCertificate.fileName == undefined )\\\">\\r\\n                            <span style=\\\"color: red;\\\">Form - IV is required </span>\\r\\n                        </div>\\r\\n                        <!--<a class=\\\"btn btn-success\\\" (click)=\\\"GenaratePdf()\\\">Generate Form-IV</a>-->\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" *ngIf=\\\"isVisible\\\">\\r\\n                        <div class=\\\"col-12 smart-form\\\">\\r\\n                            <section class=\\\"col col-6 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Form - IV <span [style.color]=\\\"!formIVUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event, 'formIV')\\\">Browse</span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!formIVUploaded) && (formIVCertificate.fileName =='' || formIVCertificate.fileName == undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Form - IV is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>{{formIVCertificate.fileName}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<section>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col col-6\\\">\\r\\n                                <label class=\\\"label\\\">Form - IV <span [style.color]=\\\"!formIVUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\">\\r\\n                                        <input type=\\\"file\\\" id=\\\"file\\\">Browse\\r\\n                                    </span><input type=\\\"text\\\" readonly>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!formIVUploaded) && (formIVCertificate.fileName =='' || formIVCertificate.fileName ==undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Form - IV is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    {{formIVCertificate.fileName}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </section>-->\\r\\n                </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePaySlip()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #gripsFormIVModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"gripsFormIVModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divUploadPayInSlip\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"GenarateGripsFormIV()\\\">\\r\\n                            Generate Form-IV\\r\\n                        </button>\\r\\n                        <div *ngIf=\\\"!isVisible && (!formIVUploaded) && (formIVCertificate.fileName =='' || formIVCertificate.fileName == undefined )\\\">\\r\\n                            <span style=\\\"color: red;\\\">Form - IV is required </span>\\r\\n                        </div>\\r\\n                        <!--<a class=\\\"btn btn-success\\\" (click)=\\\"GenaratePdf()\\\">Generate Form-IV</a>-->\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" *ngIf=\\\"isVisible\\\">\\r\\n                        <div class=\\\"col-12 smart-form\\\">\\r\\n                            <section class=\\\"col col-6 top-5\\\">\\r\\n                                <label class=\\\"label\\\">Form - IV <span [style.color]=\\\"!formIVUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event, 'formIV')\\\">Browse</span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!formIVUploaded) && (formIVCertificate.fileName =='' || formIVCertificate.fileName == undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Form - IV is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>{{formIVCertificate.fileName}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<section>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col col-6\\\">\\r\\n                                <label class=\\\"label\\\">Form - IV <span [style.color]=\\\"!formIVUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\">\\r\\n                                        <input type=\\\"file\\\" id=\\\"file\\\">Browse\\r\\n                                    </span><input type=\\\"text\\\" readonly>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!formIVUploaded) && (formIVCertificate.fileName =='' || formIVCertificate.fileName ==undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Form - IV is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    {{formIVCertificate.fileName}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </section>-->\\r\\n                </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveGripsFormIV()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #pdfModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"pdfModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Form-IV Pdf</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                Form-IV generated, Please print or download.\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf('print')\\\">\\r\\n                    Print Form-IV\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf('download')\\\">\\r\\n                    Download Form-IV\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--<div bsModal #repayModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"repayModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">RePay</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div>\\r\\n                    <form action=\\\"http://202.61.117.90/GRIPS/DeptVarifyPayment.do\\\" method=\\\"post\\\" #form1 id=\\\"form1\\\" name=\\\"form1\\\" style=\\\"display:none\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"ENCDATA\\\" id=\\\"ENCDATA\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" value=\\\"050\\\">\\r\\n                        <button type=\\\"submit\\\" (click)=\\\"form1.submit()\\\">Submit</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n                <div>\\r\\n                    Are you sure to proceed\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postData()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"repayModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>-->\\r\\n<div bsModal #pfDepositModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">PF Deposit Details Pdf</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                PF Deposit Details generated, Please print or download.\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPFDetailsPdf('print')\\\">\\r\\n                    Print PF Deposit Details\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPFDetailsPdf('download')\\\">\\r\\n                    Download PF Deposit Details\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Attachment Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:100%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <accordion>\\r\\n                            <accordion-group heading=\\\"{{item?.fileName}}\\\" *ngFor=\\\"let item of attachments\\\">\\r\\n                                <div *ngIf=\\\"item?.fileName.split('.')[item?.fileName.split('.').length-1]!='pdf'\\\">\\r\\n                                    <img [src]=\\\"'data:image/'+item?.fileName.split('.')[item?.fileName.split('.').length-1]+';base64,'+ item.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"item?.fileName.split('.')[item?.fileName.split('.').length-1]=='pdf'\\\">\\r\\n                                    <object [attr.data]=\\\"item.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                                </div>\\r\\n                            </accordion-group>\\r\\n                        </accordion>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { PFDepositDetails, PFDeposits } from '../models/pf.deposit.details.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { pagination, PFDepositeStatus } from '../pipes/constnts.model';\r\nimport { AttachmentType } from '../pipes/constnts.model';\r\nimport { PayInSlipAttachmentModel } from '../models/payinslip-attachment';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { PFDepositAttachmentsModel } from '../models/pf.attachments';\r\nimport { FormIVDetails } from '../models/formIV.model';\r\nimport * as FileSaver from 'file-saver';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-agent-pf-deposited-list',\r\n  templateUrl: './agent-pf-deposited-list.component.html',\r\n  styleUrls: ['./agent-pf-deposited-list.component.css']\r\n})\r\nexport class AgentPfDepositedListComponent implements OnInit {\r\n    @ViewChild('payInSlipModal') public payInSlipModal: ModalDirective;\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('pdfModal') public pdfModal: ModalDirective;\r\n    //@ViewChild('repayModal') public repayModal: ModalDirective;\r\n    @ViewChild('pfDepositModal') public pfDepositModal: ModalDirective;\r\n    @ViewChild('gripsFormIVModal') public gripsFormIVModal: ModalDirective;\r\n    @ViewChild('attachModal') public attachModal: ModalDirective;\r\n\r\n    toDayDate: Date;\r\n    datePickerConfig: any;\r\n    userName: string;\r\n    userCode: string;\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    pFDepositDetails: PFDeposits = {} as PFDeposits;\r\n   \r\n    successMessage: string;\r\n    payInSlipUploaded: boolean = true;\r\n    dateOfDepostValid: boolean = true;\r\n    //payInSlipNumberValid: boolean = true;\r\n    bankDepositDate: Date;\r\n    scrollNumber: number;\r\n    data: PFDepositAttachmentsModel = {} as PFDepositAttachmentsModel;\r\n    payInSlipCertificate: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n    depositId: number;\r\n    //mainUpload: AttachmentModel;\r\n    formIVCertificate: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n    formIVUploaded: boolean = true;\r\n    FormIVDetail: FormIVDetails = {} as FormIVDetails;\r\n    isVisible: boolean = false;\r\n    encData: string;\r\n    pfDepositId: number;\r\n    attachments: PayInSlipAttachmentModel[] = [];\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService, private httpClient: HttpClient, private sanitizer: DomSanitizer) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        this.toDayDate = new Date();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userName = this.user.user.userName;\r\n        this.userCode = this.user.user.userTypeName;\r\n        this.getPFDepositedItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.deposited, this.page, this.pageSize);\r\n    }\r\n\r\n    getPFDepositedItemsByAgent(userId: any, status: any, pageNo: any, pageSize: any) {\r\n        this.dataService\r\n            .getPFDepositStatusDetailsByAgentId(userId, status, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pFDepositDetails = data;\r\n                this.totalRows = this.pFDepositDetails.rowCount;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getPFDepositedItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.deposited, page, this.pageSize);\r\n    }\r\n\r\n    onFileChanged(inputValue: any, attachmentType: string): void {\r\n        var file: File = inputValue.target.files[0];\r\n         if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n             myReader.onloadend = (e) => {\r\n                const model: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = 1;\r\n\r\n                model.attachmentType = attachmentType == \"payinslip\" ? AttachmentType.PayinSlip : AttachmentType.FormIV;\r\n                model.pfDepositId = this.depositId;\r\n                model.createdBy = this.user.user.deptUserid;\r\n\r\n                //this.payInSlip = model;\r\n                 if (attachmentType == \"payinslip\")\r\n                     this.payInSlipCertificate = model;\r\n                 else\r\n                     this.formIVCertificate = model;\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.getPFDepositedItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.deposited, this.page, this.pageSize);\r\n    }\r\n    upload(details: PFDepositDetails) {\r\n        this.depositId = details.pfDepositId;\r\n        this.clearData();\r\n        this.payInSlipModal.show();\r\n    }\r\n    uploadGripsFormIV(details: PFDepositDetails) {\r\n        this.depositId = details.pfDepositId;\r\n        this.bankDepositDate = details.depositDate;\r\n        this.isVisible = false;\r\n        //this.clearData();\r\n        this.payInSlipCertificate = {} as PayInSlipAttachmentModel;\r\n        this.formIVCertificate = {} as PayInSlipAttachmentModel;\r\n        this.gripsFormIVModal.show();\r\n    }\r\n    savePaySlip() {\r\n        debugger;\r\n        if (this.validatePayInSlip()) {\r\n            this.data.bankDepositDate = this.bankDepositDate;\r\n            this.data.scrollNumber = (this.scrollNumber == undefined || this.scrollNumber == null) ? 0 : this.scrollNumber;\r\n            this.data.payInSlipAttachment = this.payInSlipCertificate;\r\n            this.data.formIVAttachment = this.formIVCertificate;\r\n            //this.payInSlipCertificate.bankDepositDate = this.bankDepositDate;\r\n            //this.payInSlipCertificate.scrollNumber = this.scrollNumber;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .savePayInSlip(this.data)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"PayIn Slip Uploaded successfully\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"PayIn Slip Not Uploaded\";\r\n                        }\r\n                        this.payInSlipModal.hide();\r\n                        this.successModal.show();\r\n\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n    saveGripsFormIV() {\r\n        debugger;\r\n        if (this.validateForFormIV()) {\r\n            this.data.bankDepositDate = this.bankDepositDate;\r\n            this.data.scrollNumber = 0;\r\n            this.data.payInSlipAttachment = null;\r\n            this.data.formIVAttachment = this.formIVCertificate;\r\n            //this.payInSlipCertificate.bankDepositDate = this.bankDepositDate;\r\n            //this.payInSlipCertificate.scrollNumber = this.scrollNumber;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .savePayInSlip(this.data)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"Form IV Uploaded successfully\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Form IV Not Uploaded\";\r\n                        }\r\n                        this.gripsFormIVModal.hide();\r\n                        this.successModal.show();\r\n\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    validatePayInSlip(): boolean {\r\n        debugger;\r\n        let isValid = this.dateOfDepostValid = this.payInSlipUploaded = this.formIVUploaded = true; //this.payInSlipNumberValid =\r\n        if (this.bankDepositDate == null && this.bankDepositDate == undefined) { isValid = this.dateOfDepostValid = false; }\r\n       // if (this.scrollNumber == null && this.scrollNumber == undefined) { isValid = this.payInSlipNumberValid = false; }\r\n        if (this.payInSlipCertificate.fileName == null && this.payInSlipCertificate.fileName == undefined) { isValid = this.payInSlipUploaded = false; }\r\n        if (this.formIVCertificate.fileName == null && this.formIVCertificate.fileName == undefined) { isValid = this.formIVUploaded = false; }\r\n        return isValid;\r\n    }\r\n    validateForFormIV(): boolean {\r\n        debugger;\r\n        let isValid = true; //this.payInSlipNumberValid = \r\n        if (this.formIVCertificate.fileName == null && this.formIVCertificate.fileName == undefined) { isValid = this.formIVUploaded = false; }\r\n        return isValid;\r\n    }\r\n    clearData() {\r\n        this.bankDepositDate = null;\r\n        this.scrollNumber = null;\r\n        this.isVisible = false;\r\n        this.payInSlipCertificate = {} as PayInSlipAttachmentModel;\r\n        this.formIVCertificate = {} as PayInSlipAttachmentModel;\r\n    }\r\n    GenaratePdf() {\r\n        this.dateOfDepostValid = true;\r\n        if (this.bankDepositDate == null && this.bankDepositDate == undefined) { this.dateOfDepostValid = false; }\r\n        else\r\n            this.pdfModal.show();\r\n    }\r\n    GenarateGripsFormIV() {\r\n            this.pdfModal.show();\r\n    }\r\n    downLoadPdf(type) {\r\n        debugger;\r\n        this.FormIVDetail.lwfccode = this.userName;\r\n        this.FormIVDetail.bankdepositdate = this.bankDepositDate;\r\n        this.FormIVDetail.scrollno = (this.scrollNumber == null || this.scrollNumber == undefined ? 0 : this.scrollNumber);\r\n        this.FormIVDetail.depositId = this.depositId;\r\n\r\n        this.dataService\r\n            .genaratePdfFormIV(this.FormIVDetail)\r\n            .then((data: any) => {\r\n                debugger;\r\n                var blob = new Blob([data.body], { type: 'application/pdf' });\r\n                if (type == 'print') {\r\n                    const blobUrl = URL.createObjectURL(blob);\r\n                    const iframe = document.createElement('iframe');\r\n                    iframe.style.display = 'none';\r\n                    iframe.src = blobUrl;\r\n                    document.body.appendChild(iframe);\r\n                    iframe.contentWindow.print();\r\n                }\r\n                else {\r\n                    FileSaver.saveAs(blob, \"Form-IV.pdf\");\r\n                }\r\n                this.pdfModal.hide();\r\n                this.isVisible = true;\r\n            });\r\n    }\r\n    onRePayClick(item: PFDepositDetails) {\r\n        debugger;\r\n        if (confirm(\"Are you sure to proceed \")) {\r\n            this.dataService\r\n                .repayToGrips(item.pfDepositId)\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    if (data) {\r\n                        this.encData = data;\r\n                        var input = <HTMLInputElement>document.getElementById('ENCDATA');\r\n                        input.value = this.encData;\r\n                        var input1 = <HTMLInputElement>document.getElementById('DEPT_CD');\r\n                        input1.value = item.gripsDeptCode;\r\n\r\n                        var myForm = <HTMLFormElement>document.getElementById('form2');\r\n                        myForm.action = environment.gripsurl;\r\n                        myForm.submit();\r\n                        //this.successMessage = \"PF amount sucessfully deposited\";\r\n                    }\r\n                    else {\r\n                        this.successMessage = \"Invalid transaction\";\r\n                        this.successModal.show();\r\n                    }\r\n                    //this.successModal.show();\r\n                });\r\n\r\n        }\r\n        //this.repayModal.show();\r\n    }\r\n    postData() {\r\n        var myForm = <HTMLFormElement>document.getElementById('form1');\r\n        myForm.submit();\r\n    }\r\n    onVerifyClick(item: PFDepositDetails) {\r\n        if (confirm(\"Are you sure to proceed \")) {\r\n            this.dataService\r\n                .postDoubleVerificationGrips(item.pfDepositId)\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    if (data) {\r\n                        this.encData = data;\r\n                        var input = <HTMLInputElement>document.getElementById('xmlString');\r\n                        input.value = this.encData;\r\n                        var input1 = <HTMLInputElement>document.getElementById('Dept_Cd');\r\n                        input1.value = item.gripsDeptCode;\r\n                        var myForm = <HTMLFormElement>document.getElementById('form1');\r\n                        myForm.action = environment.gripsverifyurl;\r\n                        myForm.submit();\r\n                    }\r\n                    else {\r\n                        this.successMessage = \"Invalid transaction\";\r\n                        this.successModal.show();\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n    onPDFViewClick(item: PFDepositDetails) {\r\n        debugger;\r\n        this.pfDepositId = item.pfDepositId;\r\n        this.pfDepositModal.show();\r\n    }\r\n    downLoadPFDetailsPdf(type) {\r\n        debugger;\r\n        this.dataService\r\n            .downloadPFDepositDetails(this.pfDepositId)\r\n            .then((data: any) => {\r\n                var blob = new Blob([data.body], { type: 'application/pdf' });\r\n                if (type == 'print') {\r\n                    const blobUrl = URL.createObjectURL(blob);\r\n                    const iframe = document.createElement('iframe');\r\n                    iframe.style.display = 'none';\r\n                    iframe.src = blobUrl;\r\n                    document.body.appendChild(iframe);\r\n                    iframe.contentWindow.print();\r\n                }\r\n                else {\r\n                    FileSaver.saveAs(blob, \"PFDepositDetails.pdf\");\r\n                }\r\n                this.pfDepositModal.hide();\r\n            });\r\n    }\r\n    getAttachments(pfdepositId: number) {\r\n        debugger;\r\n        //this.isVisible = true;\r\n        this.dataService.getPFDepositAttachments(pfdepositId)\r\n            .subscribe((data: any) => {\r\n                if (data) {\r\n                    this.attachments = data;\r\n                    if (this.attachments != null && this.attachments.length > 0) {\r\n                        for (var j = 0; j < this.attachments.length; j++) {\r\n                            //let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                            if (this.attachments[j].fileName.split('.')[this.attachments[j].fileName.split('.').length - 1] == 'pdf') {\r\n                                this.attachments[j].attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + this.attachments[j].fileContent);\r\n                            }\r\n                        }\r\n                        //this.attachments = payInSlip;\r\n                    }\r\n                    this.attachModal.show();\r\n                }\r\n            });\r\n       \r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Refer Claims</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"ssinSearchText\\\" placeholder=\\\"SSIN Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssin\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"lastActionDateString\\\">Last Action</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let claims of mf.data|grdFilter: {ssin:searchText,benName:searchText, claimRefernceNo: searchText,submittedDateString: searchText, claimAmount: searchText, claimType: searchText,\\r\\n           statusName: searchText, lastActionDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onEditClaimClick(claims)\\\" *ngIf=\\\"claims.isEdit\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClaimClick(claims)\\\" *ngIf=\\\"!claims.isEdit\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a (click)=\\\"downloadRecept(claims)\\\" title=\\\"Receipt\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></a>\\r\\n                                        <a (click)=\\\"onTrackClaimClick(claims)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{claims.ssin}}</td>\\r\\n                                    <td>{{claims.benName}}</td>\\r\\n                                    <td>{{claims.claimRefernceNo}}</td>\\r\\n                                    <td>{{claims.submittedDateString}}</td>\\r\\n                                    <td>{{claims.claimAmount}}</td>\\r\\n                                    <td>{{claims.statusName}}</td>\\r\\n                                    <td>{{claims.lastActionDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Claims } from '../models/claims.model';\r\nimport { Router } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { EntryPoint, WorkflowTrans, ClaimConstants, pagination, UserType } from '../pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-agent-referrall',\r\n  templateUrl: './agent-referrall.component.html',\r\n  styleUrls: ['./agent-referrall.component.css']\r\n})\r\nexport class AgentReferrallComponent implements OnInit {\r\n\r\n    claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n    entryPoint: number;\r\n\r\n    constructor(public router: Router, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.userService.user.userTpe == UserType.CA.toString())\r\n            this.entryPoint = EntryPoint.CA;\r\n        else if (this.userService.user.userTpe == UserType.Lwfc.toString())\r\n            this.entryPoint = EntryPoint.Lwfc;\r\n        else\r\n            this.entryPoint = EntryPoint.Agent;\r\n\r\n        this.getReferralClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint, \"0\",\"0\",this.page, this.pageSize);\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getReferralClaimsByAgentID(id, entrypoint, ssin: any, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getAllReferralClaimsByAgent(id, entrypoint, ssin, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    trackClaim(item) {\r\n        this.router.navigate(['claim/ClaimTrack'], { skipLocationChange: true });\r\n    }\r\n    onEditClaimClick(item) {\r\n        this.router.navigate(['claim/agentclaimentry', { claimId: item.claimId, mode: \"referal\", claimStatus: item.statusId, tranctionType: item.claimType}], { skipLocationChange: true });\r\n    }\r\n    onViewClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimView', { claimId: item.claimId, tranctionType: item.claimType, transactionId: item.transactionId, mode: \"referal\", workflowId: WorkflowTrans.workflowreferral }], { skipLocationChange: true });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimTrack', { transactionId: item.transactionId, tranctionType: item.claimType, mode: \"agentreferal\", workflowId: WorkflowTrans.workflowreferral}], { skipLocationChange: true });\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    downloadRecept(claim: Claims) {\r\n        this.dataService\r\n            .downloadReceipt(claim.benName, claim.ssin, claim.claimRefernceNo, claim.claimAmount, this.getTypeName(claim.claimType))\r\n            .then((data: any) => {\r\n                let dd = data;\r\n                var url = window.URL.createObjectURL(data);\r\n                window.open(url);\r\n            });\r\n    }\r\n    changepage(page) {\r\n        this.getReferralClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint,\"0\",\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if ((this.ssinSearchText != null && this.ssinSearchText != undefined) || (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined)) {\r\n            if (this.ssinSearchText != null && this.ssinSearchText != undefined && this.ssinSearchText != \"\")\r\n                this.strSSIN = this.ssinSearchText.trim();\r\n            else\r\n                this.strSSIN = \"0\";\r\n\r\n            if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n                this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n            else\r\n                this.strClaimRefNo = \"0\";\r\n            //this.dataService\r\n            //    .getSearchAllReferralClaimsByAgent(this.userService.user.deptUserid, this.entryPoint, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n            //    .subscribe((data: any) => {\r\n            //        this.claimsData = data.results;\r\n            //        this.totalRows = data.rowCount;\r\n            //    });\r\n            this.getReferralClaimsByAgentID(this.userService.user.deptUserid, this.entryPoint, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n        }\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Beneficiary PF Details </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">SSIN/PF No.: <span [style.color]=\\\"!ssnNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-search\\\" (click)=\\\"searchSSINNo(ssin)\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"benSno\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ssin\\\" placeholder=\\\"Enter SSIN/PF No.\\\"\\r\\n                                                       (change)=\\\"searchSSINNo($event.target.value)\\\"\\r\\n                                                       (keydown.enter)=\\\"searchSSINNo($event.target.value)\\\" NumbersOnly maxlength=\\\"50\\\"\\r\\n                                                       #benSno=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data': benSno.invalid && (!ssnNoValid || benSno.touched), 'valid-data': benSno.valid && ssnNoValid}\\\"\\r\\n                                                       required>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"benSno.invalid && (!ssnNoValid ||benSno.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">SSIN/PF No. is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isMessageVisible \\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>SSIN/PF No. is not exists.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                    <p></p>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isVisibleBenPFDetails\\\">\\r\\n                                        <table class=\\\"table table-striped\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <!--<th>\\r\\n                                Beneficiary Name\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                SSIN No.\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                PF Account Id\\r\\n                            </th>-->\\r\\n                                                    <th>\\r\\n                                                        Month\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Year\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Date\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Amount\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Description\\r\\n                                                    </th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let pf of benPFDetails\\\">\\r\\n                                                    <!--<td>{{pf.benFullName}}</td>\\r\\n                            <td>{{pf.ssI_Number}}</td>\\r\\n                            <td>{{pf.benPFAccountId}}</td>-->\\r\\n                                                    <td>{{pf.monthName}}</td>\\r\\n                                                    <td>{{pf.financialYearString}}</td>\\r\\n                                                    <td>{{pf.collectionDateString}}</td>\\r\\n                                                    <td>{{pf.collectionAmount}}</td>\\r\\n                                                    <td>{{pf.description}}</td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"5\\\">\\r\\n                                                        <div *ngIf=\\\"benPFDetails.length>0\\\">\\r\\n                                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changePage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <footer class=\\\"modal-footer\\\">\\r\\n                                        <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                                    </footer>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BeneficiaryPFDetails } from 'src/app/models/benpfdetails.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { pagination, UserType } from '../pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-ben-pf-details',\r\n  templateUrl: './ben-pf-details.component.html',\r\n  styleUrls: ['./ben-pf-details.component.css']\r\n})\r\nexport class BenPfDetailsComponent implements OnInit {\r\n\r\n    public benPFDetails: BeneficiaryPFDetails[] = [];\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    ssnNoValid: boolean = true;\r\n    ssin: any;\r\n    isVisibleBenPFDetails: boolean = false;\r\n    isMessageVisible: boolean = false;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n    searchSSINNo(id: any) {\r\n        if (id != undefined && id.trim() != \"\") {\r\n            this.getBeneficiaryPFDetails(id, this.page, this.pageSize);\r\n        }\r\n        else\r\n            this.ssnNoValid = false;\r\n    }\r\n    getBeneficiaryPFDetails(id: any, page: any, pageSize:any) {\r\n        this.dataService\r\n            .getBeneficiaryPFDetails(id.trim(), page, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                if (data != null && (data.rowCount > 0)) {\r\n                    this.isVisibleBenPFDetails = true;\r\n                    this.benPFDetails = data.results;\r\n                    this.totalRows = data.rowCount;\r\n                    this.isMessageVisible = false;\r\n                }\r\n                else {\r\n                    this.isVisibleBenPFDetails = false;\r\n                    this.isMessageVisible = true;\r\n                }\r\n            });\r\n    }\r\n    changePage(page) {\r\n        debugger;\r\n        this.getBeneficiaryPFDetails(this.ssin, page, this.pageSize);\r\n    }\r\n    cancelClick() {\r\n        debugger;\r\n        if (this.user.user.userTpe == UserType.Beneficiary.toString())\r\n           // this.router.navigate(['pfconfig/receiptbooklist'], { skipLocationChange: true });\r\n            window.location.href = \"Home/Dashboard\";\r\n        else\r\n            window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n\\r\\n                <header>\\r\\n                    <h2>Legacy PF Data Entry</h2>\\r\\n                </header>\\r\\n\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\" *ngIf=\\\"isDepartmentUser\\\">\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <strong>ARN Number: </strong><span [style.color]=\\\"!ARNReq?'red':''\\\"><b>*</b></span>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"agentName\\\" id=\\\"ddlAgentName\\\" [(ngModel)]=\\\"agentUserId\\\"\\r\\n                                                        (change)=\\\"agentChange($event.target.value)\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose ARN</option>\\r\\n                                                    <option value=\\\"{{agent.userid}}\\\" *ngFor=\\\"let agent of agentList\\\">{{agent.userCode}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!ARNReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">ARN Number is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Agent Name: </strong>{{agentName}}</label>\\r\\n                                        </section>\\r\\n\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Location Name: </strong>{{locationName}}</label>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Worker Type: </strong><span [style.color]=\\\"!workerTypeReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"ddlWorkerType\\\" name=\\\"workerType\\\" [(ngModel)]=\\\"workerTypeId\\\"\\r\\n                                                        (change)=\\\"workerTypeChange($event.target.value)\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{type.workerTypeId}}\\\" *ngFor=\\\"let type of WorkerTypeList\\\">{{type.workerTypeName}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!workerTypeReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Worker Type is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label>\\r\\n                                                <strong>Deposit Date: </strong><span [style.color]=\\\"!depositDateReq?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"depositedDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                       [maxDate]=\\\"toDayDate\\\" (bsValueChange)=\\\"depositDateChange($event)\\\"\\r\\n                                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"depositDate\\\"\\r\\n                                                       value=\\\"{{depositDate | date: 'dd/MM/yyyy' }}\\\">\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositDateReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit Date is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Deposit A/c Number: </strong><span [style.color]=\\\"!depositBankValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"ddlDepositBank\\\" name=\\\"depositBank\\\" [(ngModel)]=\\\"bankId\\\"\\r\\n                                                        (change)=\\\"bankChange($event.target.value)\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{bank.rloOfficeBankId}}\\\" *ngFor=\\\"let bank of bankDetails\\\">{{bank.bankAccountNo}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositBankValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit A/c Number is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Deposit Amount: </strong><span [style.color]=\\\"!depositedAmountReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"depositedAmount\\\" placeholder=\\\"Deposit Amount\\\" [(ngModel)]=\\\"depositedAmount\\\"\\r\\n                                                       (change)=\\\"depositedAmountChange($event.target.value)\\\" (keydown.enter)=\\\"depositedAmountChange($event.target.value)\\\" NumbersOnly min=\\\"=1\\\" />\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositedAmountReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit Amount is required </span>\\r\\n                                            </div>\\r\\n                                            <!--<div *ngIf=\\\"agentDepositAmountValidation\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit amount allow only {{pfMasterConfig.agentCollectionLimit}} </span>\\r\\n                                            </div>-->\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Payin Slip: </strong></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"payinSlip\\\" placeholder=\\\"Payin Slip\\\" [(ngModel)]=\\\"payinSlip\\\" />\\r\\n                                            </label>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Upload PayIn Slip: </strong> <span [style.color]=\\\"!payInSlipUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <div class=\\\"input input-file\\\">\\r\\n                                                <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\">Browse</span>\\r\\n                                                <input type=\\\"text\\\" readonly>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"(!payInSlipUploaded) && (payInSlipCertificate.fileName =='' || payInSlipCertificate.fileName == undefined )\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Upload PayIn Slip is required </span>\\r\\n                                            </div>\\r\\n                                            <div>\\r\\n                                                <table>\\r\\n                                                    <tr>\\r\\n                                                        <td>{{payInSlipCertificate.fileName}}</td>\\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                            <label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n        <a class=\\\"btn btn-primary\\\" (click)=\\\"openModel()\\\" style=\\\"width :55px;height:30px;padding:5px;\\\"> Add </a>\\r\\n    </div>-->\\r\\n                                    <div class=\\\"modal-footer\\\" *ngIf=\\\"isDepartmentUser\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addReceiptBook()\\\">\\r\\n                                                Add Receipt Book\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <table class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>\\r\\n                                                        SSIN/PF No\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Beneficiary Name\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Beneficiary SSIN/PF No\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Collection Date\\r\\n                                                    </th>\\r\\n                                                    <th width=\\\"300\\\">\\r\\n                                                        Month\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Amount\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Book No\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Receipt No\\r\\n                                                    </th>\\r\\n                                                    <th>Action</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let field of pfCollectionDetailsList; let i = index\\\">\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <!--<input [(ngModel)]=\\\"field.ssI_Number\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"{{field.ssI_Number}}\\\" />-->\\r\\n                                                                <span>{{field.ssI_Number}}</span>\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" id=\\\"benSno\\\" name=\\\"{{field.ssI_Number}}\\\" [(ngModel)]=\\\"field.ssI_Number\\\" placeholder=\\\"Beneficiary SSIN\\\"\\r\\n                                                                       (change)=\\\"searchSSINNo($event.target.value)\\\" (keydown.enter)=\\\"searchSSINNo($event.target.value)\\\" maxlength=\\\"50\\\"\\r\\n                                                                       [ngClass]=\\\"{'invalid-data':!ssinValid, 'valid-data': ssinValid}\\\"\\r\\n                                                                       required>\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"(!ssinValid )\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Beneficiary SSIN is required </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"(!validPFNo )\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Beneficiary doesn't have PF Account NO. </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{field.benFullName}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{field.benSSINOrPFAccountNo}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <!--<input [(ngModel)]=\\\"field.collectionDate\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"{{field.collectionDate | date: 'dd/MM/yyyy' }}\\\" />-->\\r\\n                                                                {{field.collectionDate | date: 'dd/MM/yyyy' }}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" name=\\\"{{field.collectionDate}}\\\" autocomplete=\\\"off\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                                       [maxDate]=\\\"collectionMinDt\\\" [minDate]=\\\"minDt\\\" [disabled]=\\\"disableCollectionDate\\\" (bsValueChange)=\\\"collectionDateChange($event)\\\"\\r\\n                                                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"field.collectionDate\\\"\\r\\n                                                                       value=\\\"{{field.collectionDate | date: 'dd/MM/yyyy' }}\\\" [ngClass]=\\\"{'invalid-data': (!collectionDateReq), 'valid-data': collectionDateReq}\\\"\\r\\n                                                                       readonly required>\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!collectionDateReq\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Collection Date is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td width=\\\"230\\\" style=\\\"padding-right:3%\\\">\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <!--<input [(ngModel)]=\\\"field.monthName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"{{field.monthName}}\\\" />-->\\r\\n                                                                {{field.monthName}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <ng-multiselect-dropdown name=\\\"editMonths\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                                     [data]=\\\"pfMonths\\\"\\r\\n                                                                                     [(ngModel)]=\\\"field.selectedMonths\\\"\\r\\n                                                                                     [settings]=\\\"monthSettings\\\"\\r\\n                                                                                     (onSelect)=\\\"onItemSelect($event, field)\\\"\\r\\n                                                                                     style=\\\"height:36%\\\">\\r\\n                                                            </ng-multiselect-dropdown>\\r\\n                                                            <div *ngIf=\\\"!pfMonthIsValid\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Month is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <!--<input [(ngModel)]=\\\"field.collectionAmount\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"{{field.collectionAmount}}\\\" />-->\\r\\n                                                                {{field.collectionAmount}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" name=\\\"{{field.collectionAmount}}\\\" placeholder=\\\"Amount\\\" [(ngModel)]=\\\"field.collectionAmount\\\" NumbersOnly\\r\\n                                                                      required />\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!amountReq\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Amount is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <!--<input [(ngModel)]=\\\"field.bookName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"{{field.bookName}}\\\" />-->\\r\\n                                                                {{field.bookName}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <select name=\\\"{{field.bookNo}}\\\" [(ngModel)]=\\\"field.bookNo\\\"\\r\\n                                                                        [ngClass]=\\\"{'invalid-data': !bookNoIsValid, 'valid-data': bookNoIsValid }\\\"\\r\\n                                                                        required (change)=\\\"bookChange($event)\\\">\\r\\n                                                                    <option value=\\\"0\\\" selected disabled>Choose book</option>\\r\\n                                                                    <option value=\\\"{{book.id}}\\\" *ngFor=\\\"let book of agentReceiptBooks\\\">{{book.bookNo}}</option>\\r\\n                                                                </select>\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!bookNoIsValid\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Book No. is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <!--<input [(ngModel)]=\\\"field.receiptNo\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"{{field.receiptNo}}\\\" />-->\\r\\n                                                                {{field.receiptNo}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" name=\\\"{{field.receiptNo}}\\\" placeholder=\\\"Receipt No\\\" [(ngModel)]=\\\"field.receiptNo\\\" NumbersOnly maxlength=\\\"6\\\"\\r\\n                                                                       (change)=\\\"receiptNoChange(field.bookNo, $event.target.value)\\\" (keydown.enter)=\\\"receiptNoChange(field.bookNo,$event.target.value)\\\"\\r\\n                                                                       [ngClass]=\\\"{'invalid-data':!receiptNoIsValid, 'valid-data':receiptNoIsValid}\\\"\\r\\n                                                                       required />\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!receiptNoIsValid\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Receipt No. is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <a *ngIf=\\\"!field.isEdit\\\" (click)=\\\"editFieldValue(i,field)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                                        <a *ngIf=\\\"field.isEdit\\\" (click)=\\\"saveFieldValue(i,field)\\\" title=\\\"Save\\\" class=\\\"txt-color-blue\\\"><i class=\\\"glyphicon glyphicon-save\\\"></i></a>\\r\\n                                                        <a (click)=\\\"deleteFieldValue(i,field)\\\" title=\\\"Delete\\\" class=\\\"txt-color-red\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                                <tr *ngIf=\\\"showAddRow\\\">\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <!--<span [style.color]=\\\"!ssinValid?'red':''\\\"><b>*</b></span>-->\\r\\n                                                            <input type=\\\"text\\\" id=\\\"benSno\\\" name=\\\"benSno\\\" [(ngModel)]=\\\"newAttribute.ssI_Number\\\" placeholder=\\\"Beneficiary SSIN/PF No.\\\"\\r\\n                                                                   (change)=\\\"searchSSINNo($event.target.value)\\\" (keydown.enter)=\\\"searchSSINNo($event.target.value)\\\" maxlength=\\\"50\\\"\\r\\n                                                                   #benSno=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':!ssinValid, 'valid-data': ssinValid}\\\"\\r\\n                                                                   required>\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"(!ssinValid )\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Beneficiary SSIN is required </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"(!validPFNo )\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Beneficiary doesn't have PF Account NO. </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"beneficiary.benSno==0\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">{{beneficiary.errorMessage}}</span>\\r\\n                                                        </div>\\r\\n                                                        <!--<input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"newAttributeCode\\\" [(ngModel)]=\\\"newAttribute.ssI_Number\\\" name=\\\"newAttributeCode\\\" />-->\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{beneficiary.benFullName}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{beneficiary.benSSINOrPFAccountNo}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <input type=\\\"text\\\" name=\\\"collectionDate\\\" autocomplete=\\\"off\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                                   [maxDate]=\\\"collectionMinDt\\\" [minDate]=\\\"minDt\\\" [disabled]=\\\"disableCollectionDate\\\" (bsValueChange)=\\\"collectionDateChange($event)\\\"\\r\\n                                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"newAttribute.collectionDate\\\"\\r\\n                                                                   value=\\\"{{newAttribute.collectionDate | date: 'dd/MM/yyyy' }}\\\" [ngClass]=\\\"{'invalid-data': (!collectionDateReq), 'valid-data': collectionDateReq}\\\"\\r\\n                                                                   readonly required>\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!collectionDateReq\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Collection Date is required </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td width=\\\"230\\\" style=\\\"padding-right:3%\\\">\\r\\n\\r\\n                                                        <ng-multiselect-dropdown name=\\\"pfselectionmonth\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                                 [data]=\\\"pfMonths\\\"\\r\\n                                                                                 [(ngModel)]=\\\"newAttribute.selectedMonths\\\"\\r\\n                                                                                 [settings]=\\\"monthSettings\\\"\\r\\n                                                                                 (onSelect)=\\\"onItemSelect($event, newAttribute)\\\"\\r\\n                                                                                 style=\\\"height:36%\\\">\\r\\n                                                        </ng-multiselect-dropdown>\\r\\n                                                        <div *ngIf=\\\"!pfMonthIsValid\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Month is required </span>\\r\\n                                                        </div>\\r\\n                                                        <!--<input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"newAttributeName\\\" [(ngModel)]=\\\"newAttribute.monthName\\\" name=\\\"newAttributeName\\\" />-->\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <input type=\\\"text\\\" name=\\\"amount\\\" placeholder=\\\"Amount\\\" [(ngModel)]=\\\"newAttribute.collectionAmount\\\" NumbersOnly\\r\\n                                                                   #amount=\\\"ngModel\\\" required />\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!amountReq\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Amount is required </span>\\r\\n                                                        </div>\\r\\n                                                        <!--<input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"newAttributePrice\\\" [(ngModel)]=\\\"newAttribute.collectionAmount\\\" name=\\\"newAttributePrice\\\" />-->\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <select name=\\\"bookNo\\\" [(ngModel)]=\\\"newAttribute.bookNo\\\"\\r\\n                                                                    #bookNo=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': !bookNoIsValid, 'valid-data': bookNoIsValid }\\\"\\r\\n                                                                    required (change)=\\\"bookChange($event)\\\">\\r\\n                                                                <option value=\\\"0\\\" selected disabled>Choose book</option>\\r\\n                                                                <option value=\\\"{{book.id}}\\\" *ngFor=\\\"let book of agentReceiptBooks\\\">{{book.bookNo}}</option>\\r\\n                                                            </select>\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!bookNoIsValid\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Book No. is required </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <input type=\\\"text\\\" name=\\\"ReceiptNo\\\" placeholder=\\\"Receipt No\\\" [(ngModel)]=\\\"newAttribute.receiptNo\\\" NumbersOnly maxlength=\\\"6\\\"\\r\\n                                                                   #ReceiptNo=\\\"ngModel\\\" (change)=\\\"receiptNoChange(newAttribute.bookNo, $event.target.value)\\\" (keydown.enter)=\\\"receiptNoChange(newAttribute.bookNo,$event.target.value)\\\"\\r\\n                                                                   [ngClass]=\\\"{'invalid-data':!receiptNoIsValid, 'valid-data':receiptNoIsValid}\\\"\\r\\n                                                                   required />\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!receiptNoIsValid\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Receipt No. is required </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <a (click)=\\\"addFieldValue()\\\" title=\\\"Add\\\" class=\\\"txt-color-green\\\"><i class=\\\"glyphicon glyphicon-plus\\\"></i></a>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!noRecords\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Add atleast one entry</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isReceiptNoRange\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Receipt No. not in the range</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label>\\r\\n                                                <strong>Remaining Amount: </strong>{{remainingAmount}}\\r\\n                                            </label>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\"> <label><strong>Total: </strong>{{total}}</label></section>\\r\\n                                    </div>\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"agentPfValidation\\\">\\r\\n            <span style=\\\"color: red;\\\">Collection amount exceeds</span>\\r\\n        </div>\\r\\n    </div>-->                                  \\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <footer>\\r\\n                                <button type=\\\"button\\\" [disabled]=\\\"!(pfCollectionDetailsList.length>0 && total==depositedAmount)\\\" name=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveLegacyPFDetails(pfCollectionDetailsList,2)\\\">\\r\\n                                    Submit\\r\\n                                </button>\\r\\n                                <!--<a *ngIf=\\\"pfCollectionDetailsList.length>0 && total==depositedAmount\\\" name=\\\"save\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveLegacyPFDetails(pfCollectionDetailsList,2)\\\">Submit</a>-->\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancleClick()\\\">Cancel</a>\\r\\n                                <a class=\\\"btn btn-warning\\\">Verify</a>\\r\\n                                <!--<a *ngIf=\\\"pfCollectionDetailsList.length>0\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveLegacyPFDetails(pfCollectionDetailsList,1)\\\">Save as Draft</a>-->\\r\\n                                <button type=\\\"button\\\" [disabled]=\\\"pfCollectionDetailsList.length<=0\\\" name=\\\"save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveLegacyPFDetails(pfCollectionDetailsList,1)\\\">\\r\\n                                    Save as Draft\\r\\n                                </button>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n\\r\\n    </div>\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { UserType } from '../pipes/constnts.model';\r\nimport { NewRegUsers } from 'src/app/models/newReg.model';\r\nimport { PFBeneficiaryDetails } from '../models/pf.beneficiaryBasic.model';\r\nimport { FinancialYearMonths, PfMonths, Months, PFMasterConfigAmount } from '../models/pf.months.model';\r\nimport { PFCollectionDetailsList, PfCollectionDtlList } from '../models/pf.collectiondetails.model';\r\nimport { PFCollectionMaster, PFCollectionDtlDetails, bulkPFDeposit} from '../models/legacypfdataentry.model';\r\nimport { RloBankDetails } from 'src/app/models/rlobankdetails.model';\r\nimport { ReceiptBookModel } from 'src/app/models/receiptbook.model';\r\nimport { WorkFlowMaster } from 'src/app/models/workerTypeDetails.model';\r\nimport { PayInSlipAttachmentModel } from '../models/payinslip-attachment';\r\nimport { AttachmentType } from '../pipes/constnts.model';\r\nimport { FinancialYearModel } from '../../models/financialYear.model';\r\n\r\n@Component({\r\n    selector: 'app-bulkpfdeposit',\r\n    templateUrl: './bulkpfdeposit.component.html',\r\n    styleUrls: ['./bulkpfdeposit.component.css']\r\n})\r\nexport class BulkpfdepositComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    successMessage: string;\r\n    datePickerConfig: any;\r\n    agentList: Array<NewRegUsers> = [];\r\n    agentUserId: number;\r\n    agentName: string;\r\n    locationName: string;\r\n    depositDate: Date;\r\n    depositDateReq: boolean = true;\r\n    bankId: number;\r\n    payinSlip: number;\r\n    workerTypeId: number;\r\n\r\n    months = Months;\r\n    rowIndex = -1;\r\n    test: number;\r\n    collectionDate: Date;\r\n    ssin: any;\r\n    ssinValid: boolean = true;\r\n    pfMonthIsValid: boolean = true;\r\n    pfAmountIsValid: boolean = true;\r\n    collectionDateReq: boolean = true;\r\n    receiptNoIsValid: boolean = true;\r\n    bookNoIsValid: boolean = true;\r\n    benficiaryInactive: boolean = false;\r\n    beneficiary: PFBeneficiaryDetails = {} as PFBeneficiaryDetails;\r\n    pfMonths: FinancialYearMonths[] = [] as FinancialYearMonths[];\r\n    pfSelectedMonths: PfMonths[] = [] as PfMonths[];\r\n    pfMasterConfig: PFMasterConfigAmount = {} as PFMasterConfigAmount;\r\n    pfTotalAmount: number;\r\n\r\n    pfCollectionDtlInfo: PfCollectionDtlList = {} as PfCollectionDtlList;\r\n    pfCollectionDetailsList: Array<PFCollectionDetailsList> = [];\r\n    pfCollectionDetails: PFCollectionDetailsList = {} as PFCollectionDetailsList;\r\n\r\n    pfCollectionMaster: PFCollectionMaster = {} as PFCollectionMaster;\r\n    pfCollectionMasterList: PFCollectionMaster[] = [] as PFCollectionMaster[];\r\n    pfCollectionDtlDetails: PFCollectionDtlDetails = {} as PFCollectionDtlDetails;\r\n    fStartYear: any;\r\n    fEndYear: any;\r\n    currentyear: any;\r\n    toDayDate: Date;\r\n    pfSelectedMonth: number;\r\n    bankDetails: Array<RloBankDetails> = [];\r\n    WorkerTypeList: WorkFlowMaster[];\r\n    agentReceiptBooks: ReceiptBookModel[] = [] as ReceiptBookModel[];\r\n    isValidSave: boolean = true;\r\n    isMonthEnable: boolean = true;\r\n    agentSubDivId: number;\r\n    rloOfficeId: number;\r\n    private fieldArray: Array<any> = [];\r\n    private newAttribute: any = {};\r\n    remainingAmount: number = 0;\r\n    total: number = 0;\r\n    depositedAmount: number;\r\n    depositedAmountReq: boolean = true;\r\n    depositBankValid: boolean = true;\r\n    ARNReq: boolean = true;\r\n    //agentPfValidation: boolean = false;\r\n    workerTypeValid: boolean = false;\r\n    //agentDepositAmountValidation: boolean = false;\r\n    monthSettings = {};\r\n    selectedMonthIds: Array<any> = [];\r\n    //editedselectedMonthIds: Array<any> = [];\r\n    // sMon: Array<PfMonths> = [];\r\n    sMon: PfMonths[] = [] as PfMonths[];\r\n    pfmonth1: PfMonths = {} as PfMonths;\r\n    collectionMinDt: Date;\r\n    disableCollectionDate: boolean = true;\r\n    isValidMonth: boolean = true;\r\n    amountReq: boolean = true;\r\n\r\n    payInSlipUploaded: boolean = true;\r\n    payInSlipCertificate: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n    noRecords: boolean = true;\r\n    bulkPFDeposit: bulkPFDeposit = {} as bulkPFDeposit;\r\n    activeYear: FinancialYearModel = {} as FinancialYearModel;\r\n    minDt: Date;\r\n    maxDt: Date;\r\n    isDepartmentUser: boolean = true;\r\n    userDetails: NewRegUsers;\r\n    receiptNoFrom: number;\r\n    receiptNoTo: number;\r\n    isReceiptNoRange: boolean = false;\r\n    collectionYear: FinancialYearModel = {} as FinancialYearModel;\r\n    validPFNo: boolean = true;\r\n    showAddRow: boolean = true;\r\n    workerTypeReq: boolean = true;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n\r\n        this.toDayDate = new Date();\r\n        this.currentyear = new Date().getFullYear();\r\n        let currentMonth = new Date().getMonth();\r\n        if (currentMonth <= 3) {\r\n            this.fStartYear = this.currentyear - 1;\r\n            this.fEndYear = this.currentyear;\r\n        }\r\n        else {\r\n            this.fStartYear = this.currentyear;\r\n            this.fEndYear = this.currentyear + 1;\r\n        }\r\n\r\n        this.currentyear = this.fStartYear + '-' + this.fEndYear;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getActiveFinancialYear();\r\n        this.pfMonths = this.months;\r\n        this.getWorkerTypeDetails();\r\n        this.getPFMasterConfigDetails();\r\n        //-------------------\r\n        this.monthSettings = {\r\n            singleSelection: false,\r\n            idField: 'monthId',\r\n            textField: 'monthName',\r\n            enableCheckAll:false,\r\n            itemsShowLimit: 2,\r\n        };\r\n        if (Number(this.user.user.userTpe) == UserType.ServiceProvider || Number(this.user.user.userTpe) == UserType.Others) {\r\n            this.isDepartmentUser = false;\r\n\r\n            this.dataService\r\n                .getUserDetails(this.user.user.deptUserid)\r\n                .subscribe((data: any) => {\r\n                    this.userDetails = data;\r\n                    if (this.userDetails != null) {\r\n                        this.agentUserId = this.user.user.deptUserid;\r\n                        this.agentName = this.user.user.userName;\r\n                        this.locationName = this.userDetails.locationName;\r\n                        this.agentSubDivId = this.userDetails.subDivId;\r\n\r\n                        //Get subdiv wise rlo bank details\r\n                       // this.getSubDivRLOBankDetails(this.agentSubDivId);\r\n                        //this.getAgentReceiptBooks(this.agentUserId);\r\n                        this.getAgentLegacyPfDetails(this.agentUserId);\r\n                    }\r\n                });\r\n           \r\n        }\r\n        else {\r\n            this.getAgentList();\r\n        }\r\n    }\r\n\r\n    addFieldValue() {\r\n        if (this.validatePFCollectionDtl(this.newAttribute)) {\r\n            debugger;\r\n            if (this.isValidMonth) {\r\n                this.monthSelection(this.newAttribute);\r\n                let str = \"\";\r\n                let newString = \"\";\r\n                this.newAttribute.pfCollectionDtlList = [];\r\n                //this.newAttribute.monthList = [];\r\n                for (let i = 0; i < this.newAttribute.selectedMonths.length; i++) {\r\n                    if (this.pfCollectionDetailsList.findIndex(x => x.benSno == this.beneficiary.benSno && x.month == this.newAttribute.selectedMonths[i].monthId && x.year == this.newAttribute.selectedMonths[i].year) == -1 && this.rowIndex == -1) {\r\n\r\n\r\n                        //this.newAttribute.monthName = \"\";\r\n                        //this.newAttribute.month = this.pfSelectedMonths[i].monthId;\r\n                        //this.newAttribute.year = this.pfSelectedMonths[i].year;\r\n                        newString += this.newAttribute.selectedMonths[i].monthName + \",\";\r\n                        debugger;\r\n                        this.newAttribute.pfCollectionDtlList.push({ monthPaid: this.newAttribute.selectedMonths[i].monthId, yearPaid: this.newAttribute.selectedMonths[i].year, amount: this.newAttribute.selectedMonths[i].amount });\r\n                        //this.newAttribute.monthList.push(this.pfSelectedMonths[i].monthId);\r\n\r\n                        //this.newAttribute.selectedMonths = this.pfSelectedMonths;\r\n\r\n                    }\r\n                    else if (this.pfCollectionDetailsList.findIndex(x => x.benSno == this.beneficiary.benSno && x.month == this.newAttribute.selectedMonths[i].monthId && x.year == this.newAttribute.selectedMonths[i].year) != -1 && this.rowIndex == -1) {\r\n                        str = \"already \" + this.newAttribute.selectedMonths[i].monthName +\" this month is added to ssin\";\r\n                        alert(str); return;\r\n                    }\r\n                }\r\n                if (str == \"\") {\r\n                    if (this.pfCollectionDetailsList.findIndex(x => x.bookNo == this.newAttribute.bookNo && x.receiptNo == this.newAttribute.receiptNo) == -1) {\r\n                        this.newAttribute.benSno = this.beneficiary.benSno;\r\n                        this.newAttribute.benFullName = this.beneficiary.benFullName;\r\n                        this.newAttribute.benSSINOrPFAccountNo = this.beneficiary.benSSINOrPFAccountNo;\r\n                        this.newAttribute.benPFAccountId = this.beneficiary.benPFAccountId;\r\n                        //this.newAttribute.year = this.pfSelectedMonths[0].year;\r\n                        this.newAttribute.monthName = newString.substr(0, newString.length - 1);\r\n                        this.newAttribute.bookName = this.agentReceiptBooks.find(x => x.id == this.newAttribute.bookNo).bookNo;\r\n\r\n                        this.remainingAmount = this.remainingAmount - Number(this.newAttribute.collectionAmount);\r\n                        this.total = this.total + Number(this.newAttribute.collectionAmount);\r\n                        //this.newAttribute.selectedMonths = this.pfSelectedMonths;\r\n                        ////------------------------\r\n                        //debugger;\r\n\r\n                        //this.newAttribute.pfCollectionDtlList = [];\r\n                        //this.newAttribute.monthName = \"\";\r\n                        //for (let i = 0; i < this.pfSelectedMonths.length; i++) {\r\n                        //    this.newAttribute.year = this.pfSelectedMonths[i].year;\r\n                        //    this.newAttribute.monthName += this.pfSelectedMonths[i].monthName + \",\";\r\n\r\n                        //    this.newAttribute.pfCollectionDtlList.push({ monthPaid: this.pfSelectedMonths[i].monthId, yearPaid: this.pfSelectedMonths[i].year, amount: this.pfSelectedMonths[i].amount });\r\n                        //}\r\n                        ////----------------------------\r\n\r\n                        this.pfCollectionDetailsList.push(this.newAttribute);\r\n                        this.newAttribute = {};\r\n                        this.selectedMonthIds = [];\r\n                        if (this.total > 0 && this.total == this.depositedAmount)\r\n                            this.showAddRow = false;\r\n                        else\r\n                            this.showAddRow = true;\r\n                    }\r\n                    else {\r\n                        alert(\"already this receipt is generated\"); return;\r\n                    }\r\n                }\r\n\r\n                this.beneficiary.benFullName = '';\r\n                this.beneficiary.benSSINOrPFAccountNo = '';\r\n            }\r\n        }\r\n    }\r\n    editFieldValue(index, field: PFCollectionDetailsList) {\r\n        debugger;\r\n        field.isEdit = true;\r\n        this.remainingAmount = Number(this.remainingAmount) + Number(field.collectionAmount);\r\n        this.total = Number(this.total) - Number(field.collectionAmount);\r\n        if (field.collectionDate != null && field.collectionDate != undefined)\r\n            field.collectionDate = new Date(field.collectionDate);\r\n        if (this.agentReceiptBooks != null) {\r\n            this.agentReceiptBooks.forEach(x => {\r\n                if (x.id == field.bookNo) { this.minDt = new Date(x.date); }\r\n            });\r\n        }\r\n    }\r\n    saveFieldValue(index, field: PFCollectionDetailsList) {\r\n        if (this.validatePFCollectionDtl(field)) {\r\n            field.isEdit = false;\r\n            let newString = '';\r\n            for (let i = 0; i < field.selectedMonths.length; i++) {\r\n                newString += field.selectedMonths[i].monthName + \",\";\r\n                //field.monthList.push(field.selectedMonths[i].monthId);\r\n\r\n            }\r\n            field.monthName = newString.substr(0, newString.length - 1);\r\n\r\n            this.pfCollectionDetailsList.splice(index, 1);\r\n            this.pfCollectionDetailsList.push(field);\r\n\r\n            this.remainingAmount = Number(this.remainingAmount) - Number(field.collectionAmount);\r\n            this.total = Number(this.total) + Number(field.collectionAmount);\r\n            if (this.total > 0 && this.total == this.depositedAmount)\r\n                this.showAddRow = false;\r\n            else\r\n                this.showAddRow = true;\r\n        }\r\n    }\r\n    deleteFieldValue(index, field: PFCollectionDetailsList) {\r\n        this.pfCollectionDetailsList.splice(index, 1);\r\n        this.remainingAmount = Number(this.remainingAmount) + Number(field.collectionAmount);\r\n        this.total = Number(this.total) - Number(field.collectionAmount);\r\n        if (this.total > 0 && this.total == this.depositedAmount)\r\n            this.showAddRow = false;\r\n        else\r\n            this.showAddRow = true;\r\n    }\r\n    getAgentList() {\r\n        this.dataService\r\n            .getAgentLocationWise(Number(this.user.user.userTpe), this.user.user.deptUserid)\r\n            .subscribe((data: any) => {\r\n                this.agentList = data;\r\n            });\r\n    }\r\n    agentChange(eve) {\r\n        this.agentUserId = eve;\r\n        this.agentName = this.agentList.find(x => x.userid == eve).userName;\r\n        this.locationName = this.agentList.find(x => x.userid == eve).locationName;\r\n        this.agentSubDivId = this.agentList.find(x => x.userid == eve).subDivId;\r\n       // this.getAgentReceiptBooks(eve);\r\n        this.getAgentLegacyPfDetails(eve);\r\n    }\r\n    workerTypeChange(eve) {\r\n        //Get subdiv wise rlo bank details\r\n        this.getSubDivRLOBankDetails(this.agentSubDivId, eve);\r\n    }\r\n    getPFMasterConfigDetails() {\r\n        this.dataService\r\n            .getPFMasterConfigDetails()\r\n            .subscribe((data: any) => {\r\n                this.pfMasterConfig = data;\r\n\r\n            });\r\n    }\r\n    getSubDivRLOBankDetails(id: any, workerTypeId: any) {\r\n\r\n        this.dataService\r\n            .getSubDivRLOBankDetails(id, workerTypeId)\r\n            .subscribe((data: any) => {\r\n\r\n                this.bankDetails = data;\r\n            });\r\n    }\r\n    bankChange(eve) {\r\n        this.rloOfficeId = this.bankDetails.find(x => x.rloOfficeBankId == eve).rloOfficeId;\r\n    }\r\n    getAgentReceiptBooks(userId: number) {\r\n        this.agentReceiptBooks = []; debugger;\r\n        if (this.collectionDate != undefined && this.depositDate != undefined) {\r\n            this.dataService\r\n                .getAgentCollectionBooks(userId, new Date(this.collectionDate), new Date(this.depositDate))\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    this.agentReceiptBooks = data;\r\n                });\r\n        }\r\n             \r\n    }\r\n    getAgentLegacyPfDetails(userId: number) {\r\n        debugger;\r\n        let collectionAmount = 0;\r\n        this.dataService\r\n            .getAgentLegacyPfDetails(userId)\r\n            .subscribe((data: any) => {\r\n                this.pfCollectionDetailsList = data;\r\n                if (this.pfCollectionDetailsList != null && this.pfCollectionDetailsList.length > 0) {\r\n                    for (let i = 0; i < this.pfCollectionDetailsList.length; i++) {\r\n                        this.pfCollectionDetailsList[i].monthList = [];\r\n                        if (this.pfCollectionDetailsList[i].depositPayInSlipDocument != null) {\r\n                            debugger;\r\n                            this.payInSlipCertificate = this.pfCollectionDetailsList[i].depositPayInSlipDocument;\r\n                        }\r\n                        //this.payInSlipCertificate.fileName = this.pfCollectionDetailsList[i].depositPayInSlipDocumentFileName;\r\n                        this.workerTypeId = this.pfCollectionDetailsList[i].workerTypeId;\r\n                        this.depositDate = new Date(this.pfCollectionDetailsList[i].depositDate);\r\n                        this.bankId = this.pfCollectionDetailsList[i].bankId;\r\n                        this.depositedAmount = this.remainingAmount= this.pfCollectionDetailsList[i].depositAmount;\r\n                        this.payinSlip = this.pfCollectionDetailsList[i].payinSlipNo;\r\n                        this.rloOfficeId = this.bankDetails.find(x => x.rloOfficeBankId == this.pfCollectionDetailsList[i].bankId).rloOfficeId;\r\n\r\n                        this.pfCollectionDetailsList[i].bookName = this.agentReceiptBooks.find(x => x.id == this.pfCollectionDetailsList[i].bookNo).bookNo;\r\n                        let newString= this.getSelectedMonths(this.pfCollectionDetailsList[i].pfCollectionDtlList);\r\n                        this.pfCollectionDetailsList[i].monthName = newString.substr(0, newString.length - 1);\r\n                        debugger;\r\n                        this.pfCollectionDetailsList[i].monthList = this.getSelectedMonthList(this.pfCollectionDetailsList[i].pfCollectionDtlList);\r\n                        collectionAmount += this.pfCollectionDetailsList[i].collectionAmount;\r\n                        this.pfCollectionDetailsList[i].selectedMonths = this.getSelectedMonthArray(this.pfCollectionDetailsList[i].pfCollectionDtlList);\r\n\r\n\r\n                        this.getSubDivRLOBankDetails(this.agentSubDivId, this.workerTypeId);\r\n                    }\r\n                    this.remainingAmount = this.remainingAmount - collectionAmount;\r\n                    this.total = this.total + collectionAmount;\r\n                }\r\n            });\r\n    }\r\n    getSelectedMonthList(pfCollectionDtlList: PfCollectionDtlList[]): number[] {\r\n        let monthList= [];\r\n        for (let i = 0; i < pfCollectionDtlList.length; i++) {\r\n\r\n            let id = this.months.find(x => x.monthId == pfCollectionDtlList[i].monthPaid).Id;\r\n            let m = this.months.filter(x => x.Id == id);\r\n\r\n            monthList.push(m[0].monthId);\r\n        }\r\n        return monthList;\r\n    }\r\n    getSelectedMonths(pfCollectionDtlList: PfCollectionDtlList[]): string {\r\n        let monName = \"\";\r\n        for (let i = 0; i < pfCollectionDtlList.length; i++) {\r\n\r\n            let id = this.months.find(x => x.monthId == pfCollectionDtlList[i].monthPaid).Id;\r\n            let m = this.months.filter(x => x.Id == id);\r\n\r\n            monName += m[0].monthName + \",\";\r\n        }\r\n        return monName;\r\n    }\r\n    getSelectedMonthArray(pfCollectionDtlList: PfCollectionDtlList[]): PfMonths[] {\r\n        let monthsSelected = [] as PfMonths[];\r\n        for (let i = 0; i < pfCollectionDtlList.length; i++) {\r\n\r\n            let id = this.months.find(x => x.monthId == pfCollectionDtlList[i].monthPaid).Id;\r\n            let m = this.months.filter(x => x.Id == id);\r\n\r\n            this.pfmonth1 = {} as PfMonths;\r\n            this.pfmonth1.Id = m[0].Id;\r\n            this.pfmonth1.monthId = m[0].monthId;\r\n            this.pfmonth1.monthName = m[0].monthName;\r\n\r\n            monthsSelected.push(this.pfmonth1);\r\n        }\r\n        return monthsSelected;\r\n    }\r\n    saveLegacyPFDetails(depositDetails: PFCollectionDetailsList[], type: number) {\r\n\r\n        debugger;\r\n        if (this.validateDetails(depositDetails, type)) {\r\n\r\n            for (let i = 0; i < depositDetails.length; i++) {\r\n                this.pfCollectionMaster = {} as PFCollectionMaster;\r\n                debugger;\r\n                this.pfCollectionMaster.pfCollectionId = depositDetails[i].pfCollectionId;\r\n                this.pfCollectionMaster.agentNo = this.agentUserId;\r\n                this.pfCollectionMaster.collectionAmount = depositDetails[i].collectionAmount;\r\n                this.pfCollectionMaster.benPFAccountId = depositDetails[i].benPFAccountId;\r\n\r\n                this.pfCollectionMaster.benSno = depositDetails[i].benSno;\r\n                this.pfCollectionMaster.collectionDate = depositDetails[i].collectionDate;\r\n                this.pfCollectionMaster.bookNo = depositDetails[i].bookNo;\r\n                this.pfCollectionMaster.receiptNo = depositDetails[i].receiptNo;\r\n                this.pfCollectionMaster.rloOfficeId = this.rloOfficeId;\r\n\r\n                this.pfCollectionMaster.depositDate = new Date(this.depositDate);\r\n                this.pfCollectionMaster.bankId = this.bankId;\r\n                this.pfCollectionMaster.payinSlipNo = this.payinSlip;\r\n                this.pfCollectionMaster.depositAmount = this.depositedAmount;\r\n\r\n                this.pfCollectionMaster.month = depositDetails[i].month;\r\n                this.pfCollectionMaster.year = new Date(depositDetails[i].collectionDate).getFullYear();//depositDetails[i].year;\r\n\r\n                this.pfCollectionMaster.workerTypeId = this.workerTypeId;\r\n                this.pfCollectionMaster.isSaveDraft = type;\r\n                //--------------------------\r\n\r\n                if (depositDetails[i].selectedMonths != null && depositDetails[i].selectedMonths.length > 0) {\r\n                    this.pfCollectionMaster.pfCollectionDtlList = [];\r\n                    for (let j = 0; j < depositDetails[i].selectedMonths.length; j++) {\r\n                        this.pfCollectionDtlDetails = {} as PFCollectionDtlDetails;\r\n\r\n                        this.pfCollectionDtlDetails.monthPaid = depositDetails[i].selectedMonths[j].monthId;\r\n                        let id = this.months.find(x => x.monthId == depositDetails[i].selectedMonths[j].monthId).Id;\r\n                        if (id >= 10) \r\n                            this.pfCollectionDtlDetails.yearPaid = this.fEndYear;\r\n                        else\r\n                            this.pfCollectionDtlDetails.yearPaid = this.fStartYear;\r\n                        this.pfCollectionDtlDetails.amount = this.pfMasterConfig.beneficiaryPFContribution;\r\n\r\n                        this.pfCollectionMaster.pfCollectionDtlList.push(this.pfCollectionDtlDetails);\r\n                    }\r\n                }\r\n                //if (depositDetails[i].pfCollectionDtlList != null && depositDetails[i].pfCollectionDtlList.length > 0) {\r\n                //    this.pfCollectionMaster.pfCollectionDtlList = [];\r\n                //    for (let j = 0; j < depositDetails[i].pfCollectionDtlList.length; j++) {\r\n                //        this.pfCollectionDtlDetails = {} as PFCollectionDtlDetails;\r\n\r\n                //        this.pfCollectionDtlDetails.monthPaid = depositDetails[i].pfCollectionDtlList[j].monthPaid;\r\n                //        this.pfCollectionDtlDetails.yearPaid = depositDetails[i].pfCollectionDtlList[j].yearPaid;\r\n                //        this.pfCollectionDtlDetails.amount = depositDetails[i].pfCollectionDtlList[j].amount;\r\n\r\n                //        this.pfCollectionMaster.pfCollectionDtlList.push(this.pfCollectionDtlDetails);\r\n                //    }\r\n                //}\r\n                //--------------------------\r\n                this.pfCollectionMasterList.push(this.pfCollectionMaster);\r\n            }\r\n\r\n            this.bulkPFDeposit.collectionMasterList = this.pfCollectionMasterList;\r\n            this.bulkPFDeposit.payInSlipCertificate = this.payInSlipCertificate;\r\n            debugger;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .submitLegacyPFDetails(this.bulkPFDeposit)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            if (type == 1)\r\n                                this.successMessage = \"Saved sucessfully\";\r\n                            else\r\n                                this.successMessage = \"PF amount sucessfully deposited\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                        }\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    validateDetails(depositDetails: PFCollectionDetailsList[], id: any) : boolean\r\n    {\r\n        let isValid = true;\r\n        this.ARNReq = this.depositDateReq = this.depositBankValid = this.depositedAmountReq = this.payInSlipUploaded = this.workerTypeReq = true;\r\n        if (this.agentUserId == undefined || this.agentUserId == 0) { this.ARNReq = isValid = false; }\r\n        if (this.depositDate == undefined || this.depositDate == null) { this.depositDateReq = isValid = false; }\r\n        if (this.bankId == undefined || this.bankId == 0) { this.depositBankValid = isValid = false; }\r\n        if (this.depositedAmount == undefined || this.depositedAmount == null) { this.depositedAmountReq = isValid = false; }\r\n        if (depositDetails == null || (depositDetails != null && depositDetails.length == 0)) { this.noRecords = isValid = false; }\r\n        if (this.workerTypeId == undefined || this.workerTypeId == 0) { this.workerTypeReq = isValid = false; }\r\n        if (id == 2)\r\n            if (this.payInSlipCertificate.fileName == null && this.payInSlipCertificate.fileName == undefined) { isValid = this.payInSlipUploaded = false; }\r\n        return isValid;\r\n\r\n    }\r\n    monthSelection(pfDetails: PFCollectionDetailsList) {\r\n        if (pfDetails.selectedMonths != null && pfDetails.selectedMonths != undefined && pfDetails.selectedMonths.length > 0) {\r\n                    pfDetails.selectedMonths.filter(x => x.amount = this.pfMasterConfig.beneficiaryPFContribution);\r\n                    pfDetails.selectedMonths.filter(x => x.year = (x.Id >= 10 ? this.fEndYear : this.fStartYear));\r\n            }\r\n    }\r\n    onItemSelect(eve, pfDetails: PFCollectionDetailsList ) {\r\n        debugger;\r\n        this.pfSelectedMonth = eve;\r\n        this.getPFMasterConfigDetails();\r\n        this.pfTotalAmount = 0;\r\n        let s = null;\r\n        let id = this.months.find(x => x.monthId == eve.monthId).Id;\r\n\r\n        if (id >= 10) {\r\n            pfDetails.selectedMonths.find(x => x.monthId == eve.monthId).year = this.fEndYear;\r\n        }\r\n        else\r\n            pfDetails.selectedMonths.find(x => x.monthId == eve.monthId).year = this.fStartYear;\r\n        //let m = this.months.filter(x => x.Id == id);\r\n\r\n        //s = m;\r\n        //if (s != null && s != undefined) {\r\n        //    this.pfSelectedMonths = s;\r\n        pfDetails.selectedMonths.filter(x => x.year = (x.Id >= 10 ? this.fEndYear : this.fStartYear));\r\n\r\n        //}\r\n        debugger;\r\n        this.dataService\r\n            .isValidMonthSubmitted(this.beneficiary.benSno, eve.monthId, pfDetails.selectedMonths.find(x => x.monthId == eve.monthId).year)\r\n            .subscribe((data: any) => {\r\n\r\n                if (data) {\r\n                    this.isValidMonth = false;\r\n                    alert(\"already added please select another month\");\r\n                }\r\n                else {\r\n                    this.isValidMonth = true;\r\n                }\r\n\r\n            });\r\n    }\r\n    pfMonthChange(value) {\r\n        this.pfSelectedMonth = value;\r\n        this.getPFMasterConfigDetails();\r\n        this.pfTotalAmount = 0;\r\n        let s = null;\r\n        let id = this.months.find(x => x.monthId == value).Id;\r\n        let m = this.months.filter(x => x.Id == id);\r\n\r\n        s = m;\r\n        if (s != null && s != undefined) {\r\n            this.pfSelectedMonths = s;\r\n            this.pfSelectedMonths.filter(x => x.year = (x.Id >= 10 ? this.fEndYear : this.fStartYear));\r\n        }\r\n\r\n        this.dataService\r\n            .isValidMonthSubmitted(this.beneficiary.benSno, this.pfSelectedMonths[0].monthId, this.pfSelectedMonths[0].year)\r\n            .subscribe((data: any) => {\r\n\r\n                if (data) {\r\n                    alert(\"already added please select another month\");\r\n                }\r\n\r\n            });\r\n    }\r\n    receiptNoChange(bookNo: any,receiptNo: any) {\r\n        this.dataService\r\n            .isValidBookReceipt(bookNo, receiptNo)\r\n            .subscribe((data: any) => {\r\n\r\n                if (data) {\r\n                    alert(\"already added please select another book and receipt\");\r\n                }\r\n                else {\r\n                    if (receiptNo < this.receiptNoFrom || receiptNo > this.receiptNoTo) {\r\n                        this.isReceiptNoRange = true;\r\n                    }\r\n                    else {\r\n                        this.isReceiptNoRange = false;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    validatePFCollectionDtl(pfDetails: PFCollectionDetailsList): boolean {\r\n        let isValid = true;\r\n        debugger;\r\n        //if (this.agentUserId == undefined || this.agentUserId == null) { this.ARNReq = isValid = false; }\r\n        //if (this.depositDate == undefined || this.depositDate == null) { this.depositDateReq = isValid = false; }\r\n        //if (this.bankId == undefined || this.bankId == null) { this.depositBankValid = isValid = false; }\r\n        if (pfDetails.ssI_Number == undefined || pfDetails.ssI_Number == \"\") { this.ssinValid = isValid = false; }\r\n        //if (this.pfSelectedMonths == undefined || this.pfSelectedMonths.length == 0) { this.pfMonthIsValid = isValid = false; }\r\n        if (pfDetails.selectedMonths == undefined || pfDetails.selectedMonths.length == 0) { this.pfMonthIsValid = isValid = false; }\r\n        //if (this.selectedMonthIds == undefined || this.selectedMonthIds.length == 0) { this.pfMonthIsValid = isValid = false; }\r\n        if (pfDetails.bookNo == undefined || pfDetails.bookNo == null) { this.bookNoIsValid = isValid = false; }\r\n        if (pfDetails.receiptNo == undefined || pfDetails.receiptNo == null || pfDetails.receiptNo.toString() == \"\") { this.receiptNoIsValid = isValid = false; }\r\n        if (pfDetails.collectionDate == undefined || pfDetails.collectionDate == null) { this.collectionDateReq = isValid = false; }\r\n        if (pfDetails.collectionAmount == undefined || pfDetails.collectionAmount == null || pfDetails.collectionAmount.toString() == \"\") { this.amountReq = isValid = false; }\r\n        if (this.depositedAmount == undefined || this.depositedAmount == 0 || this.depositedAmount == null) { this.depositedAmountReq = isValid = false; }\r\n        if (this.isReceiptNoRange) { isValid = false; } debugger;\r\n        //case 1 - if depositedAmount < collectionAmount\r\n        if ((this.depositedAmount != undefined || this.depositedAmount != 0 || this.depositedAmount != null) && (pfDetails.collectionAmount != undefined || pfDetails.collectionAmount != null)) {\r\n            if (Number(this.depositedAmount) < Number(pfDetails.collectionAmount)) {\r\n                alert(\"Collection Amount exceeds Deposit Amount\");\r\n                isValid = false;\r\n            }\r\n        }\r\n        //if (this.depositedAmount > this.pfMasterConfig.agentCollectionLimit) {\r\n        //    this.agentDepositAmountValidation = true;\r\n        //    isValid = false;\r\n        //}\r\n        //else {\r\n        //    this.agentDepositAmountValidation = false;\r\n        //}\r\n        //if (this.total > this.pfMasterConfig.agentCollectionLimit || pfDetails.collectionAmount > this.pfMasterConfig.agentCollectionLimit || this.remainingAmount < 0) {\r\n        //if ((this.total + Number(pfDetails.collectionAmount)) > this.pfMasterConfig.agentCollectionLimit || this.remainingAmount < 0) {\r\n        //    this.agentPfValidation = true;\r\n        //    isValid = false;\r\n        //}\r\n        //else {\r\n        //    this.agentPfValidation = false;\r\n        //}\r\n        return isValid;\r\n    }\r\n    searchSSINNo(ssnNo: any) {\r\n        this.isValidSave = this.isMonthEnable = true;\r\n        this.benficiaryInactive = false;\r\n        if (ssnNo != undefined && ssnNo.trim() != \"\") {\r\n            this.clearValues();\r\n            this.dataService\r\n                .getBeneficiaryDetailsBySearch1(ssnNo.trim(), true)\r\n                .subscribe((data: any) => {\r\n                    this.beneficiary = data;\r\n                    if (this.beneficiary != null) {\r\n                        this.isValidSave = true;\r\n                        if (this.beneficiary.isActive && this.beneficiary.status == 1) {\r\n                            //this.ssinValid = true;\r\n                            this.isValidSave = false;\r\n                            this.isMonthEnable = false;\r\n                            if (this.beneficiary.benSSINOrPFAccountNo == \"\")\r\n                                this.validPFNo = false;\r\n                            else\r\n                                this.validPFNo = true;\r\n                        }\r\n                        //else {\r\n                        //    this.ssinValid = false;\r\n                        //}\r\n                    }\r\n                    //else {\r\n                    //    this.ssinValid = false;\r\n                    //}\r\n                });\r\n        }\r\n        else {\r\n            this.beneficiary = {} as PFBeneficiaryDetails;\r\n            this.ssinValid = true;\r\n        }\r\n    }\r\n    clearValues() {\r\n        this.beneficiary = {} as PFBeneficiaryDetails;\r\n        this.pfSelectedMonths = [];\r\n        this.collectionDateReq = true;\r\n        this.ssinValid = true;\r\n        this.receiptNoIsValid = true;\r\n        this.bookNoIsValid = true;\r\n        this.pfMonthIsValid = true;\r\n        this.depositedAmountReq = true;\r\n        this.depositBankValid = true;\r\n        this.ARNReq = true;\r\n        this.amountReq = true;\r\n        this.workerTypeReq = true;\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n\r\n        // window.location.href = \"claim/bulkpfdeposit\";\r\n        this.clearValues();\r\n        this.pfCollectionDtlInfo = {} as PfCollectionDtlList;\r\n        this.pfCollectionDetailsList = [];\r\n        this.pfCollectionDetails = {} as PFCollectionDetailsList;\r\n\r\n        this.pfCollectionMaster = {} as PFCollectionMaster;\r\n        this.pfCollectionMasterList = [] as PFCollectionMaster[];\r\n        this.pfCollectionDtlDetails = {} as PFCollectionDtlDetails;\r\n        this.payInSlipCertificate = {} as PayInSlipAttachmentModel;\r\n        //this.agentUserCode = \"\";\r\n        //this.location = null;\r\n        //this.locationName = \"\";\r\n        this.depositDate = null;\r\n        this.payinSlip = null;\r\n        this.depositedAmount = null;\r\n        this.remainingAmount = 0;\r\n        this.total = 0;\r\n        this.agentUserId = 0;\r\n        this.workerTypeId = 0;\r\n        this.bankId = 0;\r\n        this.showAddRow = true;\r\n    }\r\n    addReceiptBook() {\r\n        window.location.href = \"pfconfig/receiptbook\";\r\n    }\r\n    cancleClick() {\r\n        if (Number(this.user.user.userTpe) == UserType.ServiceProvider || Number(this.user.user.userTpe) == UserType.Others) {\r\n            window.location.href = \"Agent/AgentDashboard\";\r\n        }\r\n        else\r\n            window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n    depositedAmountChange(amount: any) {\r\n        if (this.total ==0)\r\n            this.remainingAmount = amount;\r\n        else\r\n            this.remainingAmount = amount - this.total;\r\n\r\n        //if (amount > this.pfMasterConfig.agentCollectionLimit) {\r\n        //    this.agentDepositAmountValidation = true;\r\n        //}\r\n        //else {\r\n        //    this.agentDepositAmountValidation = false;\r\n        //}\r\n    }\r\n    getWorkerTypeDetails() {\r\n        this.dataService\r\n            .getWorkerTypeMasterData()\r\n            .subscribe((data: any) => {\r\n                this.WorkerTypeList = data;\r\n            });\r\n    }\r\n    depositDateChange(eve) {\r\n        this.disableCollectionDate = false;\r\n        this.collectionMinDt = eve;\r\n        //this.getAgentReceiptBooks(this.agentUserId);\r\n    }\r\n    bookChange(args) {\r\n        debugger;\r\n        if (this.agentReceiptBooks != null) {\r\n            this.agentReceiptBooks.forEach(x => {\r\n                if (x.id == args.target.value) {\r\n                    this.minDt = new Date(x.date);\r\n                    this.receiptNoFrom = x.receiptNoFrom;\r\n                    this.receiptNoTo = x.receiptNoTo;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onFileChanged(inputValue: any): void {\r\n        var file: File = inputValue.target.files[0];\r\n        if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n            myReader.onloadend = (e) => {\r\n                const model: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = 1;\r\n\r\n                model.attachmentType = AttachmentType.PayinSlip;\r\n                //model.pfDepositId = this.depositId;\r\n                model.createdBy = this.user.user.deptUserid;\r\n\r\n                //this.payInSlip = model;\r\n                this.payInSlipCertificate = model;\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n    getActiveFinancialYear() {\r\n        this.dataService\r\n            .getActiveFinancialYear()\r\n            .subscribe((data: any) => {\r\n                this.activeYear = data;\r\n                //this.minDt = new Date(this.activeYear.startDate);\r\n                //this.maxDt = new Date(this.activeYear.endDate);\r\n            });\r\n    }\r\n    collectionDateChange(eve) {\r\n        debugger;\r\n        this.collectionDate = new Date(eve);\r\n        \r\n        this.dataService\r\n            .getCollectionFinancialYear(new Date(eve))\r\n            .subscribe((data: any) => {\r\n                this.collectionYear = data;\r\n                if (this.collectionYear != null) {\r\n                    debugger;\r\n                    this.currentyear = new Date(eve).getFullYear();\r\n                    let currentMonth = new Date(eve).getMonth();\r\n                    if (currentMonth <= 3) {\r\n                        this.fStartYear = this.currentyear - 1;\r\n                        this.fEndYear = this.currentyear;\r\n                    }\r\n                    else {\r\n                        this.fStartYear = this.currentyear;\r\n                        this.fEndYear = this.currentyear + 1;\r\n                    }\r\n                } \r\n                debugger;\r\n                this.getAgentReceiptBooks(this.agentUserId);\r\n            }); \r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Legacy Collections </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                               [mfData]=\\\"pfCollectionDetails\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssI_Number\\\">SSIN</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"benFullName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"receiptNo\\\">Receipt No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"bookNo\\\">Book No</mfDefaultSorter>\\r\\n\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"collectionDateString\\\">Collection Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paidFromMonth\\\">Paid From</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"paidToMonth\\\">Paid To</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"collectionAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let col of mf.data; let i=index;\\\">\\r\\n                                    <td>{{col.ssI_Number}}</td>\\r\\n                                    <td>{{col.benFullName}}</td>\\r\\n                                    <td>{{col.receiptNo}}</td>\\r\\n                                    <td>{{col.bookName}}</td>\\r\\n                                    <td>{{col.collectionDateString}}</td>\\r\\n                                    <td>{{col.paidFromMonth}}</td>\\r\\n                                    <td>{{col.paidToMonth}}</td>\\r\\n                                    <td>{{col.amountPaid}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"8\\\">\\r\\n                                        <div>\\r\\n                                            <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                        <footer class=\\\"modal-footer\\\">\\r\\n                            <a class=\\\"btn btn-danger\\\" (click)=\\\"cancelClick()\\\"> Cancel</a>\\r\\n                        </footer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PFCollectionDetailsList } from '../models/pf.collectiondetails.model';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { PFLegacyDtl1 } from '../models/pfLegacyMaster.model';\r\n@Component({\r\n  selector: 'app-bulkpfdepositcollection-list',\r\n  templateUrl: './bulkpfdepositcollection-list.component.html',\r\n  styleUrls: ['./bulkpfdepositcollection-list.component.css']\r\n})\r\nexport class BulkpfdepositcollectionListComponent implements OnInit {\r\n\r\n    pfDepositId: number;\r\n    private route$: Subscription;\r\n    pfCollectionDetails1: PFCollectionDetailsList[] = [];\r\n    pfCollectionDetails: PFLegacyDtl1[] = [];\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) { }\r\n\r\n    ngOnInit() {\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.pfDepositId = params[\"pfLegacyMasterId\"];\r\n            }\r\n        );\r\n        this.viewCollections()\r\n  }\r\n    viewCollections() {\r\n        this.dataService\r\n            .getLegacyPFCollections(this.pfDepositId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfCollectionDetails = data;\r\n            });\r\n\r\n    }\r\n    viewCollections1() {\r\n        this.dataService\r\n            .getCollections(this.pfDepositId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfCollectionDetails1 = data;\r\n            });\r\n\r\n    }\r\n    cancelClick() {\r\n        window.location.href = \"Agent/submittedlegacypfdetails\";\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Deposited </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"pfDepositDetails\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"legacyNo\\\">Legacy No</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"payinSlipNo\\\">Payin Slip No</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositAmount\\\">Deposit Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositDateString\\\">Deposit Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let deposits of mf.data|grdFilter: {depositAmount:searchText, depositDateString: searchText, payinSlipNo: searchText, scrollNumber: searchText, bankDepositDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onEditCollection(deposits.pfLegacyMasterId)\\\" *ngIf=\\\"deposits.isEdit\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <!--<a (click)=\\\"viewCollections(deposits.pfLegacyMasterId)\\\" *ngIf=\\\"!deposits.isEdit\\\" title=\\\"View Collections\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>-->\\r\\n                                    </td>\\r\\n                                    <td>{{deposits.pfLegacyMasterId}}</td>\\r\\n                                    <td>{{deposits.payinSlipNo}}</td>\\r\\n                                    <td>{{deposits.depositAmount}}</td>\\r\\n                                    <td>{{deposits.depositDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"5\\\">\\r\\n                                        <div>\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #payInSlipModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"payInSlipModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divUploadPayInSlip\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <label>Bank Deposited Date <span [style.color]=\\\"!dateOfDepostValid?'red':''\\\"><b>*</b></span></label>\\r\\n                            <label class=\\\"input\\\">\\r\\n                                <!--<i class=\\\"icon-append fa fa-calendar\\\"></i>-->\\r\\n                                <input type=\\\"text\\\" name=\\\"depositDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                       placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                       #depositDate=\\\"ngModel\\\"\\r\\n                                       [maxDate]=\\\"toDayDate\\\"\\r\\n                                       [(ngModel)]=\\\"bankDepositDate\\\" readonly\\r\\n                                       value=\\\"{{ depositedDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data':!dateOfDepostValid, 'valid-data': dateOfDepostValid}\\\"\\r\\n                                       required>\\r\\n                            </label>\\r\\n                            <div *ngIf=\\\"!dateOfDepostValid\\\">\\r\\n                                <span style=\\\"color: red;\\\">Deposited Date is required </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Scroll Number <span [style.color]=\\\"!payInSlipNumberValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"payInSlip\\\" numbersOnly [(ngModel)]=\\\"scrollNumber\\\" />\\r\\n                                <div *ngIf=\\\"!payInSlipNumberValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Scroll Number is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-12 smart-form\\\">\\r\\n                            <section class=\\\"col col-6 top-5\\\">\\r\\n                                <label class=\\\"label\\\">PayIn Slip <span [style.color]=\\\"!payInSlipUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event, deposits)\\\">Browse</span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!payInSlipUploaded) && (payInSlipCertificate.fileName =='' || payInSlipCertificate.fileName == undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">PayIn Slip is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>{{payInSlipCertificate.fileName}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"label\\\">PayIn Slip <span [style.color]=\\\"!payInSlipUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event, deposits)\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                    <label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!payInSlipUploaded) && (payInSlipCertificate.fileName =='' || payInSlipCertificate.fileName == undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">PayIn Slip is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>{{payInSlipCertificate.fileName}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>-->\\r\\n                </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePaySlip()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #collectionsModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"collectionsModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <!--<div class=\\\"widget-body no-padding\\\">-->\\r\\n                    <!--<table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                           [mfData]=\\\"pfCollectionDetails\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"ssI_Number\\\">SSIN</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"benFullName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"receiptNo\\\">Receipt No</mfDefaultSorter>\\r\\n\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"bookNo\\\">Book No</mfDefaultSorter>\\r\\n\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"collectionDateString\\\">Collection Date</mfDefaultSorter>\\r\\n                                </th>\\r\\n\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"paidFromMonth\\\">Paid From</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"paidToMonth\\\">Paid To</mfDefaultSorter>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <mfDefaultSorter by=\\\"collectionAmount\\\">Amount</mfDefaultSorter>\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let col of mf.data; let i=index;\\\">\\r\\n                                <td>{{col.ssI_Number}}</td>\\r\\n                                <td>{{col.benFullName}}</td>\\r\\n                                <td>{{col.receiptNo}}</td>\\r\\n                                <td>{{col.bookNo}}</td>\\r\\n                                <td>{{col.collectionDateString}}</td>\\r\\n                                <td>{{col.paidFromMonth}}</td>\\r\\n                                <td>{{col.paidToMonth}}</td>\\r\\n                                <td>{{col.collectionAmount}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"8\\\">\\r\\n                                    <div>\\r\\n                                        <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>-->\\r\\n                <!--</div>-->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePaySlip()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PFDepositDetails, PFDeposits } from '../models/pf.deposit.details.model';\r\nimport { PFCollectionDetailsList } from '../models/pf.collectiondetails.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { pagination, PFDepositeStatus } from '../pipes/constnts.model';\r\nimport { AttachmentType } from '../pipes/constnts.model';\r\nimport { PayInSlipAttachmentModel } from '../models/payinslip-attachment';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { PFLegacyMaster } from '../models/pfLegacyMaster.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-bulkpfdepositlist',\r\n    templateUrl: './bulkpfdepositlist.component.html',\r\n    styleUrls: ['./bulkpfdepositlist.component.css']\r\n})\r\nexport class BulkpfdepositlistComponent implements OnInit {\r\n    @ViewChild('payInSlipModal') public payInSlipModal: ModalDirective;\r\n    @ViewChild('collectionsModal') public collectionsModal: ModalDirective;\r\n    toDayDate: Date;\r\n    datePickerConfig: any;\r\n    userName: string;\r\n    userCode: string;\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n   // pfDepositDetails: PFDepositDetails = {} as PFDepositDetails;\r\n    pfCollectionDetails: PFCollectionDetailsList[] = [];\r\n    successMessage: string;\r\n    payInSlipUploaded: boolean = true;\r\n    dateOfDepostValid: boolean = true;\r\n    payInSlipNumberValid: boolean = true;\r\n    bankDepositDate: Date;\r\n    scrollNumber: number;\r\n    payInSlipCertificate: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n    depositId: number;\r\n    pfDepositDetails: PFLegacyMaster[] = [];\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        this.toDayDate = new Date();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userName = this.user.user.userName;\r\n        this.userCode = this.user.user.userTypeName;\r\n\r\n        this.getLegacyPFDetails(this.user.user.deptUserid, this.page, this.pageSize);\r\n        //this.getPFDeposits(this.user.user.deptUserid, Number(this.user.user.userTpe), PFDepositeStatus.deposited, this.page, this.pageSize);\r\n    }\r\n    getLegacyPFDetails(userId: any, pageNo: any, pageSize: any) {\r\n        this.dataService\r\n            .getLegacyPFDetails(userId, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfDepositDetails = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n\r\n    getPFDeposits(userId: any, userType:any, status: any, pageNo: any, pageSize: any) {\r\n        this.dataService\r\n            .getPFDeposits(userId, userType, status, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfDepositDetails = data.results;\r\n                this.totalRows = data.rowCount;\r\n\r\n                //this.viewCollections(0);\r\n            });\r\n    }\r\n    changepage(page) {\r\n       // this.getPFDeposits(this.user.user.deptUserid, Number(this.user.user.userTpe), PFDepositeStatus.deposited, this.page, this.pageSize);\r\n        this.getLegacyPFDetails(this.user.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n\r\n    onFileChanged(inputValue: any): void {\r\n        var file: File = inputValue.target.files[0];\r\n        if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n            myReader.onloadend = (e) => {\r\n                const model: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = 1;\r\n\r\n                model.attachmentType = AttachmentType.PayinSlip;\r\n                model.pfDepositId = this.depositId;\r\n                model.createdBy = this.user.user.deptUserid;\r\n\r\n                //this.payInSlip = model;\r\n                this.payInSlipCertificate = model;\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n    okClick() {\r\n        this.getPFDeposits(this.user.user.deptUserid, Number(this.user.user.userTpe), PFDepositeStatus.deposited, this.page, this.pageSize);\r\n    }\r\n    upload(details: PFDepositDetails) {\r\n        this.depositId = details.pfDepositId;\r\n        this.payInSlipModal.show();\r\n    }\r\n    savePaySlip() {\r\n        if (this.validatePayInSlip()) {\r\n            this.payInSlipCertificate.bankDepositDate = this.bankDepositDate;\r\n            this.payInSlipCertificate.scrollNumber = this.scrollNumber;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .savePayInSlip(this.payInSlipCertificate)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"PayIn Slip Uploaded successfully\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"PayIn Slip Not Uploaded\";\r\n                        }\r\n                        this.payInSlipModal.hide();\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n    validatePayInSlip(): boolean {\r\n        let isValid = true;\r\n        if (this.bankDepositDate == null && this.bankDepositDate == undefined) { isValid = this.dateOfDepostValid = false; }\r\n        if (this.scrollNumber == null && this.scrollNumber == undefined) { isValid = this.payInSlipNumberValid = false; }\r\n        if (this.payInSlipCertificate.fileName == null && this.payInSlipCertificate.fileName == undefined) { isValid = this.payInSlipUploaded = false; }\r\n        return isValid;\r\n    }\r\n\r\n    //viewCollections(pfLegacyMasterId: number) {\r\n    //    this.router.navigate(['claim/bulkpfdepositcollectionlist', { pfLegacyMasterId: pfLegacyMasterId }], { skipLocationChange: true });\r\n    //}\r\n    onEditCollection(pfLegacyMasterId: number) {\r\n        this.router.navigate(['claim/bulkpfdeposit', { pfLegacyMasterId: pfLegacyMasterId }], { skipLocationChange: true });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Draft Claims </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"entryPointName\\\">Mode</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let claims of mf.data|grdFilter: {entryPointName:searchText, claimRefernceNo: searchText,submittedDateString: searchText, claimAmount: searchText, claimType: searchText,\\r\\n           statusName: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onEditClaimClick(claims)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\" *ngIf=\\\"claims.statusName=='Saved'\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onDeleteClaimClick(claims)\\\" title=\\\"Delete\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-trash-o fa-lg\\\"></i></a>\\r\\n\\r\\n                                    </td>\\r\\n                                    <td>{{claims.claimRefernceNo}}</td>\\r\\n                                    <td>{{claims.submittedDateString}}</td>\\r\\n                                    <td>{{claims.entryPointName}}</td>\\r\\n                                    <td>{{claims.claimType}}</td>\\r\\n                                    <td>{{claims.claimAmount}}</td>\\r\\n                                    <td>{{claims.statusName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"successModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Claims } from '../models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { EntryPoint } from '../pipes/constnts.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { pagination } from '../../claim/pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-claim-draft',\r\n  templateUrl: './claim-draft.component.html',\r\n  styleUrls: ['./claim-draft.component.css']\r\n})\r\nexport class ClaimDraftComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    deleteStatus: boolean = false;\r\n    successMessage: string;\r\n   // claimsData: any = [];\r\n    claimsData: Claims[] = [];\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        this.getClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe,\"0\");\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    ngOnInit() {\r\n        this.getClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe, this.page, this.pageSize);\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getClaimsByBenID(id, entrypoint, userType, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getAllDraftClaimsByBen(id, entrypoint, userType, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onEditClaimClick(item) {\r\n        this.router.navigate(['claim/Entry', { claimId: item.claimId, mode: \"draft\", claimStatus: item.statusId }], { skipLocationChange: true });\r\n    }\r\n    onViewClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimView', { claimId: item.claimId }], { skipLocationChange: true });\r\n\r\n    }\r\n    downloadRecept(claim: Claims) {\r\n        this.dataService\r\n            .downloadReceipt(claim.benName, claim.ssin, claim.claimRefernceNo, claim.claimAmount, claim.claimType)\r\n            .then((data: any) => {\r\n                let dd = data;\r\n                var url = window.URL.createObjectURL(data);\r\n                window.open(url);\r\n            });\r\n    }\r\n\r\n    onDeleteClaimClick(item) {\r\n        if (confirm(\"Are you sure to proceed \")) {\r\n            this.dataService.deleteClaimById(item.claimId)\r\n                .subscribe((data: any) => {\r\n                    this.deleteStatus = data;\r\n                    if (this.deleteStatus) {\r\n                        this.successMessage = \"Your claim was deleted successfully\";\r\n                    }\r\n                    else {\r\n                        this.successMessage = \"Invalid transaction\";\r\n                    }\r\n                    this.successModal.show();\r\n                })\r\n        }\r\n    }\r\n    changepage(page) {\r\n        this.getClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe, this.page, this.pageSize);\r\n    }\r\n}\r\n","module.exports = \".invalid-data {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.valid-data {\\r\\n    border: 1px solid rgb(19, 92, 4);\\r\\n}\\r\\n\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Claim Entry</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form\\\">\\r\\n                            <header>Beneficiary Details</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"benficiaryInactive \\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Your registration application is in Inactive/Sent Back/Pending status and you are not eligible to this feature.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"validateDependent\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Please add atleast one claim to proceed</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"noDependents\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>No dependents available for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"maxLimitExceeded\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Maximum claims limit has been reached for this year</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"maxHelathClaimLimitExceeded\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red\\\">\\r\\n                                            <label>Maximum claims limit for health has been reached for this year</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"pfExsits\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>No pf available for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isPFSubmitted\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>PF claim already submitted for the given SSIN number</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isBenNomineeSubmittedClaim\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Claims are entered through the nominee/agent with the reason of death, till it is resolved you are not allowed to submit the claim</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isBenDeath\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>The given SSIN is in Death status.</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isClaimEffectiveDate\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Can not raise/submit claims before {{claimEffectiveDate | date: 'dd/MM/yyyy'}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Beneficiary Name: </strong>{{beneficiary.benFirstName}} {{beneficiary.benMiddleName}} {{beneficiary.benLastName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>SSIN: </strong>{{beneficiary.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Bank Name: </strong>{{beneficiary.benBankName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Account No: </strong>{{beneficiary.benBankAccNo}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>IFSC Code: </strong>{{beneficiary.benBankIfscCode}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Branch: </strong>{{beneficiary.benBankBranch}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <div class=\\\"row\\\" id=\\\"CheckBoxList\\\">\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input name=\\\"pf\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disablePFCheckbox \\\" type=\\\"checkbox\\\" [checked]=\\\"viewPf\\\" (change)=\\\"pfChange($event)\\\"><i></i>PF(Provident Fund)</label>\\r\\n                                        <!--<label class=\\\"checkbox state-success\\\"><input disabled=\\\"disabled\\\" type=\\\"checkbox\\\" [checked]=\\\"viewPf\\\" (change)=\\\"pfChange($event)\\\"><i></i>PF(Provident Fund)</label>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive || disableHealthCheckbox\\\" type=\\\"checkbox\\\" name=\\\"health\\\" [checked]=\\\"viewHealth\\\" (change)=\\\"healthChange($event)\\\"><i></i>Health & Family</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox2\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive  || disableDisabilityCheckbox\\\" [checked]=\\\"viewDeath\\\" (change)=\\\"deathChange($event)\\\"><i></i>Disability</label>\\r\\n                                        <!--<label class=\\\"checkbox state-success\\\"><input disabled=\\\"disabled\\\" type=\\\"checkbox\\\" [checked]=\\\"viewDeath\\\" (change)=\\\"deathChange($event)\\\"><i></i>Disability</label>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-3\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"checkbox1\\\" [disabled]=\\\"beneficiary.benFirstName == undefined || !beneficiary.isActive  || disableEducationCheckbox\\\" [checked]=\\\"viewEducation\\\" (change)=\\\"educationChange($event)\\\"><i></i>Education</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"form-pf\\\" *ngIf=\\\"viewPf\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    PF No. {{beneficiary.regNumber}}\\r\\n                                                </label>\\r\\n                                                <!--removed as per 17th discussions, in future this has to be open-->\\r\\n                                                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pFNO\\\" placeholder=\\\" PF Number\\\" [(ngModel)]=\\\"claim.providentFundDetails.pFNO\\\">-->\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Claim Amount {{pfClaimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Date of Maturity {{benMaturityDate  | date: 'dd/MM/yyyy'}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Locking Period Up-to  {{pfLockingPeriod  | date: 'dd/MM/yyyy'}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Type of Claim <span [style.color]=\\\"!pfTypeOfClaimValid?'red':''\\\"><b>*</b></span>\\r\\n                                                </label>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"pfTypeOfClaim\\\" id=\\\"selclaim\\\"\\r\\n                                                        (change)=\\\"pfTypeOfClaimChange($event.target.value)\\\"\\r\\n                                                        [(ngModel)]=\\\"claim.providentFundDetails.typeOfClaim\\\"\\r\\n                                                        #pfTypeOfClaim=\\\"ngModel\\\"\\r\\n                                                        [ngClass]=\\\"{'invalid-data': pfTypeOfClaim.invalid && ( !pfTypeOfClaimValid || pfTypeOfClaim.touched ),\\r\\n                                                        'valid-data': pfTypeOfClaimValid && pfTypeOfClaim.valid  }\\\"\\r\\n                                                        required>\\r\\n                                                    <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{pf.claimConfigId}}\\\" *ngFor=\\\"let pf of pfConfig\\\">\\r\\n                                                        {{pf.claimConfigOptionName}}\\r\\n                                                    </option>\\r\\n                                                </select><i></i>\\r\\n                                                <div *ngIf=\\\"pfTypeOfClaim.invalid && (!pfTypeOfClaimValid || pfTypeOfClaim.touched)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Select a Type of Claim </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label class=\\\"label\\\">\\r\\n                                                    Reason for Preclosure<span [style.color]=\\\"!reasonForPreclosureValid?'red':''\\\"><b>*</b></span>\\r\\n                                                </label>\\r\\n                                                <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                    <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"reasonForPreclosure\\\" placeholder=\\\"Reason for Preclosure\\\"\\r\\n                                                              [(ngModel)]=\\\"claim.providentFundDetails.reasonForPreClosure\\\" #reasonForPreclosure=\\\"ngModel\\\"\\r\\n                                                              [ngClass]=\\\"{'invalid-data': reasonForPreclosure.invalid && ( !reasonForPreclosureValid || reasonForPreclosure.touched ),\\r\\n                                                        'valid-data': reasonForPreclosureValid && reasonForPreclosure.valid  }\\\"\\r\\n                                                              required></textarea>\\r\\n                                                </label>\\r\\n                                                <div *ngIf=\\\"reasonForPreclosure.invalid && (!reasonForPreclosureValid || reasonForPreclosure.touched)\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Reason For Preclosure is required </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"health-family\\\" *ngIf=\\\"viewHealth\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Type of Claim<span [style.color]=\\\"!typeOfClaimValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"typeOfClaim\\\" id=\\\"selclaim\\\" (change)=\\\"typeOfClaimChange($event.target.value)\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.typeOfClaim\\\"\\r\\n                                                #typeOfClaim=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': typeOfClaim.invalid && ( !typeOfClaimValid || typeOfClaim.touched ),\\r\\n                                        'valid-data': typeOfClaimValid && typeOfClaim.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose a Type of Claim</option>\\r\\n                                            <option value=\\\"{{health.claimConfigId\\r\\n                                                }}\\\" *ngFor=\\\"let health of healthConfig\\\">\\r\\n                                                {{health.claimConfigOptionName}}\\r\\n                                            </option>\\r\\n                                        </select> <i></i>\\r\\n                                        <div *ngIf=\\\"typeOfClaim.invalid && (!typeOfClaimValid || typeOfClaim.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select a Type of Claim </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Hospital <span [style.color]=\\\"!hospital?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"hospitalId\\\" id=\\\"ddlhospital\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.hospitalId\\\"\\r\\n                                                #hospitalId=\\\"ngModel\\\" (change)=\\\"hospitalChange($event.target.value)\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': hospitalId.invalid && ( !hospital || hospitalId.touched ),\\r\\n                                        'valid-data': hospital && hospitalId.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose a Hospital</option>\\r\\n                                            <option value=\\\"{{hospital.hospitalId}}\\\" *ngFor=\\\"let hospital of hospotalList\\\">{{hospital.hospitalName}}</option>\\r\\n                                        </select> <i></i>\\r\\n\\r\\n                                        <div *ngIf=\\\"hospitalId.invalid && (!hospital || hospitalId.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select a Hospital </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"isOtherHospital\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Govt./Municipal Hospital <span [style.color]=\\\"!otherHospitalValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"otherHospital\\\" placeholder=\\\"Govt./Municipal Hospital\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.otherHospital\\\"\\r\\n                                                   maxlength=\\\"150\\\" #otherHospital=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': otherHospital.invalid && ( !otherHospitalValid || otherHospital.touched ),\\r\\n                                                        'valid-data': otherHospitalValid && otherHospital.valid  }\\\" required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"otherHospital.invalid && (!otherHospitalValid || otherHospital.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Govt./Municipal Hospital is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"inoutward\\\">\\r\\n                                        <label class=\\\"label\\\">Hospitalization/OPD <span [style.color]=\\\"!hospitalization?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"typeOfHospitalization\\\" id=\\\"ddinward\\\" (change)=\\\"hospitalizationChange($event.target.value)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.typeOfHospitalization\\\"\\r\\n                                                #typeOfHospitalization=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': typeOfHospitalization.invalid && (!hospitalization || typeOfHospitalization.touched ),\\r\\n                                        'valid-data': hospitalization && typeOfHospitalization.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{hosp.lovDtlId}}\\\" *ngFor=\\\"let hosp of hospitalizationLov\\\">{{hosp.optionName}}</option>\\r\\n                                        </select><i></i>\\r\\n\\r\\n                                        <div *ngIf=\\\"typeOfHospitalization.invalid && (!hospitalization || typeOfHospitalization.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Hospitalization/OPD </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Patient Id </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"patientId\\\" placeholder=\\\"Patient Id\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.patientId\\\" maxlength=\\\"50\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"viewDateOfFirstAppointment\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Name of Disease </label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"nameOfDisease\\\" id=\\\"ddinward\\\" (change)=\\\"nameOfDiseaseChange($event.target.value)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.nameOfTheDisease\\\">\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{dise.lovDtlId}}\\\" *ngFor=\\\"let dise of diseasesLov\\\">{{dise.optionName}}</option>\\r\\n                                        </select><i></i>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6 selectContainer\\\" *ngIf=\\\"viewNameOfClinicalTest\\\">\\r\\n                                        <label class=\\\"label\\\">Name of clinical test </label>\\r\\n                                        <ng-multiselect-dropdown name=\\\"nameOfClinicalTest\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                 [data]=\\\"clinicalTestLov\\\"\\r\\n                                                                 [(ngModel)]=\\\"nameOfClinicalTestIds\\\"\\r\\n                                                                 [settings]=\\\"clinicalTestSettings\\\"\\r\\n                                                                 (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                                 (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                        </ng-multiselect-dropdown>\\r\\n                                        <!--<select class=\\\"form-control select\\\" name=\\\"nameOfClinicalTest\\\" id=\\\"ddinward\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.nameOfClinicalTest\\\">\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{clin.lovDtlId}}\\\" *ngFor=\\\"let clin of clinicalTestLov\\\">{{clin.optionName}}</option>\\r\\n\\r\\n                                        </select><i></i>-->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section id=\\\"chkAccident\\\" class=\\\"col col-6\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                        <label class=\\\"label\\\">Met with an Accident?</label>\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isAccident\\\" id=\\\"chkAcc\\\" (change)=\\\"chkAccidentChange($event,claim.healthFamilyDetails.isAccident)\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.isAccident\\\"><i></i>Yes</label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secFirstApp\\\" *ngIf=\\\"viewDateOfFirstAppointment\\\">\\r\\n                                        <label class=\\\"label\\\">Date of First Appointment <span [style.color]=\\\"!dateofAppointment?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"firstAppointmentDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.healthFamilyDetails.firstAppointmentDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   [(ngModel)]=\\\"claim.healthFamilyDetails.firstAppointmentDate\\\" readonly\\r\\n                                                   #firstAppointmentDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':firstAppointmentDate.invalid && (!dateofAppointment), 'valid-data': firstAppointmentDate.valid && dateofAppointment}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"firstAppointmentDate.invalid && (!dateofAppointment)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of First Appointment is required </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"viewDateOfAdmit\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secAdmit\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Admission to Hospital <span [style.color]=\\\"!dateofAdmin?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"dateofAdmit\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.healthFamilyDetails.admittedDate | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.admittedDate\\\" (bsValueChange)=\\\"dateofadminchange($event)\\\" readonly>-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"admittedDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   #admittedDate=\\\"ngModel\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.admittedDate\\\"\\r\\n                                                   value=\\\"{{ claim.healthFamilyDetails.admittedDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   (bsValueChange)=\\\"dateofadminchange($event)\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':admittedDate.invalid && (!dateofAdmin), 'valid-data':admittedDate.valid && dateofAdmin}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"admittedDate.invalid && (!dateofAdmin)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of Admission to Hospital is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"secDischarge\\\">\\r\\n                                        <label class=\\\"label\\\">Date of Discharge <span [style.color]=\\\"!dateofDischargeValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"dateofDischarge\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" [minDate]=\\\"dischargeMinDt\\\" [disabled]=\\\"disableDischarge\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"claim.healthFamilyDetails.dischargeDate | date: 'dd/MM/yyyy'\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.dischargeDate\\\" (bsValueChange)=\\\"dateofdischargechange($event)\\\" readonly>-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"dischargeDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                   [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   [minDate]=\\\"dischargeMinDt\\\" [disabled]=\\\"disableDischarge\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   #dischargeDate=\\\"ngModel\\\"\\r\\n                                                   [(ngModel)]=\\\"claim.healthFamilyDetails.dischargeDate\\\"\\r\\n                                                   value=\\\"{{claim.healthFamilyDetails.dischargeDate | date: 'dd/MM/yyyy'}}\\\"\\r\\n                                                   (bsValueChange)=\\\"dateofdischargechange($event)\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':dischargeDate.invalid && (!dateofDischargeValid), 'valid-data':dischargeDate.valid && dateofDischargeValid}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"dischargeDate.invalid && (!dateofDischargeValid)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of discharge is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Cost of Clinical Test </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfClinicalTest\\\" placeholder=\\\"Cost of Clinical Test\\\" NumbersOnly [(ngModel)]=\\\"claim.healthFamilyDetails.costOfClinicalTest\\\" [disabled]=\\\"disableCost\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n\\r\\n                                        <label class=\\\"label\\\">Cost of Medicine </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfMedicine\\\" placeholder=\\\"Cost of Medicine\\\" NumbersOnly [(ngModel)]=\\\"claim.healthFamilyDetails.costOfMedicine\\\" [disabled]=\\\"disableCost\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Claim for <span [style.color]=\\\"!claimForValid?'red':''\\\"><b>*</b></span></label>\\r\\n\\r\\n                                        <select class=\\\"form-control select\\\" name=\\\"claimFor\\\" id=\\\"claimFor\\\" (change)=\\\"claimForChange($event)\\\"\\r\\n                                                [(ngModel)]=\\\"claim.healthFamilyDetails.claimFor\\\"\\r\\n                                                #claimFor=\\\"ngModel\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data':claimFor.invalid && (!claimForValid ||  claimFor.touched ), 'valid-data': claimFor.valid && claimForValid}\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                            <option value=\\\"{{htype.lovDtlId}}\\\" *ngFor=\\\"let htype of healthtypeofClaim\\\">{{htype.optionName}}</option>\\r\\n                                        </select> <i></i>\\r\\n\\r\\n\\r\\n                                        <div *ngIf=\\\"claimFor.invalid && (!claimForValid ||  claimFor.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Claim for is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewDateOfAdmit\\\">\\r\\n                                        <label class=\\\"label\\\">Cost of Hospitalization </label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <input type=\\\"text\\\" name=\\\"costOfHospitalization\\\" NumbersOnly placeholder=\\\"Cost of Hospitalization\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.costOfHospitalization\\\">\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"family\\\" *ngIf=\\\"viewFamily\\\">\\r\\n                                        <label class=\\\"label\\\">Family Member <span [style.color]=\\\"!familyMember?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select class=\\\"form-control select\\\" name=\\\"familyMemberId\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.familyMemberId\\\"\\r\\n                                                    #familyMemberId=\\\"ngModel\\\"\\r\\n                                                    [ngClass]=\\\"{'invalid-data':familyMemberId.invalid && (!familyMember ||  familyMemberId.touched), 'valid-data': familyMemberId.valid && familyMember}\\\"\\r\\n                                                    required>\\r\\n                                                <option value=\\\"0\\\" disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{benf.benFamilyMemSno}}\\\" *ngFor=\\\"let benf of benficiaryFamilybyHealth\\\">{{benf.benDependentName}} - {{benf.benDependentRelation}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"familyMemberId.invalid && (!familyMember ||  familyMemberId.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Family Member is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"enableReasonForDelaySubmissionInHealth\\\">\\r\\n                                        <label class=\\\"label\\\">Reason for Delay Submission <span [style.color]=\\\"!reasonForHealthDelayValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"reasonForHealthDelay\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.reasonForDelaySubmission\\\" placeholder=\\\"Reason for Delay Submission\\\"></textarea>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!reasonForHealthDelayValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Reason for Delay Submission is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row top-10\\\" id=\\\"lossOfEmployment\\\" *ngIf=\\\"viewSelf\\\">\\r\\n                                    <section class=\\\"col col-12\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Loss of Employment</strong></label>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row top-10\\\" id=\\\"daterangeloe\\\" *ngIf=\\\"viewSelf\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">From Date<span [style.color]=\\\"!loeFromDate?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"lossOfEmploymentFromDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\"\\r\\n                                                   [disabled]=\\\"true\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   [ngModel]=\\\"claim.healthFamilyDetails.loeFromDate | date: 'dd/MM/yyyy'\\\" readonly\\r\\n                                                   #lossOfEmploymentFromDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':lossOfEmploymentFromDate.invalid && (!loeFromDate ||  lossOfEmploymentFromDate.touched), 'valid-data': lossOfEmploymentFromDate.valid && loeFromDate}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"lossOfEmploymentFromDate.invalid && (!loeFromDate ||  lossOfEmploymentFromDate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Form Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">To Date<span [style.color]=\\\"!loeToDate?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <input type=\\\"text\\\" name=\\\"lossOfEmploymentToDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\"\\r\\n                                                   [disabled]=\\\"true\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                                   [ngModel]=\\\"claim.healthFamilyDetails.loeToDate | date: 'dd/MM/yyyy'\\\" readonly\\r\\n                                                   #lossOfEmploymentToDate=\\\"ngModel\\\"\\r\\n                                                   [ngClass]=\\\"{'invalid-data':lossOfEmploymentToDate.invalid && (!loeToDate ||  lossOfEmploymentToDate.touched), 'valid-data': lossOfEmploymentToDate.valid && loeToDate}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"lossOfEmploymentToDate.invalid && (!loeToDate ||  lossOfEmploymentToDate.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">To Date is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"viewLOEAmount\\\">\\r\\n                                        <label class=\\\"label\\\" style=\\\"margin-top:30px;\\\">Loss of Employment Benefit: {{lossOfEmploymentAmount}}/- </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Packages</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <a (click)=\\\"viewPackages()\\\" class=\\\"smart-form-link\\\">View All Packages</a>\\r\\n                                    </section>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                    <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                <td>{{pak.packageName}}</td>\\r\\n                                                <td>{{pak.packageCode}}</td>\\r\\n                                                <td>{{pak.ailmentName}}</td>\\r\\n                                                <td>{{pak.amount}}</td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"showDisCertUpload\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">\\r\\n                                            Discharge Certificate from Govt./Empanelled Hospital\\r\\n                                            <span [style.color]=\\\"!dischargeCertificate?'red':''\\\"><b>*</b></span>\\r\\n                                        </label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'dischargeCertificate')\\\">Browse</span>\\r\\n                                            <input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div *ngIf=\\\"(!dischargeCertificate) && (healthDischargeCertificate.fileName =='' || healthDischargeCertificate.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Discharge certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthDischargeCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Original Vouchers </label>  <!--<span [style.color]=\\\"!originalVoucher?'red':''\\\"><b>*</b></span>-->\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" (change)=\\\"changeCertificate($event,'originalVoucher')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <!--<div *ngIf=\\\"(!originalVoucher) && (healthOriginalVoucher.fileName =='' || healthOriginalVoucher.fileName ==undefined)\\\">\\r\\n                <span style=\\\"color: red;\\\">Original vouchers is required </span>\\r\\n            </div>-->\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthOriginalVoucher.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Self attested copy of doctor's last prescription <span [style.color]=\\\"!hospitalselfAttested?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'healthselfAttest')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!hospitalselfAttested) && (healthSelfAttached.fileName =='' || healthSelfAttached.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Self attested is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthSelfAttached.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Expenses Sheet </label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'healthExpensesSheet')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <!--<div *ngIf=\\\"(!hospitalselfAttested) && (healthSelfAttached.fileName =='' || healthSelfAttached.fileName ==undefined )\\\">\\r\\n                <span style=\\\"color: red;\\\">Self attested is required </span>\\r\\n            </div>-->\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthExpensesSheet.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"enableReasonForDelaySubmissionInHealth\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Condonation certificate  <span [style.color]=\\\"!healthCondolationCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"healthCondolationCertificate\\\" (change)=\\\"changeCertificate($event,'healthCondolationCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!healthCondolationCertificateUploaded) && (healthCondolationCertificate.fileName =='' || healthCondolationCertificate.fileName == undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Condonation certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{healthCondolationCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isCertifynotESI\\\" [(ngModel)]=\\\"claim.healthFamilyDetails.isCertifynotESI\\\"\\r\\n                                                       #isCertifynotESI=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':isCertifynotESI.invalid && (!rigisterESI ||  isCertifynotESI.touched), 'valid-data': isCertifynotESI.valid && rigisterESI}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that\\r\\n                                                I am not registered under ESI Act, 1948 or RSBY or Swasthya Sathi or WBTWSSS\\r\\n                                                <span [style.color]=\\\"!rigisterESI?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isCertifynotESI.invalid && (!rigisterESI ||  isCertifynotESI.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of ESI Act is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset id=\\\"death-diasability\\\" *ngIf=\\\"viewDeath\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdisability1\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Date of release from hospital/Accident <span [style.color]=\\\"!dateofrelease?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                            <!--<input type=\\\"text\\\" name=\\\"request\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\" placeholder=\\\"DD/MM/YYYY\\\" [(bsValue)]=\\\"claim.disabilityDetails.dateofrelease\\\" readonly>-->\\r\\n                                            <!--<input type=\\\"date\\\" name=\\\"request\\\" placeholder=\\\"06/09/2018\\\" class=\\\"form-control\\\" data-dateformat='dd/mm/yy' [(ngModel)]=\\\"claim.disabilityDetails.dateofrelease\\\">(bsValueChange)=\\\"dateofadminchange($event)\\\"-->\\r\\n                                            <input type=\\\"text\\\" name=\\\"request1\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxAdmitDate\\\"\\r\\n                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"claim.disabilityDetails.dateofRelease\\\" (bsValueChange)=\\\"disabilityDateofReleaseChange($event)\\\"\\r\\n                                                   value=\\\"{{ claim.disabilityDetails.dateofRelease | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                   #request1=\\\"ngModel\\\" readonly\\r\\n                                                   [ngClass]=\\\"{'invalid-data':request1.invalid && (!dateofrelease), 'valid-data':request1.valid && dateofrelease}\\\"\\r\\n                                                   required>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"request1.invalid && (!dateofrelease)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of release from hospital/Accident is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Nature of Disability <span [style.color]=\\\"!natureOfDisability?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"select\\\">\\r\\n                                            <select name=\\\"gender\\\" id=\\\"natureOfDisabilityDropdown\\\" (change)=\\\"disabilityChange($event.target.value)\\\" [(ngModel)]=\\\"claim.disabilityDetails.natureOfDisability\\\"\\r\\n                                                    #natureOfDisabilityDropdown=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': natureOfDisabilityDropdown.invalid && ( !natureOfDisability || natureOfDisabilityDropdown.touched ),\\r\\n                                                    'valid-data': natureOfDisability && natureOfDisabilityDropdown.valid  }\\\" required>\\r\\n                                                <option value=\\\"0\\\">Choose an Option</option>\\r\\n                                                <option value=\\\"{{dis.claimConfigId}}\\\" *ngFor=\\\"let dis of disabilityConfig\\\">{{dis.claimConfigOptionName}}</option>\\r\\n                                            </select> <i></i>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!checkNatureOfDisability\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Claim has been already submitted with this nature of disability </span>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"natureOfDisabilityDropdown.invalid && (!natureOfDisability || natureOfDisabilityDropdown.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select Nature of Disability </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" id=\\\"divdisability2\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"> Details of Disability</label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"request\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.disabilityDetails.detailsOfDisability\\\" placeholder=\\\"Details of disability\\\"></textarea>\\r\\n                                        </label>\\r\\n                                    </section>\\r\\n                                    <section class=\\\"col col-6\\\" *ngIf=\\\"enableReasonForDelaySubmission\\\">\\r\\n                                        <label class=\\\"label\\\"> Reason for Delay Submission <span [style.color]=\\\"!reasonForDelayValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <label class=\\\"input\\\">\\r\\n                                            <textarea name=\\\"reasonForDelay\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.disabilityDetails.reasonForDelaySubmission\\\" placeholder=\\\"Reason for Delay Submission\\\"></textarea>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!reasonForDelayValid\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Reason for Delay Submission is required </span>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"enableDeatheligibility\\\">\\r\\n                                    <section class=\\\"col col-6\\\" id=\\\"eligibleAmount\\\">\\r\\n\\r\\n                                        <!--<div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\"><strong>Eligible Amount:</strong>{{disableEligibility}}</label>\\r\\n                                        </div>-->\\r\\n                                        <label class=\\\"label\\\">Eligible Amount: {{disableEligibility}} </label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n\\r\\n                                        <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                        <hr />\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Certificate of disability from the competent authority <span [style.color]=\\\"!disabilityCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'disablityCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!disabilityCertificateUploaded) && (disabilityCertificate.fileName =='' || disabilityCertificate.fileName ==undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Discharge certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{disabilityCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                    <!--<section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Certificate of disability from the competent authority <span [style.color]=\\\"!disabilityCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'disablityCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{disabilityCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>-->\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"enableReasonForDelaySubmission\\\">\\r\\n                                    <section class=\\\"col col-6 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Condolation certificate  <span [style.color]=\\\"!condolationCertificateUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'condolationCertificate')\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"(!condolationCertificateUploaded) && (condolationCertificate.fileName =='' || condolationCertificate.fileName == undefined )\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Condolation certificate is required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td>{{condolationCertificate.fileName}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyintentional\\\" [(ngModel)]=\\\"claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyintentional\\\"\\r\\n                                                       #isDeathorpermanentdisabilitynotcausedbyintentional=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathorpermanentdisabilitynotcausedbyintentional.invalid && (!isDeathorpermanent1 ||  isDeathorpermanentdisabilitynotcausedbyintentional.touched), 'valid-data': isDeathorpermanentdisabilitynotcausedbyintentional.valid && isDeathorpermanent1}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that\\r\\n                                                permanent disability not caused by intentional self injury, suicide or attempted suicide, insanity or immorality or under influence of intoxicating liquor, drug or narcotic\\r\\n                                                <span [style.color]=\\\"!isDeathorpermanent1?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathorpermanentdisabilitynotcausedbyintentional.invalid && (!isDeathorpermanent1 ||  isDeathorpermanentdisabilitynotcausedbyintentional.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of permanent disability not caused by intentional self injury is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyinjuries\\\" [(ngModel)]=\\\"claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyinjuries\\\"\\r\\n                                                       #isDeathorpermanentdisabilitynotcausedbyinjuries=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isDeathorpermanentdisabilitynotcausedbyinjuries.invalid && (!isDeathorpermanent2 ||  isDeathorpermanentdisabilitynotcausedbyinjuries.touched), 'valid-data': isDeathorpermanentdisabilitynotcausedbyinjuries.valid && isDeathorpermanent2}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that permanent disability not caused by injuries resulting from riots, civil commotions, or racing of any kind\\r\\n                                                <span [style.color]=\\\"!isDeathorpermanent2?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isDeathorpermanentdisabilitynotcausedbyinjuries.invalid && (!isDeathorpermanent2 ||  isDeathorpermanentdisabilitynotcausedbyinjuries.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of permanent disability not caused by injuries is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isOtherFinancialAssistance\\\" [(ngModel)]=\\\"claim.disabilityDetails.isOtherFinancialAssistance\\\"\\r\\n                                                       #isOtherFinancialAssistance=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':isOtherFinancialAssistance.invalid && (!isDeathorpermanent3 ||  isOtherFinancialAssistance.touched), 'valid-data': isOtherFinancialAssistance.valid && isDeathorpermanent3}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that I am not in receipt of any financial assistance of similar nature from the government\\r\\n                                                <span [style.color]=\\\"!isDeathorpermanent3?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isOtherFinancialAssistance.invalid && (!isDeathorpermanent3 ||  isOtherFinancialAssistance.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Declaration of not in receipt of any financial assistance is required</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <!--<section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyintentional\\\" [(ngModel)]=\\\"claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyintentional\\\"><i></i>I Certify that the\\r\\n                                                Death or permanent disability not caused by intentional self injury, suicide or attempted suicide, insanity or immorality or under influence of intoxicating liquor, drug or narcotic\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyinjuries\\\" [(ngModel)]=\\\"claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyinjuries\\\"><i></i>I Certify that Death or permanent disability not caused by injuries resulting from riots, civil commotions, or racing of any kind</label>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isOtherFinancialAssistance\\\" [(ngModel)]=\\\"claim.disabilityDetails.isOtherFinancialAssistance\\\"><i></i>I Certify that I am not in receipt of any financial assistance of similar nature from the government</label>\\r\\n                                        </div>\\r\\n                                    </section>-->\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <!--\\r\\n                                                <fieldset id=\\\"death-diasability\\\" *ngIf=\\\"viewDeath\\\">\\r\\n                                                    <header>Death & Disability</header>\\r\\n                                                    <div class=\\\"row\\\" id=\\\"divdisability1\\\">\\r\\n                                                        <section class=\\\"col col-6\\\">\\r\\n                                                            <label class=\\\"label\\\">Date of release from hospital/Accident</label>\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                                <input type=\\\"date\\\" name=\\\"request\\\" placeholder=\\\"06/09/2018\\\" class=\\\"form-control\\\" data-dateformat='dd/mm/yy' [(ngModel)]=\\\"claim.disabilityDetails.dateofrelease\\\">\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section class=\\\"col col-6\\\">\\r\\n                                                            <label class=\\\"label\\\">Nature of Disability</label>\\r\\n                                                            <label class=\\\"select\\\">\\r\\n                                                                <select name=\\\"gender\\\" id=\\\"natureOfDisability\\\" (change)=\\\"disabilityChange(claim.disabilityDetails.natureOfDisability)\\\" [(ngModel)]=\\\"claim.disabilityDetails.natureOfDisability\\\">\\r\\n                                                                    <option value=\\\"0\\\">Choose an Option</option>\\r\\n                                                                    <option value=\\\"{{dis.claimConfigId}}\\\" *ngFor=\\\"let dis of disabilityConfig\\\" (change)=\\\"disabilityChange($event)\\\">{{dis.claimConfigOptionName}}</option>\\r\\n                                                                </select> <i></i>\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"row\\\" id=\\\"divdisability2\\\">\\r\\n                                                        <section class=\\\"col col-6\\\">\\r\\n                                                            <label class=\\\"label\\\"> Details of Disability</label>\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <textarea name=\\\"request\\\" rows=\\\"4\\\" cols=\\\"72\\\" [(ngModel)]=\\\"claim.disabilityDetails.detailsOfDisability\\\" placeholder=\\\"Details of disability\\\"></textarea>\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"row\\\" *ngIf=\\\"enableDeatheligibility\\\">\\r\\n                                                        <section class=\\\"col col-6\\\" id=\\\"eligibleAmount\\\">\\r\\n                                                            <div class=\\\"col col-6\\\">\\r\\n                                                                <label class=\\\"label\\\"><strong>Eligible Amount:</strong></label>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"col col-6\\\">\\r\\n                                                                <label id=\\\"amtbasedonDisability\\\">{{disableEligibility}}</label>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </div>\\r\\n                                                    <!--<div class=\\\"row\\\" id=\\\"divdeath1\\\">\\r\\n                                                    <section class=\\\"col col-6\\\">\\r\\n                                                        <label class=\\\"label\\\">Nature of Death</label>\\r\\n                                                        <label class=\\\"select\\\">\\r\\n                                                            <select name=\\\"natureofDeath\\\" id=\\\"selnature\\\" (change)=\\\"natureOfDeathChange($event.target.value)\\\" [(ngModel)]=\\\"claim.deathDetails.natureofDeath\\\">\\r\\n                                                                <option value=\\\"0\\\">Choose an Option</option>\\r\\n                                                                <option value=\\\"{{death.claimConfigId}}\\\" *ngFor=\\\"let death of deathConfig\\\">{{death.claimConfigOptionName}}</option>\\r\\n\\r\\n                                    </select> <i></i>\\r\\n                                </label>\\r\\n                            </section>\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\">Date of Death</label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                        <input type=\\\"text\\\" name=\\\"dateofDeath\\\" placeholder=\\\"06/09/2018\\\" class=\\\"form-control\\\" data-dateformat='dd/mm/yy' [(ngModel)]=\\\"claim.deathDetails.dateofDeath\\\">\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" id=\\\"divdeath2\\\">\\r\\n                                <section class=\\\"col col-6\\\" id=\\\"PlaceOfDeath\\\" *ngIf=\\\"viewAccidental\\\">\\r\\n                                    <label class=\\\"label\\\">Place of Death </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"placeofDeath\\\" placeholder=\\\" Place of Death\\\" [(ngModel)]=\\\"claim.deathDetails.placeofDeath\\\">\\r\\n                                </section>\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n                                    <label class=\\\"label\\\"> Details of Death</label>\\r\\n                                    <label class=\\\"input\\\">\\r\\n                                        <textarea name=\\\"detailsofDeath\\\" rows=\\\"4\\\" cols=\\\"72\\\" placeholder=\\\"Details of disability\\\" [(ngModel)]=\\\"claim.deathDetails.detailsofDeath\\\"></textarea>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6\\\" id=\\\"eligibleAmountdeath\\\" *ngIf=\\\"viewEligibilityAmount\\\">\\r\\n                                    <div class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\"><strong>Eligible Amount:</strong> </label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col col-6\\\">\\r\\n                                        <label id=\\\"amtbasedonDisability\\\">{{deathEligibility}}</label>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6\\\">\\r\\n\\r\\n                                    <label class=\\\"label\\\"><strong>Upload Documents</strong> </label><br>\\r\\n                                    <hr />\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6 top-5\\\">\\r\\n                                    <label class=\\\"label\\\">Attested copy of Death Certificate</label>\\r\\n                                    <div class=\\\"input input-file\\\">\\r\\n                                        <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" onchange=\\\"this.parentNode.nextSibling.value = this.value\\\">ueBrowse</span><input type=\\\"text\\\" readonly>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section class=\\\"col col-6 top-5\\\">\\r\\n                                    <label class=\\\"label\\\">Certificate of disability from the competent authority</label>\\r\\n                                    <div class=\\\"input input-file\\\">\\r\\n                                        <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" onchange=\\\"this.parentNode.nextSibling.value = this.value\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <section>\\r\\n                                    <div class=\\\"col col-12\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\">\\r\\n                                            <input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyintentional\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyintentional\\\"><i></i>I Certify that the\\r\\n                                            Death or permanent disability not caused by intentional self injury, suicide or attempted suicide, insanity or immorality or under influence of intoxicating liquor, drug or narcotic\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"col col-12\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isDeathorpermanentdisabilitynotcausedbyinjuries\\\" [(ngModel)]=\\\"claim.deathDetails.isDeathorpermanentdisabilitynotcausedbyinjuries\\\"><i></i>I Certify that Death or permanent disability not caused by injuries resulting from riots, civil commotions, or racing of any kind</label>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <section>\\r\\n                                    <div class=\\\"col col-12\\\">\\r\\n                                        <label class=\\\"checkbox state-success\\\"><input type=\\\"checkbox\\\" name=\\\"isOtherFinancialAssistance\\\" [(ngModel)]=\\\"claim.deathDetails.isOtherFinancialAssistance\\\"><i></i>I Certify that I am not in receipt of any financial assistance of similar nature from the government</label>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                            </fieldset>-->\\r\\n                            <fieldset id=\\\"education\\\" *ngIf=\\\"viewEducation\\\" [disabled]=\\\"disableEdu\\\">\\r\\n                                <header>Education </header>\\r\\n\\r\\n                                <fieldset id=\\\"addbutton\\\">\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"eduCount<2\\\">\\r\\n                                        <a class=\\\"btn btn-primary\\\" (click)=\\\"openModel()\\\" style=\\\"width :55px;height:30px;padding:5px;\\\" button> Add </a>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>Name of the Student</th>\\r\\n                                                    <th>Name of the Institution</th>\\r\\n                                                    <th> Contact Number of the Institution </th>\\r\\n                                                    <th>Registration No./Roll No./Year</th>\\r\\n                                                    <th> Present Reading</th>\\r\\n                                                    <th></th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngIf=\\\"educationDetailsArray.length==0\\\"><td colspan=\\\"6\\\">No student details</td></tr>\\r\\n                                                <tr *ngFor=\\\"let education of educationDetailsArray\\\">\\r\\n                                                    <td>{{education.dependentName}}</td>\\r\\n                                                    <td>{{education.institutionName}}</td>\\r\\n                                                    <td>{{education.institutionContact}}</td>\\r\\n                                                    <td>{{education.registrationRollNo}}</td>\\r\\n                                                    <td>{{education.presentlyReadingName}}</td>\\r\\n                                                    <td>\\r\\n                                                        <a class=\\\"btn btn-labeled btn-primary\\\" (click)=\\\"editEducationDetails(education)\\\" style=\\\"margin-right:5px;\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i> Edit</a>\\r\\n                                                        <a class=\\\"btn btn-labeled btn-danger\\\" (click)=\\\"removeEducationDetails(education)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-6\\\">\\r\\n                                        <label class=\\\"label\\\">Amount Claimed</label>\\r\\n                                        <label class=\\\"form-control\\\" disabled>{{claim.educationDetails.claimAmount}}</label>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section>\\r\\n                                        <div class=\\\"col col-12\\\">\\r\\n                                            <label class=\\\"checkbox state-success\\\">\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"isanyothersourceofthegovernment\\\"\\r\\n                                                       [(ngModel)]=\\\"claim.educationDetails.isanyothersourceofthegovernment\\\"\\r\\n                                                       #isanyothersourceofthegovernment=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':isanyothersourceofthegovernment.invalid && (!educationCheck ||  isanyothersourceofthegovernment.touched), 'valid-data': isanyothersourceofthegovernment.valid && educationCheck}\\\"\\r\\n                                                       required>\\r\\n                                                <i></i>I Certify that My son or daughter is not availing or has not availed any scholarship for the above mentioned courses from any other source of the government\\r\\n                                                <span [style.color]=\\\"!educationCheck?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"isanyothersourceofthegovernment.invalid && (!educationCheck ||  isanyothersourceofthegovernment.touched)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Check education terms and conditions </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"viewPf || viewHealth || viewDeath|| viewEducation\\\">\\r\\n                                <header>Upload Documents</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label class=\\\"label\\\">Form - V duly filled and signed <span [style.color]=\\\"!uplaodmain?'red':''\\\"><b>*</b></span></label>\\r\\n                                                <div class=\\\"input input-file\\\">\\r\\n                                                    <span class=\\\"button\\\">\\r\\n                                                        <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"changeCertificate($event,'main')\\\"\\r\\n                                                               [disabled]=\\\"!(SubmitVisible && !disableSubmitbutton && !restrictSave)\\\">Browse\\r\\n                                                    </span><input type=\\\"text\\\" readonly>\\r\\n                                                </div>\\r\\n                                                <div *ngIf=\\\"(!uplaodmain) && (mainUpload?.fileName =='' || mainUpload?.fileName ==undefined )\\\">\\r\\n                                                    <span style=\\\"color: red;\\\">Form - V is required </span>\\r\\n                                                </div>\\r\\n                                                <div>\\r\\n                                                    {{mainUpload?.fileName}}\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <footer *ngIf=\\\"GenaratePdfVisible && disableSubmitbutton && !restrictSave\\\"><a class=\\\"btn btn-success\\\" (click)=\\\"GenaratePdf(claim,3)\\\">Generate Pdf</a></footer>\\r\\n                            <footer>\\r\\n                                <!--<a *ngIf=\\\"GenaratePdfVisible && disableSubmitbutton && !restrictSave\\\" class=\\\"btn btn-success\\\" (click)=\\\"GenaratePdf(claim,3)\\\">Generate Pdf</a>-->\\r\\n                                <a *ngIf=\\\"SubmitVisible && !disableSubmitbutton && !restrictSave\\\" name=\\\"save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveClaimsData(claim,2)\\\">Submit</a>\\r\\n                                <a class=\\\"btn btn-primary\\\" *ngIf=\\\"SaveVisible && !restrictSave\\\" (click)=\\\"saveClaimsData(claim,1)\\\">Save as Draft</a>\\r\\n                                <a class=\\\"btn btn-default\\\" (click)=\\\"claerClaim()\\\">Reset</a>\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancleClick()\\\">Cancel</a>\\r\\n\\r\\n\\r\\n                            </footer>\\r\\n                        </form>\\r\\n                        <!--/ Success states for elements -->\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n    </div>\\r\\n    <!-- end row -->\\r\\n</section>\\r\\n<!-- end widget grid -->\\r\\n<div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"lgModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Add Student Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divAddEducationDetails\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 \\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label control-label\\\"> Name of the Student <span [style.color]=\\\"!studentNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <select class=\\\"form-control select\\\" name=\\\"dependentId\\\" (change)=\\\"selectDependent($event)\\\" [(ngModel)]=\\\"educationDetails.dependentId\\\"\\r\\n                                        #dependentId=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{'invalid-data': dependentId.invalid && ( !studentNameValid || dependentId.touched ),\\r\\n                                        'valid-data': studentNameValid && dependentId.valid  }\\\"\\r\\n                                        required>\\r\\n                                    <option value=\\\"0\\\" selected disabled>Choose a Student</option>\\r\\n                                    <option value=\\\"{{ben.benFamilyMemSno}}\\\" *ngFor=\\\"let ben of benficiaryFamily\\\">{{ben.benDependentName}} - {{ben.benDependentRelation}}</option>\\r\\n                                </select>\\r\\n                                <i></i>\\r\\n                                <div *ngIf=\\\"dependentId.invalid && (!studentNameValid || dependentId.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Select a Student </span>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"isDuplicateDependent\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Already submitted for this year please select another dependent </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Name of the Institution <span [style.color]=\\\"!institutionNameValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" name=\\\"institutionName\\\" placeholder=\\\"Name of the Institution\\\" [(ngModel)]=\\\"educationDetails.institutionName\\\"\\r\\n                                       #institutionName=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': institutionName.invalid && (!institutionNameValid || institutionName.touched), 'valid-data': institutionName.valid && institutionNameValid}\\\" class=\\\"form-control\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"institutionName.invalid && (!institutionNameValid ||institutionName.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Name of the Institution is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Name of the Principal/Head Master of the institution</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"institutionPrinicipleName\\\" placeholder=\\\"Institution Principal Name\\\" [(ngModel)]=\\\"educationDetails.institutionPrinicipleName\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Contact Number of the Institution </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"institutionContact\\\" placeholder=\\\"Contact Number of the Institution \\\" [(ngModel)]=\\\"educationDetails.institutionContact\\\"\\r\\n                                       NumbersOnly maxlength=\\\"15\\\"\\r\\n                                       #institutionContact=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': !institutionContactValid }\\\">\\r\\n                                <div *ngIf=\\\"!institutionContactValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Invalid Contact Number of the Institution </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Registration No./Roll No. of last exam passed  <span [style.color]=\\\"!registrationNoValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"registrationRollNo\\\" placeholder=\\\"Registration No./Roll No. of last exam passed \\\" [(ngModel)]=\\\"educationDetails.registrationRollNo\\\"\\r\\n                                       #registrationRollNo=\\\"ngModel\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data': registrationRollNo.invalid && (!registrationNoValid || registrationRollNo.touched), 'valid-data': registrationRollNo.valid && registrationNoValid}\\\"\\r\\n                                       required>\\r\\n                                <div *ngIf=\\\"registrationRollNo.invalid && (!registrationNoValid ||registrationRollNo.touched)\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Registration No./Roll No. of last exam passed is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\"> Year of Examination <span [style.color]=\\\"!educationYearValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" placeholder=\\\"Year\\\" [(ngModel)]=\\\"educationDetails.year\\\" maxlength=\\\"4\\\" NumbersOnly> <!--readonly-->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\" *ngIf=\\\"isMarried\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div>\\r\\n                                    <label for=\\\"label\\\">Is Married <span [style.color]=\\\"!marriedValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                    <input type=\\\"radio\\\" value=\\\"1\\\" name=\\\"gender\\\" required #gender=\\\"ngModel\\\" [(ngModel)]=\\\"educationDetails.isMarried\\\"> Yes\\r\\n                                    <input type=\\\"radio\\\" value=\\\"0\\\" name=\\\"gender\\\" required #gender=\\\"ngModel\\\" [(ngModel)]=\\\"educationDetails.isMarried\\\">No\\r\\n                                </div>\\r\\n                                \\r\\n                                <div *ngIf=\\\"!marriedValid\\\">\\r\\n                                    <!--*ngIf=\\\"gender.invalid && (!marriedValid || gender.touched)\\\"-->\\r\\n                                    <span style=\\\"color: red;\\\">Is Married is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"label\\\"> Last Exam Passed</label>\\r\\n                                        <select name=\\\"lastExamPassed\\\" class=\\\"form-control\\\" (change)=\\\"selectLastExamPassed($event,educationDetails)\\\" [(ngModel)]=\\\"educationDetails.lastExamPassed\\\">\\r\\n                                            <option value=\\\"00\\\" disabled>Choose Reading</option>\\r\\n                                            <option value=\\\"{{lep.lovDtlId}}\\\" *ngFor=\\\"let lep of lastExampassed\\\">{{lep.optionName}}</option>\\r\\n\\r\\n                                        </select> <i></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"label\\\"> Date of Admission <span *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\" [style.color]=\\\"!dateOfAdmissionValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"dateofAdmission\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" [maxDate]=\\\"maxDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                               #dateofAdmission=\\\"ngModel\\\" [disabled] =\\\"isDisabledBaseOnLastExamPassed\\\"\\r\\n                                               [(ngModel)]=\\\"educationDetails.dateofAdmission\\\" readonly\\r\\n                                               value=\\\"{{ educationDetails.dateofAdmission | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                               [ngClass]=\\\"{'invalid-data':dateofAdmission.invalid && (!dateOfAdmissionValid || dateofAdmission.touched), 'valid-data':dateofAdmission.valid && dateOfAdmissionValid}\\\"\\r\\n                                               required>\\r\\n                                        <div *ngIf=\\\"dateofAdmission.invalid && (!dateOfAdmissionValid || dateofAdmission.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Date of Admission is required </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"label\\\"> Presently Reading <span *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\" [style.color]=\\\"!presentlyReadingValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <select name=\\\"presentlyReading\\\" class=\\\"form-control\\\" (change)=\\\"selectPresentlyReading($event,educationDetails)\\\"\\r\\n                                                [(ngModel)]=\\\"educationDetails.presentlyReading\\\" #presentlyReading=\\\"ngModel\\\" [disabled] =\\\"isDisabledBaseOnLastExamPassed\\\"\\r\\n                                                [ngClass]=\\\"{'invalid-data': presentlyReading.invalid && ( !presentlyReadingValid || presentlyReading.touched ),\\r\\n                                        'valid-data': presentlyReadingValid && presentlyReading.valid  }\\\"\\r\\n                                                required>\\r\\n                                            <option value=\\\"0\\\" disabled>Choose Reading</option>\\r\\n                                            <option value=\\\"{{edu.claimConfigId}}\\\" *ngFor=\\\"let edu of educationConfig\\\">{{edu.claimConfigOptionName}}</option>\\r\\n                                        </select> <i></i>\\r\\n                                        <div *ngIf=\\\"presentlyReading.invalid && (!presentlyReadingValid || presentlyReading.touched)\\\">\\r\\n                                            <span style=\\\"color: red;\\\">Select a Presently reading </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"label\\\">Eligible Amount</label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"eligibleAmount\\\" [(ngModel)]=\\\"educationDetails.eligibleAmount\\\" disabled />\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 smart-form\\\">\\r\\n                                <header>Upload Documents</header>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"!isDisabledBaseOnLastExamPassed\\\">\\r\\n                                    <section class=\\\"col col-10 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Certificate from head of institution for not availing any scholarship <span [style.color]=\\\"!uploadCertificatetValid?'red':''\\\"><b>*</b></span> </label>\\r\\n\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\">\\r\\n                                                <input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'certificate')\\\">Browse\\r\\n                                            </span>\\r\\n                                            <input type=\\\"text\\\" readonly>\\r\\n                                            <label>Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!uploadCertificatetValid && educertificates.length==0\\\">\\r\\n                                            <span style=\\\"color: red;\\\"> Certificate required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr *ngFor=\\\"let item of educertificates\\\">\\r\\n                                                    <td>{{item.fileName}}</td>\\r\\n                                                    <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'certificate')\\\">      <i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <!--<section style=\\\"padding-top:30px\\\" class=\\\"col col-5\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"viewuploadNonMarriage\\\">\\r\\n                                    <section class=\\\"col col-10 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Non marriage certificate of Daughter <span [style.color]=\\\"!uploadNonMarriageValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'nonMarriage')\\\" id=\\\"file\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                            <label>Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!uploadNonMarriageValid && eduNonMarriage.length==0\\\">\\r\\n                                            <span style=\\\"color: red;\\\"> Non marriage certificate of Daughter required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr *ngFor=\\\"let item of eduNonMarriage\\\">\\r\\n                                                    <td>{{item.fileName}}</td>\\r\\n                                                    <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'nonMarriage')\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <!--<section style=\\\"padding-top:30px\\\" class=\\\"col col-5\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <section class=\\\"col col-10 top-5\\\">\\r\\n                                        <label class=\\\"label\\\">Self attested copy of last exam passing certificate <span [style.color]=\\\"!uploadselfattestedValid?'red':''\\\"><b>*                    </b></span></label>\\r\\n                                        <div class=\\\"input input-file\\\">\\r\\n                                            <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" accept=\\\"image/*,.pdf\\\" multiple (change)=\\\"changeCertificate($event,'selfAttest')\\\">Browse</span>\\r\\n                                            <input type=\\\"text\\\" readonly>\\r\\n                                            <label>Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"!uploadselfattestedValid && eduSelfAttested.length==0\\\">\\r\\n                                            <span style=\\\"color: red;\\\"> Self attested required </span>\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                            <table>\\r\\n                                                <tr *ngFor=\\\"let item of eduSelfAttested\\\">\\r\\n                                                    <td>{{item.fileName}}</td>\\r\\n                                                    <td style=\\\"padding-left:10px\\\"> <a class=\\\"btn btn-danger\\\" (click)=\\\"removeUploadCertificates(item,'selfAttest')\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i> Remove</a></td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <!--<section style=\\\"padding-top:30px\\\" class=\\\"col col-5\\\"><label>Document limit is upto 2MB, JPEG/PNG/PDF</label></section>-->\\r\\n                                </div>\\r\\n                            </div>\\r\\n</fieldset>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"lgModal.hide()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addEducationDetails(educationDetails)\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow-y:scroll\\\">\\r\\n                <div [innerHTML]=\\\"successMessage\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div bsModal #packageModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"packageModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Packages</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px; overflow-x:scroll\\\">\\r\\n                <div *ngFor=\\\"let item of result\\\" border=\\\"1\\\">\\r\\n                    <strong>{{item.name}}</strong>\\r\\n                    <table class=\\\"table table-striped\\\" [mfData]=\\\"item.values\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th><!--<input type=\\\"checkbox\\\" value=\\\"checkAll\\\" name=\\\"checkall\\\" (change)=\\\"checkAll($event,item.name)\\\" />--></th>\\r\\n                                <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let value of mf.data;let i=index;\\\">\\r\\n                                <td><input type=\\\"checkbox\\\" name=\\\"{{i}}\\\" [(ngModel)]=\\\"value.isChecked\\\" (change)=\\\"checkIfAllSelected(item);\\\" /></td>\\r\\n                                <td>{{value.packageName}}</td>\\r\\n                                <td>{{value.packageCode}}</td>\\r\\n                                <td>{{value.amount}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitClick()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #pdfModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Form-V Pdf</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                Form-V genarated, Please print or download.\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf(claim,'print')\\\">\\r\\n                    Print FormV\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downLoadPdf(claim,'download')\\\">\\r\\n                    Download FormV\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy, ElementRef } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute, Data } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ClaimModel } from '../models/claim.model';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { BeneficiaryBank } from '../models/ben.bank.model';\r\nimport { BenFamilyMember } from '../models/ben.family.model';\r\nimport { BenNominee } from '../models/ben.nominee.model';\r\nimport { Beneficiary } from '../models/ben.model';\r\nimport { LovDetails } from '../models/Lov.model';\r\nimport { ClaimConfig } from '../models/claimconfig.model';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans, HealthClaimEligibility, PFTypeOfClaim, DisabilityBenefitConfiguration, HealthFamilyBenefitConfiguration, EducationBenefitConfiguration, PFStatusMaster } from '../pipes/constnts.model';\r\nimport { EducationDetailModel, EducationHdrModel } from '../models/education.model';\r\nimport { HealthFamilyModel, HealthFamilyPackageModel } from '../models/health-and-family.model';\r\nimport { DeathModel } from '../models/death.model';\r\nimport { DisabilityModel } from '../models/disability.modl';\r\nimport { ProvidentFund } from '../models/providentfund.model';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { AttachmentModel } from '../models/attachment.model';\r\nimport { DATE } from 'ngx-bootstrap/chronos/units/constants';\r\nimport { DatepickerOptions } from 'ng2-datepicker';\r\nimport * as frLocale from 'date-fns/locale/fr';\r\nimport { HospitalModel } from '../models/hospital.model';\r\nimport { fail } from 'assert';\r\nimport { filter } from 'rxjs/operator/filter';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { FinancialYearModel } from '../../models/financialYear.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ClaimExceptionDetailsModel } from '../../models/claimExceptionDetails';\r\nimport { PFBalanceDetails } from '../../models/pfBalanceDetails';\r\nimport { ClinicalTestModel } from 'src/app/models/ClinicalTest.model';\r\nimport { BenefitConfigData } from 'src/app/models/benefitConfigData.model';\r\nimport { PFConfigurationModel } from 'src/app/models/pfconfiguration.model';\r\nimport { ClaimConfigHdr } from '../models/claimconfighdr.model';\r\nimport { BeneficiaryPFAccountDetails } from '../models/ben.pfaccount.model';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-claim-entry',\r\n    templateUrl: './claim-entry.component.html',\r\n    styleUrls: ['./claim-entry.component.css']\r\n})\r\nexport class ClaimEntryComponent implements OnInit, OnDestroy {\r\n    @ViewChild('lgModal') public lgModal: ModalDirective;\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    @ViewChild('packageModal') public packageModal: ModalDirective;\r\n    @ViewChild('pdfModal') public pdfModal: ModalDirective;\r\n\r\n    route$: Subscription;\r\n    claimId: number = 0;\r\n    claimType: number;\r\n    claimTypeString: any;\r\n    claimStatus: number = 0;\r\n    claimReference: number;\r\n    viewuploadNonMarriage: boolean = false;\r\n    viewPf: boolean = false;\r\n    viewHealth: boolean = false;\r\n    viewDeath: boolean = false;\r\n    viewEducation: boolean = false;\r\n    viewDateOfFirstAppointment: boolean = false;\r\n    viewNameOfClinicalTest: boolean = false;\r\n    viewDateOfAdmit: boolean = false;\r\n    viewMetWithAnAccident: boolean = false;\r\n    viewFamily: boolean = false;\r\n    viewSelf: boolean = false;\r\n    viewLOEAmount: boolean = false;\r\n    viewAccidental: boolean = false;\r\n    viewEligibilityAmount: boolean = false;\r\n    enableDeatheligibility: boolean = false;\r\n    claim: ClaimModel = {} as ClaimModel;\r\n    educationDetails: EducationDetailModel = {} as EducationDetailModel;\r\n    educationDetailsArray: Array<EducationDetailModel> = [];\r\n    hospitalizationLov: LovDetails[];\r\n    diseasesLov: LovDetails[];\r\n    clinicalTestLov: LovDetails[];\r\n    healthtypeofClaim: LovDetails[];\r\n    healthConfig: ClaimConfig[];\r\n    pfConfig: ClaimConfig[];\r\n    deathConfig: ClaimConfig[];\r\n    disabilityConfig: ClaimConfig[];\r\n    educationConfig: ClaimConfig[];\r\n    configConfig: ClaimConfig[];\r\n    lastExampassed: LovDetails[];\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    benficiaryFamily: BenFamilyMember[];\r\n    benficiaryFamilybyHealth: BenFamilyMember[];\r\n    hospotalList: HospitalModel[];\r\n    deathEligibility: any;\r\n    disableEligibility: any;\r\n    disableEducationCheckbox = false;\r\n    disableHealthCheckbox = false;\r\n    disablePFCheckbox: boolean = false;\r\n    successMessage: string;\r\n    checkeducation: boolean = false;\r\n    //Validation Claim Entry variables\r\n    ssnNoValid: boolean = true;\r\n    nomineeNameValid: boolean = true;\r\n    nomineeContactValid: boolean = true;\r\n    nomineeDOBValid: boolean = true;\r\n    nomineeBankAccountValid: boolean = true;\r\n\r\n    //Validation Education variables\r\n    studentNameValid: boolean = true;\r\n    institutionNameValid: boolean = true;\r\n    institutionContactValid: boolean = true;\r\n    registrationNoValid: boolean = true;\r\n    educationYearValid: boolean = true;\r\n    dateOfAdmissionValid: boolean = true;\r\n    marriedValid: boolean = true;\r\n    isMarried: boolean = false;\r\n    presentlyReadingValid: boolean = true;\r\n    disableEdu: boolean = false;\r\n    maxLimitExceeded: boolean = false;\r\n    maxHelathClaimLimitExceeded: boolean = false;\r\n    noDependents: boolean = false;\r\n    benficiaryInactive: boolean = false;\r\n    disableSubmitbutton: boolean = true;\r\n    educationCheck: boolean = true;\r\n    uploadselfattestedValid: boolean = true;\r\n    uploadNonMarriageValid: boolean = true;\r\n    uploadCertificatetValid: boolean = true;\r\n    uplaodmain: boolean = true;\r\n\r\n    // health & family \r\n    typeOfClaimValid: boolean = false;\r\n    hospital: boolean = false;\r\n    hospitalization: boolean = false;\r\n    dateofAdmin: boolean = false;\r\n    dateofDischargeValid: boolean = false;\r\n    claimForValid: boolean = false;\r\n    familyMember: boolean = false;\r\n    hospitalselfAttested: boolean = false;\r\n    isOtherHospital: boolean = false;\r\n    otherHospitalValid: boolean = false;\r\n    hospotalId: number = 0;\r\n    //originalVoucher: boolean = false;\r\n    dischargeCertificate: boolean = false;\r\n    rigisterESI: boolean = false;\r\n    dateofAppointment: boolean = false;\r\n    loeFromDate: boolean = false;\r\n    loeToDate: boolean = false;\r\n    showDisCertUpload: boolean = true;\r\n    healthCondolationCertificate: AttachmentModel = {} as AttachmentModel;\r\n    reasonForHealthDelayValid: boolean = false;\r\n    enableReasonForDelaySubmissionInHealth: boolean = false;\r\n    isHealthClaimEdit: boolean = false;\r\n    healthCondolationCertificateUploaded: boolean = false;\r\n\r\n    healthOriginalVoucher: AttachmentModel = {} as AttachmentModel;\r\n    healthSelfAttached: AttachmentModel = {} as AttachmentModel;\r\n    healthDischargeCertificate: AttachmentModel = {} as AttachmentModel;\r\n    healthExpensesSheet: AttachmentModel = {} as AttachmentModel;\r\n    healthAttachmentList: AttachmentModel[] = [] as AttachmentModel[];\r\n\r\n    eduCount: number = 0;\r\n    submitYear = new Date().toISOString().split('T')[0];\r\n    rowIndex = -1;\r\n    mode: string = \"\";\r\n    rowEligibleAmount = 0;\r\n    totalHealthClaimAmount = 0;\r\n    typeOfAilmentClaimedAmount = 0\r\n    surgeryClaimedAmount = 0\r\n    lossOfEmploymentAmount = 0;\r\n    validateDependent: boolean = false;\r\n    mainUpload: AttachmentModel;\r\n    mainUploadList: AttachmentModel[] = [] as AttachmentModel[];\r\n    educertificates: AttachmentModel[] = [] as AttachmentModel[];\r\n    eduNonMarriage: AttachmentModel[] = [] as AttachmentModel[];\r\n    eduSelfAttested: AttachmentModel[] = [] as AttachmentModel[];\r\n    maxDate: any;\r\n    saveType: number;\r\n    datePickerConfig: any;\r\n    //Button variables\r\n    GenaratePdfVisible: boolean = true;\r\n    SubmitVisible: boolean = true;\r\n    SaveVisible: boolean = true;\r\n    restrictSave: boolean = false;\r\n    ClaimStatusId: number = 0;\r\n    maxAdmitDate: Date;\r\n    minDate: any;\r\n    minLOEDate: Date;\r\n    isLOEToDate: boolean = true;\r\n    minDischargeDate: Date;\r\n    isDischargeDate: boolean = true;\r\n    dischargeMinDt: Date;\r\n    disableDischarge: boolean = true;\r\n    disableCost: boolean = true;\r\n    activeYear: FinancialYearModel = {} as FinancialYearModel;\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    result: any[];\r\n    //expection: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    beneficiaryBank: BeneficiaryBank = {} as BeneficiaryBank;\r\n    educationClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    healthClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    //Disability\r\n    disableDisabilityCheckbox = false;\r\n    disabilityCertificate: AttachmentModel = {} as AttachmentModel;\r\n    deathCertificate: AttachmentModel = {} as AttachmentModel;\r\n    condolationCertificate: AttachmentModel = {} as AttachmentModel;\r\n    disabilityAttachmentList: AttachmentModel[] = [] as AttachmentModel[];\r\n    disabilityCertificateUploaded: boolean = false;\r\n    condolationCertificateUploaded: boolean = false;\r\n    dateofrelease: boolean = false;\r\n    natureOfDisability: boolean = false;\r\n    reasonForDelayValid: boolean = false;\r\n    checkNatureOfDisability: boolean = false;\r\n    isDeathorpermanent1: boolean = false;\r\n    isDeathorpermanent2: boolean = false;\r\n    isDeathorpermanent3: boolean = false;\r\n    natureOfDisabilityName: string;\r\n    beneficiaryAppliedDisabilities: number[] = [] as number[];\r\n    disabilityClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    enableReasonForDelaySubmission: boolean = false;\r\n    //PF\r\n    pfBalanceDetails: PFBalanceDetails;\r\n    pfExsits: boolean = false;\r\n    pfClaimAmount: number;\r\n    isPrematureClaim: boolean = false;\r\n    isPFSubmitted: boolean = false;\r\n    pfTypeOfClaimValid: boolean = false;\r\n    reasonForPreclosureValid: boolean = false;\r\n    //pfLockingPeriodDate: string;\r\n    pfAccountStatus: string;\r\n    benMaturityDate: Date = null;\r\n    pfLockingPeriod: Date = null;\r\n    pfClaimExceptionDetails: ClaimExceptionDetailsModel[] = [] as ClaimExceptionDetailsModel[];\r\n    isClaimEdit: boolean = false;\r\n    isDisabilityClaimEdit: boolean = false;\r\n\r\n    isBenNomineeSubmittedClaim: boolean = false;\r\n    clinicalTestSettings = {};\r\n    nameOfClinicalTestIds: Array<any> = [];\r\n    clinicalTestDetails: ClinicalTestModel[] = [] as ClinicalTestModel[];\r\n\r\n    disabilityBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    healthFamilyBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    pfBenefitConfigDetails: PFConfigurationModel = {} as PFConfigurationModel;\r\n    educationBenefitConfigDetails: BenefitConfigData[] = [] as BenefitConfigData[];\r\n    isDisabledBaseOnLastExamPassed: boolean = false;\r\n    isDuplicateDependent: boolean = false;\r\n    isBenDeath: boolean = false;\r\n\r\n    //Claims Effective Dates\r\n    pfClaimEffectiveDate: Date = null;\r\n    healthFamilyClaimEffectiveDate: Date = null;\r\n    disabilityClaimEffectiveDate: Date = null;\r\n    deathClaimEffectiveDate: Date = null;\r\n    educationClaimEffectiveDate: Date = null;\r\n\r\n    claimConfigHdrDetails: ClaimConfigHdr[] = [] as ClaimConfigHdr[];\r\n    isClaimEffectiveDate: boolean = false;\r\n    claimEffectiveDate: Date = null;\r\n\r\n    beneficiaryPFAccountDetails: BeneficiaryPFAccountDetails = {} as BeneficiaryPFAccountDetails;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private userService: UserService) {\r\n        this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n        this.claim.educationDetails = {} as EducationHdrModel;\r\n        this.claim.deathDetails = {} as DeathModel;\r\n        this.claim.disabilityDetails = {} as DisabilityModel;\r\n        this.claim.providentFundDetails = {} as ProvidentFund;\r\n        this.maxDate = new Date();\r\n        this.maxAdmitDate = new Date();\r\n\r\n        //this.maxDate = new Date(new Date().setMonth(new Date().getMonth() + 3));\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.pfTypeOfClaimValid = this.otherHospitalValid = true;\r\n        this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded = this.reasonForHealthDelayValid =  true;//this.originalVoucher =\r\n        this.dateofrelease = this.natureOfDisability = this.disabilityCertificateUploaded = this.isDeathorpermanent1 = this.isDeathorpermanent2 = this.isDeathorpermanent3 = this.checkNatureOfDisability = this.condolationCertificateUploaded = this.reasonForDelayValid = true;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.claimId = params[\"claimId\"] != null ? Number(params[\"claimId\"]) : 0;\r\n                this.mode = params[\"mode\"];\r\n                this.claimType = ClaimConstants.Education;\r\n                this.claimTypeString = params[\"tranctionType\"];\r\n                this.claimStatus = params[\"claimStatus\"] != null ? Number(params[\"claimStatus\"]) : 0;\r\n                //if (this.claimStatus >= ClaimStatus.Submitted) {\r\n                //    this.GenaratePdfVisible = false;\r\n                //    this.disableSubmitbutton = false;\r\n                //    this.SaveVisible = false;\r\n                //}\r\n                //else {\r\n                //    this.claimStatus = ClaimStatus.Submitted;\r\n                //}\r\n            }\r\n        );\r\n        this.clinicalTestSettings = {\r\n            singleSelection: false,\r\n            idField: 'lovDtlId',\r\n            textField: 'optionName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        };\r\n        //this.claimId = 149;//params[\"claimId\"];\r\n        //this.claimType = ClaimConstants.Education;\r\n        this.getDeathConfiguration();\r\n        this.getDisabilityConfiguration();\r\n        this.getEducationConfiguration();\r\n        this.getHealthandFamilyConfiguration();\r\n        this.getPfConfiguration();\r\n        this.getHospitalization();\r\n        this.getHealthClainFor();\r\n        this.getHospitals();\r\n        this.getLastExamPassed();\r\n        this.getPackages();\r\n        this.getDiseases();\r\n        this.getClinicalTests();\r\n        this.getDisabilityBenefitConfigurationDetails();\r\n        this.getHealthFamilyBenefitConfigurationDetails();\r\n        this.getPFBenefitConfigurationDetails();\r\n        this.getEducationBenefitConfigurationDetails();\r\n        if (this.claimId > 0) {\r\n\r\n            // this.viewEducation = true;\r\n            this.getClaimDetailsByClaimId(this.claimId);\r\n        }\r\n        else {\r\n            this.getBenficiaryFamilyDetails(this.userService.user.userid);\r\n            this.getBenficiaryEduCount(this.userService.user.userid);\r\n            this.getBenficiarydetails(this.userService.user.userid);\r\n            //this.getBeneficiaryBankDetails(this.userService.user.userid);\r\n\r\n        }\r\n        this.isBenNomineeClaimSubmitted(this.userService.user.userid);\r\n        this.getBeneficiaryBankDetails(this.userService.user.userid);\r\n        this.getBeneficiaryAppliedDisabilities(this.userService.user.userid, this.claimId);\r\n        this.getActiveFinancialYear();\r\n        this.getClaimsConfiguartionDetails();\r\n        ////pf\r\n        //\r\n        //if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n        //    if (this.beneficiary.regNumber != null && this.beneficiary.regNumber != \"\") {\r\n        //        this.getPfBalance(this.beneficiary.regNumber);\r\n        //        this.validatePfSubmit(this.beneficiary.ssI_Number);\r\n        //    }\r\n        //    else\r\n        //        alert(\"No pf details available for this given SSIN number\");\r\n        //}\r\n        //else {\r\n\r\n        //    this.disablePFCheckbox = true;\r\n        //    this.pfExsits = true;\r\n        //}\r\n    }\r\n    getClaimsConfiguartionDetails(): any {\r\n\r\n        this.dataService.getClaimConfigurationMaster()\r\n            .subscribe((data: any) => {\r\n                this.claimConfigHdrDetails = data;\r\n                debugger;\r\n                if (this.claimConfigHdrDetails != null) {\r\n                    this.pfClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 1).cliamEffectiveDate;\r\n                    this.healthFamilyClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 2).cliamEffectiveDate;\r\n                    this.disabilityClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 3).cliamEffectiveDate;\r\n                    this.deathClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 4).cliamEffectiveDate;\r\n                    this.educationClaimEffectiveDate = this.claimConfigHdrDetails.find(c => c.claimMasterId == 5).cliamEffectiveDate;\r\n                }\r\n        });\r\n    }\r\n    onItemSelect(item: any) {\r\n        console.log(item);\r\n    }\r\n    onSelectAll(items: any) {\r\n        console.log(items);\r\n    }\r\n    openModel() {\r\n        this.isDuplicateDependent = false;\r\n        this.studentNameValid = this.institutionNameValid = this.registrationNoValid = this.institutionContactValid = this.educationYearValid = this.dateOfAdmissionValid = this.presentlyReadingValid = this.marriedValid=true;\r\n        this.uploadCertificatetValid = this.uploadselfattestedValid = true;\r\n        this.rowIndex = -1;\r\n        this.rowEligibleAmount = 0;\r\n        this.eduSelfAttested = [] as AttachmentModel[];\r\n        this.educertificates = [] as AttachmentModel[];\r\n        this.eduNonMarriage = [] as AttachmentModel[];\r\n        this.educationDetails = {} as EducationDetailModel;\r\n        //this.educationDetails.year = new Date().getFullYear();\r\n        this.educationDetails.year = this.activeYear.seqPrefix;\r\n        this.lgModal.show();\r\n    }\r\n    getBeneficiaryAppliedDisabilities(id: any, claimId: any) {\r\n\r\n        this.dataService\r\n            .getBeneficiaryAppliedDisabilities(id, claimId)\r\n            .subscribe((data: any) => {\r\n                this.beneficiaryAppliedDisabilities = data;\r\n\r\n            });\r\n    }\r\n    getBeneficiaryBankDetails(id: any) {\r\n        this.dataService\r\n            .getBeneficiaryBankDetails(id)\r\n            .subscribe((data: any) => {\r\n                this.beneficiaryBank = data;\r\n\r\n            });\r\n    }\r\n    getBenficiaryFamilyDetailsByHealth(id: any) {\r\n        this.dataService\r\n            .getBeneficiaryFamilyDetails(id, ClaimConstants.HealthFamily)\r\n            .subscribe((data: any) => {\r\n                this.benficiaryFamilybyHealth = data;\r\n\r\n            });\r\n    }\r\n    converToDateString(inputDate: any) {\r\n        return new Date(inputDate).toISOString().split('T')[0];\r\n    }\r\n    debugger;\r\n    disabilityChange(id: any) {\r\n        debugger;\r\n        if (id != 0) {\r\n            this.enableDeatheligibility = true;\r\n            let data = this.disabilityConfig.find(x => x.claimConfigId == id);\r\n            this.disableEligibility = data.annualLimit;\r\n            this.natureOfDisabilityName = data.claimConfigOptionName;\r\n            debugger;\r\n            let data1 = this.beneficiaryAppliedDisabilities.find(x => x == this.claim.disabilityDetails.natureOfDisability);\r\n            if (data1) {\r\n                this.checkNatureOfDisability = false;\r\n                //alert(\"Claim has been already submitted with this nature of disability\");\r\n                //return;\r\n            }\r\n            else {\r\n                this.checkNatureOfDisability = true;\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.enableDeatheligibility = false;\r\n            this.disableEligibility = 0;\r\n        }\r\n    }\r\n\r\n    getBenficiarydetails(id: any) {\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsById(id)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n                if (this.beneficiary != null && this.beneficiary.benDeathStatus != 1) {\r\n                    if (this.beneficiary.isActive) {\r\n                        this.getBenficiaryFamilyDetailsByHealth(this.beneficiary.benSno);\r\n                        if (this.beneficiary != null) {\r\n                            debugger;\r\n                            if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n                                this.dataService.getBeneficiaryPFAccountDetails(this.beneficiary.benSno).subscribe((data1: any) => {\r\n                                    debugger;\r\n                                    this.beneficiaryPFAccountDetails = data1;\r\n                                    if (this.beneficiaryPFAccountDetails != null && (this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != null && this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != \"\")) {\r\n                                        if (this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.Active || this.beneficiaryPFAccountDetails.pfStatus == PFStatusMaster.PartialClosed) {\r\n                                            this.getPfBalance(this.beneficiary.benSno);\r\n                                            this.validatePfSubmit(this.beneficiary.ssI_Number);\r\n                                        }\r\n                                        else\r\n                                            alert(\"Your Pf Account is closed/Inactive\");\r\n                                    }\r\n                                    else\r\n                                        alert(\"No pf details available for this given SSIN number\");\r\n                                });\r\n                            }\r\n                            else {\r\n\r\n                                this.disablePFCheckbox = true;\r\n                                this.pfExsits = true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        this.benficiaryInactive = true; this.restrictSave = true; this.disableEdu = true;\r\n                    }\r\n                }\r\n                else {\r\n                     this.restrictSave =this.isBenDeath =this.disablePFCheckbox = this.disableHealthCheckbox = this.disableDisabilityCheckbox = this.disableEducationCheckbox= true;\r\n                }\r\n            });\r\n    }\r\n    changeCertificate(inputValue: any, type): void {\r\n        var file: File = inputValue.target.files[0];\r\n        if (type == \"main\") {\r\n            if (file.type != \"application/pdf\") {\r\n                alert(\"Only accept pdf file\");\r\n                return;\r\n            }\r\n        }\r\n        if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n            myReader.onloadend = (e) => {\r\n                const model: AttachmentModel = {} as AttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = ClaimStatus.Submitted;\r\n                switch (type) {\r\n\r\n                    case \"certificate\":\r\n                        model.attachmentType = AttachmentType.Scholarship;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.educertificates.push(model);\r\n                        break;\r\n                    case \"nonMarriage\":\r\n                        model.attachmentType = AttachmentType.NonMarriage;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.eduNonMarriage.push(model);\r\n                        break;\r\n                    case \"selfAttest\":\r\n                        model.attachmentType = AttachmentType.PassingExamCertificate;\r\n                        model.claimType = ClaimConstants.Education;\r\n                        this.eduSelfAttested.push(model);\r\n                        break;\r\n                    case \"dischargeCertificate\":\r\n                        model.attachmentType = AttachmentType.DischargeCertificate;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthDischargeCertificate = model;\r\n                        break;\r\n                    case \"originalVoucher\":\r\n                        model.attachmentType = AttachmentType.OriginalVouchers;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthOriginalVoucher = model\r\n                        break;\r\n                    case \"healthselfAttest\":\r\n                        model.attachmentType = AttachmentType.DoctorPrescription;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthSelfAttached = model;\r\n                        break;\r\n                    case \"main\":\r\n                        model.attachmentType = AttachmentType.FormV;\r\n                        model.claimType = null;\r\n                        this.mainUpload = model;\r\n                        break;\r\n                    case \"disablityCertificate\":\r\n                        model.attachmentType = AttachmentType.DisabilityCertificate;\r\n                        model.claimType = ClaimConstants.Disability;\r\n                        this.disabilityCertificate = model;\r\n                        break;\r\n                    case \"healthExpensesSheet\":\r\n                        model.attachmentType = AttachmentType.ExpensesSheet;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthExpensesSheet = model;\r\n                        break;\r\n                    case \"condolationCertificate\":\r\n                        model.attachmentType = AttachmentType.Condolationcertificate;\r\n                        model.claimType = ClaimConstants.Disability;\r\n                        this.condolationCertificate = model;\r\n                        break;\r\n                    case \"healthCondolationCertificate\":\r\n                        model.attachmentType = AttachmentType.Condolationcertificate;\r\n                        model.claimType = ClaimConstants.HealthFamily;\r\n                        this.healthCondolationCertificate = model;\r\n                        break;\r\n                }\r\n\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n\r\n    removeUploadCertificates(edu, type) {\r\n        if (type == \"certificate\") {\r\n            const index: number = this.educertificates.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.educertificates.splice(index, 1);\r\n            }\r\n        }\r\n        if (type == \"nonMarriage\") {\r\n            const index: number = this.eduNonMarriage.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.eduNonMarriage.splice(index, 1);\r\n            }\r\n        }\r\n        if (type == \"selfAttest\") {\r\n            const index: number = this.eduSelfAttested.indexOf(edu);\r\n            if (index !== -1) {\r\n                this.eduSelfAttested.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public showChildModal(): void {\r\n        this.lgModal.show();\r\n    }\r\n\r\n    public hideChildModal(): void {\r\n        this.lgModal.hide();\r\n    }\r\n    pfChange(eve) {\r\n\r\n        this.viewPf = !this.viewPf;\r\n        //if (this.beneficiary.benPFStatus != null && this.beneficiary.benPFStatus == 1) {\r\n        //    if (this.beneficiary.regNumber != null && this.beneficiary.regNumber != \"\") {\r\n        //        this.getPfBalance(this.beneficiary.regNumber);\r\n        //    }\r\n        //    else\r\n        //        alert(\"No pf details available for this given SSIN number\");\r\n\r\n        //    this.validatePfSubmit(this.beneficiary.ssI_Number);\r\n        //}\r\n        //else {\r\n\r\n        //    this.disablePFCheckbox = false;\r\n        //    this.pfExsits = true;\r\n        //    this.viewPf = !this.viewPf;\r\n        //}\r\n\r\n    }\r\n    healthChange(eve) {\r\n        this.viewHealth = !this.viewHealth;\r\n        this.getBeneficiaryHealthClaimAmount(this.beneficiary.benSno);\r\n    }\r\n    deathChange(eve) {\r\n        this.viewDeath = !this.viewDeath;\r\n    }\r\n    educationChange(eve) {\r\n\r\n        if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n            var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n            if (eduBenefit != null) {\r\n                var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n            }\r\n            //if (this.eduCount >= 2 && this.claimId == 0) {\r\n            if (cond && this.claimId == 0) {\r\n                this.disableEdu = true;\r\n                this.maxLimitExceeded = true;\r\n                this.restrictSave = true;\r\n                this.viewEducation = false;\r\n                eve.target.checked = false;\r\n                return;\r\n            }\r\n        }\r\n        if (this.benficiaryFamily == null || this.benficiaryFamily.length == 0) {\r\n            this.restrictSave = true; this.viewEducation = false; this.disableEdu = true; this.noDependents = true;\r\n            this.viewEducation = false;\r\n            eve.target.checked = false;\r\n            return;\r\n        }\r\n\r\n        this.viewEducation = eve.target.checked;\r\n        this.validateDependent = false;\r\n    }\r\n    getClaimDetailsByClaimId(id: any) {\r\n        this.dataService\r\n            .getClaimDetailsById(id)\r\n            .subscribe((data: any) => {\r\n                this.claim = data;\r\n                this.isClaimEdit = this.isDisabilityClaimEdit = this.isHealthClaimEdit = true;\r\n                //this.disableHealthCheckbox = true; }\r\n                //else this.disableEducationCheckbox = true; this.disableEdu = true; }\r\n                if (this.claimTypeString == undefined || this.claimTypeString == null) {\r\n                    if (this.claim.educationDetails != null && this.claim.educationDetails.educationHdrId != 0) {\r\n                        this.viewEducation = true;\r\n                        if (this.claim.educationDetails.educationDetailList != null && this.claim.educationDetails.educationDetailList.length > 0) {\r\n                            this.educationDetailsArray = this.claim.educationDetails.educationDetailList;\r\n                            this.rowIndex = this.rowIndex + this.educationDetailsArray.length;\r\n                            if (this.educationDetailsArray != null && this.educationDetailsArray.length > 0) {\r\n                                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                                    if (this.educationDetailsArray[i].presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                        this.viewuploadNonMarriage = true;\r\n                                    }\r\n                                    else {\r\n                                        this.viewuploadNonMarriage = false;\r\n                                    } \r\n                                    if (this.educationDetailsArray[i].lastExamPassedName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                        this.isDisabledBaseOnLastExamPassed = true;\r\n                                        this.viewuploadNonMarriage = true;\r\n                                    }\r\n                                    else {\r\n                                        this.isDisabledBaseOnLastExamPassed = false;\r\n                                        this.viewuploadNonMarriage = false;\r\n                                    }\r\n                                    //Duplicate Dependent\r\n                                    if (this.educationDetailsArray[i].isDuplicate) {\r\n                                        //const data1 = this.benficiaryFamily.find(x => x.benFamilyMemSno == this.educationDetailsArray[i].dependentId);\r\n                                        //var stringMsg = \"Already this Dependent \" + data1.benDependentName + \" has submitted for this year please select another dependent\";\r\n                                        this.isDuplicateDependent = true;\r\n                                        //alert(\"Already claim has submitted for this dependent in this year please select another dependent\");\r\n                                        //                    isValid = false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.claim.healthFamilyDetails != null && this.claim.healthFamilyDetails.healthFamilyId != 0) {\r\n\r\n                        this.viewHealth = true;\r\n                        if (this.claim.healthFamilyDetails.hospitalId != null && this.claim.healthFamilyDetails.hospitalId != undefined && this.claim.healthFamilyDetails.otherHospital != undefined && this.claim.healthFamilyDetails.otherHospital != null) {\r\n                            this.isOtherHospital = true;\r\n                            this.hospotalId = this.claim.healthFamilyDetails.hospitalId;\r\n                        }\r\n                        if (this.claim.healthFamilyDetails.claimFor == 5) {\r\n                            if (this.claim.healthFamilyDetails.typeOfHospitalization != 2) { this.viewSelf = true; }\r\n                        }\r\n                        else if (this.claim.healthFamilyDetails.claimFor == 6) {\r\n                            this.viewFamily = true;\r\n                        }\r\n                        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                            this.viewDateOfAdmit = true;\r\n                            this.disableCost = false;\r\n                            if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                        }\r\n                        else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                            this.viewDateOfFirstAppointment = true;\r\n                            this.showDisCertUpload = false;\r\n                            if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                                this.disableCost = false;\r\n                                if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n\r\n                                    this.viewNameOfClinicalTest = true;\r\n                                    if (this.claim.healthFamilyDetails.clinicalTestDetails != null && this.claim.healthFamilyDetails.clinicalTestDetails.length > 0) {\r\n                                        if (this.clinicalTestLov != null && this.clinicalTestLov.length > 0) {\r\n                                            const selectedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n                                            const deletedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n\r\n                                            for (var i = 0; i < this.claim.healthFamilyDetails.clinicalTestDetails.length; i++) {\r\n                                                var t = this.claim.healthFamilyDetails.clinicalTestDetails[i].clinicalTest;\r\n                                                var s = this.clinicalTestLov.filter(x => x.lovDtlId == t);\r\n\r\n                                                if (s != null) {\r\n                                                    for (var j = 0; j < deletedClinicalTestDetails.length; j++) {\r\n                                                        if (s[0].lovDtlId == deletedClinicalTestDetails[j].lovDtlId) {\r\n                                                            deletedClinicalTestDetails.splice(j, 1);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n\r\n                                            }\r\n                                            if (deletedClinicalTestDetails != null && deletedClinicalTestDetails.length > 0) {\r\n                                                for (var i = 0; i < deletedClinicalTestDetails.length; i++) {\r\n                                                    for (var j = 0; j < selectedClinicalTestDetails.length; j++) {\r\n                                                        if (selectedClinicalTestDetails[j].lovDtlId == deletedClinicalTestDetails[i].lovDtlId) {\r\n                                                            selectedClinicalTestDetails.splice(j, 1);\r\n                                                        }\r\n\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            for (var j = 0; j < selectedClinicalTestDetails.length; j++) { }\r\n                                            this.nameOfClinicalTestIds = selectedClinicalTestDetails;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (this.claim.healthFamilyDetails.admittedDate != null && this.claim.healthFamilyDetails.admittedDate != undefined)\r\n                            this.claim.healthFamilyDetails.admittedDate = new Date(this.claim.healthFamilyDetails.admittedDate);\r\n                        if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined)\r\n                            this.claim.healthFamilyDetails.dischargeDate = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n\r\n                        if (this.claim.healthFamilyDetails.firstAppointmentDate != null) {\r\n                            this.claim.healthFamilyDetails.firstAppointmentDate = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                        }\r\n                        this.claim.healthFamilyDetails.attachmentDTOList.forEach((eachObj) => {\r\n                            if (eachObj.attachmentType === AttachmentType.OriginalVouchers) {\r\n                                this.healthOriginalVoucher = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.DischargeCertificate) {\r\n                                this.healthDischargeCertificate = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.DoctorPrescription) {\r\n                                this.healthSelfAttached = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.ExpensesSheet) {\r\n                                this.healthExpensesSheet = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                this.healthCondolationCertificate = eachObj;\r\n                            }\r\n                        });\r\n                        let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                        for (var i = 0; i < data.length; i++) {\r\n                            this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                        }\r\n                        this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                        var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                        this.result = [];\r\n                        groups.forEach(g =>\r\n                            this.result.push({\r\n                                name: g,\r\n                                values: this.packages.filter(i => i.ailmentName === g)\r\n                            }\r\n                            ));\r\n                    }\r\n                    if (this.claim.disabilityDetails != null && this.claim.disabilityDetails.disabilityId > 0) {\r\n                        this.viewDeath = true;\r\n\r\n                        if (this.claim.disabilityDetails.dateofRelease != null) {\r\n\r\n                            this.claim.disabilityDetails.dateofRelease = new Date(this.claim.disabilityDetails.dateofRelease);\r\n                        }\r\n                        if (this.claim.disabilityDetails.natureOfDisability != null) {\r\n                            this.enableDeatheligibility = true;\r\n                            this.disableEligibility = this.claim.disabilityDetails.claimAmount;\r\n                        }\r\n                        this.claim.disabilityDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                            if (eachObj.attachmentType === AttachmentType.DisabilityCertificate) {\r\n                                this.disabilityCertificate = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                this.condolationCertificate = eachObj;\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                    if (this.claim.providentFundDetails != null && this.claim.providentFundDetails.pfId > 0) {\r\n\r\n                        this.viewPf = true;\r\n                        if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                            this.isPrematureClaim = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claimTypeString == \"Education\") {\r\n                    if (this.claim.educationDetails != null && this.claim.educationDetails.educationHdrId > 0) {\r\n                        this.viewEducation = true;\r\n                        if (this.claim.educationDetails.educationDetailList != null && this.claim.educationDetails.educationDetailList.length > 0) {\r\n                            this.educationDetailsArray = this.claim.educationDetails.educationDetailList;\r\n                            this.rowIndex = this.rowIndex + this.educationDetailsArray.length; debugger;\r\n                            if (this.educationDetailsArray != null && this.educationDetailsArray.length > 0) {\r\n                                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                                    if (this.educationDetailsArray[i].presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                        this.viewuploadNonMarriage = true;\r\n                                    }\r\n                                    else {\r\n                                        this.viewuploadNonMarriage = false;\r\n                                    }\r\n                                    debugger;\r\n                                    if (this.educationDetailsArray[i].lastExamPassedName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n                                        this.isDisabledBaseOnLastExamPassed = true;\r\n                                        this.viewuploadNonMarriage = true;\r\n                                    }\r\n                                    else {\r\n                                        this.isDisabledBaseOnLastExamPassed = false;\r\n                                        this.viewuploadNonMarriage = false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claimTypeString == \"HealthFamily\") {\r\n                    this.disableHealthCheckbox = true;\r\n                    this.disableEducationCheckbox = true;\r\n                    //this.disablePFCheckbox = true;\r\n                    if (this.claim.healthFamilyDetails != null && this.claim.healthFamilyDetails.healthFamilyId != 0) {\r\n                        this.viewHealth = true;\r\n                        if (this.claim.healthFamilyDetails.otherHospital != undefined && this.claim.healthFamilyDetails.otherHospital != null) {\r\n                            this.isOtherHospital = true;\r\n                        }\r\n                        if (this.claim.healthFamilyDetails.claimFor == 5) {\r\n                            if (this.claim.healthFamilyDetails.typeOfHospitalization != 2) { this.viewSelf = true; }\r\n                        }\r\n                        else if (this.claim.healthFamilyDetails.claimFor == 6) {\r\n                            this.viewFamily = true;\r\n                        }\r\n                        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                            this.viewDateOfAdmit = true;\r\n                            this.disableCost = false;\r\n                            if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                        }\r\n                        else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n                            this.viewDateOfFirstAppointment = true;\r\n                            this.showDisCertUpload = false;\r\n\r\n                            if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                                this.disableCost = false;\r\n                                if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                                    this.viewNameOfClinicalTest = true;\r\n                                    if (this.claim.healthFamilyDetails.clinicalTestDetails != null && this.claim.healthFamilyDetails.clinicalTestDetails.length > 0) {\r\n                                        if (this.clinicalTestLov != null && this.clinicalTestLov.length > 0) {\r\n                                            const selectedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n                                            const deletedClinicalTestDetails = Object.assign([], this.clinicalTestLov);\r\n\r\n                                            for (var i = 0; i < this.claim.healthFamilyDetails.clinicalTestDetails.length; i++) {\r\n                                                var t = this.claim.healthFamilyDetails.clinicalTestDetails[i].clinicalTest;\r\n                                                var s = this.clinicalTestLov.filter(x => x.lovDtlId == t);\r\n\r\n                                                if (s != null) {\r\n                                                    for (var j = 0; j < deletedClinicalTestDetails.length; j++) {\r\n                                                        if (s[0].lovDtlId == deletedClinicalTestDetails[j].lovDtlId) {\r\n                                                            deletedClinicalTestDetails.splice(j, 1);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n\r\n                                            }\r\n                                            if (deletedClinicalTestDetails != null && deletedClinicalTestDetails.length > 0) {\r\n                                                for (var i = 0; i < deletedClinicalTestDetails.length; i++) {\r\n                                                    for (var j = 0; j < selectedClinicalTestDetails.length; j++) {\r\n                                                        if (selectedClinicalTestDetails[j].lovDtlId == deletedClinicalTestDetails[i].lovDtlId) {\r\n                                                            selectedClinicalTestDetails.splice(j, 1);\r\n                                                        }\r\n\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            for (var j = 0; j < selectedClinicalTestDetails.length; j++) { }\r\n                                            this.nameOfClinicalTestIds = selectedClinicalTestDetails;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (this.claim.healthFamilyDetails.admittedDate != null && this.claim.healthFamilyDetails.admittedDate != undefined)\r\n                            this.claim.healthFamilyDetails.admittedDate = new Date(this.claim.healthFamilyDetails.admittedDate);\r\n                        if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined)\r\n                            this.claim.healthFamilyDetails.dischargeDate = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n\r\n                        if (this.claim.healthFamilyDetails.firstAppointmentDate != null) {\r\n                            this.claim.healthFamilyDetails.firstAppointmentDate = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                        }\r\n                        this.claim.healthFamilyDetails.attachmentDTOList.forEach((eachObj) => {\r\n                            if (eachObj.attachmentType === AttachmentType.OriginalVouchers) {\r\n                                this.healthOriginalVoucher = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.DischargeCertificate) {\r\n                                this.healthDischargeCertificate = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.DoctorPrescription) {\r\n                                this.healthSelfAttached = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.ExpensesSheet) {\r\n                                this.healthExpensesSheet = eachObj;\r\n                            }\r\n                            if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                                this.healthCondolationCertificate = eachObj;\r\n                            }\r\n                        });\r\n                        let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                        for (var i = 0; i < data.length; i++) {\r\n                            this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                        }\r\n                        this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                        var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                        this.result = [];\r\n                        groups.forEach(g =>\r\n                            this.result.push({\r\n                                name: g,\r\n                                values: this.packages.filter(i => i.ailmentName === g)\r\n                            }\r\n                            ));\r\n                    }\r\n                }\r\n                if (this.claimTypeString == \"Disability\") {\r\n                    this.disableDisabilityCheckbox = true;\r\n                    this.disableHealthCheckbox = true;\r\n                    this.disableEducationCheckbox = true;\r\n                    //this.disablePFCheckbox = true;\r\n                    if (this.claim.disabilityDetails != null && this.claim.disabilityDetails.disabilityId > 0) {\r\n                        this.viewDeath = true;\r\n                        if (this.claim.disabilityDetails.dateofRelease != null) {\r\n                            this.claim.disabilityDetails.dateofRelease = new Date(this.claim.disabilityDetails.dateofRelease);\r\n                        }\r\n                        if (this.claim.disabilityDetails.natureOfDisability != null) {\r\n                            this.enableDeatheligibility = true;\r\n                            this.disableEligibility = this.claim.disabilityDetails.claimAmount;\r\n                        }\r\n                    }\r\n                    this.claim.disabilityDetails.attachmentDTOList.forEach((eachObj) => {\r\n\r\n                        if (eachObj.attachmentType === AttachmentType.DisabilityCertificate) {\r\n                            this.disabilityCertificate = eachObj;\r\n                        }\r\n                        if (eachObj.attachmentType === AttachmentType.Condolationcertificate) {\r\n                            this.condolationCertificate = eachObj;\r\n                        }\r\n\r\n                    });\r\n                }\r\n                if (this.claimTypeString == \"PF\") {\r\n                    if (this.claim.providentFundDetails != null && this.claim.providentFundDetails.pfId > 0) {\r\n                        this.viewPf = true;\r\n                        if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                            this.isPrematureClaim = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null && this.claim.attachment.length > 0) {\r\n                    this.mainUpload = this.claim.attachment[0];\r\n                }\r\n                //  this.mainUpload = this.claim.attachment[0];\r\n                console.log(this.claim);\r\n                this.getBenficiaryFamilyDetails(this.claim.benSno);\r\n                this.getBenficiaryEduCount(this.claim.benSno); \r\n                this.getBenficiarydetails(this.claim.benSno);\r\n            });\r\n    }\r\n    //PF\r\n    validatePfSubmit(ssiNumber: any) {\r\n\r\n        this.dataService\r\n            .validatePfSubmit(ssiNumber, 0)\r\n            .subscribe((data: any) => {\r\n                this.isPFSubmitted = data;\r\n                if (this.isPFSubmitted) {\r\n                    this.disablePFCheckbox = true;\r\n                }\r\n            });\r\n    }\r\n    validatePFData(claimData: ClaimModel, id: any): boolean {\r\n        let isValid = true;\r\n        //this.natureOfDeath = this.dateofDeath = this.isDeath1 = this.isDeath2 = this.isDeath3 = this.placeOfDeathValid = true;\r\n        if (id == 2) {\r\n            if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n        }\r\n        if (this.claim.providentFundDetails.typeOfClaim == undefined) { this.pfTypeOfClaimValid = isValid = false }\r\n        else if (this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) //Premature\r\n        {\r\n            if (this.claim.providentFundDetails.reasonForPreClosure == undefined) { this.reasonForPreclosureValid = isValid = false };\r\n\r\n            if (this.pfLockingPeriod != undefined && this.pfLockingPeriod != null) {\r\n\r\n                var date1 = new Date(this.pfLockingPeriod);\r\n                var timeDiff = (this.maxDate.getTime() - date1.getTime());\r\n                //var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n                if (timeDiff < 0) {\r\n                    alert(\"Premature can not be possible before locking period\");\r\n                    return;\r\n                }\r\n                if (timeDiff < 0 && this.pfAccountStatus.toLowerCase() == \"suspend\") {\r\n                    alert(\"Irrespective of the locking period I can apply for premature\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        else if (this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.FinalPayment) //FinalPayment\r\n        {\r\n            if (this.pfBenefitConfigDetails != null) {\r\n                //final payment  - age > 60 \r\n                var date1 = new Date(this.beneficiary.benDob);\r\n                var age = this.maxDate.getFullYear() - date1.getFullYear();\r\n                var m = this.maxDate.getMonth() - date1.getMonth();\r\n                if (m < 0 || (m === 0 && this.maxDate.getDate() < date1.getDate())) {\r\n                    age--;\r\n                }\r\n\r\n                var cond = eval(age + this.pfBenefitConfigDetails.maturityAgeLogic + this.pfBenefitConfigDetails.maturityAge);\r\n                // if (age < 60) {\r\n                if (cond) {\r\n                    alert(\"you are not eligible for this claim beacause your age less than 60\");\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n    getPfBalance(bensno: any) {\r\n        this.pfExsits = false;\r\n        this.dataService\r\n            .getPfBalance(bensno)\r\n            .subscribe((data: any) => {\r\n                this.pfBalanceDetails = data;\r\n                if (this.pfBalanceDetails != null && this.pfBalanceDetails != undefined) {\r\n                    if (this.pfBalanceDetails.code == \"000\") {\r\n                        //claim amount=   balance + cantribution +( (Contribution/25 ) * 30)\r\n                        this.pfClaimAmount = this.pfBalanceDetails.balance + this.pfBalanceDetails.contribution + ((this.pfBalanceDetails.contribution / 25) * 30);\r\n\r\n                        if (this.pfBenefitConfigDetails != null) {\r\n                            var date = new Date(this.beneficiary.benDob);\r\n                            //this.benMaturityDate = new Date(date.getFullYear() + 60, date.getMonth(), date.getDate());\r\n                            this.benMaturityDate = new Date(date.getFullYear() + this.pfBenefitConfigDetails.maturityAge, date.getMonth(), date.getDate());\r\n                            //pf Locking Period 3 year\r\n                            if (this.beneficiary.benRegDate != null) {\r\n                                var lockingDate = new Date(this.beneficiary.benRegDate);\r\n                                //this.pfLockingPeriod = new Date(lockingDate.getFullYear() + 3, lockingDate.getMonth(), lockingDate.getDate());\r\n                                this.pfLockingPeriod = new Date(lockingDate.getFullYear(), lockingDate.getMonth() + this.pfBenefitConfigDetails.pfLockingPeriodMonths, lockingDate.getDate());\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n\r\n                        this.disablePFCheckbox = true;\r\n                        this.pfExsits = true;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    pfTypeOfClaimChange(eve) {\r\n\r\n        if (this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n            this.isPrematureClaim = true;\r\n            this.reasonForPreclosureValid = true;\r\n        }\r\n        else {\r\n            this.isPrematureClaim = false;\r\n        }\r\n    }\r\n    //health\r\n    hospitalChange(eve) {\r\n        \r\n        if (this.hospotalList.length > 0) {\r\n            var hos = this.hospotalList.find(x => x.hospitalId == eve);\r\n            this.hospotalId = 0;\r\n            if (hos != null) {\r\n                if (hos.hospitalName.toLowerCase() == \"not in the list\") {\r\n                    \r\n                    this.hospotalId = hos.hospitalId;\r\n                }\r\n            }\r\n            if (this.hospotalId > 0) {\r\n                \r\n                this.isOtherHospital = true;\r\n                this.otherHospitalValid = true;\r\n            }\r\n            else {\r\n                this.isOtherHospital = false;\r\n                this.claim.healthFamilyDetails.otherHospital = undefined;\r\n            }\r\n        }\r\n    }\r\n    typeOfClaimChange(eve) {\r\n        if (this.claim.healthFamilyDetails.typeOfClaim == 5) {\r\n            this.claim.healthFamilyDetails.typeOfHospitalization = 1;\r\n        }\r\n        else if (this.claim.healthFamilyDetails.typeOfClaim == 0) {\r\n            this.claim.healthFamilyDetails.typeOfHospitalization = 0;\r\n        }\r\n        this.getBeneficiaryHealthClaimAmount(this.beneficiary.benSno, this.claim.healthFamilyDetails.typeOfClaim);\r\n        this.hospitalizationChange(eve);\r\n    }\r\n    getBeneficiaryHealthClaimAmount(benSno: any, typeOfClaim?: any) {\r\n        this.maxHelathClaimLimitExceeded = false;\r\n        this.dataService\r\n            .getBeneficiaryHealthClaimAmount(benSno, typeOfClaim)\r\n            .subscribe((data: any) => {\r\n                let maxEligibleAmount: number = 0;\r\n                if (typeOfClaim != 0) {\r\n                    if (typeOfClaim == 4) { maxEligibleAmount = HealthClaimEligibility.TreatmentOfAilment; this.typeOfAilmentClaimedAmount = data; }\r\n                    else { maxEligibleAmount = HealthClaimEligibility.Surgery; this.surgeryClaimedAmount = data; }\r\n                    if (data >= maxEligibleAmount) {\r\n                        alert(\"Maximum claim limit has been reached for the selected claim type.\");\r\n                        this.claim.healthFamilyDetails.typeOfClaim = 0;\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    this.totalHealthClaimAmount = data;\r\n                    maxEligibleAmount = HealthClaimEligibility.TreatmentOfAilment + HealthClaimEligibility.Surgery;\r\n                    if (this.totalHealthClaimAmount >= maxEligibleAmount) {\r\n                        this.viewHealth = false;\r\n                        this.maxHelathClaimLimitExceeded = true;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    hospitalizationChange(eve) {\r\n        this.viewDateOfFirstAppointment = this.viewDateOfAdmit = this.viewMetWithAnAccident = this.viewNameOfClinicalTest = false;\r\n        this.showDisCertUpload = this.disableCost = true;\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n            this.viewDateOfAdmit = true;\r\n            this.disableCost = false;\r\n            if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n\r\n            this.claim.healthFamilyDetails.nameOfTheDisease = undefined;\r\n            this.claim.healthFamilyDetails.nameOfClinicalTest = undefined;\r\n        }\r\n        else if (this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n            this.viewDateOfFirstAppointment = true;\r\n            this.showDisCertUpload = false;\r\n\r\n            this.claim.healthFamilyDetails.costOfClinicalTest = undefined;\r\n            this.claim.healthFamilyDetails.costOfMedicine = undefined;\r\n\r\n            if (this.claim.healthFamilyDetails.nameOfTheDisease != null) {\r\n                this.disableCost = false;\r\n                if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n                    this.viewNameOfClinicalTest = true;\r\n                }\r\n            }\r\n        }\r\n        this.claimForChange(eve);\r\n    }\r\n    nameOfDiseaseChange(eve) {\r\n        \r\n        this.viewNameOfClinicalTest = this.disableCost = false;\r\n        if (this.claim.healthFamilyDetails.nameOfTheDisease == 56) {\r\n            this.viewNameOfClinicalTest = true;\r\n        }\r\n        else {\r\n            this.viewNameOfClinicalTest = false;\r\n            this.claim.healthFamilyDetails.nameOfClinicalTest = undefined;\r\n        }\r\n    }\r\n\r\n    claimForChange(eve) {\r\n        debugger;\r\n        this.viewSelf = this.viewFamily = false;\r\n        if (this.claim.healthFamilyDetails.claimFor == 5) {\r\n            if (this.claim.healthFamilyDetails.typeOfHospitalization != 2) {\r\n                this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n                this.viewSelf = true;\r\n            }\r\n        }\r\n        else if (this.claim.healthFamilyDetails.claimFor == 6) {\r\n            this.viewFamily = true;\r\n        }\r\n    }\r\n    natureOfDeathChange(natureOfDeathData) {\r\n        this.viewAccidental = this.viewEligibilityAmount = false;\r\n        if (this.claim.deathDetails.natureofDeath > 0) {\r\n            const data = this.deathConfig.find(x => x.claimConfigId == natureOfDeathData);\r\n            this.viewEligibilityAmount = true; this.deathEligibility = data.annualLimit;\r\n        }\r\n        if (this.claim.deathDetails.natureofDeath == 16) {\r\n            this.viewAccidental = true;\r\n        }\r\n    }\r\n    selectDependent(args) {\r\n        const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == args.target.value);\r\n\r\n        this.dataService\r\n            .isDuplicateDependentSubmitted(data.benSno, data.benFamilyMemSno, this.claimId,true)\r\n            .subscribe((data1: any) => {\r\n                debugger;\r\n                if (!data1) {\r\n                    //--------------\r\n                    if (this.educationDetailsArray.findIndex(x => x.dependentId == args.target.value) != -1 && this.rowIndex == -1) {\r\n                        alert(\"already added please select another dependent\"); this.educationDetails.dependentId = 0; return;\r\n                    }\r\n                    if (data.benDependentRelation.toLowerCase() == \"daughter\") {\r\n                        this.isMarried = this.marriedValid = true;\r\n                        this.getEducationConfiguration();\r\n                        this.getLastExamPassed();\r\n                    }\r\n                    else if (data.benDependentRelation.toLowerCase() == \"son\") {\r\n                        this.educationConfig = this.dataService.eduConfig;\r\n                        const index = this.educationConfig.findIndex(x => x.claimConfigOptionName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\");\r\n                        this.educationConfig.splice(index, 1);\r\n                        // remove item from last Exam passed option\r\n                        const indexLastExamPassed = this.lastExampassed.findIndex(l => l.optionName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\");\r\n                        this.lastExampassed.splice(indexLastExamPassed, 1);\r\n                        //var timeDiff = Math.abs(Date.now() - Date.parse(data.dob));\r\n                        //const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\r\n                        //if (age >= 21) {\r\n                        //    alert(\"your dependent not suitable for this claim beacause your son age 21\");\r\n                        //    return\r\n                        //}\r\n                        this.isMarried = false;\r\n                    }\r\n                    else {\r\n                        this.getEducationConfiguration();\r\n                        this.getLastExamPassed();\r\n                    }\r\n                    this.isDuplicateDependent = false;\r\n                }\r\n                else {\r\n                    this.isDuplicateDependent = true;\r\n                }\r\n                //-------------------\r\n            });\r\n        this.educationDetails.dependentName = args.target.options[args.target.selectedIndex].text;\r\n        this.educationDetails.dependentRelation = args.target.options[args.target.selectedIndex].text.split('-')[1];\r\n    }\r\n\r\n    selectLastExamPassed(args, education: EducationDetailModel) {\r\n        debugger;\r\n        this.educationDetails.lastExamPassedName = args.target.options[args.target.selectedIndex].text;\r\n        if (args.target.options[args.target.selectedIndex].text == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n            this.isDisabledBaseOnLastExamPassed = true;\r\n            this.educationDetails.eligibleAmount = 25000;\r\n            this.viewuploadNonMarriage = true;\r\n            this.educationDetails.presentlyReading = undefined;\r\n            this.educationDetails.dateofAdmission = undefined;\r\n        }\r\n        else {\r\n            this.isDisabledBaseOnLastExamPassed = false;\r\n            this.educationDetails.eligibleAmount = 0;\r\n            this.viewuploadNonMarriage = false;\r\n            this.educationDetails.presentlyReading = undefined;\r\n            this.educationDetails.dateofAdmission = undefined;\r\n        }\r\n    }\r\n\r\n    selectPresentlyReading(args, education: EducationDetailModel) {\r\n        const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == education.dependentId);\r\n\r\n        this.educationDetails.presentlyReadingName = args.target.options[args.target.selectedIndex].text;\r\n        if (this.educationDetails.presentlyReading > 0) {\r\n            const data = this.educationConfig.find(x => x.claimConfigId == this.educationDetails.presentlyReading);\r\n            this.educationDetails.eligibleAmount = data.annualLimit;\r\n        }\r\n        else {\r\n            this.educationDetails.eligibleAmount = 0;\r\n        }\r\n        if (data.benDependentRelation.toLowerCase() == \"daughter\" && this.educationDetails.presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") {\r\n            this.viewuploadNonMarriage = true;\r\n        }\r\n        else {\r\n            this.viewuploadNonMarriage = false;\r\n        }\r\n    }\r\n\r\n    chkAccidentChange(args, value) {\r\n        if (value == true) { this.claim.healthFamilyDetails.claimFor = 5; }\r\n        else { this.claim.healthFamilyDetails.claimFor = 0; }\r\n        this.claimForChange(args);\r\n    }\r\n    validateEducationDetails(details: EducationDetailModel): boolean {\r\n        let isValid = true;\r\n        this.uploadselfattestedValid = this.uploadNonMarriageValid = this.uploadCertificatetValid = this.uplaodmain = this.studentNameValid = this.institutionNameValid = this.institutionContactValid = this.registrationNoValid = this.educationYearValid = this.dateOfAdmissionValid = this.presentlyReadingValid = true;\r\n        if (details.dependentId == undefined || details.dependentId <= 0) { this.studentNameValid = isValid = false; }\r\n        if (details.institutionName == undefined || details.institutionName == \"\") { this.institutionNameValid = isValid = false; }\r\n        if (details.registrationRollNo == undefined || details.registrationRollNo == \"\") { this.registrationNoValid = isValid = false; }\r\n        if (details.institutionContact != undefined && details.institutionContact.toString().length > 0 && details.institutionContact.toString().length < 10) {\r\n            this.institutionContactValid = isValid = false;\r\n        }\r\n        if (details.year == undefined) { this.educationYearValid = isValid = false; }\r\n        if (this.viewuploadNonMarriage) {\r\n            if (this.eduNonMarriage.length == 0) { this.uploadNonMarriageValid = isValid = false }\r\n        }\r\n\r\n        if (this.educertificates.length == 0 && !this.isDisabledBaseOnLastExamPassed) { this.uploadCertificatetValid = isValid = false }\r\n        if (this.eduSelfAttested.length == 0) { this.uploadselfattestedValid = isValid = false }\r\n        console.log(details.dateofAdmission);\r\n        if (details.dateofAdmission == undefined && !this.isDisabledBaseOnLastExamPassed) { this.dateOfAdmissionValid = isValid = false; }\r\n        if ((details.presentlyReading == undefined || details.presentlyReading <= 0) && !this.isDisabledBaseOnLastExamPassed) { this.presentlyReadingValid = isValid = false; }\r\n        debugger;\r\n        if (this.isMarried && (details.isMarried == undefined || details.isMarried == null)) { this.marriedValid = isValid = false; }\r\n        else if(this.isMarried && details.isMarried == \"1\"){\r\n            isValid = false;\r\n            alert(\"This benefit not applicable for married student\");\r\n            return;\r\n        }\r\n        if (this.isDuplicateDependent) { isValid = false; }\r\n        return isValid;\r\n    }\r\n\r\n    addEducationDetails(details: EducationDetailModel) {\r\n        if (this.claim.educationDetails.claimAmount == undefined) { this.claim.educationDetails.claimAmount = 0; }\r\n        if (this.validateEducationDetails(details)) {\r\n            details.statusId = ClaimStatus.Submitted;\r\n            if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) == -1 && this.rowIndex == -1) {\r\n                const attachedList: AttachmentModel[] = [];\r\n                if (this.educertificates.length > 0) {\r\n                    this.educertificates.forEach(contact => {\r\n                        attachedList.push(contact);\r\n                    });\r\n                }\r\n                if (this.eduNonMarriage.length > 0) {\r\n                    this.eduNonMarriage.forEach(contact => {\r\n                        attachedList.push(contact);\r\n                    });\r\n                }\r\n                if (this.eduSelfAttested.length > 0) {\r\n                    this.eduSelfAttested.forEach(contact => {\r\n                        attachedList.push(contact);\r\n                    });\r\n                }\r\n                details.attachmentDetailsList = attachedList;\r\n                details.isDuplicate = false;\r\n                this.educationDetailsArray.push(details);\r\n                this.claim.educationDetails.claimAmount -= this.rowEligibleAmount == undefined ? 0 : this.rowEligibleAmount;\r\n                this.eduCount += 1;\r\n                this.lgModal.hide();\r\n            }\r\n            else if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) != -1 && this.rowIndex == -1) {\r\n                alert(\"already added please select another dependent\"); return;\r\n            }\r\n            else {\r\n                if (this.rowIndex != -1) {\r\n                    if (this.educationDetailsArray.findIndex(x => x.dependentId == details.dependentId) == this.rowIndex) {\r\n                        this.educationDetailsArray.splice(this.rowIndex, 1);\r\n                        this.claim.educationDetails.claimAmount -= this.rowEligibleAmount == undefined ? 0 : this.rowEligibleAmount;\r\n                        const attachedList: AttachmentModel[] = [];\r\n                        if (this.educertificates.length > 0) {\r\n                            this.educertificates.forEach(contact => {\r\n                                attachedList.push(contact);\r\n                            });\r\n                        }\r\n                        if (this.eduNonMarriage.length > 0) {\r\n                            this.eduNonMarriage.forEach(contact => {\r\n                                attachedList.push(contact);\r\n                            });\r\n                        }\r\n                        if (this.eduSelfAttested.length > 0) {\r\n                            this.eduSelfAttested.forEach(contact => {\r\n                                attachedList.push(contact);\r\n                            });\r\n                        }\r\n                        details.attachmentDetailsList = attachedList;\r\n                        details.isDuplicate = false;\r\n                        this.educationDetailsArray.push(details);\r\n                        this.rowIndex = -1;\r\n                        this.rowEligibleAmount = 0;\r\n                        this.lgModal.hide();\r\n                    }\r\n                    else {\r\n                        alert(\"already added please select another dependent\"); return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n                if (eduBenefit != null) {\r\n                    var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n                }\r\n                if (cond) { this.maxLimitExceeded = true; }\r\n            }\r\n            const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == details.dependentId);\r\n            this.claim.educationDetails.claimAmount += details.eligibleAmount == undefined ? 0 : details.eligibleAmount;\r\n            this.educationDetails = {} as EducationDetailModel;\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    editEducationDetails(details: EducationDetailModel) {\r\n        this.educationDetails = details;\r\n        this.eduSelfAttested = [] as AttachmentModel[];\r\n        this.educertificates = [] as AttachmentModel[];\r\n        this.eduNonMarriage = [] as AttachmentModel[];\r\n        this.educationDetails.dateofAdmission = new Date(details.dateofAdmission);\r\n        this.educationDetails.attachmentDetailsList.forEach((eachObj) => {\r\n            if (eachObj.attachmentType === AttachmentType.Scholarship) {\r\n                this.educertificates.push(eachObj);\r\n            }\r\n            if (eachObj.attachmentType === AttachmentType.NonMarriage) {\r\n                this.eduNonMarriage.push(eachObj);\r\n            }\r\n            if (eachObj.attachmentType === AttachmentType.PassingExamCertificate) {\r\n                this.eduSelfAttested.push(eachObj);\r\n            }\r\n        });\r\n        this.rowEligibleAmount = details.eligibleAmount;\r\n        this.rowIndex = this.educationDetailsArray.indexOf(details);\r\n        this.lgModal.show();\r\n    }\r\n    removeEducationDetails(details: EducationDetailModel) {\r\n        const index: number = this.educationDetailsArray.indexOf(details);\r\n        if (index !== -1) {\r\n            this.claim.educationDetails.claimAmount -= this.educationDetailsArray[index].eligibleAmount == undefined ? 0 : this.educationDetailsArray[index].eligibleAmount;\r\n            this.educationDetailsArray.splice(index, 1);\r\n            if (this.educationDetailsArray.findIndex(x => x.presentlyReadingName == \"Education assistance to unmarried daughter for completion of UG Education or Equivalent Skill Development\") != -1) {\r\n                this.viewuploadNonMarriage = true;\r\n            }\r\n            else {\r\n                this.viewuploadNonMarriage = false;\r\n            }\r\n\r\n            this.eduCount -= 1;\r\n            if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n                if (eduBenefit != null) {\r\n                    var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n                }\r\n                if (cond) { this.maxLimitExceeded = true; } else { this.maxLimitExceeded = false; }\r\n            }\r\n\r\n        }\r\n    }\r\n    getHospitalization() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.Hospitalization)\r\n            .subscribe((data: any) => {\r\n                this.hospitalizationLov = data;\r\n            });\r\n    }\r\n    getDiseases() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.Diseases)\r\n            .subscribe((data: any) => {\r\n                this.diseasesLov = data;\r\n            });\r\n    }\r\n    getClinicalTests() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.ClinicalTests)\r\n            .subscribe((data: any) => {\r\n                this.clinicalTestLov = data;\r\n            });\r\n    }\r\n    getHealthClainFor() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.ClaimFor)\r\n            .subscribe((data: any) => {\r\n                this.healthtypeofClaim = data;\r\n            });\r\n    }\r\n    getLastExamPassed() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.LastExamPassed)\r\n            .subscribe((data: any) => {\r\n                this.lastExampassed = data;\r\n            });\r\n    }\r\n\r\n    getPfConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.PF)\r\n            .subscribe((data: any) => {\r\n                this.pfConfig = data;\r\n            });\r\n    }\r\n    getHealthandFamilyConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.HealthFamily)\r\n            .subscribe((data: any) => {\r\n                this.healthConfig = data;\r\n            });\r\n    }\r\n    getEducationConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.Education)\r\n            .subscribe((data: any) => {\r\n                this.educationConfig = data;\r\n                this.dataService.eduConfig = data;\r\n            });\r\n    }\r\n    getDeathConfiguration() {\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.Death)\r\n            .subscribe((data: any) => {\r\n                this.deathConfig = data;\r\n            });\r\n    }\r\n    getDisabilityConfiguration() {\r\n        debugger;\r\n        this.dataService\r\n            .getClaimConfiguration(ClaimConstants.Disability)\r\n            .subscribe((data: any) => {\r\n                console.log(data);\r\n                this.disabilityConfig = data;\r\n            });\r\n    }\r\n    valuechange(ssnNo: any) {\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsByNo(ssnNo)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n\r\n                if (this.beneficiary != null) {\r\n                    if (this.beneficiary.isActive) {\r\n                        this.benficiaryInactive = false;\r\n                        this.getBenficiaryFamilyDetails(this.beneficiary.benSno);\r\n                        this.getBenficiaryEduCount(this.beneficiary.benSno);\r\n                    }\r\n                    else {\r\n                        this.benficiaryInactive = true; this.restrictSave = true; this.viewEducation = false; this.disableEdu = true;\r\n                    }\r\n                }\r\n                console.log(this.beneficiary);\r\n            });\r\n    }\r\n    getHospitals() {\r\n        this.dataService\r\n            .getAllHospitals()\r\n            .subscribe((data: any) => {\r\n                this.hospotalList = data;\r\n                console.log(this.hospotalList);\r\n            });\r\n    }\r\n\r\n    getBenficiaryEduCount(id: any) {\r\n        this.dataService\r\n            .getBeneficiaryEduCount(id)\r\n            .subscribe((data: any) => {\r\n                this.eduCount = data;\r\n                if (this.mode == \"draft\" && (this.educationDetailsArray != null && this.educationDetailsArray.length > 0)) {\r\n                    this.eduCount = this.eduCount + this.educationDetailsArray.length;\r\n                }\r\n                if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                    var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.MaxLimitExceeded.toLowerCase());\r\n                    if (eduBenefit != null) {\r\n                        var cond = eval(this.eduCount + eduBenefit.logic + eduBenefit.value);\r\n\r\n                    if (cond && this.claimId == 0) {\r\n                        //this.disableEdu = true;\r\n                        //this.maxLimitExceeded = true;\r\n                        //this.restrictSave = true;\r\n                    }\r\n                    else {\r\n                        this.disableEdu = false;\r\n                        this.maxLimitExceeded = false;\r\n                        this.restrictSave = false;\r\n                    }\r\n                }\r\n                }\r\n            });\r\n    }\r\n    getBenficiaryFamilyDetails(id: any) {\r\n        this.dataService\r\n            .getBeneficiaryFamilyDetails(id, ClaimConstants.Education)\r\n            .subscribe((data: any) => {\r\n                this.benficiaryFamily = data;\r\n                if (this.benficiaryFamily != null && this.benficiaryFamily.length > 0) { this.noDependents = false; }\r\n                //else { this.restrictSave = true; this.viewEducation = false; this.disableEdu = true; this.noDependents = true; }\r\n                console.log(this.benficiaryFamily);\r\n            });\r\n    }\r\n\r\n    validateClaimsData(claimData: ClaimModel, id: any): boolean {\r\n\r\n        let isValid = true;\r\n        if (id == 1) return isValid;\r\n\r\n        this.educationCheck = this.ssnNoValid = true;\r\n        if (id == 2) {\r\n            if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n        }\r\n        return isValid;\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        if (this.saveType == 1) {\r\n            window.location.href = \"claim/DraftClaims\";\r\n        }\r\n        else if (this.mode == \"claim\") {\r\n            window.location.href = \"claim/claims\";\r\n        } else if (this.mode == \"referal\") {\r\n            window.location.href = \"claim/referralclaims\";\r\n        }\r\n        else {\r\n            window.location.href = \"claim/claims\";\r\n\r\n        }\r\n\r\n    }\r\n    cancleClick() {\r\n        if (this.saveType == 1) {\r\n            window.location.href = \"claim/DraftClaims\";\r\n        }\r\n        else if (this.mode == \"claim\") {\r\n            window.location.href = \"claim/claims\";\r\n        } else if (this.mode == \"referal\") {\r\n            window.location.href = \"claim/referralclaims\";\r\n        }\r\n        else {\r\n            window.location.href = \"claim/claims\";\r\n\r\n        }\r\n    }\r\n    validateDisabilityData(claimData: ClaimModel, id: any): boolean {\r\n\r\n        let isValid = true;\r\n        this.natureOfDisability = this.dateofrelease = this.disabilityCertificateUploaded = this.isDeathorpermanent1 = this.isDeathorpermanent2 = this.isDeathorpermanent3 = this.checkNatureOfDisability = this.condolationCertificateUploaded = true;\r\n        this.isClaimEffectiveDate = false;\r\n        if (id == 2) {\r\n            if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n        }\r\n        if (this.disabilityCertificate.fileName == undefined) { this.disabilityCertificateUploaded = isValid = false };\r\n        if (this.claim.disabilityDetails.dateofRelease == undefined) { this.dateofrelease = isValid = false };\r\n        //if (this.claim.disabilityDetails.natureOfDisability == undefined) { this.natureOfDisability = isValid = false }\r\n        if (this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyintentional == false || this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyintentional == undefined) { this.isDeathorpermanent1 = isValid = false }\r\n        if (this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == false || this.claim.disabilityDetails.isDeathorpermanentdisabilitynotcausedbyinjuries == undefined) { this.isDeathorpermanent2 = isValid = false }\r\n        if (this.claim.disabilityDetails.isOtherFinancialAssistance == false || this.claim.disabilityDetails.isOtherFinancialAssistance == undefined) { this.isDeathorpermanent3 = isValid = false }\r\n        if (this.claim.disabilityDetails.natureOfDisability == undefined) {\r\n            this.natureOfDisability = isValid = false;\r\n        }\r\n        else {\r\n            let data = this.beneficiaryAppliedDisabilities.find(x => x == this.claim.disabilityDetails.natureOfDisability);\r\n            if (data) {\r\n                this.checkNatureOfDisability = isValid = false;\r\n                //alert(\"Claim has been already submitted with this nature of disability\");\r\n                //return;\r\n            }\r\n        }\r\n        if (this.enableReasonForDelaySubmission) {\r\n            if (this.claim.disabilityDetails.reasonForDelaySubmission == undefined) { this.reasonForDelayValid = isValid = false };\r\n            if (this.condolationCertificate.fileName == undefined) { this.condolationCertificateUploaded = isValid = false };\r\n        }\r\n        debugger;\r\n        if (this.claim.disabilityDetails.dateofRelease != undefined) { \r\n            if (this.claim.disabilityDetails.dateofRelease < new Date(this.disabilityClaimEffectiveDate)) {\r\n                this.claimEffectiveDate = this.disabilityClaimEffectiveDate;\r\n                this.isClaimEffectiveDate = true;\r\n                isValid = false;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n    validateHealthData(claimData: ClaimModel, id: any): boolean {\r\n        let isValid = true;\r\n        this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded = true;//this.originalVoucher =\r\n        this.isClaimEffectiveDate = false;\r\n        if (id == 2) {\r\n            if (this.mainUpload == undefined) { this.uplaodmain = isValid = false }\r\n        }\r\n        if (this.hospotalId > 0) {\r\n            if (this.claim.healthFamilyDetails.otherHospital == undefined) { this.otherHospitalValid = isValid = false };\r\n        }\r\n        if (this.claim.healthFamilyDetails.claimFor == undefined) { this.claimForValid = isValid = false }\r\n        if (this.claim.healthFamilyDetails.typeOfClaim == undefined) { this.typeOfClaimValid = isValid = false }\r\n        if (this.claim.healthFamilyDetails.hospitalId == 0 || this.claim.healthFamilyDetails.hospitalId == undefined) { this.hospital = isValid = false }\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 0 || this.claim.healthFamilyDetails.typeOfHospitalization == undefined) { this.hospitalization = isValid = false }\r\n        if (this.claim.healthFamilyDetails.isCertifynotESI == false || this.claim.healthFamilyDetails.isCertifynotESI == undefined) { this.rigisterESI = isValid = false }\r\n        if (this.healthSelfAttached.fileName == undefined) { this.hospitalselfAttested = isValid = false };\r\n        //if (this.healthOriginalVoucher.fileName == undefined) { this.originalVoucher = isValid = false };\r\n        if (this.showDisCertUpload && this.healthDischargeCertificate.fileName == undefined) { this.dischargeCertificate = isValid = false };\r\n\r\n        if (this.viewDateOfAdmit) {\r\n            if (this.claim.healthFamilyDetails.admittedDate == undefined) { this.dateofAdmin = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.admittedDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n            if (this.claim.healthFamilyDetails.dischargeDate == undefined) { this.dateofDischargeValid = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.dischargeDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n        }\r\n        if (this.viewDateOfFirstAppointment) {\r\n            if (this.claim.healthFamilyDetails.firstAppointmentDate == undefined) { this.dateofAppointment = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.firstAppointmentDate  < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n        }\r\n        if (this.viewFamily) {\r\n            if (this.claim.healthFamilyDetails.familyMemberId == 0 || this.claim.healthFamilyDetails.familyMemberId == undefined) { this.rigisterESI = isValid = false }\r\n        }\r\n        if (this.viewSelf) {\r\n            if (this.claim.healthFamilyDetails.loeFromDate == undefined) { this.loeFromDate = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.loeFromDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n            if (this.claim.healthFamilyDetails.loeToDate == undefined) { this.loeToDate = isValid = false }\r\n            else {\r\n                if (this.claim.healthFamilyDetails.loeToDate < new Date(this.healthFamilyClaimEffectiveDate)) {\r\n                    this.claimEffectiveDate = this.healthFamilyClaimEffectiveDate;\r\n                    this.isClaimEffectiveDate = true;\r\n                    isValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (this.claim.healthFamilyDetails.costOfClinicalTest == undefined && (this.viewDateOfAdmit && this.claim.healthFamilyDetails.costOfHospitalization == undefined) && this.claim.healthFamilyDetails.costOfMedicine == undefined) {\r\n            isValid = false;\r\n            alert(\"Please enter atleast one cost\");\r\n            return;\r\n        }    \r\n        else {\r\n            if (this.claim.healthFamilyDetails.costOfClinicalTest == 0 && this.claim.healthFamilyDetails.costOfHospitalization == 0 && this.claim.healthFamilyDetails.costOfMedicine == 0) {\r\n                isValid = false;\r\n                alert(\"Please enter atleast one valid cost\");\r\n                return;\r\n            }\r\n            let amount = Number(claimData.healthFamilyDetails.costOfClinicalTest != undefined ? claimData.healthFamilyDetails.costOfClinicalTest : 0) + Number(claimData.healthFamilyDetails.costOfHospitalization != undefined ? claimData.healthFamilyDetails.costOfHospitalization : 0) + Number(claimData.healthFamilyDetails.costOfMedicine != undefined ? claimData.healthFamilyDetails.costOfMedicine : 0);\r\n            if (amount == 0) {\r\n                isValid = false;\r\n                alert(\"Please enter atleast one valid cost\");\r\n                return;\r\n            }\r\n            let remainingAmount = 0;\r\n            if (this.claim.healthFamilyDetails.typeOfClaim == 4) {\r\n                remainingAmount = HealthClaimEligibility.TreatmentOfAilment - this.typeOfAilmentClaimedAmount;\r\n            }\r\n            else {\r\n                remainingAmount = HealthClaimEligibility.Surgery - this.surgeryClaimedAmount;\r\n            }\r\n\r\n            if (amount > remainingAmount) {\r\n                isValid = false;\r\n                alert(\"Cost of Clinical Test, Cost of Medicine, Cost of Hospitalization should not be more than \" + remainingAmount);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.enableReasonForDelaySubmissionInHealth) {\r\n            if (this.claim.healthFamilyDetails.reasonForDelaySubmission == undefined) { this.reasonForHealthDelayValid = isValid = false };\r\n            if (this.healthCondolationCertificate.fileName == undefined) { this.healthCondolationCertificateUploaded = isValid = false };\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n    downLoadPdf(claimData: ClaimModel, type) {\r\n        this.claim.deathDetails = null;\r\n        if (!this.viewPf) {\r\n            this.claim.providentFundDetails = null;\r\n        }\r\n        if (!this.viewDeath) {\r\n            this.claim.disabilityDetails = null;\r\n        }\r\n        else {\r\n            claimData.disabilityDetails.natureOfDisabilityName = this.natureOfDisabilityName;\r\n        }\r\n        if (!this.viewHealth) {\r\n            this.claim.healthFamilyDetails = null;\r\n        }\r\n        if (!this.viewEducation) {\r\n            this.claim.educationDetails = null;\r\n        }\r\n        else {\r\n            claimData.educationDetails.educationDetailList = this.educationDetailsArray;\r\n        }\r\n        this.claim.benSno = this.beneficiary.benSno;\r\n        claimData.benSno = this.claim.benSno;\r\n        claimData.benName = this.beneficiary.benFullName;\r\n        claimData.attachment = this.mainUploadList;\r\n        claimData.ssin = this.beneficiary.ssI_Number;\r\n        claimData.entryPoint = EntryPoint.Beneficiary;\r\n        claimData.onBehalfBen = true;\r\n        this.dataService\r\n            .genaratePdfFormV(claimData)\r\n            .then((data: any) => {\r\n                var blob = new Blob([data.body], { type: 'application/pdf' });\r\n                if (type == 'print') {\r\n                    const blobUrl = URL.createObjectURL(blob);\r\n                    const iframe = document.createElement('iframe');\r\n                    iframe.style.display = 'none';\r\n                    iframe.src = blobUrl;\r\n                    document.body.appendChild(iframe);\r\n                    iframe.contentWindow.print();\r\n                }\r\n                else {\r\n                    FileSaver.saveAs(blob, \"FormV.pdf\");\r\n                }\r\n                this.disableSubmitbutton = false;\r\n                this.pdfModal.hide();\r\n                //var url = window.URL.createObjectURL(blob);\r\n                //this.disableSubmitbutton = false;\r\n                //window.open(url);\r\n            });\r\n    }\r\n\r\n    GenaratePdf(claimData: ClaimModel, type) {\r\n        let isValid = true;\r\n        if (this.viewHealth) {\r\n            if (this.validateHealthData(claimData, type)) {\r\n                if (this.claim.healthFamilyDetails.claimFor == 5 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                    claimData.healthFamilyDetails.loeAmount = this.lossOfEmploymentAmount;\r\n                }\r\n                else {\r\n                    claimData.healthFamilyDetails.loeAmount = 0;\r\n                }\r\n            }\r\n            else {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.viewDeath) {\r\n            \r\n            if (!this.validateDisabilityData(claimData, type)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.viewPf) {\r\n\r\n            if (!this.validatePFData(claimData, type)) {\r\n                //return;\r\n                isValid = false;\r\n            }\r\n            else {\r\n                claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n            }\r\n        }\r\n        //Keep Education Validations after all the health,pf,death, disability validations\r\n        if (this.viewEducation) {\r\n            if (this.educationDetailsArray.length == 0) {\r\n                alert(\"Please add atleast one student\");\r\n                //return;\r\n                isValid = false;\r\n            }\r\n            else if (this.educationDetailsArray.length > 0) {\r\n                debugger;\r\n                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                    if (this.educationDetailsArray[i].isDuplicate) {\r\n                        alert(\"Already claim has submitted for this dependent in this year please select another dependent\");\r\n                        isValid = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isClaimEffectiveDate = false;\r\n                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                    if (this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n                        if (new Date(this.educationDetailsArray[i].dateofAdmission) < new Date(this.educationClaimEffectiveDate)) {\r\n                            this.claimEffectiveDate = this.educationClaimEffectiveDate;\r\n                            this.isClaimEffectiveDate = true;\r\n                            isValid = false;\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!claimData.educationDetails.isanyothersourceofthegovernment) { return this.educationCheck = isValid = false; }\r\n        }\r\n        if (isValid == false) {\r\n            return;\r\n        }\r\n        if (this.validateClaimsData(claimData, 3)) {\r\n\r\n            this.pdfModal.show();\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveClaimsData(claimData: ClaimModel, type: number) {\r\n        let isValid = true;\r\n        this.validateDependent = false;\r\n        if (type != 1) {\r\n            if (this.viewHealth) {\r\n                if (!this.validateHealthData(claimData, type)) {\r\n                    //return;\r\n                    isValid = false;\r\n                }\r\n            }\r\n            if (this.viewDeath) {\r\n                if (!this.validateDisabilityData(claimData, type)) {\r\n                    //return;\r\n                    isValid = false;\r\n                }\r\n            }\r\n            if (this.viewPf) {\r\n                if (!this.validatePFData(claimData, type)) {\r\n                    isValid = false;\r\n                    return;\r\n\r\n                }\r\n            }\r\n            //Keep Education Validations after all the health,pf,death, disability validations\r\n            if (this.viewEducation) {\r\n                if (this.educationDetailsArray.length == 0) {\r\n                    alert(\"Please add atleast one student\");\r\n                    //return;\r\n                    isValid = false;\r\n                }\r\n                if (!claimData.educationDetails.isanyothersourceofthegovernment) { return this.educationCheck = isValid = false; }\r\n                this.isClaimEffectiveDate = false;\r\n                for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                    if (this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n                        if (new Date(this.educationDetailsArray[i].dateofAdmission) < new Date(this.educationClaimEffectiveDate)) {\r\n                            this.claimEffectiveDate = this.educationClaimEffectiveDate;\r\n                            this.isClaimEffectiveDate = true;\r\n                            isValid = false;\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isValid == false) {\r\n            return;\r\n        }\r\n        if (this.validateClaimsData(claimData, type)) {\r\n\r\n            this.UpdateClaimStatusIdByStatus(type);\r\n\r\n            if (this.ClaimStatusId <= 7)\r\n                claimData.workflowId = WorkflowTrans.workflow;\r\n            else\r\n                claimData.workflowId = WorkflowTrans.workflowreferral;\r\n\r\n            const attachedList: Array<AttachmentModel> = [];\r\n            this.claim.deathDetails = null;\r\n            if (!this.viewPf) {\r\n                this.claim.providentFundDetails = null;\r\n            }\r\n            if (!this.viewDeath) {\r\n                this.claim.disabilityDetails = null;\r\n            }\r\n            if (!this.viewHealth) {\r\n                this.claim.healthFamilyDetails = null;\r\n            }\r\n            if (!this.viewEducation) {\r\n                this.claim.educationDetails = null;\r\n            }\r\n            if (this.educertificates.length > 0) {\r\n                this.educertificates.forEach(contact => {\r\n                    attachedList.push(contact);\r\n                });\r\n            }\r\n            if (this.eduNonMarriage.length > 0) {\r\n                this.eduNonMarriage.forEach(contact => {\r\n                    attachedList.push(contact);\r\n                });\r\n            }\r\n            if (this.eduSelfAttested.length > 0) {\r\n                this.eduSelfAttested.forEach(contact => {\r\n                    attachedList.push(contact);\r\n                });\r\n            }\r\n            // this.mainUploadList.push(this.mainUpload);\r\n            this.claim.benSno = this.beneficiary.benSno;\r\n            if (this.mainUpload != undefined) {\r\n                claimData.attachment.push(this.mainUpload);\r\n            }\r\n            claimData.ssin = this.beneficiary.ssI_Number;\r\n            claimData.entryPoint = EntryPoint.Beneficiary;\r\n            if (this.claim.educationDetails != null) {\r\n                if (this.educationDetailsArray.length > 0) {\r\n                    claimData.educationDetails.educationDetailList = this.educationDetailsArray;\r\n                    //---------------------------\r\n                    //this.expection = [];\r\n                    this.educationClaimExceptionDetails = [];\r\n                    for (var i = 0; i < this.educationDetailsArray.length; i++) {\r\n                        const data = this.benficiaryFamily.find(x => x.benFamilyMemSno == this.educationDetailsArray[i].dependentId);\r\n                        if (this.educationBenefitConfigDetails != null && this.educationBenefitConfigDetails.length > 0) {\r\n                            //Exception Rule - 1 (if currentdate-admissiondate >90) \r\n                            if (this.educationDetailsArray[i].dateofAdmission != null && this.educationDetailsArray[i].dateofAdmission != undefined) {\r\n\r\n                                var date1 = new Date(this.educationDetailsArray[i].dateofAdmission);\r\n                                var date2 = new Date(Date.now());\r\n                                var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n                                var eduBenefit = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.DateofAdmissionExceeding.toLowerCase());\r\n                                if (eduBenefit != null) {\r\n                                    var cond = eval(diffDays + eduBenefit.logic + eduBenefit.value);\r\n                                    //if (diffDays > 90) {\r\n                                    if (cond) {\r\n                                        const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                        exp.exceptionText = \"Student (Dependent) \" + data.benDependentName + \" admission date exceeding 90 days\";\r\n                                        exp.exceptionCapturedDate = new Date();\r\n                                        exp.raisedBy = this.userService.user.userid;\r\n\r\n                                        //this.expection.push(exp);\r\n                                        this.educationClaimExceptionDetails.push(exp);\r\n                                    }\r\n                                }\r\n                                //Exception Rule - 2 IF(BenDependentSonAge by admissiondate> 21) \r\n                                if (data.benDependentRelation.toLowerCase() == \"son\") {\r\n\r\n                                    var date1 = new Date(this.educationDetailsArray[i].dateofAdmission);\r\n                                    var date2 = new Date(data.dob);\r\n                                    var timeDiff = Math.abs(date1.getTime() - date2.getTime());\r\n                                    const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\r\n\r\n                                    var eduBenefit2 = this.educationBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == EducationBenefitConfiguration.SonAgeExceeding.toLowerCase());\r\n                                    if (eduBenefit2 != null) {\r\n                                        var cond2 = eval(age + eduBenefit2.logic + eduBenefit2.value);\r\n                                        //if (age >= 21) {\r\n                                        if (cond2) {\r\n                                            const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                            exp.exceptionText = \"Student (Dependent) \" + data.benDependentName + \" age exceeding 21\";\r\n                                            exp.exceptionCapturedDate = new Date();\r\n                                            exp.raisedBy = this.userService.user.userid;\r\n\r\n                                            // this.expection.push(exp);\r\n                                            this.educationClaimExceptionDetails.push(exp);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    claimData.educationDetails.educationClaimExceptionDetails = this.educationClaimExceptionDetails;\r\n\r\n                    //--------------------\r\n                }\r\n                else\r\n                    claimData.educationDetails.educationDetailList = null;\r\n                //claimData.educationDetails.attachmentDetailsList = attachedList;\r\n                claimData.educationDetails.claimType = ClaimConstants.Education;\r\n                claimData.educationDetails.statusId = this.ClaimStatusId;\r\n                claimData.educationDetails.CreatedBy = this.userService.user.userid;\r\n            }\r\n            if (this.claim.healthFamilyDetails != null) {\r\n                //-------------------------------\r\n                //this.expection = []; \r\n                this.healthClaimExceptionDetails = [];\r\n                if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n                    //Exception Rule - 4 if(Currentdate-Firstappointmentdate >60 and OPD)\r\n                    if (this.claim.healthFamilyDetails.firstAppointmentDate != null && this.claim.healthFamilyDetails.firstAppointmentDate != undefined) {\r\n\r\n                        var date1 = new Date(this.claim.healthFamilyDetails.firstAppointmentDate);\r\n                        var date2 = new Date(Date.now());\r\n                        var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                        //---------------------\r\n\r\n                        var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.DateofFirstAppointmentExceeding.toLowerCase());\r\n                        if (helBenefit != null) {\r\n                            var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                            if (cond && this.claim.healthFamilyDetails.typeOfHospitalization == 2) {\r\n\r\n                                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                exp.exceptionText = \"First appointment date exceeding 60 days\";\r\n                                exp.exceptionCapturedDate = new Date();\r\n                                exp.raisedBy = this.userService.user.userid;\r\n\r\n                                //this.expection.push(exp);\r\n                                this.healthClaimExceptionDetails.push(exp);\r\n                            }\r\n                        }\r\n                    }\r\n                    //Exception Rule - 5 if(Currentdate-Dischargedate>60 and Hospitalization)\r\n                    if (this.claim.healthFamilyDetails.dischargeDate != null && this.claim.healthFamilyDetails.dischargeDate != undefined) {\r\n\r\n                        var date1 = new Date(this.claim.healthFamilyDetails.dischargeDate);\r\n                        var date2 = new Date(Date.now());\r\n                        var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                        //---------------------\r\n\r\n                        var helBenefit2 = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.DateofDischargeExceeding.toLowerCase());\r\n                        if (helBenefit2 != null) {\r\n                            var cond2 = eval(diffDays + helBenefit2.logic + helBenefit2.value);\r\n                            if (cond2 && this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n\r\n                                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                exp.exceptionText = \"Discharge date exceeding 60 days\";\r\n                                exp.exceptionCapturedDate = new Date();\r\n                                exp.raisedBy = this.userService.user.userid;\r\n\r\n                                // this.expection.push(exp);\r\n                                this.healthClaimExceptionDetails.push(exp);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //--------------------\r\n\r\n                this.healthFamilyPackages = [];\r\n                claimData.healthFamilyDetails.healthFamilyPackages = [];\r\n                for (var i = 0; i < this.selectedPackages.length; i++) {\r\n\r\n                    const oo: HealthFamilyPackage = {} as HealthFamilyPackage;\r\n\r\n                    if (claimData.claimId > 0) {\r\n                        oo.healthFamilyId = claimData.healthFamilyDetails.healthFamilyId;\r\n                    }\r\n                    oo.packageID = this.selectedPackages[i].packageID;\r\n                    oo.ailmentName = this.selectedPackages[i].ailmentName;\r\n                    oo.packageName = this.selectedPackages[i].packageName;\r\n                    this.healthFamilyPackages.push(oo);\r\n                }\r\n                claimData.healthFamilyDetails.healthFamilyPackages = this.healthFamilyPackages;\r\n                claimData.healthFamilyDetails.claimAmount = Number(claimData.healthFamilyDetails.costOfClinicalTest != undefined ? claimData.healthFamilyDetails.costOfClinicalTest : 0) + Number(claimData.healthFamilyDetails.costOfHospitalization != undefined ? claimData.healthFamilyDetails.costOfHospitalization : 0) + Number(claimData.healthFamilyDetails.costOfMedicine != undefined ? claimData.healthFamilyDetails.costOfMedicine : 0) + ((this.viewSelf) ? claimData.healthFamilyDetails.loeAmount : 0);\r\n                claimData.healthFamilyDetails.claimType = ClaimConstants.HealthFamily;\r\n                claimData.healthFamilyDetails.statusId = this.ClaimStatusId;\r\n                claimData.healthFamilyDetails.loeAmount = this.lossOfEmploymentAmount;\r\n                claimData.healthFamilyDetails.createdBy = this.userService.user.userid;\r\n                if (!this.isOtherHospital) {\r\n                    claimData.healthFamilyDetails.otherHospital == undefined;\r\n                }\r\n                else {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Application has been submitted with a non listed hospital\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = this.userService.user.userid;\r\n\r\n                    // this.expection.push(exp);\r\n                    this.healthClaimExceptionDetails.push(exp);\r\n                }\r\n                if (!this.viewDateOfAdmit) {\r\n                    claimData.healthFamilyDetails.admittedDate == undefined;\r\n                    claimData.healthFamilyDetails.dischargeDate == undefined;\r\n                    claimData.healthFamilyDetails.costOfHospitalization == undefined;\r\n                }\r\n\r\n                if (!this.viewDateOfFirstAppointment) {\r\n                    claimData.healthFamilyDetails.firstAppointmentDate == undefined;\r\n                    claimData.healthFamilyDetails.nameOfTheDisease == undefined;\r\n                    // claimData.healthFamilyDetails.nameOfClinicalTest == undefined;\r\n                    this.nameOfClinicalTestIds = [];\r\n                }\r\n                else {\r\n                    if (!this.viewNameOfClinicalTest) {\r\n                        // claimData.healthFamilyDetails.nameOfClinicalTest == undefined;\r\n                        this.nameOfClinicalTestIds = [];\r\n                    }\r\n                    else {\r\n                        if (this.nameOfClinicalTestIds != null && this.nameOfClinicalTestIds.length > 0) {\r\n                            this.clinicalTestDetails = [];\r\n                            for (var i = 0; i < this.nameOfClinicalTestIds.length; i++) {\r\n                                const testId: ClinicalTestModel = {} as ClinicalTestModel;\r\n                                var t = this.nameOfClinicalTestIds[i].lovDtlId;\r\n                                testId.clinicalTest = Number(t);\r\n                                this.clinicalTestDetails.push(testId);\r\n                            }\r\n\r\n                            if (this.clinicalTestDetails.length > 0) {\r\n                                claimData.healthFamilyDetails.clinicalTestDetails = this.clinicalTestDetails;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this.viewSelf) {\r\n                    claimData.healthFamilyDetails.loeFromDate = undefined;\r\n                    claimData.healthFamilyDetails.loeToDate = undefined;\r\n                }\r\n                this.healthAttachmentList.push(this.healthOriginalVoucher);\r\n                this.healthAttachmentList.push(this.healthSelfAttached);\r\n                if (this.healthDischargeCertificate.fileName != undefined) {\r\n                    this.healthAttachmentList.push(this.healthDischargeCertificate);\r\n                }\r\n                if (this.healthExpensesSheet.fileName != undefined) {\r\n                    this.healthAttachmentList.push(this.healthExpensesSheet);\r\n                }\r\n                if (this.enableReasonForDelaySubmissionInHealth) {\r\n                    this.healthAttachmentList.push(this.healthCondolationCertificate);\r\n                }\r\n                claimData.healthFamilyDetails.attachmentDTOList = this.healthAttachmentList;\r\n            }\r\n            if (this.claim.disabilityDetails != null) {\r\n                claimData.disabilityDetails.claimType = ClaimConstants.Disability;\r\n                claimData.disabilityDetails.statusId = this.ClaimStatusId;\r\n                claimData.disabilityDetails.createdBy = this.userService.user.userid;\r\n                claimData.disabilityDetails.claimAmount = this.disableEligibility;\r\n                this.disabilityAttachmentList.push(this.disabilityCertificate);\r\n                if (this.enableReasonForDelaySubmission) {\r\n                    this.disabilityAttachmentList.push(this.condolationCertificate);\r\n                }\r\n                claimData.disabilityDetails.attachmentDTOList = this.disabilityAttachmentList;\r\n\r\n                //Disability Exceptions\r\n                //Exception Rule - Selected Other Nature Of Disability\r\n                this.disabilityClaimExceptionDetails = [];\r\n                //let data = this.beneficiaryAppliedDisabilities.find(x => x == this.claim.disabilityDetails.natureOfDisability);\r\n                //if (data == undefined) {\r\n                if (this.beneficiaryAppliedDisabilities.length > 0) {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Beneficiary applied another nature of disability\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = this.userService.user.userid;\r\n                    this.disabilityClaimExceptionDetails.push(exp);\r\n                }\r\n                //Exception Rule - if(Currentdate-dateofRelease >90)\r\n                if (this.claim.disabilityDetails.dateofRelease != null && this.claim.disabilityDetails.dateofRelease != undefined) {\r\n\r\n                    var date1 = new Date(this.claim.disabilityDetails.dateofRelease);\r\n                    var date2 = new Date(Date.now());\r\n                    var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                    //---------------------\r\n                    //var post = 10, logic = '>', value = 100;\r\n                    //var valid = eval(post + logic + value);\r\n                    if (this.disabilityBenefitConfigDetails != null && this.disabilityBenefitConfigDetails.length > 0) {\r\n                        var disBenefit = this.disabilityBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == DisabilityBenefitConfiguration.DateOfReleaseExceeding.toLowerCase()); \r\n                        if (disBenefit != null) {\r\n                            var cond = eval(diffDays + disBenefit.logic + disBenefit.value);\r\n                            if (cond) {\r\n\r\n                                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                                exp.exceptionText = \"Date of release from hospital/Accident date exceeding 90 days\";\r\n                                exp.exceptionCapturedDate = new Date();\r\n                                exp.raisedBy = this.userService.user.userid;\r\n\r\n                                this.disabilityClaimExceptionDetails.push(exp);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    //-----------------------\r\n                    //if (diffDays > 90) {\r\n\r\n                    //    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    //    exp.exceptionText = \"Date of release from hospital/Accident date exceeding 90 days\";\r\n                    //    exp.exceptionCapturedDate = new Date();\r\n                    //    exp.raisedBy = this.userService.user.userid;\r\n\r\n                    //    this.disabilityClaimExceptionDetails.push(exp);\r\n                    //}\r\n                }\r\n\r\n                //claimData.disabilityDetails.disabilityClaimExceptionDetails = this.disabilityClaimExceptionDetails;\r\n            }\r\n            if (this.claim.providentFundDetails != null) {\r\n\r\n                //claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n                claimData.providentFundDetails.claimAmount = this.pfClaimAmount;\r\n                claimData.providentFundDetails.claimType = ClaimConstants.PF;\r\n                claimData.providentFundDetails.statusId = this.ClaimStatusId;\r\n                claimData.providentFundDetails.createdBy = this.userService.user.userid;\r\n                claimData.providentFundDetails.maturityDate = this.benMaturityDate;\r\n                claimData.providentFundDetails.lockingPeriodDate = this.pfLockingPeriod;\r\n\r\n                if (this.beneficiaryPFAccountDetails != null && (this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != null && this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO != \"\")) {\r\n                    claimData.providentFundDetails.pFNO = this.beneficiaryPFAccountDetails.beneficiaryPFAccountNO;\r\n                }\r\n                else {\r\n                    claimData.providentFundDetails.pFNO = this.beneficiary.regNumber;\r\n                }\r\n            }\r\n\r\n            if (this.beneficiary.benRegDate != null && this.beneficiary.benRegDate != undefined) {\r\n                debugger;\r\n                var benregDate = new Date(this.beneficiary.benRegDate);\r\n                var todayDate = new Date();\r\n                var diffYears = todayDate.getFullYear() - benregDate.getFullYear();\r\n                var m = todayDate.getMonth() - benregDate.getMonth();\r\n                if (m < 0 || (m === 0 && todayDate.getDate() < benregDate.getDate())) {\r\n                    diffYears--;\r\n                }\r\n\r\n                if (diffYears < 1) {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Beneficiary has not completed one year of registration\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = this.userService.user.userid;\r\n\r\n                    this.healthClaimExceptionDetails.push(exp);\r\n                    this.educationClaimExceptionDetails.push(exp);\r\n                    this.disabilityClaimExceptionDetails.push(exp);\r\n                }\r\n            }\r\n               \r\n            if ((this.beneficiary.benBankAccNo == undefined || this.beneficiary.benBankAccNo == null || this.beneficiary.benBankAccNo == \"\")) {\r\n\r\n                // if (this.beneficiaryBank == null || this.beneficiaryBank == undefined || this.beneficiaryBank.benBankName == null && this.beneficiaryBank.benBankIfscCode == null) {\r\n                // this.expection = [];\r\n                const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                exp.exceptionText = \"Benificiary does not have bank account number\";\r\n                exp.exceptionCapturedDate = new Date();\r\n                exp.raisedBy = this.userService.user.userid;\r\n\r\n                // this.expection.push(exp);\r\n                this.healthClaimExceptionDetails.push(exp);\r\n                this.educationClaimExceptionDetails.push(exp);\r\n                this.disabilityClaimExceptionDetails.push(exp);\r\n                this.pfClaimExceptionDetails.push(exp);\r\n            }\r\n            else {\r\n                if (this.beneficiary.isAssignedMultiple) {\r\n                    const exp: ClaimExceptionDetailsModel = {} as ClaimExceptionDetailsModel;\r\n                    exp.exceptionText = \"Bank account number assigned to the multiple beneficiaries\";\r\n                    exp.exceptionCapturedDate = new Date();\r\n                    exp.raisedBy = this.userService.user.userid;\r\n\r\n                    this.healthClaimExceptionDetails.push(exp);\r\n                    this.educationClaimExceptionDetails.push(exp);\r\n                    this.disabilityClaimExceptionDetails.push(exp);\r\n                    this.pfClaimExceptionDetails.push(exp);\r\n                }\r\n            }\r\n            if (type != 1) {\r\n                if (this.claim.educationDetails != null && this.educationClaimExceptionDetails.length > 0) {\r\n                    claimData.educationDetails.educationClaimExceptionDetails = this.educationClaimExceptionDetails;\r\n                }\r\n                if (this.claim.healthFamilyDetails != null && this.healthClaimExceptionDetails.length > 0) {\r\n                    claimData.healthFamilyDetails.healthClaimExceptionDetails = this.healthClaimExceptionDetails;\r\n                }\r\n                if (this.claim.disabilityDetails != null && this.disabilityClaimExceptionDetails.length > 0) {\r\n                    claimData.disabilityDetails.disabilityClaimExceptionDetails = this.disabilityClaimExceptionDetails;\r\n                }\r\n                if (this.claim.providentFundDetails != null && this.pfClaimExceptionDetails.length > 0) {\r\n                    claimData.providentFundDetails.pfClaimExceptionDetails = this.pfClaimExceptionDetails;\r\n                }\r\n            }\r\n\r\n            claimData.StatusId = this.ClaimStatusId;\r\n            claimData.CreatedBy = this.userService.user.userid;\r\n            this.successMessage = \"\";\r\n            this.saveType = type;\r\n            console.log(claimData);\r\n            if (this.claimId > 0) {\r\n                if (confirm(\"Are you sure to proceed \")) {\r\n                    this.dataService\r\n                        .updateClaim(claimData)\r\n                        .then((data: any) => {\r\n                            if (data) {\r\n                                if (type == 1) {\r\n                                    this.mode = \"draft\";\r\n                                    this.successMessage = \"Your claim was updated successfully\";\r\n                                }\r\n                                else {\r\n                                    let refNo;\r\n                                    if (this.viewHealth) {\r\n                                        refNo = data.item2 + \" (Health & Family) \";\r\n                                    }\r\n                                    if (this.viewDeath) {\r\n                                        refNo = data.item4 + \" (Disability) \";\r\n                                    }\r\n                                    if (this.viewPf) {\r\n                                        refNo = data.item1 + \" (PF) \";\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item1 + \" (PF) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                    }\r\n                                    if (this.viewEducation) {\r\n                                        if (refNo == undefined) {\r\n                                            refNo = data.item3 + \" (Education) \";\r\n                                        }\r\n                                        else {\r\n                                            refNo = \" (Health & Family) \" + data.item2 + \" , \" + \" (Education) \" + data.item3 + \" , \" + \" (Disability) \" + data.item4;\r\n                                        }\r\n                                    }\r\n                                    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + refNo + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process\";\r\n                                }\r\n                                this.successModal.show();\r\n                            }\r\n                            else {\r\n                                this.successMessage = \"Invalid transaction\";\r\n                                this.successModal.show();\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n            else {\r\n                if (confirm(\"Are you sure to proceed \")) {\r\n                    this.dataService\r\n                        .createClaim(claimData)\r\n                        .then((data: any) => {\r\n                            if (data) {\r\n                                if (type == 1) {\r\n                                    this.mode = \"draft\";\r\n                                    this.successMessage = \"Your application is saved\";\r\n                                    //this.successMessage = \"Your claim was saved successfully\";\r\n                                    //let refNo;\r\n                                    //if (this.viewHealth) {\r\n                                    //    refNo = data.item2 + \" (Health & Family) \";\r\n                                    //    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item2 + \" (Health & Family) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector for further process <br/>  <br/>\";\r\n\r\n                                    //}\r\n                                    //if (this.viewDeath) {\r\n                                    //    refNo = data.item4 + \" (Disability) \";\r\n                                    //    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item4 + \" (Disability) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector for further process <br/>  <br/>\";\r\n\r\n                                    //}\r\n                                    //if (this.viewPf) {\r\n                                    //    refNo = data.item1 + \" (PF) \";\r\n                                    //    this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item1 + \" (PF) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector for further process <br/>  <br/>\";\r\n\r\n                                    //}\r\n                                    //if (this.viewEducation) {\r\n                                    //    if (refNo == undefined) {\r\n                                    //        refNo = data.item3 + \" (Education) \";\r\n                                    //        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \" (Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector for further process <br/>  <br/>\";\r\n\r\n                                    //    }\r\n                                    //    else {\r\n                                    //        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \"(Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector for further process <br/>  <br/>\";\r\n                                    //        refNo = \" (PF) \" + data.item1 + \" , \" + \" (Health & Family) \" + data.item2 + \" , \" + \" (Education) \" + data.item3 + \" , \" + \" (Disability) \" + data.item4 + \" , \" + \" (Death) \" + data.item4;\r\n                                    //    }\r\n                                    //}\r\n                                }\r\n                                else {\r\n                                    let refNo;\r\n                                    if (this.viewHealth) {\r\n                                        refNo = data.item2 + \" (Health & Family) \";\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item2 + \" (Health & Family) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                    }\r\n                                    if (this.viewDeath) {\r\n                                        refNo = data.item4 + \" (Disability) \";\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item4 + \" (Disability) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                    }\r\n                                    if (this.viewPf) {\r\n                                        refNo = data.item1 + \" (PF) \";\r\n                                        this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item1 + \" (PF) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                    }\r\n                                    if (this.viewEducation) {\r\n                                        if (refNo == undefined) {\r\n                                            refNo = data.item3 + \" (Education) \";\r\n                                            this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \" (Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n\r\n                                        }\r\n                                        else {\r\n                                            this.successMessage += \"Your claim was successfully submitted, your claim ticket id: \" + data.item3 + \"(Education) \" + \".You are requested to submit the relevant documents and original application form to the concerned inspector within 15 days for further process <br/>  <br/>\";\r\n                                            refNo = \" (PF) \" + data.item1 + \" , \" + \" (Health & Family) \" + data.item2 + \" , \" + \" (Education) \" + data.item3 + \" , \" + \" (Disability) \" + data.item4 + \" , \" + \" (Death) \" + data.item4;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                this.successModal.show();\r\n                            }\r\n                            else {\r\n                                this.successMessage = \"Invalid transaction\";\r\n                                this.successModal.show();\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    claerClaim() {\r\n        this.pfExsits = this.isPFSubmitted = false;\r\n        this.typeOfClaimValid = this.dateofAppointment = this.hospital = this.hospitalization = this.dateofAdmin = this.dateofDischargeValid = this.claimForValid = this.familyMember = this.hospitalselfAttested = this.dischargeCertificate = this.rigisterESI = this.loeFromDate = this.loeToDate = this.healthCondolationCertificateUploaded =  true;//this.originalVoucher =\r\n        this.restrictSave = false; this.viewEducation = false; this.disableEdu = false; this.noDependents = false;\r\n        this.uplaodmain = this.uploadselfattestedValid = this.uploadNonMarriageValid = this.uploadCertificatetValid = this.educationCheck = true;\r\n        this.claim = {} as ClaimModel;\r\n        this.educationDetailsArray = [];\r\n        this.viewEducation = false;\r\n        this.viewHealth = false;\r\n        this.viewDeath = false;\r\n        this.viewPf = false;\r\n        this.rowIndex = -1;\r\n        this.eduCount = 0;\r\n        this.rowEligibleAmount = 0;\r\n        this.educationDetailsArray = [];\r\n        this.healthOriginalVoucher = {} as AttachmentModel;\r\n        this.healthSelfAttached = {} as AttachmentModel;\r\n        this.healthDischargeCertificate = {} as AttachmentModel;\r\n        this.healthExpensesSheet = {} as AttachmentModel;\r\n        this.healthAttachmentList = [] as AttachmentModel[];\r\n        this.mainUploadList = [] as AttachmentModel[];\r\n        this.educertificates = [] as AttachmentModel[];\r\n        this.eduNonMarriage = [] as AttachmentModel[];\r\n        this.eduSelfAttested = [] as AttachmentModel[];\r\n        this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n        this.claim.educationDetails.isanyothersourceofthegovernment = false;\r\n        //this.disabilityCertificateUploaded = this.natureOfDisability = this.dateofrelease = true;\r\n        this.disabilityAttachmentList = [] as AttachmentModel[];\r\n        this.disabilityCertificate = {} as AttachmentModel;\r\n        this.disabilityCertificateUploaded = this.natureOfDisability = this.dateofrelease = this.isDeathorpermanent1 = this.isDeathorpermanent2 = this.isDeathorpermanent3 = this.checkNatureOfDisability = this.condolationCertificateUploaded = true;\r\n        this.condolationCertificate = {} as AttachmentModel;\r\n        this.healthCondolationCertificate = {} as AttachmentModel;\r\n        this.pfTypeOfClaimValid = true;\r\n        if (this.claim.claimId == undefined) {\r\n            this.claim = {} as ClaimModel;\r\n            this.claim.healthFamilyDetails = {} as HealthFamilyModel;\r\n            this.claim.educationDetails = {} as EducationHdrModel;\r\n            this.claim.disabilityDetails = {} as DisabilityModel;\r\n            this.claim.educationDetails.educationDetailList = [];\r\n            this.getBenficiaryFamilyDetails(this.claim.benSno);\r\n            this.getBenficiaryEduCount(this.claim.benSno);\r\n            this.getBenficiarydetails(this.claim.benSno);\r\n        }\r\n        else {\r\n\r\n            this.getClaimDetailsByClaimId(this.claimId);\r\n        }\r\n    }\r\n    UpdateClaimStatusIdByStatus(type: any) {\r\n        if (type == 1)\r\n            this.ClaimStatusId = 1;\r\n        else {\r\n            if (this.claimStatus < 5)\r\n                this.ClaimStatusId = 2;\r\n            else if (this.claimStatus == 5) this.ClaimStatusId = 4;\r\n            else if (this.claimStatus == 6 || this.claimStatus == 10) this.ClaimStatusId = 8;\r\n            else if (this.claimStatus == 9 || this.claimStatus == 13) this.ClaimStatusId = 12;\r\n        }\r\n    }\r\n\r\n    loeFromDateChange(eve) {\r\n        //alert(this.claim.healthFamilyDetails.loeFromDate);\r\n        this.minLOEDate = new Date(this.claim.healthFamilyDetails.loeFromDate);\r\n        this.calculateLossOfEmploymentAmount();\r\n    }\r\n\r\n    loeToDateChange(eve) {\r\n        this.calculateLossOfEmploymentAmount();\r\n    }\r\n\r\n    dateofadminchange(eve) {\r\n        this.disableDischarge = false;\r\n        if (eve != null) {\r\n            if (!this.isClaimEdit) {\r\n                this.claim.healthFamilyDetails.dischargeDate = null;\r\n                this.claim.healthFamilyDetails.loeToDate = null;\r\n            }\r\n            else {\r\n                this.isClaimEdit = false;\r\n            }\r\n        }\r\n\r\n        this.dischargeMinDt = eve;\r\n        this.lossOfEmploymentAmount = 0;\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n            this.claim.healthFamilyDetails.loeFromDate = eve;\r\n            this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n        }\r\n    }\r\n    dateofdischargechange(eve) {\r\n        this.lossOfEmploymentAmount = 0;\r\n\r\n        if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n            this.claim.healthFamilyDetails.loeToDate = eve;\r\n            this.lossOfEmploymentAmount = this.calculateLossOfEmploymentAmount();\r\n        }\r\n\r\n        if (eve != null) {\r\n            if (!this.isHealthClaimEdit) {\r\n                var date1 = new Date(eve);\r\n                var date2 = new Date(Date.now());\r\n                var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                //---------------\r\n                if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n                    var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.ReasonForDelaySubmission.toLowerCase()); \r\n                    if (helBenefit != null) {\r\n                        var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                        if (cond) { this.enableReasonForDelaySubmissionInHealth = true; }\r\n                        else {\r\n                            this.claim.healthFamilyDetails.reasonForDelaySubmission = null;\r\n                            this.healthCondolationCertificate = null;\r\n                            this.enableReasonForDelaySubmissionInHealth = false;\r\n                        }\r\n                    }\r\n                }\r\n                //if (diffDays > 90) {\r\n                //    this.enableReasonForDelaySubmissionInHealth = true;\r\n                //}\r\n                //else {\r\n                //    this.claim.healthFamilyDetails.reasonForDelaySubmission = null;\r\n                //    this.healthCondolationCertificate = null;\r\n                //    this.enableReasonForDelaySubmissionInHealth = false;\r\n                //}\r\n            }\r\n            else {\r\n                this.isHealthClaimEdit = false;\r\n                if (this.claim.healthFamilyDetails.reasonForDelaySubmission != undefined || this.claim.healthFamilyDetails.reasonForDelaySubmission != null)\r\n                    this.enableReasonForDelaySubmissionInHealth = true;\r\n                else\r\n                    this.enableReasonForDelaySubmissionInHealth = false;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateLossOfEmploymentAmount() {\r\n        debugger;\r\n        var calculatedAmount = 0;\r\n        if (this.healthFamilyBenefitConfigDetails != null && this.healthFamilyBenefitConfigDetails.length > 0) {\r\n            if (this.claim.healthFamilyDetails.claimFor != undefined && this.claim.healthFamilyDetails.claimFor == 5) {\r\n                if (this.claim.healthFamilyDetails.claimFor != undefined && this.claim.healthFamilyDetails.typeOfHospitalization != 2) {\r\n                    if (this.claim.healthFamilyDetails.loeFromDate != undefined && this.claim.healthFamilyDetails.loeToDate != undefined) {\r\n                        debugger;\r\n                            var date1 = new Date(this.claim.healthFamilyDetails.loeFromDate);\r\n                            var date2 = new Date(this.claim.healthFamilyDetails.loeToDate);\r\n                            var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                            if (diffDays != NaN) {\r\n                                diffDays += 1;\r\n                                //-----------------------\r\n                                debugger;\r\n                                var helBenefit = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.LossOfEmploymentDateDiffernce.toLowerCase());\r\n                                if (helBenefit != null) {\r\n                                    var cond = eval(diffDays + helBenefit.logic + helBenefit.value);\r\n                                    if (cond) {\r\n                                        calculatedAmount = 0;\r\n                                        this.viewLOEAmount = false;\r\n                                        this.viewSelf = false;\r\n                                    }\r\n                                    else {\r\n                                        if (diffDays > Number(helBenefit.value))\r\n                                            calculatedAmount = (200 * Number(helBenefit.value)) + ((diffDays - Number(helBenefit.value)) * 100); //calculatedAmount = (200 * 5) + ((diffDays - 5) * 100);\r\n                                        else\r\n                                            calculatedAmount = diffDays * 200; //calculatedAmount = diffDays * 200;\r\n\r\n                                        this.viewSelf = true;\r\n                                        this.viewLOEAmount = true;\r\n                                    }\r\n                                }\r\n\r\n                                //if (diffDays <= 5) {\r\n                                //    //calculatedAmount = diffDays * 200;\r\n                                //    this.viewLOEAmount = false;\r\n                                //}\r\n                                //else {\r\n                                //    this.viewLOEAmount = true;\r\n                                //    calculatedAmount = (200 * 5) + ((diffDays - 5) * 100);\r\n                                //}\r\n                            }\r\n                        }\r\n                    var helBenefit2 = this.healthFamilyBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == HealthFamilyBenefitConfiguration.LossOfEmploymentAmountExceeding.toLowerCase());\r\n                    if (helBenefit2 != null) {\r\n                        var cond2 = eval(calculatedAmount + helBenefit2.logic + helBenefit2.value);\r\n                        if (cond2) { calculatedAmount = 10000; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //if (calculatedAmount > 10000) { calculatedAmount = 10000; }\r\n        return calculatedAmount;\r\n    }\r\n\r\n    admittedDateChange(args) {\r\n        this.minDischargeDate = new Date(this.claim.healthFamilyDetails.admittedDate);\r\n        this.isDischargeDate = false;\r\n    }\r\n\r\n    getActiveFinancialYear() {\r\n        this.dataService\r\n            .getActiveFinancialYear()\r\n            .subscribe((data: any) => {\r\n                this.activeYear = data;\r\n            });\r\n    }\r\n    checkAll(e, item: any) {\r\n        if (e.target.checked) {\r\n            this.result.filter(x => x.name == item)[0].values.forEach((item) => {\r\n                item.isChecked = true;\r\n            });\r\n        } else {\r\n            this.result.filter(x => x.name == item)[0].values.forEach((item) => {\r\n                item.isChecked = false;\r\n            });\r\n        }\r\n    }\r\n    submitClick() {\r\n        this.selectedPackages = [];\r\n        for (var i = 0; i < this.result.length; i++) {\r\n\r\n            for (var j = 0; j < this.result[i].values.length; j++) {\r\n                if (this.result[i].values[j].isChecked) {\r\n                    this.selectedPackages.push(this.result[i].values[j]);\r\n                }\r\n            }\r\n        }\r\n        this.packageModal.hide();\r\n    }\r\n    checkIfAllSelected(item: any) {\r\n\r\n    }\r\n    viewPackages() {\r\n        this.packageModal.show();\r\n    }\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n                this.result = [];\r\n                groups.forEach(g =>\r\n                    this.result.push({\r\n                        name: g,\r\n                        values: this.packages.filter(i => i.ailmentName === g)\r\n                    }\r\n                    ))\r\n            });\r\n    }\r\n    isBenNomineeClaimSubmitted(id: any) {\r\n        \r\n        this.dataService\r\n            .isBenNomineeClaimSubmitted(id)\r\n            .subscribe((data: any) => {\r\n                this.isBenNomineeSubmittedClaim = data;\r\n                if (this.isBenNomineeSubmittedClaim) {\r\n                    this.disablePFCheckbox = this.disableHealthCheckbox = this.disableDisabilityCheckbox = this.disableEducationCheckbox = true;\r\n                }\r\n            });\r\n    }\r\n    disabilityDateofReleaseChange(eve) {\r\n        \r\n        if (eve != null) {\r\n            if (!this.isDisabilityClaimEdit) {\r\n                var date1 = new Date(eve);\r\n                var date2 = new Date(Date.now());\r\n                var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                if (this.disabilityBenefitConfigDetails != null && this.disabilityBenefitConfigDetails.length > 0) {\r\n                    var disBenefit = this.disabilityBenefitConfigDetails.find(x => x.ruleName.toLowerCase() == DisabilityBenefitConfiguration.ReasonForDelaySubmission.toLowerCase()); \r\n                    if (disBenefit != null) {\r\n                        var cond = eval(diffDays + disBenefit.logic + disBenefit.value);\r\n                        if (cond) {\r\n                            this.enableReasonForDelaySubmission = true;\r\n                        }\r\n                        else {\r\n                            this.claim.disabilityDetails.reasonForDelaySubmission = null;\r\n                            this.condolationCertificate = null;\r\n                            this.enableReasonForDelaySubmission = false;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                //if (diffDays > 90) {\r\n                //    this.enableReasonForDelaySubmission = true;\r\n                //}\r\n                //else {\r\n                //    this.claim.disabilityDetails.reasonForDelaySubmission = null;\r\n                //    this.condolationCertificate = null;\r\n                //    this.enableReasonForDelaySubmission = false;\r\n                //}\r\n            }\r\n            else {\r\n                this.isDisabilityClaimEdit = false;\r\n                if (this.claim.disabilityDetails.reasonForDelaySubmission != undefined || this.claim.disabilityDetails.reasonForDelaySubmission != null)\r\n                    this.enableReasonForDelaySubmission = true;\r\n                else\r\n                    this.enableReasonForDelaySubmission = false;\r\n\r\n            }\r\n        }\r\n    }\r\n    compareDates() {\r\n\r\n        if (this.claim.disabilityDetails.dateofRelease != undefined && !this.isDisabilityClaimEdit) {\r\n            var date1 = new Date(this.claim.disabilityDetails.dateofRelease);\r\n            var date2 = new Date(Date.now());\r\n            var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n            if (diffDays > 90) {\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n        }\r\n        else if (this.isDisabilityClaimEdit) {\r\n            this.isDisabilityClaimEdit = false;\r\n            if (this.claim.disabilityDetails.reasonForDelaySubmission != undefined || this.claim.disabilityDetails.reasonForDelaySubmission != null)\r\n                return true;\r\n            else\r\n                return false;\r\n\r\n        }\r\n\r\n    }\r\n    getDisabilityBenefitConfigurationDetails() {\r\n        \r\n        this.dataService\r\n            .getBenefitConfigurationDetails(ClaimConstants.Disability)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.disabilityBenefitConfigDetails = data;\r\n            });\r\n    }\r\n    getHealthFamilyBenefitConfigurationDetails() {\r\n        \r\n        this.dataService\r\n            .getBenefitConfigurationDetails(ClaimConstants.HealthFamily)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.healthFamilyBenefitConfigDetails = data;\r\n            });\r\n    }\r\n    getEducationBenefitConfigurationDetails() {\r\n        \r\n        this.dataService\r\n            .getBenefitConfigurationDetails(ClaimConstants.Education)\r\n            .subscribe((data: any) => {\r\n                \r\n                this.educationBenefitConfigDetails = data;\r\n            });\r\n    }\r\n    getPFBenefitConfigurationDetails() {\r\n        this.dataService\r\n            .getPFConfigurationDetails(0)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfBenefitConfigDetails = data;\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Track Claim</h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <fieldset>\\r\\n                            <section>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                                        <div class=\\\"well well-sm\\\">\\r\\n                                            <div class=\\\"smart-timeline\\\">\\r\\n                                                <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                    <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                {{item.actionComments}}\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <!--<li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>25th july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>ALC Review - Send Back </strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Provided Bill is out of the date, for which claim can't be processed. Resubmit the right bill\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>23rd july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Inspector Review - Forwarded to ALC</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Forwarded to AL at 10.30am\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>22nd July 2018</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Resubmission by Beneficiary</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Here attached the document\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>21st july</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Inspector Review - Sent Back</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Can you please submit your Medicall Bill?\\r\\n                                                            </p>\\r\\n\\r\\n\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                            <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-time\\\">\\r\\n                                                            <small>18th July 2018</small>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"smart-timeline-content\\\">\\r\\n                                                            <p>\\r\\n                                                                <a href=\\\"javascript:void(0);\\\"><strong>Claim Submission - Beneficiary</strong></a>\\r\\n                                                            </p>\\r\\n                                                            <p>\\r\\n                                                                Sir, Can you please review and approve my claim\\r\\n                                                            </p>\\r\\n\\r\\n                                                        </div>\\r\\n                                                    </li>-->\\r\\n                                                    <!--<li class=\\\"text-center\\\">\\r\\n                                                        <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-arrow-down text-muted\\\"></i> LOAD MORE</a>\\r\\n                                                    </li>-->\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                        </fieldset>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n    <div class=\\\"smart-form\\\">\\r\\n        <footer>\\r\\n            <a class=\\\"btn btn-danger\\\" (click)=\\\"onBackClaimClick()\\\">Cancel</a>\\r\\n        </footer>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription } from 'rxjs';\r\nimport { EducationDetailModel, EducationHdrModel } from '../models/education.model';\r\nimport { ClaimTrack } from '../models/track.model';\r\nimport { Beneficiary } from '../models/ben.model';\r\nimport { window } from 'rxjs-compat/operator/window';\r\nimport { ClaimsComponent } from '../claims/claims.component';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans } from '../pipes/constnts.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-claim-track',\r\n    templateUrl: './claim-track.component.html',\r\n    styleUrls: ['./claim-track.component.css']\r\n})\r\nexport class ClaimTrackComponent implements OnInit, OnDestroy {\r\n\r\n    private route$: Subscription;\r\n    private tranctionType: any;\r\n    private transactionId: any;\r\n    private workflowId: any;\r\n    mode: string;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.transactionId = params[\"transactionId\"];\r\n                this.tranctionType = params[\"tranctionType\"];\r\n                this.workflowId = params[\"workflowId\"];\r\n                this.mode = params[\"mode\"];\r\n            }\r\n        );\r\n        \r\n        this.getClaimDetailsByClaimId(this.transactionId, ClaimConstants[this.tranctionType], this.workflowId)\r\n    }\r\n    getClaimDetailsByClaimId(transactionId: any, tranctionType: any, wfId:any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType,wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n\r\n            });\r\n    }\r\n    onBackClaimClick() {\r\n        if (this.mode == \"referal\") {\r\n            this.router.navigate(['claim/referralclaims'], { skipLocationChange: true });\r\n        }\r\n        else if (this.mode == \"agentreferal\") {\r\n            this.router.navigate(['claim/agentreferral'], { skipLocationChange: true });\r\n        }\r\n        else {\r\n            if (this.userService.user.userid != undefined && this.userService.user.userid != 0 && this.userService.user.userid.toString() != \"\") {\r\n                this.router.navigate(['claim/Claims'], { skipLocationChange: true });\r\n            }\r\n            else {\r\n                this.router.navigate(['claim/agentclaims'], { skipLocationChange: true });\r\n                }\r\n        }\r\n    }\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Claim Entry View </h2>\\r\\n                </header>\\r\\n\\r\\n                <div>\\r\\n\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>Beneficiary Details</header>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Name: </strong>{{beneficiary?.benFullName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>SSIN: </strong>{{beneficiary?.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Bank Name: </strong>{{beneficiary?.benBankName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Account No: </strong>{{beneficiary?.benBankAccNo}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>IFSC Code: </strong>{{beneficiary?.benBankIfscCode}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Branch: </strong>{{beneficiary?.benBankBranch}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> PF No.: </strong>{{claim.providentFundDetails.pfno}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Claim Amount:</strong> {{claim.providentFundDetails.claimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Date of Maturity:</strong> {{claim.providentFundDetails.maturityDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Locking Period Up-to:</strong> {{claim.providentFundDetails.lockingPeriodDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Type of Claim:</strong> {{claim.providentFundDetails.typeOfClaimName}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Reason for Preclosure:</strong> {{claim.providentFundDetails.reasonForPreClosure}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                <header>Education</header>\\r\\n\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.educationDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Dependent Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section *ngFor=\\\"let detail of educationList\\\">\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Student: </strong>{{detail?.dependentName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Name of the Institution: </strong> {{detail?.institutionName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Name of the Principal/Head Master of the institution:</strong>{{detail?.institutionPrinicipleName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Contact Number of the Institution: </strong>{{detail?.institutionContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Registration No./Roll No. of last exam passed: </strong>{{detail?.registrationRollNo}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Year of Examination: </strong>{{detail?.year}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission: </strong>{{detail?.dateofAdmissionString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Last Exam Passed: </strong>{{detail?.lastExamPassedName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Presently Reading: </strong>{{detail?.presentlyReadingName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Eligible Amount :</strong>{{detail?.eligibleAmount}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Educational Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.healthFamilyDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Health & Family Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Type of Claim: </strong>{{claim?.healthFamilyDetails?.typeOfClaimName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Hospital : </strong> {{claim?.healthFamilyDetails?.hospitalName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Hospitalization/OPD:</strong>{{claim?.healthFamilyDetails?.typeOfHospitalizationName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Patient Id: </strong>{{claim?.healthFamilyDetails?.patientId}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of Disease: </strong>{{claim?.healthFamilyDetails?.nameOfTheDiseaseString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.nameOfTheDisease==56\\\">\\r\\n                                                <label><strong> Name of clinical test: </strong>{{claim?.healthFamilyDetails?.nameOfClinicalTestString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Met with an Accident:</strong>{{claim?.healthFamilyDetails?.isAccident}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Clinical Test: </strong>{{claim?.healthFamilyDetails?.costOfClinicalTest}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Medicine: </strong>{{claim?.healthFamilyDetails?.costOfMedicine}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of First Appointment: </strong>{{claim?.healthFamilyDetails?.firstAppointmentDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Claim for: </strong>{{claim?.healthFamilyDetails?.claimForName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                                <label><strong> Cost of Hospitalization: </strong>{{claim?.healthFamilyDetails?.costOfHospitalization}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission to Hospital: </strong>{{claim?.healthFamilyDetails?.admittedDateString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Discharge :</strong>{{claim?.healthFamilyDetails?.dischargeDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.familyMemberId != undefined && claim?.healthFamilyDetails?.familyMemberId !=0\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Family Member Name: </strong>{{claim?.healthFamilyDetails?.familyMemberName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.reasonForDelaySubmission != undefined || claim?.healthFamilyDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.healthFamilyDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <div *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalizationName!='OPD' && claim?.healthFamilyDetails?.claimFor == 5\\\">\\r\\n                                    <header>Loss of Employment</header>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> From Date: </strong>{{claim?.healthFamilyDetails?.loeFromDateString}}</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>To Date :</strong>{{claim?.healthFamilyDetails?.loeToDateString}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> Amount: </strong>{{claim?.healthFamilyDetails?.loeAmount}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n                                <header>Health & Family Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>View Packages</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                        <td>{{pak.packageName}}</td>\\r\\n                                                        <td>{{pak.packageCode}}</td>\\r\\n                                                        <td>{{pak.ailmentName}}</td>\\r\\n                                                        <td>{{pak.amount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.disabilityDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Disability Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of release from hospital/Accident: </strong>{{claim?.disabilityDetails?.dateofReleaseString}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Disability : </strong> {{claim?.disabilityDetails?.natureOfDisabilityName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Disability: </strong>{{claim?.disabilityDetails?.detailsOfDisability}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.disabilityDetails?.reasonForDelaySubmission != undefined || claim?.disabilityDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                                <label><strong>Reason for Delay Submission: </strong>{{claim?.disabilityDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Disability Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                <header>Death</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.deathDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Death Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Death : </strong> {{claim?.deathDetails?.natureofDeathName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Death: </strong>{{claim?.deathDetails?.dateofDeathString}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Death: </strong>{{claim?.deathDetails?.detailsofDeath}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Place of Death: </strong>{{claim?.deathDetails?.placeofDeath}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                                <header>Death Attachments</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <a (click)=\\\"viewAttachment()\\\" class=\\\"smart-form-link\\\">View All Attachments</a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <header>Time Line</header>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <!-- row -->\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" style=\\\"width:98%\\\">\\r\\n                                            <div class=\\\"well well-sm\\\">\\r\\n                                                <div class=\\\"smart-timeline\\\">\\r\\n                                                    <ul class=\\\"smart-timeline-list\\\">\\r\\n\\r\\n                                                        <li *ngFor=\\\"let item of claimsTrack\\\">\\r\\n                                                            <div class=\\\"smart-timeline-icon\\\">\\r\\n                                                                <i class=\\\"fa fa-user\\\"></i>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-time\\\">\\r\\n                                                                <small>{{formatDate(item.actionDate)}}</small>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"smart-timeline-content\\\">\\r\\n                                                                <p>\\r\\n                                                                    <a href=\\\"javascript:void(0);\\\"><strong>{{item.userName}} - {{item.action}}</strong></a>\\r\\n                                                                </p>\\r\\n                                                                <p>\\r\\n                                                                    {{item.actionComments}}\\r\\n                                                                </p>\\r\\n                                                            </div>\\r\\n                                                        </li>\\r\\n\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <footer class=\\\"modal-footer\\\">\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"onBackClaimClick()\\\">Cancel</a>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div bsModal #attachmentsModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachmentsModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Attachments</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\"></p>\\r\\n            </div>\\r\\n            <!--<div class=\\\"modal-footer\\\">\\r\\n            </div>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Attachment Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <app-claimviewdata [claimId]=\\\"claimId\\\" [claimType]=\\\"claimType\\\" [transactionId]=\\\"transactionId\\\"></app-claimviewdata>\\r\\n                        <!--<div *ngIf=\\\"claim.attachment[0].fileName.split('.')[claim.attachment[0].fileName.split('.').length-1]!='pdf'\\\">\\r\\n                            <img [src]=\\\"'data:image/'+claim.attachment[0].fileName.split('.')[claim.attachment[0].fileName.split('.').length-1]+';base64,'+ claim.attachment[0].fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"claim.attachment[0].fileName.split('.')[claim.attachment[0].fileName.split('.').length-1]=='pdf'\\\">\\r\\n                            <object [attr.data]=\\\"claim.attachment[0].attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                        </div>-->\\r\\n                    </div>\\r\\n                    <div style=\\\"width:50%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <accordion>\\r\\n                            <accordion-group heading=\\\"{{item.attachmentTypeString}}\\\" *ngFor=\\\"let item of attachmentList\\\">\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]!='pdf'\\\">\\r\\n                                    <img [src]=\\\"'data:image/'+item.fileName.split('.')[item.fileName.split('.').length-1]+';base64,'+ item.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"item.fileName.split('.')[item.fileName.split('.').length-1]=='pdf'\\\">\\r\\n                                    <object [attr.data]=\\\"item.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                                </div>\\r\\n                            </accordion-group>\\r\\n                        </accordion>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription, concat } from 'rxjs';\r\nimport { EducationDetailModel, EducationHdrModel } from '../models/education.model';\r\nimport { ClaimView } from '../models/claimview.model';\r\nimport { Beneficiary } from '../models/ben.model';\r\nimport { window } from 'rxjs-compat/operator/window';\r\nimport { ClaimsComponent } from '../claims/claims.component';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { AttachmentModel } from '../models/attachment.model';\r\nimport { ClaimTrack } from '../models/track.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans, PFTypeOfClaim } from '../pipes/constnts.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-claim-view',\r\n    templateUrl: './claim-view.component.html',\r\n    styleUrls: ['./claim-view.component.css']\r\n})\r\nexport class ClaimViewComponent implements OnInit, OnDestroy {\r\n    @ViewChild('attachModal') public attachModel: ModalDirective;\r\n    private route$: Subscription;\r\n    private claimId: number;\r\n    private claimType: number;\r\n    private transactionId: any;\r\n    private workflowId: any;\r\n    claim: ClaimView = {} as ClaimView;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    viewMetWithAnAccident: boolean = false;\r\n    mode: string;\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    isPrematureClaim: boolean = false;\r\n    constructor(public router: Router\r\n        , private route: ActivatedRoute, private dataService: ClaimDataService, private userService: UserService, private sanitizer: DomSanitizer) {\r\n        //this.route$ = this.route.params.subscribe(\r\n        //    (params: Params) => {\r\n        //        this.claimId = params[\"claimId\"];\r\n        //        this.claimType = ClaimConstants.Education;\r\n        //        this.tranctionId = params[\"claimRefernceNo\"]\r\n        //    }\r\n        //);\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        debugger;\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.claimId = params[\"claimId\"];\r\n                this.claimType = params[\"tranctionType\"];\r\n                this.transactionId = params[\"transactionId\"];\r\n                this.mode = params[\"mode\"];\r\n                this.workflowId = params[\"workflowId\"];\r\n            }\r\n        );\r\n        this.getPackages();\r\n        this.getClaimDetailsByClaimId(this.claimId, this.transactionId, ClaimConstants[this.claimType]);\r\n        \r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {debugger;\r\n                this.claim = data\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length;j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n                    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                        if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                    }\r\n                    let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                    }\r\n                    this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                }\r\n                if (this.claim.disabilityDetails != null) {\r\n                    if (this.claim.disabilityDetails.attachmentDTOList != null) {\r\n                        for (var j = 0; j < this.claim.disabilityDetails.attachmentDTOList.length; j++) {\r\n                            let attachment = this.claim.disabilityDetails.attachmentDTOList[j];\r\n                            if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                            }\r\n                            this.attachmentList.push(attachment);\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.deathDetails != null) {\r\n                    if (this.claim.deathDetails.attachmentDTOList != null) {\r\n                        for (var j = 0; j < this.claim.deathDetails.attachmentDTOList.length; j++) {\r\n                            let attachment = this.claim.deathDetails.attachmentDTOList[j];\r\n                            if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                            }\r\n                            this.attachmentList.push(attachment);\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.providentFundDetails != null) {\r\n                    \r\n                    if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                        this.isPrematureClaim = true;\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    debugger;\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        if (this.claim.attachment[k].fileName != null) {\r\n                            let attachment = this.claim.attachment[k];\r\n                            if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                            }\r\n\r\n                            this.claim.attachment[k] = attachment;\r\n                            this.attachmentList.push(attachment);\r\n                        }\r\n                    }\r\n                }\r\n                this.getBenBasicDetails(this.claim.benSno);\r\n                this.getClaimTrackDetailsByClaimId(this.transactionId, ClaimConstants[this.claimType], this.workflowId);\r\n                console.log(this.claim);\r\n              //  this.getUrlOfPdf();\r\n            });\r\n    }\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n            });\r\n    }\r\n    getBenBasicDetails(benNo: any) {\r\n        debugger;\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsById(benNo)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n                console.log(this.beneficiary);\r\n            });\r\n    }\r\n    viewAttachment() {\r\n        this.attachModel.show();\r\n    }\r\n    Getimage(imageData: AttachmentModel) {\r\n        const data = imageData.fileName.split('.')[imageData.fileName.split('.').length - 1];\r\n        if (data.toLowerCase() == \"pdf\") {\r\n            console.log(imageData.stringContent);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    getClaimTrackDetailsByClaimId(transactionId: any, tranctionType: any,wfId:any) {\r\n        this.dataService\r\n            .getClaimTrackDetailsByTransactionId(transactionId, tranctionType, wfId)\r\n            .subscribe((data: any) => {\r\n                this.claimsTrack = data;\r\n\r\n            });\r\n    }\r\n\r\n    formatDate(date: any) {\r\n        var month_names = [\"January\", \"February\", \"March\",\r\n            \"April\", \"May\", \"June\",\r\n            \"July\", \"Aug\", \"September\",\r\n            \"October\", \"November\", \"December\"];\r\n        let dt = new Date(date);\r\n        var day = dt.getDate();\r\n        var month_index = dt.getMonth();\r\n        var year = dt.getFullYear();\r\n\r\n        return \"\" + day + this.nthDay(day) + \" \" + month_names[month_index] + \" \" + year;\r\n    }\r\n    nthDay(day) {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return \"th\";\r\n        }\r\n    }\r\n\r\n    getUrlOfPdf(imageData?: AttachmentModel) {\r\n        this.dataService\r\n            .getAttachment()\r\n            .then((data: any) => {\r\n                var url = URL.createObjectURL(data);\r\n                console.log(url);\r\n            });\r\n\r\n    }\r\n\r\n    getPdfUrl1(imageData: AttachmentModel) {\r\n       \r\n        const file = new Blob([(imageData.fileContent)], {\r\n            type: 'application/pdf'\r\n        });\r\n        return file;\r\n    }\r\n    onBackClaimClick() {\r\n        if (this.userService.user.userid != undefined && this.userService.user.userid != 0 && this.userService.user.userid.toString() != \"\") {\r\n            if (this.mode == \"referal\") {\r\n                this.router.navigate(['claim/referralclaims'], { skipLocationChange: true });\r\n\r\n            }\r\n            else {\r\n                this.router.navigate(['claim/Claims'], { skipLocationChange: true });\r\n            }\r\n        }\r\n        else {\r\n            if (this.mode == \"referal\") {\r\n                this.router.navigate(['claim/agentreferral'], { skipLocationChange: true });\r\n            }\r\n            else {\r\n                this.router.navigate(['claim/agentclaims'], { skipLocationChange: true });\r\n            }\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { CommonModule, APP_BASE_HREF } from '@angular/common';\r\nimport { ClaimLandingComponent } from './claimlanding.component';\r\nimport { ClaimEntryComponent } from './claim-entry/claim-entry.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClaimViewComponent } from './claim-view/claim-view.component';\r\nimport { ClaimsComponent } from './claims/claims.component';\r\nimport { ClaimDataService } from './services/claim-data.service';\r\nimport { DataTableModule } from \"angular-6-datatable\";\r\nimport { GrdFilterPipe } from './pipes/grd-filter.pipe';\r\nimport { ClaimTrackComponent } from './claim-track/claim-track.component';\r\nimport { ModalModule, AccordionModule, BsDatepickerModule } from \"ngx-bootstrap\";\r\nimport { AgentClaimsComponent } from './agent-claims/agent-claims.component';\r\nimport { AgentClaimEntryComponent } from './agent-claim-entry/agent-claim-entry.component';\r\nimport { NumberOnlyDirective } from './directives/number.directive';\r\nimport { ClaimDraftComponent } from './claim-draft/claim-draft.component';\r\nimport { AgentDraftComponent } from './agent-draft/agent-draft.component';\r\nimport { ClaimsReferralComponent } from './claims-referral/claims-referral.component';\r\nimport { AgentReferrallComponent } from './agent-referrall/agent-referrall.component';\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\r\nimport { LegacyListComponent } from './legacy-list/legacy-list.component';\r\nimport { LegacyClaimEntryComponent } from './legacy-claim-entry/legacy-claim-entry.component';\r\nimport { ClaimviewdataComponent } from './claimviewdata/claimviewdata.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AgentPfCollectionFormComponent } from './agent-pf-collection-form/agent-pf-collection-form.component';\r\nimport { AgentPfDepositComponent } from './agent-pf-deposit/agent-pf-deposit.component';\r\nimport { AgentPfDepositedListComponent } from './agent-pf-deposited-list/agent-pf-deposited-list.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { BulkpfdepositComponent } from './bulkpfdeposit/bulkpfdeposit.component';\r\nimport { BulkpfdepositlistComponent } from './bulkpfdepositlist/bulkpfdepositlist.component';\r\nimport { BulkpfdepositcollectionListComponent } from './bulkpfdepositcollection-list/bulkpfdepositcollection-list.component';\r\nimport { PayInSlipDepositedListComponent } from './payinslip-deposited-list/payinslip-deposited-list.component';\r\nimport { BenPfDetailsComponent } from './ben-pf-details/ben-pf-details.component';\r\nimport { LegacypfdetailsComponent } from './legacypfdetails/legacypfdetails.component';\r\nimport { SubmittedlegacypfdetailsComponent } from './submittedlegacypfdetails/submittedlegacypfdetails.component';\r\nimport { AdjustemententryformComponent } from './adjustemententryform/adjustemententryform.component';\r\nimport { GripsresponseComponent } from './gripsresponse/gripsresponse.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ClaimLandingComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'Entry', pathMatch: 'full' },\r\n            { path: 'Entry', component: ClaimEntryComponent },\r\n            { path: 'ClaimTrack', component: ClaimTrackComponent },\r\n            { path: 'ClaimView', component: ClaimViewComponent },\r\n            { path: 'ClaimView/:claimId/:claimType/:tranctionId', component: ClaimViewComponent },\r\n            { path: 'Entry/:claimId/:claimType', component: ClaimEntryComponent },\r\n            { path: 'Claims', component: ClaimsComponent },\r\n            { path: 'agentclaims', component: AgentClaimsComponent },\r\n            { path: 'agentclaimentry', component: AgentClaimEntryComponent },\r\n            { path: 'agentclaimentry/:claimId/:claimType', component: AgentClaimEntryComponent },\r\n            { path: 'claimdraft', component: ClaimDraftComponent },\r\n            { path: 'agentdraft', component: AgentDraftComponent },\r\n            { path: 'agentreferral', component: AgentReferrallComponent },\r\n            { path: 'referralclaims', component: ClaimsReferralComponent },\r\n            { path: 'legacylist', component: LegacyListComponent },\r\n            { path: 'legacyclaimentry', component: LegacyClaimEntryComponent },\r\n            { path: 'PfCollectionForm', component: AgentPfCollectionFormComponent },\r\n            { path: 'PfDeposit', component: AgentPfDepositComponent },\r\n            { path: 'PfDepositedList', component: AgentPfDepositedListComponent },\r\n           // { path: 'bulkpfdeposit', component: BulkpfdepositComponent },\r\n            { path: 'bulkpfdepositlist', component: BulkpfdepositlistComponent },\r\n            { path: 'bulkpfdepositcollectionlist', component: BulkpfdepositcollectionListComponent },\r\n            { path: 'pfPayInSlipDepositedList', component: PayInSlipDepositedListComponent },\r\n            { path: 'benpfdetails', component: BenPfDetailsComponent },\r\n            { path: 'bulkpfdeposit', component: LegacypfdetailsComponent },\r\n            { path: 'submittedlegacypfdetails', component: SubmittedlegacypfdetailsComponent },\r\n            { path: 'adjustemententryform', component: AdjustemententryformComponent },\r\n            { path: 'gripsresponse', component: GripsresponseComponent }\r\n        ]\r\n    },\r\n];\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, FormsModule, ReactiveFormsModule, PdfViewerModule, DataTableModule, ModalModule.forRoot(), AccordionModule.forRoot(), BsDatepickerModule.forRoot(), RouterModule.forChild(routes), NgbModule, NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n    declarations: [ClaimEntryComponent, NumberOnlyDirective, AgentClaimEntryComponent, AgentClaimsComponent, ClaimViewComponent, ClaimLandingComponent, ClaimsComponent, GrdFilterPipe, ClaimTrackComponent, ClaimDraftComponent, AgentDraftComponent, ClaimsReferralComponent, AgentReferrallComponent, LegacyListComponent, LegacyClaimEntryComponent, ClaimviewdataComponent, AgentPfCollectionFormComponent, AgentPfDepositComponent, AgentPfDepositedListComponent, BulkpfdepositComponent, BulkpfdepositlistComponent, BulkpfdepositcollectionListComponent, PayInSlipDepositedListComponent, BenPfDetailsComponent, LegacypfdetailsComponent, SubmittedlegacypfdetailsComponent, AdjustemententryformComponent, GripsresponseComponent],\r\n    providers: [ClaimDataService]\r\n})\r\nexport class ClaimModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","﻿import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\n\r\ndeclare var window: any;\r\n@Component({\r\n    selector: 'app-claimlanding',\r\n    templateUrl: './claimlanding.component.html',\r\n})\r\nexport class ClaimLandingComponent {\r\n    constructor(public router: Router) {\r\n      \r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2> Refer Claims </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"entryPointName\\\">Mode</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"lastActionDateString\\\">Last Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let claims of mf.data|grdFilter: { claimRefernceNo: searchText,submittedDateString: searchText, claimAmount: searchText, claimType: searchText,\\r\\n                                       statusName: searchText, lastActionDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onEditClaimClick(claims)\\\" *ngIf=\\\"claims.isEdit\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClaimClick(claims)\\\" *ngIf=\\\"!claims.isEdit\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a (click)=\\\"downloadRecept(claims)\\\" title=\\\"Receipt\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></a>\\r\\n                                        <a (click)=\\\"onTrackClaimClick(claims)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{claims.claimRefernceNo}}</td>\\r\\n                                    <td>{{claims.submittedDateString}}</td>\\r\\n                                    <td>{{claims.entryPointName}}</td>\\r\\n                                    <td>{{getTypeName(claims.claimType)}}</td>\\r\\n                                    <td>{{claims.claimAmount}}</td>\\r\\n                                    <td>{{claims.statusName}}</td>\\r\\n                                    <td>{{claims.lastActionDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Claims } from '../models/claims.model';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../UserService';\r\nimport { EntryPoint, ClaimStatus, WorkflowTrans, ClaimConstants, pagination } from '../pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-claims-referral',\r\n  templateUrl: './claims-referral.component.html',\r\n  styleUrls: ['./claims-referral.component.css']\r\n})\r\nexport class ClaimsReferralComponent implements OnInit {\r\n    claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    claimReferenceNoText: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    ngOnInit() {\r\n        //Todo: change parameters \r\n        this.getReferralClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe,\"0\",this.page, this.pageSize);\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getReferralClaimsByBenID(id, entrypoint, userType,claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getAllReferralClaimsByBenficiary(id, entrypoint, userType, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n                console.log(data);\r\n            });\r\n    }\r\n    onEditClaimClick(item) {\r\n        this.router.navigate(['claim/Entry', { claimId: item.claimId, tranctionType: item.claimType, claimStatus: item.statusId, mode: \"referal\" }], { skipLocationChange: true });\r\n    }\r\n    onViewClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimView', { claimId: item.claimId, tranctionType: item.claimType, transactionId: item.transactionId, mode: \"referal\", workflowId: WorkflowTrans.workflowreferral  }], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    downloadRecept(claim: Claims) {\r\n        this.dataService\r\n            .downloadReceipt(claim.benName, claim.ssin, claim.claimRefernceNo, claim.claimAmount, this.getTypeName(claim.claimType))\r\n            .then((data: any) => {\r\n                let dd = data;\r\n                var url = window.URL.createObjectURL(data);\r\n                window.open(url);\r\n            });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimTrack', { transactionId: item.transactionId, tranctionType: item.claimType, workflowId: WorkflowTrans.workflow, mode: \"referal\"}], { skipLocationChange: true });\r\n        //this.router.navigate(['claim/ClaimTrack', { transactionId: item.transactionId, tranctionType: item.claimType, workflowId: WorkflowTrans.workflowreferral }], { skipLocationChange: true });\r\n    }\r\n    changepage(page) {\r\n        this.getReferralClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe,\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n            this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n        else\r\n            this.strClaimRefNo = \"0\";\r\n        //this.dataService\r\n        //    .getSearchAllReferralClaimsByBenficiary(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n        //    .subscribe((data: any) => {\r\n        //        this.claimsData = data.results;\r\n        //        this.totalRows = data.rowCount;\r\n        //    });\r\n        this.getReferralClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n    }\r\n}\r\n","module.exports = \"@import \\\"//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\\\";\\r\\n@import \\\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\\\";\\r\\n\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Claim Status </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body\\\" *ngIf=\\\"IsBeneficiary\\\">\\r\\n                        <strong>Claim Utilization Details:</strong>\\r\\n                        <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Claim Type</th>\\r\\n                                    <th>Annual Limit</th>\\r\\n                                    <th>Claim Amount</th>\\r\\n                                    <th>Approved Amount</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of UtilizationDetails\\\">\\r\\n                                    <td>{{data.claimName}}</td>\\r\\n                                    <td>{{data.annualLimit}}</td>\\r\\n                                    <td>{{data.claimAmount}}</td>\\r\\n                                    <td>{{data.approvedAmount}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"claimReferenceNoText\\\" placeholder=\\\"Claim Reference No Search..\\\" class=\\\"advancedSearchTextbox\\\" NumbersOnly minlength=\\\"12\\\" maxlength=\\\"12\\\">\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"claimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Reference No</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"submittedDate\\\">Submission Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"entryPointName\\\">Mode</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimType\\\">Category</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Status</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"lastActionDate\\\">Last Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let claims of mf.data|grdFilter: { claimRefernceNo: searchText,submittedDateString: searchText, claimAmount: searchText, claimType: searchText,\\r\\n                                       statusName: searchText, lastActionDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"onEditClaimClick(claims)\\\" *ngIf=\\\"claims.isEdit\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                        <a (click)=\\\"onViewClaimClick(claims)\\\" *ngIf=\\\"!claims.isEdit\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a (click)=\\\"downloadRecept(claims)\\\" title=\\\"Receipt\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></a>\\r\\n                                        <a (click)=\\\"onTrackClaimClick(claims)\\\" title=\\\"Track\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-recycle\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{claims.claimRefernceNo}}</td>\\r\\n                                    <td>{{claims.submittedDateString}}</td>\\r\\n                                    <td>{{claims.entryPointName}}</td>\\r\\n                                    <td>{{getTypeName(claims.claimType)}}</td>\\r\\n                                    <td>{{claims.claimAmount}}</td>\\r\\n                                    <td>{{claims.statusName}}</td>\\r\\n                                    <td>{{claims.lastActionDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n\\r\\n\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div *ngIf=\\\"claimsData.length>0\\\">\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Claims } from '../models/claims.model';\r\nimport { Utilization } from '../models/utilization.model';\r\nimport { UserService } from '../../UserService';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans, pagination } from '../pipes/constnts.model';\r\n@Component({\r\n    selector: 'app-claims',\r\n    templateUrl: './claims.component.html',\r\n    styleUrls: ['./claims.component.css']\r\n})\r\nexport class ClaimsComponent implements OnInit {\r\n\r\n    claimsData: Claims[]=[];\r\n    pageOfItems: Array<any>;\r\n    p: number = 1;\r\n    order: string = 'description';\r\n    reverse: boolean = false;\r\n    IsBeneficiary: boolean = false;\r\n    UtilizationDetails: Utilization[] = [];\r\n    group: any[];\r\n    result: any[];\r\n    claimReferenceNoText: string;\r\n    ssinSearchText: string;\r\n    strSSIN: string;\r\n    strClaimRefNo: string;\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n    setOrder(value: string) {\r\n        if (this.order === value) {\r\n            this.reverse = !this.reverse;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        //this.getClaimsByBenID(14843, EntryPoint.Agent);\r\n\r\n        this.getClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe,\"0\", this.page, this.pageSize);\r\n    }\r\n    onChangePage(pageOfItems: Array<any>) {\r\n        // update current page of items\r\n        this.pageOfItems = pageOfItems;\r\n    }\r\n    getTypeName(claimType: string) {\r\n        if (ClaimConstants[claimType] == 2) {\r\n            return \"Health & Family\";\r\n        }\r\n        return claimType;\r\n    }\r\n    getClaimsByBenID(id, entrypoint, userType, claimRefNo: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getClaimsByBenficiary(id, entrypoint, userType, claimRefNo, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                this.claimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n                if (this.userService.user.userTpe == \"10\"){\r\n                    this.IsBeneficiary = true;\r\n                    this.getClaimUtilizationDetails();\r\n                }\r\n                console.log(data);\r\n            });\r\n    }\r\n    onEditClaimClick(item) {\r\n        this.router.navigate(['claim/Entry', { claimId: item.claimId, tranctionType: item.claimType, claimStatus: item.statusId }], { skipLocationChange: true });\r\n    }\r\n    onViewClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimView', { claimId: item.claimId, tranctionType: item.claimType, transactionId: item.transactionId, mode: \"claim\", workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getDate(datestring: any) {\r\n        return new Date(datestring).toLocaleDateString();\r\n    }\r\n    downloadRecept(claim: Claims) {\r\n        this.dataService\r\n            .downloadReceipt(claim.benName, claim.ssin, claim.claimRefernceNo, claim.claimAmount, this.getTypeName(claim.claimType))\r\n            .then((data: any) => {\r\n                let dd = data;\r\n                var url = window.URL.createObjectURL(data);\r\n                window.open(url);\r\n            });\r\n    }\r\n    onTrackClaimClick(item) {\r\n        this.router.navigate(['claim/ClaimTrack', { transactionId: item.transactionId, tranctionType: item.claimType, workflowId: WorkflowTrans.workflow }], { skipLocationChange: true });\r\n    }\r\n    getClaimUtilizationDetails() {\r\n        this.dataService\r\n            .getClaimConfigurationMaster()\r\n            .subscribe((data: any) => {\r\n                this.group = [];\r\n                this.result = [];\r\n                var groups = new Set(this.claimsData.map(item => item.claimType));\r\n                groups.forEach(g =>\r\n                    this.group.push({\r\n                        name: g,\r\n                        values: this.claimsData.filter(i => i.claimType === g)\r\n                    }\r\n                    ));\r\n                for (let i = 0; i < this.group.length; i++) {\r\n                    let sumClaimAmount = 0;\r\n                    let sumApprovedAmount = 0;\r\n                    for (let j = 0; j < this.group[i].values.length; j++) {\r\n                        sumClaimAmount += this.group[i].values[j].claimAmount;\r\n                        sumApprovedAmount += this.group[i].values[j].approvedAmount;\r\n                    }\r\n                    this.result.push({\r\n                        claimName: this.group[i].name,\r\n                        claimAmount: sumClaimAmount,\r\n                        approvedAmount: sumApprovedAmount\r\n                    });\r\n                }\r\n                for (let k = 0; k < data.length; k++) {\r\n                    let isAdd: boolean = false;\r\n                    for (let l = 0; l < this.result.length; l++) {\r\n                        if (data[k].claimName == this.result[l].claimName) {\r\n                            const test = { ...data[k], ...this.result[l] };\r\n                            this.UtilizationDetails.push({\r\n                                claimName: test.claimName,\r\n                                claimAmount: test.claimAmount,\r\n                                approvedAmount: test.approvedAmount,\r\n                                annualLimit: test.annualLimit\r\n                            });\r\n                            isAdd = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isAdd) {\r\n                        this.UtilizationDetails.push({\r\n                            claimName: data[k].claimName,\r\n                            claimAmount: 0,\r\n                            approvedAmount: 0,\r\n                            annualLimit: data[k].annualLimit\r\n                        });\r\n                    }                    \r\n                }\r\n            })\r\n    }\r\n    changepage(page) {\r\n        this.getClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe,\"0\", this.page, this.pageSize);\r\n    }\r\n    GetResults() {\r\n        if (this.claimReferenceNoText != null && this.claimReferenceNoText != undefined && this.claimReferenceNoText != \"\")\r\n            this.strClaimRefNo = this.claimReferenceNoText.trim();\r\n        else\r\n            this.strClaimRefNo = \"0\";\r\n        //this.dataService\r\n        //    .getSearchClaimsByBenficiary(this.userService.user.deptUserid, EntryPoint.Beneficiary, this.userService.user.userTpe, this.strSSIN, this.strClaimRefNo, pagination.pageNo, pagination.pageSize)\r\n        //    .subscribe((data: any) => {\r\n        //        this.claimsData = data.results;\r\n        //        this.totalRows = data.rowCount;\r\n        //    });\r\n        this.getClaimsByBenID(this.userService.user.userid, EntryPoint.Beneficiary, this.userService.user.userTpe, this.strClaimRefNo, pagination.pageNo, pagination.pageSize);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>Claim Entry View </h2>\\r\\n                </header>\\r\\n\\r\\n                <div>\\r\\n\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n                    <!-- end widget edit box -->\\r\\n                    <!-- widget content -->\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n\\r\\n                        <!-- Success states for elements -->\\r\\n                        <form class=\\\"smart-form smart-form-main\\\">\\r\\n                            <header>Beneficiary Details</header>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Name: </strong>{{beneficiary?.benFullName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>SSIN: </strong>{{beneficiary?.ssI_Number}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Bank Name: </strong>{{beneficiary?.benBankName}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Account No: </strong>{{beneficiary?.benBankAccNo}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>IFSC Code: </strong>{{beneficiary?.benBankIfscCode}}</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label><strong>Branch: </strong>{{beneficiary?.benBankBranch}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n\\r\\n                            </fieldset>\\r\\n                            <div *ngIf=\\\"claim.providentFundDetails != null\\\">\\r\\n                                <header>Provident Fund</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> PF No.: </strong>{{claim.providentFundDetails.pfno}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Claim Amount:</strong> {{claim.providentFundDetails.claimAmount}} /-\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Date of Maturity:</strong> {{claim.providentFundDetails.maturityDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong>  Locking Period Up-to:</strong> {{claim.providentFundDetails.lockingPeriodDateString}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6 \\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Type of Claim:</strong> {{claim.providentFundDetails.typeOfClaimName}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6 \\\" *ngIf=\\\"isPrematureClaim\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Reason for Preclosure:</strong> {{claim.providentFundDetails.reasonForPreClosure}}\\r\\n                                                </label>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"claim.educationDetails != null\\\">\\r\\n                                <header>Education</header>\\r\\n\\r\\n                                <fieldset>\\r\\n\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.educationDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Dependent Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section *ngFor=\\\"let detail of educationList\\\">\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Student: </strong>{{detail?.dependentName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong>Name of the Institution: </strong> {{detail?.institutionName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of the Principal/Head Master of the institution:</strong>{{detail?.institutionPrinicipleName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label> <strong> Contact Number of the Institution: </strong>{{detail?.institutionContact}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Registration No./Roll No. of last exam passed: </strong>{{detail?.registrationRollNo}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Year of Examination: </strong>{{detail?.year}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission: </strong>{{detail?.dateofAdmissionString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Last Exam Passed: </strong>{{detail?.lastExamPassedName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Presently Reading: </strong>{{detail?.presentlyReadingName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Eligible Amount :</strong>{{detail?.eligibleAmount}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.healthFamilyDetails != null\\\">\\r\\n                                <header>Health & Family</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.healthFamilyDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Health & Family Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Type of Claim: </strong>{{claim?.healthFamilyDetails?.typeOfClaimName}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Hospital : </strong> {{claim?.healthFamilyDetails?.hospitalName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Hospitalization/OPD:</strong>{{claim?.healthFamilyDetails?.typeOfHospitalizationName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Patient Id: </strong>{{claim?.healthFamilyDetails?.patientId}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Name of Disease: </strong>{{claim?.healthFamilyDetails?.nameOfTheDiseaseString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.nameOfTheDisease==56\\\">\\r\\n                                                <label><strong> Name of clinical test: </strong>{{claim?.healthFamilyDetails?.nameOfClinicalTestString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"viewMetWithAnAccident\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong> Met with an Accident:</strong>{{claim?.healthFamilyDetails?.isAccident}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Clinical Test: </strong>{{claim?.healthFamilyDetails?.costOfClinicalTest}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Cost of Medicine: </strong>{{claim?.healthFamilyDetails?.costOfMedicine}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==2\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of First Appointment: </strong>{{claim?.healthFamilyDetails?.firstAppointmentDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Claim for: </strong>{{claim?.healthFamilyDetails?.claimForName}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                                <label><strong> Cost of Hospitalization: </strong>{{claim?.healthFamilyDetails?.costOfHospitalization}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalization==1\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of Admission to Hospital: </strong>{{claim?.healthFamilyDetails?.admittedDateString}}</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Discharge :</strong>{{claim?.healthFamilyDetails?.dischargeDateString}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.familyMemberId != undefined && claim?.healthFamilyDetails?.familyMemberId !=0\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Family Member Name: </strong>{{claim?.healthFamilyDetails?.familyMemberName}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"claim?.healthFamilyDetails?.reasonForDelaySubmission != undefined || claim?.healthFamilyDetails?.reasonForDelaySubmission != null\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>  Reason for Delay Submission: </strong>{{claim?.healthFamilyDetails?.reasonForDelaySubmission}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <div *ngIf=\\\"claim?.healthFamilyDetails?.typeOfHospitalizationName!='OPD' && claim?.healthFamilyDetails?.claimFor == 5\\\">\\r\\n                                    <header>Loss of Employment</header>\\r\\n                                    <fieldset>\\r\\n                                        <section>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> From Date: </strong>{{claim?.healthFamilyDetails?.loeFromDateString}}</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong>To Date :</strong>{{claim?.healthFamilyDetails?.loeToDateString}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label><strong> Amount: </strong>{{claim?.healthFamilyDetails?.loeAmount}}</label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n\\r\\n                                <header>View Packages</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\" *ngIf=\\\"selectedPackages.length>0\\\">\\r\\n                                            <table class=\\\"table table-striped\\\" [mfData]=\\\"selectedPackages\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageName\\\">Package Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"packageCode\\\">Package Code</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"ailmentName\\\">Ailment Name</mfDefaultSorter></th>\\r\\n                                                        <th><mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter></th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let pak of mf.data;\\\">\\r\\n                                                        <td>{{pak.packageName}}</td>\\r\\n                                                        <td>{{pak.packageCode}}</td>\\r\\n                                                        <td>{{pak.ailmentName}}</td>\\r\\n                                                        <td>{{pak.amount}}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                                <tfoot><tr><td colspan=\\\"4\\\"><mfBootstrapPaginator></mfBootstrapPaginator></td></tr></tfoot>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.disabilityDetails != null\\\">\\r\\n                                <header>Disability</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.disabilityDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Disability Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Date of release from hospital/Accident: </strong>{{claim?.disabilityDetails?.dateofReleaseString}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Disability : </strong> {{claim?.disabilityDetails?.natureOfDisabilityName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Disability: </strong>{{claim?.disabilityDetails?.detailsOfDisability}} </label>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"this.claim.deathDetails != null\\\">\\r\\n                                <header>Death</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n\\r\\n                                                <div><strong>Claim Amount : </strong> {{claim?.deathDetails?.claimAmount}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </fieldset>\\r\\n                                <header>Death Details</header>\\r\\n                                <fieldset>\\r\\n                                    <section>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label>\\r\\n                                                    <strong>Nature of Death : </strong> {{claim?.deathDetails?.natureofDeathName}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong>Date of Death: </strong>{{claim?.deathDetails?.dateofDeathString}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Details of Death: </strong>{{claim?.deathDetails?.detailsofDeath}} </label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col col-6\\\">\\r\\n                                                <label><strong> Place of Death: </strong>{{claim?.deathDetails?.placeofDeath}} </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </article>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, ViewChild, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { Subscription, concat } from 'rxjs';\r\nimport { EducationDetailModel, EducationHdrModel } from '../models/education.model';\r\nimport { ClaimView } from '../models/claimview.model';\r\nimport { Beneficiary } from '../models/ben.model';\r\nimport { window } from 'rxjs-compat/operator/window';\r\nimport { ClaimsComponent } from '../claims/claims.component';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { AttachmentModel } from '../models/attachment.model';\r\nimport { ClaimTrack } from '../models/track.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { LovConstants, ClaimConstants, ClaimStatus, EntryPoint, AttachmentType, WorkflowTrans, PFTypeOfClaim } from '../pipes/constnts.model';\r\nimport { Package } from '../../models/package.model';\r\nimport { HealthFamilyPackage } from '../../models/healthFamilyPackage.model';\r\n\r\n@Component({\r\n    selector: 'app-claimviewdata',\r\n    templateUrl: './claimviewdata.component.html',\r\n    styleUrls: ['./claimviewdata.component.css']\r\n})\r\nexport class ClaimviewdataComponent implements OnInit {\r\n    @Input() claimId: number;\r\n    @Input() claimType: number;\r\n    @Input() transactionId: number;\r\n    private workflowId: any;\r\n    claim: ClaimView = {} as ClaimView;\r\n    educationDetails: EducationHdrModel = {} as EducationHdrModel;\r\n    beneficiary: Beneficiary = {} as Beneficiary;\r\n    claimsTrack: ClaimTrack = {} as ClaimTrack;\r\n    attachmentList: Array<AttachmentModel> = [];\r\n    educationList: Array<EducationDetailModel> = [];\r\n    viewMetWithAnAccident: boolean = false;\r\n    mode: string;\r\n    packages: Package[] = [] as Package[];\r\n    selectedPackages: Package[] = [] as Package[];\r\n    healthFamilyPackages: HealthFamilyPackage[] = [] as HealthFamilyPackage[];\r\n    isPrematureClaim: boolean = false;\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private userService: UserService, private sanitizer: DomSanitizer) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getPackages();\r\n        this.getClaimDetailsByClaimId(this.claimId, this.transactionId, ClaimConstants[this.claimType]);\r\n    }\r\n    getClaimDetailsByClaimId(id: any, tranctionId: any, claimType: any) {\r\n        this.dataService\r\n            .getClaimDetailsByClaimId(id, tranctionId, claimType)\r\n            .subscribe((data: any) => {\r\n                this.claim = data\r\n                if (this.claim.educationDetails != null) {\r\n                    this.educationList = this.claim.educationDetails.educationDetailList;\r\n                    if (this.claim.educationDetails.educationDetailList.length > 0) {\r\n                        for (var i = 0; i < this.claim.educationDetails.educationDetailList.length; i++) {\r\n                            if (this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length > 0) {\r\n                                for (var j = 0; j < this.claim.educationDetails.educationDetailList[i].attachmentDetailsList.length; j++) {\r\n                                    let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                                    if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                                        attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                                    }\r\n                                    this.attachmentList.push(attachment);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.claim.healthFamilyDetails != null) {\r\n                    for (var j = 0; j < this.claim.healthFamilyDetails.attachmentDTOList.length; j++) {\r\n                        let attachment = this.claim.healthFamilyDetails.attachmentDTOList[j];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.attachmentList.push(attachment);\r\n                    }\r\n\r\n                    if (this.claim.healthFamilyDetails.typeOfHospitalization == 1) {\r\n                        if (this.claim.healthFamilyDetails.typeOfClaim == 5) { this.viewMetWithAnAccident = true; }\r\n                    }\r\n                    let data = this.claim.healthFamilyDetails.healthFamilyPackages;\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        this.packages.filter(x => x.packageID == data[i].packageID)[0].isChecked = true;\r\n                    }\r\n                    this.selectedPackages = this.packages.filter(x => x.isChecked == true);\r\n                }\r\n                if (this.claim.providentFundDetails != null) {\r\n\r\n                    if (this.claim.providentFundDetails.typeOfClaim != null && this.claim.providentFundDetails.typeOfClaim == PFTypeOfClaim.Premature) {\r\n                        this.isPrematureClaim = true;\r\n                    }\r\n                }\r\n                if (this.claim.attachment != null) {\r\n                    for (var k = 0; k < this.claim.attachment.length; k++) {\r\n                        let attachment = this.claim.attachment[k];\r\n                        if (attachment.fileName.split('.')[attachment.fileName.split('.').length - 1] == 'pdf') {\r\n                            attachment.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + attachment.fileContent);\r\n                        }\r\n                        this.claim.attachment[k] = attachment;\r\n                        // this.attachmentList.push(attachment);\r\n                    }\r\n                }\r\n                this.getBenBasicDetails(this.claim.benSno);\r\n                console.log(this.claim);\r\n                //  this.getUrlOfPdf();\r\n            });\r\n    }\r\n    getPackages() {\r\n        this.dataService\r\n            .getPackages()\r\n            .subscribe((data: any) => {\r\n                this.packages = data;\r\n                console.log(this.packages);\r\n                var groups = new Set(this.packages.map(item => item.ailmentName));\r\n            });\r\n    }\r\n    getBenBasicDetails(benNo: any) {\r\n        this.dataService\r\n            .getBeneficiaryBasicDetailsById(benNo)\r\n            .subscribe((data: any) => {\r\n                this.beneficiary = data;\r\n                console.log(this.beneficiary);\r\n            });\r\n    }\r\n}\r\n","﻿import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[NumbersOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n\r\n    DIGITS_REGEXP = new RegExp(/\\D/g);\r\n    constructor(private el: ElementRef) {\r\n\r\n        // Sanatize clipboard by removing any non-numeric input after pasting\r\n        this.el.nativeElement.onpaste = (e: any) => {\r\n            e.preventDefault();\r\n            let text;\r\n            let clp = (e.originalEvent || e).clipboardData;\r\n            if (clp === undefined || clp === null) {\r\n                text = (<any>window).clipboardData.getData('text') || '';\r\n                if (text !== '') {\r\n                    text = text.replace(this.DIGITS_REGEXP, '');\r\n                    if (window.getSelection) {\r\n                        let newNode = document.createElement('span');\r\n                        newNode.innerHTML = text;\r\n                        window.getSelection().getRangeAt(0).insertNode(newNode);\r\n                    } else {\r\n                        (<any>window).selection.createRange().pasteHTML(text);\r\n                    }\r\n                }\r\n            } else {\r\n                text = clp.getData('text/plain') || '';\r\n                if (text !== '') {\r\n                    text = text.replace(this.DIGITS_REGEXP, '');\r\n                    document.execCommand('insertText', false, text);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n        let e = <KeyboardEvent>event;\r\n        if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl+A\r\n            (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+C\r\n            (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+V\r\n            (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+X\r\n            (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div>\\r\\n    <!--<section class=\\\"row\\\">\\r\\n        <section class=\\\"col col-6\\\">\\r\\n            ENCDATA :\\r\\n            <textarea name=\\\"ENCDATA\\\" cols=\\\"70\\\" rows=\\\"5\\\">{{gripsResponse.eNCDATA}}\\r\\n            </textarea>\\r\\n           </section>\\r\\n        <section class=\\\"col col-6\\\">\\r\\n            Service Provider :\\r\\n            <input type=\\\"text\\\" name=\\\"DEPT_CD\\\" value=\\\"{{gripsResponse.serviceProvider}}\\\">\\r\\n        </section>\\r\\n    </section>-->\\r\\n   \\r\\n    <section class=\\\"col col-12\\\">\\r\\n        <label class=\\\"label\\\">Payment Status</label>\\r\\n        <label class=\\\"input\\\" style=\\\"text-decoration-color:green\\\">\\r\\n            <strong> {{status}} </strong>\\r\\n           \\r\\n        </label>\\r\\n    </section>\\r\\n</div>\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { GripsResponseModel } from '../models/gripsResponse.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-gripsresponse',\r\n  templateUrl: './gripsresponse.component.html',\r\n  styleUrls: ['./gripsresponse.component.css']\r\n})\r\nexport class GripsresponseComponent implements OnInit {\r\n    gripsResponse: GripsResponseModel = {} as GripsResponseModel;\r\n    status: any;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private userService: UserService) { }\r\n\r\n    //@HostListener('window:beforeunload', ['$event'])\r\n    //unloadNotification($event: any) {\r\n    //    debugger;\r\n    //    $event.returnValue = true;\r\n    //    this.router.navigate(['.'], { relativeTo: this.route.parent });\r\n    //}\r\n    ngOnInit() {\r\n        debugger;\r\n        this.gripsResponse.eNCDATA = this.userService.user.encData;\r\n        this.gripsResponse.serviceProvider = this.userService.user.serviceProvider;\r\n        var x = this.route.parent;\r\n\r\n        //Transaction Status => 1 success\r\n\t\t//                      2 pending\r\n        //                      3 failure\r\n        if (this.userService.user.isDoubleVerification) {\r\n            this.dataService\r\n                .decryptGripsDoubleVerificationResponse(this.gripsResponse)\r\n                .then((data: any) => {\r\n                    debugger;\r\n                    if (data == 1)\r\n                        this.status = \"Payment is done successfully\";\r\n                    else if (data == 2)\r\n                        this.status = \"Payment is Pending\";\r\n                    else\r\n                        this.status = \"Payment Failed\";\r\n                });\r\n        }\r\n        else {\r\n            this.dataService\r\n                .decryptGripsResponse(this.gripsResponse)\r\n                .then((data: any) => {\r\n                    debugger;\r\n                    if(data == 1)\r\n                        this.status = \"Payment is done successfully\";\r\n                    else if (data == 2)\r\n                        this.status = \"Payment is Pending\";\r\n                    else\r\n                        this.status = \"Payment Failed\";\r\n                });\r\n        }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"widget-grid\\\">\\r\\n    <!--content-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Legacy Claim Entry</h2>\\r\\n                </header>\\r\\n                <div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <fieldset id=\\\"legacyEntry\\\">\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                    <!--<section class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Legacy Claim Ref No.: </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" name=\\\"leagacyCalimRefNo\\\" placeholder=\\\"Legacy Claim Ref No.\\\" [(ngModel)]=\\\"claim.claimRefernceNo\\\">\\r\\n                                            </label>\\r\\n                                        </section>-->\\r\\n                                        <section class=\\\"col col-6\\\">\\r\\n                                            <!--<label class=\\\"label\\\">Date of Payment: </label>\\r\\n                                                <label class=\\\"input\\\">\\r\\n                                                    <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                    <input type=\\\"text\\\" name=\\\"date\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.claimDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                            [(ngModel)]=\\\"claim.claimDate\\\" readonly>\\r\\n                                                </label>-->\\r\\n                                            <label class=\\\"label\\\">Date of Payment <span [style.color]=\\\"!dateofPaymentValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"date\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                       placeholder=\\\"DD/MM/YYYY\\\" value=\\\"{{ claim.claimDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                                       [(ngModel)]=\\\"claim.claimDate\\\" readonly\\r\\n                                                       #date=\\\"ngModel\\\"\\r\\n                                                       [ngClass]=\\\"{'invalid-data':date.invalid && (!dateofPaymentValid), 'valid-data': date.valid && dateofPaymentValid}\\\"\\r\\n                                                       required>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"date.invalid && (!dateofPaymentValid)\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Date of Payment is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Category <span [style.color]=\\\"!categoryValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"claim.claimCategory\\\">\\r\\n                                                <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                <option value=\\\"{{category.lovDtlId}}\\\" *ngFor=\\\"let category of categoryLov\\\">{{category.optionName}}</option>\\r\\n                                                <!--<option value=\\\"1\\\">PF</option>\\r\\n                                                <option value=\\\"2\\\">Health&Family</option>\\r\\n                                                <option value=\\\"3\\\">DisabIlity</option>\\r\\n                                                <option value=\\\"4\\\">Death</option>\\r\\n                                                <option value=\\\"5\\\">Education</option>-->\\r\\n                                            </select>\\r\\n                                            <div *ngIf=\\\"!categoryValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Category is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Claim Amount Received <span [style.color]=\\\"!claimAmountValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" name=\\\"claimAmount\\\" placeholder=\\\"Claim Amount Received\\\" [(ngModel)]=\\\"claim.claimAmount\\\">\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!claimAmountValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Claim Amount Received is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Old Regd No. <span [style.color]=\\\"!oldRegdNoValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" name=\\\"oldRegdNo\\\" placeholder=\\\"Old Regd No.\\\" [(ngModel)]=\\\"claim.oldRegdNo\\\">\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!oldRegdNoValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Old Regd No is required </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!--<div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col col-6\\\">\\r\\n                                                    <label class=\\\"label\\\">Status:</label>\\r\\n                                                    <select class=\\\"form-control\\\" name=\\\"status\\\" [(ngModel)]=\\\"claim.status\\\">\\r\\n                                                        <option value=\\\"0\\\" selected>Choose an Option</option>\\r\\n                                                        <option value=\\\"1\\\">Saved</option>\\r\\n                                                        <option value=\\\"2\\\">Submitted</option>\\r\\n                                                        <option value=\\\"3\\\">Sendback from Inspector</option>\\r\\n                                                        <option value=\\\"4\\\">Forwarded to ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Sendback from ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Reject from ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Approved by ALC</option>\\r\\n                                                        <option value=\\\"5\\\">Forced Closed</option>\\r\\n                                                    </select>\\r\\n                                                </div>\\r\\n                                        </div>-->\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col col-6\\\">\\r\\n                                            <label class=\\\"label\\\">Remarks: </label>\\r\\n                                            <label class=\\\"textarea textarea-resizable\\\">\\r\\n                                                <textarea rows=\\\"3\\\" class=\\\"custom-scroll\\\" name=\\\"remarks\\\" [(ngModel)]=\\\"claim.remarks\\\" placeholder=\\\"Remarks\\\"></textarea>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <form class=\\\"smart-form\\\">\\r\\n                <fieldset class=\\\"top-10\\\"></fieldset>\\r\\n                <footer>\\r\\n                    <a id=\\\"btnSava\\\" class=\\\"btn btn-success\\\" (click)=\\\"SaveLegacyClaim(claim)\\\"> Save </a>\\r\\n                    <a class=\\\"btn btn-danger\\\" (click)=\\\"CancelClick()\\\"> Cancel</a>\\r\\n                </footer>\\r\\n            </form>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Success Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, OnDestroy, ElementRef } from '@angular/core';\r\nimport { Router, Params, ActivatedRoute, Data } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalDirective } from \"ngx-bootstrap\";\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from '../../UserService';\r\nimport { LegacyClaims } from '../../models/LegacyClaims';\r\nimport { UserType, LovConstants } from '../pipes/constnts.model';\r\nimport { LovDetails } from '../../claim/models/Lov.model';\r\n\r\n@Component({\r\n    selector: 'app-legacy-claim-entry',\r\n    templateUrl: './legacy-claim-entry.component.html',\r\n    styleUrls: ['./legacy-claim-entry.component.css']\r\n})\r\nexport class LegacyClaimEntryComponent implements OnInit, OnDestroy {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n    datePickerConfig: any;\r\n    route$: Subscription;\r\n    claim: LegacyClaims = {} as LegacyClaims;\r\n    successMessage: string;\r\n    ssnNoValid: boolean = true;\r\n    dateofPaymentValid: boolean = true;\r\n    categoryValid: boolean = true;\r\n    claimAmountValid: boolean = true;\r\n    oldRegdNoValid: boolean = true;\r\n    categoryLov: LovDetails[];\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private userService: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.route$) this.route$.unsubscribe();\r\n    }\r\n    ngOnInit() {\r\n        this.getCategories();\r\n    }\r\n    SaveLegacyClaim(claimData: LegacyClaims) {\r\n        debugger;\r\n        if (this.validate(claimData)) {\r\n            claimData.userId = this.userService.user.userid;\r\n            claimData.userType = Number(this.userService.user.userTpe);\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .saveLegacyClaimDetails(claimData)\r\n                    .then((data: any) => {\r\n\r\n                        if (data) {\r\n                            this.successMessage = \"Legacy claim successfully Saved\";\r\n                            this.successModal.show();\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                            this.successModal.show();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        else\r\n            return;\r\n    }\r\n    validate(claimData: LegacyClaims) {\r\n        let isValid = true;\r\n        if (claimData.claimDate == null || claimData.claimDate == undefined) { this.dateofPaymentValid = isValid = false }\r\n        if (claimData.claimCategory == 0 || claimData.claimCategory == undefined) { this.categoryValid = isValid = false }\r\n        if (claimData.claimAmount == null || claimData.claimAmount == undefined) { this.claimAmountValid = isValid = false }\r\n        if (claimData.oldRegdNo == null || claimData.oldRegdNo == undefined) { this.oldRegdNoValid = isValid = false }\r\n\r\n        return isValid;\r\n    }\r\n    CancelClick() {\r\n        debugger;\r\n        this.router.navigate(['claim/legacylist']);\r\n        \r\n    }\r\n    okClick() {\r\n        debugger;\r\n        this.successModal.hide();\r\n        window.location.href = \"claim/legacylist\";\r\n    }\r\n    getCategories() {\r\n        this.dataService\r\n            .getlovDetails(LovConstants.LegacyClaimCategory)\r\n            .subscribe((data: any) => {\r\n                this.categoryLov = data;\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n                <header>\\r\\n                    <h2>Legacy Claim Status </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n                    </div>\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n                        <p></p>\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"legacyClaimsData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"ssinNumber\\\">SSIN No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"oldRegdNo\\\">Old Regd No.</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter by=\\\"claimRefernceNo\\\">Claim Refernce No.</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimDateString\\\">Claim Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimAmount\\\">Claim Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <!--<th>\\r\\n                                        <mfDefaultSorter by=\\\"statusName\\\">Satus</mfDefaultSorter>\\r\\n                                    </th>-->\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"claimCategoryName\\\">Claim Catagory</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let data of mf.data|grdFilter: {ssinNumber: searchText,oldRegdNo: searchText,claimDateString:searchText,claimAmount:searchText,claimCategoryName:searchText\\r\\n                                    }; let i=index;\\\">\\r\\n                                    <!--<td class=\\\"\\\">\\r\\n                                    <a (click)=\\\"onreviewClick(data)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                                                </td>-->\\r\\n                                    <td>{{data.ssinNumber}}</td>\\r\\n                                    <td>{{data.oldRegdNo}}</td>\\r\\n                                    <!--<td>{{data.claimRefernceNo}}</td>-->\\r\\n                                    <td>{{data.claimDateString}}</td>\\r\\n                                    <td>{{data.claimAmount}}</td>\\r\\n                                    <!--<td>{{data.statusName}}</td>-->\\r\\n                                    <td>{{data.claimCategoryName}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                        <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { Claims } from '../../claim/models/claims.model';\r\nimport { UserService } from '../../UserService';\r\nimport { ClaimStatus, pagination  } from '../../claim/pipes/constnts.model';\r\nimport { LegacyClaims } from '../../models/LegacyClaims';\r\nimport { UserType } from '../pipes/constnts.model';\r\n\r\n@Component({\r\n  selector: 'app-legacy-list',\r\n  templateUrl: './legacy-list.component.html',\r\n  styleUrls: ['./legacy-list.component.css']\r\n})\r\nexport class LegacyListComponent implements OnInit {\r\n    legacyClaimsData: LegacyClaims[];\r\n    //Paging props start\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    //Paging props end\r\n\r\n    constructor(public router: Router, private dataService: ClaimDataService, private userService: UserService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        //if (this.userService.user.userTpe == UserType.Inspector.toString()) {\r\n        //    this.getLegacyClaimsList(this.userService.user.deptUserid, this.page, this.pageSize);\r\n        //}\r\n        //else {\r\n            this.getLegacyClaimsList(this.userService.user.userid, this.page, this.pageSize);\r\n        //}\r\n        \r\n  }\r\n    getLegacyClaimsList(id: any, pageNo?: any, pageSize?: any) {\r\n        this.dataService\r\n            .getLegacyClaimsList(id, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.legacyClaimsData = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n    onreviewClick(item: any) {\r\n        debugger;\r\n       // this.router.navigate(['alc/reviewpaymentprocess', { paymentProcessId: item.paymentProcessingID, mode: \"view\", statusId: item.statusId }], { skipLocationChange: true });\r\n    }\r\n    changepage(page) {\r\n        this.getLegacyClaimsList(this.userService.user.userid, this.page, this.pageSize);\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<section id=\\\"widget-grid\\\" class=\\\"\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12 nocollapse\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n\\r\\n                <header>\\r\\n                    <h2>Legacy PF Data Entry </h2>\\r\\n                </header>\\r\\n\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <!-- widget edit box -->\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n                        <!-- This area used as dropdown edit box -->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <form class=\\\"smart-form \\\">\\r\\n                            <!--smart-form-main-->\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\" *ngIf=\\\"isDepartmentUser\\\">\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <strong>ARN Number: </strong><span [style.color]=\\\"!ARNReq?'red':''\\\"><b>*</b></span>\\r\\n                                                <select class=\\\"form-control select\\\" name=\\\"agentName\\\" id=\\\"ddlAgentName\\\" [(ngModel)]=\\\"agentUserId\\\"\\r\\n                                                        (change)=\\\"agentChange($event.target.value)\\\" [disabled]=\\\"pfLegacyDtl1List.length>0\\\" tabindex=\\\"1\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose ARN</option>\\r\\n                                                    <option value=\\\"{{agent.userid}}\\\" *ngFor=\\\"let agent of agentList\\\">{{agent.userCode}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!ARNReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">ARN Number is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Agent Name: </strong>{{agentName}}</label>\\r\\n                                        </section>\\r\\n\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Location Name: </strong>{{locationName}}</label>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Worker Type: </strong><span [style.color]=\\\"!workerTypeReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"ddlWorkerType\\\" name=\\\"workerType\\\" [(ngModel)]=\\\"workerTypeId\\\"\\r\\n                                                        (change)=\\\"workerTypeChange($event.target.value)\\\" [disabled]=\\\"pfLegacyDtl1List.length>0\\\" tabindex=\\\"2\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{type.workerTypeId}}\\\" *ngFor=\\\"let type of WorkerTypeList\\\">{{type.workerTypeName}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!workerTypeReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Worker Type is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label>\\r\\n                                                <strong>Deposit Date: </strong><span [style.color]=\\\"!depositDateReq?'red':''\\\"><b>*</b></span>\\r\\n                                            </label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <!--autocomplete=\\\"off\\\"-->\\r\\n                                                <i class=\\\"icon-append fa fa-calendar\\\"></i>\\r\\n                                                <input type=\\\"text\\\" name=\\\"depositedDate\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                       [maxDate]=\\\"toDayDate\\\" (bsValueChange)=\\\"depositDateChange($event)\\\" [disabled]=\\\"pfLegacyDtl1List.length>0\\\"\\r\\n                                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"depositDate\\\" tabindex=\\\"3\\\"\\r\\n                                                       value=\\\"{{depositDate | date: 'dd/MM/yyyy' }}\\\">\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositDateReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit Date is required </span>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"todayMinDepositDateReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit Date should be less than or equal to Today Date </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Financial Year: </strong><span [style.color]=\\\"!financialYearValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"ddlFinanacialYear\\\" name=\\\"finanacialYear\\\" [(ngModel)]=\\\"financialYearId\\\"\\r\\n                                                        [disabled]=\\\"pfLegacyDtl1List.length>0\\\" tabindex=\\\"4\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{type.financialYearId}}\\\" *ngFor=\\\"let type of finanacialYearList\\\">{{type.financialYear}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!financialYearValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Financial Year is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Deposit Amount: </strong><span [style.color]=\\\"!depositedAmountReq?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"depositedAmount\\\" placeholder=\\\"Deposit Amount\\\" [(ngModel)]=\\\"depositedAmount\\\"\\r\\n                                                       (change)=\\\"depositedAmountChange($event.target.value)\\\" (keydown.enter)=\\\"depositedAmountChange($event.target.value)\\\"\\r\\n                                                       NumbersOnly min=\\\"=1\\\" tabindex=\\\"5\\\"/>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositedAmountReq\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit Amount is required </span>\\r\\n                                            </div>\\r\\n                                            <!--<div *ngIf=\\\"agentDepositAmountValidation\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit amount allow only {{pfMasterConfig.agentCollectionLimit}} </span>\\r\\n                                            </div>-->\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Payin Slip: </strong></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"payinSlip\\\" placeholder=\\\"Payin Slip\\\" [(ngModel)]=\\\"payinSlip\\\" tabindex=\\\"6\\\"/>\\r\\n                                            </label>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Upload PayIn Slip: </strong> <span [style.color]=\\\"!payInSlipUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <div class=\\\"input input-file\\\">\\r\\n                                                <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\" tabindex=\\\"7\\\">Browse</span>\\r\\n                                                <input type=\\\"text\\\" readonly>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"(!payInSlipUploaded) && (payInSlipCertificate.fileName =='' || payInSlipCertificate.fileName == undefined )\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Upload PayIn Slip is required </span>\\r\\n                                            </div>\\r\\n                                            <div>\\r\\n                                                <table>\\r\\n                                                    <tr>\\r\\n                                                        <td>{{payInSlipCertificate.fileName}}</td>\\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                            <label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label><strong>Deposit A/c Number: </strong><span [style.color]=\\\"!depositBankValid?'red':''\\\"><b>*</b></span></label>\\r\\n                                            <label class=\\\"input\\\">\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"ddlDepositBank\\\" name=\\\"depositBank\\\" [(ngModel)]=\\\"bankId\\\"\\r\\n                                                       tabindex=\\\"8\\\">\\r\\n                                                    <option value=\\\"0\\\" selected disabled>Choose an Option</option>\\r\\n                                                    <option value=\\\"{{bank.bankCode}}\\\" *ngFor=\\\"let bank of bankDetails\\\">{{bank.accountNumber}}</option>\\r\\n                                                </select>\\r\\n                                            </label>\\r\\n                                            <div *ngIf=\\\"!depositBankValid\\\">\\r\\n                                                <span style=\\\"color: red;\\\">Deposit A/c Number is required </span>\\r\\n                                            </div>\\r\\n                                        </section>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <section>\\r\\n                                    <div class=\\\"modal-footer\\\" *ngIf=\\\"isDepartmentUser\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addReceiptBook()\\\">\\r\\n                                                Add Receipt Book\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <table class=\\\"table table-striped table-bordered\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>\\r\\n                                                        SSIN/PF No\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Beneficiary Name\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Beneficiary SSIN/PF No.\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Collection Date\\r\\n                                                    </th>\\r\\n                                                    <th width=\\\"300\\\">\\r\\n                                                        Month\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Amount\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Book No\\r\\n                                                    </th>\\r\\n                                                    <th>\\r\\n                                                        Receipt No\\r\\n                                                    </th>\\r\\n                                                    <th>Action</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let field of pfLegacyMaster.pfLegacyDtl1List; let i = index\\\">\\r\\n                                                    <td width=\\\"130\\\">\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <span>{{field.ssI_Number}}</span>\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" id=\\\"benSno\\\" name=\\\"{{field.ssI_Number}}\\\" [(ngModel)]=\\\"field.ssI_Number\\\" placeholder=\\\"Beneficiary SSIN\\\"\\r\\n                                                                       (change)=\\\"searchSSINNo($event.target.value)\\\" (keydown.enter)=\\\"searchSSINNo($event.target.value)\\\" maxlength=\\\"50\\\"\\r\\n                                                                       [ngClass]=\\\"{'invalid-data':!ssinValid, 'valid-data': ssinValid}\\\"\\r\\n                                                                       required tabindex=\\\"1\\\">\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"(!ssinValid )\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Beneficiary SSIN is required </span>\\r\\n                                                            </div>\\r\\n                                                            <!--<div *ngIf=\\\"(!validPFNo )\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Beneficiary doesn't have PF Account NO. </span>\\r\\n                                                            </div>-->\\r\\n                                                            <div *ngIf=\\\"validWTBen\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Beneficiary SSIN/PF No. doesn't belong to selected Worker Type </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"benRegDateMinFinancialYear\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Beneficiary Registration Date later to the selected Financial year </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"validBenLocation\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Beneficiary doesn't belong to selected location </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{field.benFullName}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{field.benSSINOrPFAccountNo}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                {{field.collectionDate | date: 'dd/MM/yyyy' }}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" name=\\\"{{field.collectionDate}}\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                                       [maxDate]=\\\"collectionMinDt\\\" [minDate]=\\\"minDt\\\" [disabled]=\\\"disableCollectionDate\\\" (bsValueChange)=\\\"collectionDateChange($event)\\\"\\r\\n                                                                       placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"field.collectionDate\\\"\\r\\n                                                                       value=\\\"{{field.collectionDate | date: 'dd/MM/yyyy' }}\\\" [ngClass]=\\\"{'invalid-data': (!collectionDateReq), 'valid-data': collectionDateReq}\\\"\\r\\n                                                                       required tabindex=\\\"2\\\">\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!collectionDateReq\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Collection Date is required </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"DepositMinDateReq\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Collection Date should be less than or equal to Deposit Date </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"todayMinCollectionDateReq\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Collection Date should be less than or equal to Today Date </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"isColDateinRangeYear\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Collection Date should be in between Financial Year</span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"benRegDateMinCollectionDate\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Collection Date should be in greater than to Beneficiary Registration Date</span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td width=\\\"230\\\" style=\\\"padding-right:3%\\\">\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                {{field.monthName}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <ng-multiselect-dropdown name=\\\"editMonths\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                                     [data]=\\\"pfMonths\\\"\\r\\n                                                                                     [(ngModel)]=\\\"field.selectedMonths\\\"\\r\\n                                                                                     [settings]=\\\"monthSettings\\\"\\r\\n                                                                                     (onSelect)=\\\"onItemSelect($event, field,i)\\\"\\r\\n                                                                                     (onDeSelect)=\\\"onItemDeSelect($event, field)\\\"\\r\\n                                                                                     style=\\\"height:36%\\\" tabindex=\\\"3\\\">\\r\\n                                                            </ng-multiselect-dropdown>\\r\\n                                                            <div *ngIf=\\\"!pfMonthIsValid\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Month is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                {{field.amountPaid}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" name=\\\"{{field.amountPaid}}\\\" placeholder=\\\"Amount\\\" [(ngModel)]=\\\"field.amountPaid\\\" NumbersOnly\\r\\n                                                                       required tabindex=\\\"4\\\"/>\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!amountReq\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Amount is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                {{field.bookName}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <select name=\\\"{{field.bookNo}}\\\" [(ngModel)]=\\\"field.bookNo\\\"\\r\\n                                                                        [ngClass]=\\\"{'invalid-data': !bookNoIsValid, 'valid-data': bookNoIsValid }\\\"\\r\\n                                                                        required (change)=\\\"bookChange($event)\\\" tabindex=\\\"5\\\">\\r\\n                                                                    <option value=\\\"0\\\" selected disabled>Choose book</option>\\r\\n                                                                    <option value=\\\"{{book.id}}\\\" *ngFor=\\\"let book of agentReceiptBooks\\\">{{book.bookNo}}</option>\\r\\n                                                                </select>\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!bookNoIsValid\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Book No. is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <section *ngIf=\\\"!field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                {{field.receiptNo}}\\r\\n                                                            </label>\\r\\n                                                        </section>\\r\\n                                                        <section *ngIf=\\\"field.isEdit\\\">\\r\\n                                                            <label class=\\\"input\\\">\\r\\n                                                                <input type=\\\"text\\\" name=\\\"{{field.receiptNo}}\\\" placeholder=\\\"Receipt No\\\" [(ngModel)]=\\\"field.receiptNo\\\" NumbersOnly\\r\\n                                                                       (change)=\\\"receiptNoChange(field.bookNo, $event.target.value)\\\" (keydown.enter)=\\\"receiptNoChange(field.bookNo,$event.target.value)\\\"\\r\\n                                                                       [ngClass]=\\\"{'invalid-data':!receiptNoIsValid, 'valid-data':receiptNoIsValid}\\\"\\r\\n                                                                       required tabindex=\\\"6\\\"/>\\r\\n                                                            </label>\\r\\n                                                            <div *ngIf=\\\"!receiptNoIsValid\\\">\\r\\n                                                                <span style=\\\"color: red;\\\">Receipt No. is required </span>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <!--<a *ngIf=\\\"!field.isEdit\\\" (click)=\\\"editFieldValue(i,field)\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\r\\n                                                        <a *ngIf=\\\"field.isEdit\\\" (click)=\\\"saveFieldValue(i,field)\\\" title=\\\"Save\\\" class=\\\"txt-color-blue\\\"><i class=\\\"glyphicon glyphicon-save\\\"></i></a>-->\\r\\n                                                        <a (click)=\\\"deleteFieldValue(i,field)\\\" title=\\\"Delete\\\" class=\\\"txt-color-red\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                                <tr *ngIf=\\\"showAddRow\\\">\\r\\n                                                    <td width=\\\"130\\\">\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <input type=\\\"text\\\" id=\\\"benSno\\\" name=\\\"benSno\\\" [(ngModel)]=\\\"newAttribute.ssI_Number\\\" placeholder=\\\"Beneficiary SSIN/PF No.\\\"\\r\\n                                                                   (change)=\\\"searchSSINNo($event.target.value)\\\" (keydown.enter)=\\\"searchSSINNo($event.target.value)\\\" maxlength=\\\"50\\\"\\r\\n                                                                   #benSno=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data':!ssinValid, 'valid-data': ssinValid}\\\"\\r\\n                                                                   required tabindex=\\\"9\\\">\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"(!ssinValid )\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Beneficiary SSIN is required </span>\\r\\n                                                        </div>\\r\\n                                                        <!--<div *ngIf=\\\"(!validPFNo )\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Beneficiary doesn't have PF Account NO. </span>\\r\\n                                                        </div>-->\\r\\n                                                        <div *ngIf=\\\"validWTBen\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Beneficiary SSIN/PF No. doesn't belong to selected Worker Type </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"beneficiary.benSno==0\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">{{beneficiary.errorMessage}}</span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"isInterestCalculated\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">You can not enter transaction has interest already calculated for this Beneficiary SSIN/PF No.</span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"benRegDateMinFinancialYear\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Beneficiary Registration Date later to the selected Financial year </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"validBenLocation\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Beneficiary doesn't belong to selected location </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{beneficiary.benFullName}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <span>{{beneficiary.benSSINOrPFAccountNo}}</span>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <input type=\\\"text\\\" name=\\\"collectionDate\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                                                   [maxDate]=\\\"collectionMinDt\\\" [minDate]=\\\"minDt\\\" [disabled]=\\\"disableCollectionDate\\\" (bsValueChange)=\\\"collectionDateChange($event)\\\"\\r\\n                                                                   placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"newAttribute.collectionDate\\\"\\r\\n                                                                   value=\\\"{{newAttribute.collectionDate | date: 'dd/MM/yyyy' }}\\\" [ngClass]=\\\"{'invalid-data': (!collectionDateReq), 'valid-data': collectionDateReq}\\\"\\r\\n                                                                   required tabindex=\\\"10\\\">\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!collectionDateReq\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Collection Date is required </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"DepositMinDateReq\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Collection Date should be less than or equal to Deposit Date </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"todayMinCollectionDateReq\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Collection Date should be less than or equal to Today Date </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"isColDateinRangeYear\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Collection Date should be in between Financial Year</span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"benRegDateMinCollectionDate\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Collection Date should be in greater than to Beneficiary Registration Date</span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td width=\\\"230\\\" style=\\\"padding-right:3%\\\">\\r\\n                                                        <ng-multiselect-dropdown name=\\\"pfselectionmonth\\\" [placeholder]=\\\"'All'\\\"\\r\\n                                                                                 [data]=\\\"pfMonths\\\"\\r\\n                                                                                 [(ngModel)]=\\\"newAttribute.selectedMonths\\\"\\r\\n                                                                                 [settings]=\\\"monthSettings\\\"\\r\\n                                                                                 (onSelect)=\\\"onItemSelect($event, newAttribute, -1)\\\" (onDeSelect)=\\\"onItemDeSelect($event, newAttribute)\\\"\\r\\n                                                                                 style=\\\"height:36%\\\" tabindex=\\\"11\\\">\\r\\n                                                        </ng-multiselect-dropdown>\\r\\n                                                        <div *ngIf=\\\"!pfMonthIsValid\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Month is required </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <input type=\\\"text\\\" name=\\\"amount\\\" placeholder=\\\"Amount\\\" [(ngModel)]=\\\"newAttribute.amountPaid\\\" NumbersOnly\\r\\n                                                                   #amount=\\\"ngModel\\\" required tabindex=\\\"12\\\" />\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!amountReq\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Amount is required </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <select name=\\\"bookNo\\\" [(ngModel)]=\\\"newAttribute.bookNo\\\"\\r\\n                                                                    #bookNo=\\\"ngModel\\\" [ngClass]=\\\"{'invalid-data': !bookNoIsValid, 'valid-data': bookNoIsValid }\\\"\\r\\n                                                                    required (change)=\\\"bookChange($event)\\\" tabindex=\\\"13\\\">\\r\\n                                                                <option value=\\\"0\\\" selected disabled>Choose book</option>\\r\\n                                                                <option value=\\\"{{book.id}}\\\" *ngFor=\\\"let book of agentReceiptBooks\\\">{{book.bookNo}}</option>\\r\\n                                                            </select>\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!bookNoIsValid\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Book No. is required </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <label class=\\\"input\\\">\\r\\n                                                            <input type=\\\"text\\\" name=\\\"ReceiptNo\\\" placeholder=\\\"Receipt No\\\" [(ngModel)]=\\\"newAttribute.receiptNo\\\" NumbersOnly\\r\\n                                                                   #ReceiptNo=\\\"ngModel\\\" (change)=\\\"receiptNoChange(newAttribute.bookNo, $event.target.value)\\\" (keydown.enter)=\\\"receiptNoChange(newAttribute.bookNo,$event.target.value)\\\"\\r\\n                                                                   [ngClass]=\\\"{'invalid-data':!receiptNoIsValid, 'valid-data':receiptNoIsValid}\\\"\\r\\n                                                                   required  tabindex=\\\"14\\\"/>\\r\\n                                                        </label>\\r\\n                                                        <div *ngIf=\\\"!receiptNoIsValid\\\">\\r\\n                                                            <span style=\\\"color: red;\\\">Receipt No. is required </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <button (click)=\\\"addFieldValue()\\\" title=\\\"Add\\\" class=\\\"txt-color-green\\\" tabindex=\\\"15\\\" (keydown.enter)=\\\"addFieldValue()\\\">\\r\\n                                                            <i class=\\\"glyphicon glyphicon-plus\\\"></i>\\r\\n                                                        </button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!noRecords\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Add atleast one entry</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" *ngIf=\\\"isReceiptNoRange\\\">\\r\\n                                        <div class=\\\"col col-12\\\" style=\\\"color:red; margin-bottom:10px;\\\">\\r\\n                                            <label>Receipt No. not in the range</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <section class=\\\"col col-4\\\">\\r\\n                                            <label>\\r\\n                                                <strong>Remaining Amount: </strong>{{remainingAmount}}\\r\\n                                            </label>\\r\\n                                        </section>\\r\\n                                        <section class=\\\"col col-4\\\"> <label><strong>Total: </strong>{{total}}</label></section>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </fieldset>\\r\\n                            <footer>\\r\\n                                <button type=\\\"button\\\" [disabled]=\\\"!(pfLegacyDtl1List.length>0 && total==depositedAmount)\\\" name=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveLegacyPFDetails(pfLegacyMaster,2)\\\">\\r\\n                                    Submit\\r\\n                                </button>\\r\\n                                <!--<a *ngIf=\\\"pfCollectionDetailsList.length>0 && total==depositedAmount\\\" name=\\\"save\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveLegacyPFDetails(pfCollectionDetailsList,2)\\\">Submit</a>-->\\r\\n                                <a class=\\\"btn btn-danger\\\" (click)=\\\"cancleClick()\\\">Cancel</a>\\r\\n                                <!--<a class=\\\"btn btn-warning\\\">Verify</a>-->\\r\\n                                <!--<a *ngIf=\\\"pfCollectionDetailsList.length>0\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveLegacyPFDetails(pfCollectionDetailsList,1)\\\">Save as Draft</a>-->\\r\\n                                <button type=\\\"button\\\" [disabled]=\\\"pfLegacyDtl1List.length<=0\\\" name=\\\"save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveLegacyPFDetails(pfLegacyMaster,1)\\\">\\r\\n                                    Save as Draft\\r\\n                                </button>\\r\\n                            </footer>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n                    <!-- end widget content -->\\r\\n\\r\\n                </div>\\r\\n                <!-- end widget div -->\\r\\n\\r\\n            </div>\\r\\n            <!-- end widget -->\\r\\n\\r\\n        </article>\\r\\n        <!-- WIDGET END -->\\r\\n\\r\\n    </div>\\r\\n</section>\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p id=\\\"mesgSubmit\\\">{{successMessage}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"okClick()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { NewRegUsers } from 'src/app/models/newReg.model';\r\nimport { Months, FinancialYearMonths, PfMonths, PFMasterConfigAmount } from '../models/pf.months.model';\r\nimport { PFBeneficiaryDetails } from '../models/pf.beneficiaryBasic.model';\r\nimport { RloBankDetails } from 'src/app/models/rlobankdetails.model';\r\nimport { WorkFlowMaster } from 'src/app/models/workerTypeDetails.model';\r\nimport { ReceiptBookModel } from 'src/app/models/receiptbook.model';\r\nimport { PayInSlipAttachmentModel } from '../models/payinslip-attachment';\r\nimport { FinancialYearModel } from 'src/app/models/financialYear.model';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { UserType, AttachmentType } from '../pipes/constnts.model';\r\nimport { PFLegacyMaster, PFLegacyDtl1, PFLegacyDtl2 } from '../models/pfLegacyMaster.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { LwcBankMst } from 'src/app/models/lwcBankMst.model';\r\n\r\n@Component({\r\n    selector: 'app-legacypfdetails',\r\n    templateUrl: './legacypfdetails.component.html',\r\n    styleUrls: ['./legacypfdetails.component.css']\r\n})\r\n\r\nexport class LegacypfdetailsComponent implements OnInit {\r\n    @ViewChild('successModal') public successModal: ModalDirective;\r\n\r\n    route$: Subscription;\r\n    successMessage: string;\r\n    datePickerConfig: any;\r\n    agentList: Array<NewRegUsers> = [];\r\n    agentUserId: number;\r\n    agentName: string;\r\n    locationName: string;\r\n    locationId: number;\r\n    depositDate: Date;\r\n    depositDateReq: boolean = true;\r\n    bankId: number;\r\n    payinSlip: number;\r\n    workerTypeId: number;\r\n\r\n    months = Months;\r\n    rowIndex = -1;\r\n    test: number;\r\n    collectionDate: Date;\r\n    ssin: any;\r\n    ssinValid: boolean = true;\r\n    pfMonthIsValid: boolean = true;\r\n    pfAmountIsValid: boolean = true;\r\n    collectionDateReq: boolean = true;\r\n    receiptNoIsValid: boolean = true;\r\n    bookNoIsValid: boolean = true;\r\n    benficiaryInactive: boolean = false;\r\n    beneficiary: PFBeneficiaryDetails = {} as PFBeneficiaryDetails;\r\n    pfMonths: FinancialYearMonths[] = [] as FinancialYearMonths[];\r\n    pfSelectedMonths: PfMonths[] = [] as PfMonths[];\r\n    pfMasterConfig: PFMasterConfigAmount = {} as PFMasterConfigAmount;\r\n    pfTotalAmount: number;\r\n\r\n    fStartYear: any;\r\n    fEndYear: any;\r\n    currentyear: any;\r\n    toDayDate: Date;\r\n    pfSelectedMonth: number;\r\n    bankDetails: Array<LwcBankMst> = [];\r\n    WorkerTypeList: WorkFlowMaster[];\r\n    agentReceiptBooks: ReceiptBookModel[] = [] as ReceiptBookModel[];\r\n    isValidSave: boolean = true;\r\n    isMonthEnable: boolean = true;\r\n    agentSubDivId: number;\r\n    rloOfficeId: number;\r\n    private fieldArray: Array<any> = [];\r\n    private newAttribute: any = {};\r\n    remainingAmount: number = 0;\r\n    total: number = 0;\r\n    depositedAmount: number;\r\n    depositedAmountReq: boolean = true;\r\n    depositBankValid: boolean = true;\r\n    ARNReq: boolean = true;\r\n    workerTypeValid: boolean = false;\r\n    monthSettings = {};\r\n    selectedMonthIds: Array<any> = [];\r\n    sMon: PfMonths[] = [] as PfMonths[];\r\n    pfmonth1: PfMonths = {} as PfMonths;\r\n    collectionMinDt: Date;\r\n    disableCollectionDate: boolean = true;\r\n    isValidMonth: boolean = true;\r\n    amountReq: boolean = true;\r\n\r\n    payInSlipUploaded: boolean = true;\r\n    payInSlipCertificate: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n    noRecords: boolean = true;\r\n    activeYear: FinancialYearModel = {} as FinancialYearModel;\r\n    minDt: Date;\r\n    maxDt: Date;\r\n    isDepartmentUser: boolean = true;\r\n    userDetails: NewRegUsers;\r\n    receiptNoFrom: number;\r\n    receiptNoTo: number;\r\n    isReceiptNoRange: boolean = false;\r\n    collectionYear: FinancialYearModel = {} as FinancialYearModel;\r\n    // validPFNo: boolean = true;\r\n    showAddRow: boolean = true;\r\n    workerTypeReq: boolean = true;\r\n    pfLegacyMaster: PFLegacyMaster = {} as PFLegacyMaster;\r\n    pfLegacyDtl1List: Array<PFLegacyDtl1> = [];\r\n    pfLegacyDtl1: PFLegacyDtl1 = {} as PFLegacyDtl1;\r\n    pfLegacyDtl2: PFLegacyDtl2 = {} as PFLegacyDtl2;\r\n    pfLegacyMasterId: number = 0;\r\n    nextSSIN: any;\r\n    input: any;\r\n    validWTBen: boolean = false;\r\n    bookId: number;\r\n    nextReceiptNo: number;\r\n    monthContributionAmount: number;\r\n    editStr: string = \"\";\r\n    DepositMinDateReq: boolean = false;\r\n    todayMinDepositDateReq: boolean = false;\r\n    todayMinCollectionDateReq: boolean = false;\r\n    receiptGenerated: boolean = true;\r\n    financialYearValid: boolean = true;\r\n    financialYearId: number;\r\n    finanacialYearList: FinancialYearModel[];\r\n    isColDateinRangeYear: boolean = false;\r\n    isInterestCalculated: boolean = false;\r\n    benRegDateMinCollectionDate: boolean = false;\r\n    benRegDateMinFinancialYear: boolean = false;\r\n    colMonths: Date;\r\n    validBenLocation: boolean = false;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        debugger;\r\n        this.toDayDate = new Date();\r\n        this.currentyear = new Date().getFullYear();\r\n        let currentMonth = new Date().getMonth();\r\n        if (currentMonth <= 3) {\r\n            this.fStartYear = this.currentyear - 1;\r\n            this.fEndYear = this.currentyear;\r\n        }\r\n        else {\r\n            this.fStartYear = this.currentyear;\r\n            this.fEndYear = this.currentyear + 1;\r\n        }\r\n\r\n        this.currentyear = this.fStartYear + '-' + this.fEndYear;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.route$ = this.route.params.subscribe(\r\n            (params: Params) => {\r\n                this.pfLegacyMasterId = params[\"pfLegacyMasterId\"] != null ? Number(params[\"pfLegacyMasterId\"]) : 0;\r\n            }\r\n        );\r\n        this.getActiveFinancialYear();\r\n        this.pfMonths = this.months;\r\n        this.getWorkerTypeDetails();\r\n        this.getPFMasterConfigDetails();\r\n        //-------------------\r\n        this.monthSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',//'monthId',\r\n            textField: 'monthName',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 2,\r\n        };\r\n        if (Number(this.user.user.userTpe) == UserType.ServiceProvider || Number(this.user.user.userTpe) == UserType.CA) {\r\n            this.isDepartmentUser = false;\r\n\r\n            this.dataService\r\n                .getUserDetails(this.user.user.deptUserid)\r\n                .subscribe((data: any) => {\r\n                    this.userDetails = data;\r\n                    if (this.userDetails != null) {\r\n                        this.agentUserId = this.user.user.deptUserid;\r\n                        this.agentName = this.user.user.userName;\r\n                        this.locationName = this.userDetails.locationName;\r\n                        this.locationId = this.userDetails.location;\r\n                        this.agentSubDivId = this.userDetails.subDivId;\r\n                        if (this.userDetails.agentRLOInformation != null)\r\n                            this.rloOfficeId = this.userDetails.agentRLOInformation.rloOfficeId;\r\n\r\n                        this.getAgentBooks(this.agentUserId);\r\n                        // this.getAgentLegacyPfDetails(this.agentUserId);\r\n                    }\r\n                });\r\n\r\n        }\r\n        else {\r\n            this.getAgentList();\r\n        }\r\n        debugger;\r\n        if (this.pfLegacyMasterId > 0) {\r\n            this.getLegacyPFCollectionDetails(this.pfLegacyMasterId);\r\n        }\r\n    }\r\n    validatePFCollectionDtl(pfDetails: PFLegacyDtl1): boolean {\r\n        let isValid = true;\r\n        debugger;\r\n        if (pfDetails.ssI_Number == undefined || pfDetails.ssI_Number == \"\") { this.ssinValid = isValid = false; }\r\n        if (pfDetails.selectedMonths == undefined || pfDetails.selectedMonths.length == 0) { this.pfMonthIsValid = isValid = false; }\r\n        else {\r\n            if (pfDetails.selectedMonths.length > 0 && this.pfMasterConfig != null && (pfDetails.amountPaid != undefined || pfDetails.amountPaid != null || pfDetails.amountPaid.toString() != \"\")) {\r\n                let contAmount = 0;\r\n                contAmount = (pfDetails.selectedMonths.length * this.pfMasterConfig.beneficiaryPFContribution);\r\n                if (contAmount > pfDetails.amountPaid) {\r\n                    alert(\"Collection Amount less than Contribution Amount\");\r\n                    isValid = false;\r\n                }\r\n            }\r\n        }\r\n        if (pfDetails.bookNo == undefined || pfDetails.bookNo == null) { this.bookNoIsValid = isValid = false; }\r\n        if (pfDetails.receiptNo == undefined || pfDetails.receiptNo == null || pfDetails.receiptNo.toString() == \"\") { this.receiptNoIsValid = isValid = false; }\r\n        if (pfDetails.collectionDate == undefined || pfDetails.collectionDate == null) { this.collectionDateReq = isValid = false; }\r\n        if (pfDetails.amountPaid == undefined || pfDetails.amountPaid == null || pfDetails.amountPaid.toString() == \"\") { this.amountReq = isValid = false; }\r\n        if (this.depositedAmount == undefined || this.depositedAmount == 0 || this.depositedAmount == null) { this.depositedAmountReq = isValid = false; }\r\n        if (this.isReceiptNoRange) { isValid = false; }\r\n        if ((this.depositedAmount != undefined || this.depositedAmount != 0 || this.depositedAmount != null) && (pfDetails.amountPaid != undefined || pfDetails.amountPaid != null)) {\r\n            if (Number(this.depositedAmount) < Number(pfDetails.amountPaid)) {\r\n                alert(\"Collection Amount exceeds Deposit Amount\");\r\n                isValid = false;\r\n            }\r\n        }\r\n        if (this.validWTBen) { isValid = false; }\r\n        if (this.DepositMinDateReq) { isValid = false; }\r\n        if (this.todayMinCollectionDateReq) { isValid = false; }\r\n        if (this.benRegDateMinCollectionDate) { isValid = false; }\r\n        let amt = 0;\r\n        for (let i = 0; i < this.pfLegacyDtl1List.length; i++) {\r\n            amt = Number(amt) + Number(this.pfLegacyDtl1List[i].amountPaid);\r\n        }\r\n        amt = amt + Number(pfDetails.amountPaid);\r\n        if (Number(this.depositedAmount) < Number(amt)) {\r\n            alert(\"Collection Amount exceeds Deposit Amount\");\r\n            isValid = false;\r\n        }\r\n        if (this.validBenLocation) { isValid = false; }\r\n        return isValid;\r\n    }\r\n    addFieldValue() {\r\n        if (this.validatePFCollectionDtl(this.newAttribute)) {\r\n            debugger;\r\n            if (this.isValidMonth) {\r\n                this.monthSelection(this.newAttribute);\r\n                let str = \"\";\r\n                let newString = \"\";\r\n                this.newAttribute.pfLegacyDtl2 = [];\r\n                for (let i = 0; i < this.newAttribute.selectedMonths.length; i++) {\r\n                    debugger;\r\n                    if (this.pfLegacyDtl1List != null && this.pfLegacyDtl1List.length > 0) {\r\n                        for (let j = 0; j < this.pfLegacyDtl1List.length; j++) {\r\n                            if (this.pfLegacyDtl1List[j].benSno == this.beneficiary.benSno) {\r\n                                for (let k = 0; k < this.pfLegacyDtl1List[j].selectedMonths.length; k++) {\r\n                                    if (this.pfLegacyDtl1List[j].selectedMonths[k].monthId == this.newAttribute.selectedMonths[i].monthId\r\n                                        && this.pfLegacyDtl1List[j].selectedMonths[k].year == this.newAttribute.selectedMonths[i].year) {\r\n                                        str = \"already \" + this.newAttribute.selectedMonths[i].monthName + \" this month is added to ssin\";\r\n                                        alert(str); return;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    newString += this.newAttribute.selectedMonths[i].monthName + \",\";\r\n                    this.newAttribute.pfLegacyDtl2.push({ monthPaid: this.newAttribute.selectedMonths[i].monthId, yearPaid: this.newAttribute.selectedMonths[i].year, amount: this.newAttribute.selectedMonths[i].amount });\r\n                }\r\n                if (str == \"\") {\r\n                    if (this.pfLegacyDtl1List.findIndex(x => x.bookNo == this.newAttribute.bookNo && x.receiptNo == this.newAttribute.receiptNo) == -1) {\r\n                        this.newAttribute.benSno = this.beneficiary.benSno;\r\n                        this.newAttribute.benFullName = this.beneficiary.benFullName;\r\n                        this.newAttribute.benSSINOrPFAccountNo = this.beneficiary.benSSINOrPFAccountNo;\r\n                        this.newAttribute.benPFAccountId = this.beneficiary.benPFAccountId;\r\n                        this.newAttribute.monthName = newString.substr(0, newString.length - 1);\r\n                        this.newAttribute.bookName = this.agentReceiptBooks.find(x => x.id == this.newAttribute.bookNo).bookNo;\r\n\r\n                        //this.remainingAmount = this.remainingAmount - Number(this.newAttribute.amountPaid);\r\n                        //this.total = this.total + Number(this.newAttribute.amountPaid);\r\n\r\n                        this.pfLegacyDtl1List.push(this.newAttribute);\r\n                        let amt = 0;\r\n                        for (let i = 0; i < this.pfLegacyDtl1List.length; i++) {\r\n                            amt = Number(amt) + Number(this.pfLegacyDtl1List[i].amountPaid);\r\n                        }\r\n                        if (this.depositedAmount >= amt) {\r\n                            this.remainingAmount = Number(this.depositedAmount) - Number(amt);\r\n                        }\r\n                        this.total = amt; this.newAttribute = {};\r\n                        this.selectedMonthIds = [];\r\n                        if (this.total > 0 && this.total == this.depositedAmount)\r\n                            this.showAddRow = false;\r\n                        else {\r\n                            this.showAddRow = true;\r\n                            // this.newAttribute.ssI_Number = this.nextSSIN;\r\n                            this.newAttribute.collectionDate = this.collectionDate;\r\n                            this.newAttribute.bookNo = this.agentReceiptBooks.find(x => x.id == this.bookId).id;\r\n\r\n                            this.nextReceiptNo = Number(this.pfLegacyDtl1List[this.pfLegacyDtl1List.length - 1].receiptNo);\r\n                            if (this.nextReceiptNo != null && this.nextReceiptNo != undefined) {\r\n                                if (this.nextReceiptNo < this.receiptNoFrom || this.nextReceiptNo > this.receiptNoTo) {\r\n                                    this.isReceiptNoRange = true;\r\n                                }\r\n                                else {\r\n                                    this.isReceiptNoRange = false;\r\n                                    let recNo = Number(this.nextReceiptNo) + 1; debugger;\r\n                                    if (recNo >= this.receiptNoFrom && recNo <= this.receiptNoTo)\r\n                                        this.nextReceiptNo = recNo;\r\n                                }\r\n                            }\r\n                            this.newAttribute.receiptNo = this.nextReceiptNo;\r\n                            if (Number(this.depositedAmount) < Number(amt)) {\r\n                                alert(\"Collection Amount exceeds Deposit Amount\");\r\n                                this.remainingAmount = 0;\r\n                                this.showAddRow = false;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        alert(\"already this receipt is generated\"); return;\r\n                    }\r\n                }\r\n                this.pfLegacyMaster.pfLegacyDtl1List = this.pfLegacyDtl1List;\r\n                this.beneficiary.benFullName = '';\r\n                this.beneficiary.benSSINOrPFAccountNo = '';\r\n                this.nextReceiptNo = null;\r\n\r\n            }\r\n        }\r\n    }\r\n    editFieldValue(index, field: PFLegacyDtl1) {\r\n\r\n        field.isEdit = true;\r\n\r\n        this.searchSSINNo(field.ssI_Number);\r\n        this.beneficiary.benFullName = \"\";\r\n        this.beneficiary.benSSINOrPFAccountNo = \"\"; this.remainingAmount = Number(this.remainingAmount) + Number(field.amountPaid);\r\n        this.total = Number(this.total) - Number(field.amountPaid);\r\n        if (field.collectionDate != null && field.collectionDate != undefined)\r\n            field.collectionDate = new Date(field.collectionDate);\r\n        if (this.agentReceiptBooks != null) {\r\n            this.agentReceiptBooks.forEach(x => {\r\n                if (x.id == field.bookNo) { this.minDt = new Date(x.date); }\r\n            });\r\n        }\r\n    }\r\n    saveFieldValue(index, field: PFLegacyDtl1) {\r\n        if (this.validatePFCollectionDtl(field)) {\r\n            field.isEdit = false;\r\n            let newString = '';\r\n            for (let i = 0; i < field.selectedMonths.length; i++) {\r\n                newString += field.selectedMonths[i].monthName + \",\";\r\n            }\r\n            field.monthName = newString.substr(0, newString.length - 1);\r\n\r\n            this.pfLegacyDtl1List.splice(index, 1);\r\n            this.pfLegacyDtl1List.push(field);\r\n            this.pfLegacyMaster.pfLegacyDtl1List = this.pfLegacyDtl1List;\r\n            this.remainingAmount = Number(this.remainingAmount) - Number(field.amountPaid);\r\n            this.total = Number(this.total) + Number(field.amountPaid);\r\n            if (this.total > 0 && this.total == this.depositedAmount)\r\n                this.showAddRow = false;\r\n            else\r\n                this.showAddRow = true;\r\n        }\r\n    }\r\n    deleteFieldValue(index, field: PFLegacyDtl1) {\r\n        this.pfLegacyDtl1List.splice(index, 1);\r\n        let amt = 0;\r\n        for (let i = 0; i < this.pfLegacyDtl1List.length; i++) {\r\n            amt = Number(amt) + Number(this.pfLegacyDtl1List[i].amountPaid);\r\n        }\r\n        if (this.depositedAmount >= amt) {\r\n            this.remainingAmount = Number(this.depositedAmount) - Number(amt);\r\n        }\r\n        this.total = amt;\r\n\r\n        if (this.total > 0 && this.total == this.depositedAmount)\r\n            this.showAddRow = false;\r\n        else {\r\n            this.showAddRow = true;\r\n            if (Number(this.depositedAmount) < Number(amt)) {\r\n                alert(\"Collection Amount exceeds Deposit Amount\");\r\n                this.remainingAmount = 0;\r\n                this.showAddRow = false;\r\n            }\r\n        }\r\n    }\r\n    getAgentList() {\r\n        this.dataService\r\n            .getAgentLocationWise(Number(this.user.user.userTpe), this.user.user.deptUserid)\r\n            .subscribe((data: any) => {\r\n                this.agentList = data;\r\n            });\r\n    }\r\n    agentChange(eve) {\r\n        this.agentUserId = eve;\r\n        this.agentName = this.agentList.find(x => x.userid == eve).userName;\r\n        this.locationName = this.agentList.find(x => x.userid == eve).locationName;\r\n        this.locationId = this.agentList.find(x => x.userid == eve).location;\r\n        this.agentSubDivId = this.agentList.find(x => x.userid == eve).subDivId;\r\n        //this.getAgentLegacyPfDetails(eve);\r\n    }\r\n    workerTypeChange(eve) {\r\n        //Get subdiv wise rlo bank details\r\n        //this.getSubDivRLOBankDetails(this.agentSubDivId, eve);\r\n        this.getLWCBankDetails(this.agentUserId, eve);\r\n    }\r\n    getPFMasterConfigDetails() {\r\n        this.dataService\r\n            .getPFMasterConfigDetails()\r\n            .subscribe((data: any) => {\r\n                this.pfMasterConfig = data;\r\n\r\n            });\r\n    }\r\n    getSubDivRLOBankDetails(id: any, workerTypeId: any) {\r\n\r\n        this.dataService\r\n            .getSubDivRLOBankDetails(id, workerTypeId)\r\n            .subscribe((data: any) => {\r\n\r\n                this.bankDetails = data;\r\n            });\r\n    }\r\n    getLWCBankDetails(userId: any, workerTypeId: any) {\r\n        this.dataService\r\n            .getLWCBankDetails(userId, workerTypeId)\r\n            .subscribe((data: any) => {\r\n                this.bankDetails = data;\r\n            });\r\n    }\r\n    //bankChange(eve) {\r\n    //    this.rloOfficeId = this.bankDetails.find(x => x.rloOfficeBankId == eve).rloOfficeId;\r\n    //}\r\n    getAgentReceiptBooks(userId: number) {\r\n        this.agentReceiptBooks = [];\r\n        if (this.collectionDate != undefined && this.depositDate != undefined) {\r\n            this.dataService\r\n                .getAgentCollectionBooks(userId, new Date(this.collectionDate), new Date(this.depositDate))\r\n                .subscribe((data: any) => {\r\n\r\n                    this.agentReceiptBooks = data;\r\n                });\r\n        }\r\n\r\n    }\r\n    getAgentBooks(userId: number) {\r\n        this.agentReceiptBooks = [];\r\n        this.dataService\r\n            .getAgentBooks(userId)\r\n            .subscribe((data: any) => {\r\n                this.agentReceiptBooks = data;\r\n            });\r\n    }\r\n    //getAgentLegacyPfDetails(userId: number) {\r\n\r\n    //    let collectionAmount = 0;\r\n    //    this.dataService\r\n    //        .getAgentLegacyPfDetails(userId)\r\n    //        .subscribe((data: any) => {\r\n    //            this.pfLegacyMaster = data;\r\n    //            if (this.pfLegacyMaster != null) {\r\n    //                this.depositDate = new Date(this.pfLegacyMaster.depositDate);\r\n    //                this.depositedAmount = this.remainingAmount = this.pfLegacyMaster.depositAmount;\r\n    //                this.workerTypeId = this.pfLegacyMaster.workerTypeId;\r\n    //                this.bankId = this.pfLegacyMaster.bankId;\r\n    //                this.rloOfficeId = this.bankDetails.find(x => x.rloOfficeBankId == this.pfLegacyMaster.bankId).rloOfficeId;\r\n    //                this.payinSlip = this.pfLegacyMaster.payinSlipNo;\r\n    //                if (this.pfLegacyMaster.payInSlip != null) {\r\n    //                    this.payInSlipCertificate = this.pfLegacyMaster.payInSlip;\r\n    //                }\r\n\r\n    //                if (this.pfLegacyMaster.pfLegacyDtl1List != null && this.pfLegacyMaster.pfLegacyDtl1List.length > 0) {\r\n\r\n    //                    for (let i = 0; i < this.pfLegacyMaster.pfLegacyDtl1List.length; i++) {\r\n\r\n\r\n    //                        this.pfLegacyMaster.pfLegacyDtl1List[i].monthList = [];\r\n\r\n\r\n    //                        this.pfLegacyMaster.pfLegacyDtl1List[i].bookName = this.agentReceiptBooks.find(x => x.id == this.pfLegacyMaster.pfLegacyDtl1List[i].bookNo).bookNo;\r\n    //                        let newString = this.getSelectedMonths(this.pfLegacyMaster.pfLegacyDtl1List[i].pfLegacyDtl2List);\r\n    //                        this.pfLegacyMaster.pfLegacyDtl1List[i].monthName = newString.substr(0, newString.length - 1);\r\n\r\n    //                        this.pfLegacyMaster.pfLegacyDtl1List[i].monthList = this.getSelectedMonthList(this.pfLegacyMaster.pfLegacyDtl1List[i].pfLegacyDtl2List);\r\n    //                        collectionAmount += this.pfLegacyMaster.pfLegacyDtl1List[i].amountPaid;\r\n    //                        this.pfLegacyMaster.pfLegacyDtl1List[i].selectedMonths = this.getSelectedMonthArray(this.pfLegacyMaster.pfLegacyDtl1List[i].pfLegacyDtl2List);\r\n    //                    }\r\n    //                    this.remainingAmount = this.remainingAmount - collectionAmount;\r\n    //                    this.total = this.total + collectionAmount;\r\n    //                }\r\n    //                //this.getSubDivRLOBankDetails(this.agentSubDivId, this.workerTypeId);\r\n    //                this.getLWCBankDetails(this.agentUserId, this.workerTypeId);\r\n    //            }\r\n    //        });\r\n    //}\r\n    getSelectedMonthList(pfCollectionDtlList: PFLegacyDtl2[]): number[] {\r\n        let monthList = [];\r\n        for (let i = 0; i < pfCollectionDtlList.length; i++) {\r\n\r\n            let id = this.months.find(x => x.monthId == pfCollectionDtlList[i].monthPaid).Id;\r\n            let m = this.months.filter(x => x.Id == id);\r\n\r\n            monthList.push(m[0].monthId);\r\n        }\r\n        return monthList;\r\n    }\r\n    getSelectedMonths(pfCollectionDtlList: PFLegacyDtl2[]): string {\r\n        debugger;\r\n        let monName = \"\";\r\n        for (let i = 0; i < pfCollectionDtlList.length; i++) {\r\n\r\n            let id = this.months.find(x => x.monthId == pfCollectionDtlList[i].monthPaid).Id;\r\n            let m = this.months.filter(x => x.Id == id);\r\n\r\n            monName += m[0].monthName + \",\";\r\n        }\r\n        return monName;\r\n    }\r\n    getSelectedMonthArray(pfCollectionDtlList: PFLegacyDtl2[]): PfMonths[] {\r\n        let monthsSelected = [] as PfMonths[];\r\n        for (let i = 0; i < pfCollectionDtlList.length; i++) {\r\n\r\n            let id = this.months.find(x => x.monthId == pfCollectionDtlList[i].monthPaid).Id;\r\n            let m = this.months.filter(x => x.Id == id);\r\n\r\n            this.pfmonth1 = {} as PfMonths;\r\n            this.pfmonth1.Id = m[0].Id;\r\n            this.pfmonth1.monthId = m[0].monthId;\r\n            this.pfmonth1.monthName = m[0].monthName;\r\n\r\n            monthsSelected.push(this.pfmonth1);\r\n        }\r\n        return monthsSelected;\r\n    }\r\n    saveLegacyPFDetails(depositDetails: PFLegacyMaster, type: number) {\r\n        debugger;\r\n        if (this.validateDetails(depositDetails, type)) {\r\n            if (depositDetails != null) {\r\n                this.pfLegacyMaster = {} as PFLegacyMaster;\r\n\r\n                this.pfLegacyMaster.pfLegacyMasterId = depositDetails.pfLegacyMasterId;\r\n                this.pfLegacyMaster.agentNo = this.agentUserId;\r\n                this.pfLegacyMaster.depositDate = new Date(this.depositDate);\r\n                //this.pfLegacyMaster.bankId = this.bankId;\r\n                this.pfLegacyMaster.lwcBankCode = this.bankId;\r\n                this.pfLegacyMaster.payinSlipNo = this.payinSlip;\r\n                this.pfLegacyMaster.depositAmount = this.depositedAmount;\r\n                this.pfLegacyMaster.rloOfficeId = this.rloOfficeId;\r\n                this.pfLegacyMaster.workerTypeId = this.workerTypeId;\r\n                this.pfLegacyMaster.isSaveDraft = type;\r\n                this.pfLegacyMaster.createdBy = this.user.user.deptUserid;\r\n                this.pfLegacyMaster.updatedBy = this.user.user.deptUserid;\r\n                this.pfLegacyMaster.payInSlip = this.payInSlipCertificate;\r\n                this.pfLegacyMaster.financialYearId = this.financialYearId;\r\n                //PFLegacyDtl1\r\n\r\n                this.pfLegacyMaster.pfLegacyDtl1List = [];\r\n                if (depositDetails.pfLegacyDtl1List != null && depositDetails.pfLegacyDtl1List.length > 0) {\r\n                    for (let i = 0; i < depositDetails.pfLegacyDtl1List.length; i++) {\r\n                        this.pfLegacyDtl1 = {} as PFLegacyDtl1;\r\n\r\n                        this.pfLegacyDtl1.amountPaid = depositDetails.pfLegacyDtl1List[i].amountPaid;\r\n                        this.pfLegacyDtl1.benPFAccountId = depositDetails.pfLegacyDtl1List[i].benPFAccountId;\r\n                        this.pfLegacyDtl1.benSno = depositDetails.pfLegacyDtl1List[i].benSno;\r\n                        this.pfLegacyDtl1.collectionDate = depositDetails.pfLegacyDtl1List[i].collectionDate;\r\n                        this.pfLegacyDtl1.bookNo = depositDetails.pfLegacyDtl1List[i].bookNo;\r\n                        this.pfLegacyDtl1.receiptNo = depositDetails.pfLegacyDtl1List[i].receiptNo;\r\n                        //PFLegacyDtl2\r\n                        debugger;\r\n                        if (depositDetails.pfLegacyDtl1List[i].selectedMonths != null && depositDetails.pfLegacyDtl1List[i].selectedMonths.length > 0) {\r\n                            this.pfLegacyDtl1.pfLegacyDtl2List = [] as PFLegacyDtl2[];\r\n                            for (let j = 0; j < depositDetails.pfLegacyDtl1List[i].selectedMonths.length; j++) {\r\n                                this.pfLegacyDtl2 = {} as PFLegacyDtl2;\r\n                                debugger;\r\n                                this.pfLegacyDtl2.monthPaid = depositDetails.pfLegacyDtl1List[i].selectedMonths[j].monthId;\r\n                                let id = this.months.find(x => x.monthId == depositDetails.pfLegacyDtl1List[i].selectedMonths[j].monthId).Id;\r\n                                if (id >= 10)\r\n                                    //this.pfLegacyDtl2.yearPaid = this.fEndYear;\r\n                                    this.pfLegacyDtl2.yearPaid = depositDetails.pfLegacyDtl1List[i].selectedMonths[j].year;\r\n                                else\r\n                                    //this.pfLegacyDtl2.yearPaid = this.fStartYear;\r\n                                    this.pfLegacyDtl2.yearPaid = depositDetails.pfLegacyDtl1List[i].selectedMonths[j].year;\r\n                                this.pfLegacyDtl2.amount = this.pfMasterConfig.beneficiaryPFContribution;\r\n\r\n\r\n                                this.pfLegacyDtl1.pfLegacyDtl2List.push(this.pfLegacyDtl2);\r\n                            }\r\n                        }\r\n\r\n                        this.pfLegacyMaster.pfLegacyDtl1List.push(this.pfLegacyDtl1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .submitLegacyPFDetails(this.pfLegacyMaster)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            if (type == 1)\r\n                                this.successMessage = \"Saved sucessfully\";\r\n                            else\r\n                                this.successMessage = \"PF amount sucessfully deposited\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"Invalid transaction\";\r\n                        }\r\n                        this.successModal.show();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    validateDetails(depositDetails: PFLegacyMaster, id: any): boolean {\r\n        let isValid = true;\r\n        this.ARNReq = this.depositDateReq = this.depositBankValid = this.depositedAmountReq = this.payInSlipUploaded = this.workerTypeReq = this.financialYearValid = true;\r\n        if (this.agentUserId == undefined || this.agentUserId == 0) { this.ARNReq = isValid = false; }\r\n        if (this.depositDate == undefined || this.depositDate == null) { this.depositDateReq = isValid = false; }\r\n        if (this.bankId == undefined || this.bankId == 0) { this.depositBankValid = isValid = false; }\r\n        if (this.depositedAmount == undefined || this.depositedAmount == null) { this.depositedAmountReq = isValid = false; }\r\n        if (depositDetails == null || (depositDetails.pfLegacyDtl1List != null && depositDetails.pfLegacyDtl1List.length == 0)) { this.noRecords = isValid = false; }\r\n        if (this.workerTypeId == undefined || this.workerTypeId == 0) { this.workerTypeReq = isValid = false; }\r\n        if (this.financialYearId == undefined || this.financialYearId == 0) { this.financialYearValid = isValid = false; }\r\n        if (this.todayMinDepositDateReq) { isValid = false; }\r\n        if (id == 2)\r\n            if (this.payInSlipCertificate.fileName == null && this.payInSlipCertificate.fileName == undefined) { isValid = this.payInSlipUploaded = false; }\r\n        return isValid;\r\n\r\n    }\r\n    monthSelection(pfDetails: PFLegacyDtl1) {\r\n        if (pfDetails.selectedMonths != null && pfDetails.selectedMonths != undefined && pfDetails.selectedMonths.length > 0) {\r\n            for (let i = 0; i < pfDetails.selectedMonths.length; i++) {\r\n                pfDetails.selectedMonths.find(x => x.Id == pfDetails.selectedMonths[i].Id).monthId = this.months.find(x => x.Id == pfDetails.selectedMonths[i].Id).monthId;\r\n            }\r\n            pfDetails.selectedMonths.filter(x => x.amount = this.pfMasterConfig.beneficiaryPFContribution);\r\n            pfDetails.selectedMonths.filter(x => x.year = (x.Id >= 10 ? this.fEndYear : this.fStartYear));\r\n        }\r\n    }\r\n    onItemSelect(eve, pfDetails: PFLegacyDtl1, index) {\r\n        this.pfSelectedMonth = eve;\r\n        this.getPFMasterConfigDetails();\r\n        this.pfTotalAmount = 0;\r\n        //let id = this.months.find(x => x.monthId == eve.monthId).Id;\r\n        let id = this.months.find(x => x.Id == eve.Id).Id;\r\n\r\n        if (id >= 10) {\r\n            //pfDetails.selectedMonths.find(x => x.monthId == eve.monthId).year = this.fEndYear;\r\n            pfDetails.selectedMonths.find(x => x.Id == eve.Id).year = this.fEndYear;\r\n            pfDetails.selectedMonths.find(x => x.Id == eve.Id).monthId = this.months.find(x => x.Id == eve.Id).monthId;\r\n        }\r\n        else {\r\n            //pfDetails.selectedMonths.find(x => x.monthId == eve.monthId).year = this.fStartYear;\r\n            pfDetails.selectedMonths.find(x => x.Id == eve.Id).year = this.fStartYear;\r\n            pfDetails.selectedMonths.find(x => x.Id == eve.Id).monthId = this.months.find(x => x.Id == eve.Id).monthId;\r\n        }\r\n\r\n        pfDetails.selectedMonths.filter(x => x.year = (x.Id >= 10 ? this.fEndYear : this.fStartYear));\r\n\r\n        this.dataService\r\n            //.isValidMonthSubmitted(this.beneficiary.benSno, eve.monthId, pfDetails.selectedMonths.find(x => x.monthId == eve.monthId).year)\r\n            .isValidMonthSubmitted(this.beneficiary.benSno, pfDetails.selectedMonths.find(x => x.Id == eve.Id).monthId, pfDetails.selectedMonths.find(x => x.Id == eve.Id).year)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                if (data) {\r\n                    this.isValidMonth = false;\r\n                    alert(\"already added please select another month\");\r\n                    return;\r\n                }\r\n                else {\r\n                    this.isValidMonth = true;\r\n                    debugger;\r\n                    this.monthContributionAmount = pfDetails.selectedMonths.length * this.pfMasterConfig.beneficiaryPFContribution;\r\n                    if (pfDetails.isEdit) {\r\n                        pfDetails.amountPaid = this.monthContributionAmount;\r\n                    }\r\n                    else {\r\n                        debugger;\r\n                        this.newAttribute.amountPaid = this.monthContributionAmount;\r\n                    }\r\n                    //debugger;\r\n                    //if (this.colMonths != undefined && this.colMonths != null) {\r\n                    //    var test = new Date(pfDetails.selectedMonths.find(x => x.Id == eve.Id).year, pfDetails.selectedMonths.find(x => x.Id == eve.Id).monthId - 1, 1);\r\n                    //    var timeDiff1 = (test.getTime() - this.colMonths.getTime());\r\n                    //    var diffDays1 = Math.ceil(timeDiff1 / (1000 * 3600 * 24));\r\n                    //    if (diffDays1 < 0) {\r\n                    //        alert(\"Please select another month after beneficiary registration month\");\r\n                    //    }\r\n                    //}\r\n                }\r\n\r\n            });\r\n    }\r\n    onItemDeSelect(eve, pfDetails: PFLegacyDtl1) {\r\n        debugger;\r\n        this.monthContributionAmount = pfDetails.selectedMonths.length * this.pfMasterConfig.beneficiaryPFContribution;\r\n        if (pfDetails.isEdit) {\r\n            pfDetails.amountPaid = this.monthContributionAmount;\r\n        }\r\n        else {\r\n            debugger;\r\n            this.newAttribute.amountPaid = this.monthContributionAmount;\r\n        }\r\n    }\r\n    pfMonthChange(value) {\r\n        this.pfSelectedMonth = value;\r\n        this.getPFMasterConfigDetails();\r\n        this.pfTotalAmount = 0;\r\n        let s = null;\r\n        let id = this.months.find(x => x.monthId == value).Id;\r\n        let m = this.months.filter(x => x.Id == id);\r\n\r\n        s = m;\r\n        if (s != null && s != undefined) {\r\n            this.pfSelectedMonths = s;\r\n            this.pfSelectedMonths.filter(x => x.year = (x.Id >= 10 ? this.fEndYear : this.fStartYear));\r\n        }\r\n\r\n        this.dataService\r\n            .isValidMonthSubmitted(this.beneficiary.benSno, this.pfSelectedMonths[0].monthId, this.pfSelectedMonths[0].year)\r\n            .subscribe((data: any) => {\r\n\r\n                if (data) {\r\n                    alert(\"already added please select another month\");\r\n                }\r\n\r\n            });\r\n    }\r\n    receiptNoChange(bookNo: any, receiptNo: any) {\r\n        this.nextReceiptNo = null;\r\n        this.dataService\r\n            .isValidBookReceipt(bookNo, receiptNo)\r\n            .subscribe((data: any) => {\r\n\r\n                if (data) {\r\n                    alert(\"already added please select another book and receipt\");\r\n                }\r\n                else {\r\n                    if (receiptNo < this.receiptNoFrom || receiptNo > this.receiptNoTo) {\r\n                        this.isReceiptNoRange = true;\r\n                    }\r\n                    else {\r\n                        this.isReceiptNoRange = false;\r\n                        //let recNo = Number(receiptNo) + 1; debugger;\r\n                        //if (recNo >= this.receiptNoFrom && recNo <= this.receiptNoTo)\r\n                        //    this.nextReceiptNo = recNo;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    searchSSINNo(ssnNo: any) {\r\n        this.isValidSave = this.isMonthEnable = true;\r\n        this.benficiaryInactive = this.isInterestCalculated = this.benRegDateMinFinancialYear = this.validBenLocation = false;\r\n        if (ssnNo != undefined && ssnNo.trim() != \"\") {\r\n            this.clearValues();\r\n            this.nextSSIN = ssnNo.trim();\r\n            this.dataService\r\n                .getLegacyPFBeneficiaryBasicDetailsByID(ssnNo.trim(), true)\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    this.beneficiary = data;\r\n                    if (this.beneficiary != null) {\r\n                        this.isValidSave = true;\r\n                        //if (this.beneficiary.isActive && this.beneficiary.status == 1) {\r\n                        //----------Ben location code\r\n                        //if (this.beneficiary.benBmc != null && (this.locationId != undefined && this.locationId != null)) {\r\n                        //    if (this.beneficiary.benBmc == this.locationId)\r\n                        //    {\r\n                        if (this.financialYearId != undefined && this.financialYearId > 0) {\r\n                            //BenRegDate <= financial year end date\r\n                            var financialYear = this.finanacialYearList.find(x => x.financialYearId == this.financialYearId);\r\n                            if (financialYear != null && (this.beneficiary.benRegDate != undefined || this.beneficiary.benRegDate != null)) {\r\n                                var endDate = new Date(financialYear.endDate);\r\n                                var regDate = new Date(this.beneficiary.benRegDate);\r\n                                var timeDiff = (endDate.getTime() - regDate.getTime());\r\n                                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n                                if (diffDays >= 0) {\r\n                                    this.dataService\r\n                                        .isInterestCalculatedforBen(this.financialYearId, this.beneficiary.benSno)\r\n                                        .subscribe((data2: any) => {\r\n                                            if (!data2) {\r\n                                                //this.ssinValid = true;\r\n                                                this.isValidSave = false;\r\n                                                this.isMonthEnable = false;\r\n                                                //if (this.beneficiary.benSSINOrPFAccountNo == \"\")\r\n                                                //    this.validPFNo = false;\r\n                                                //else\r\n                                                //    this.validPFNo = true;\r\n                                                if (this.beneficiary.benOccupationId != null && (this.workerTypeId != null && this.workerTypeId != undefined)) {\r\n                                                    if (this.beneficiary.benOccupationId == this.workerTypeId)\r\n                                                        this.validWTBen = false;\r\n                                                    else\r\n                                                        this.validWTBen = true;\r\n                                                }\r\n\r\n                                                if (this.newAttribute.ssI_Number == undefined || this.newAttribute.ssI_Number == \"\") {\r\n                                                    this.beneficiary.benFullName = \"\";\r\n                                                    this.beneficiary.benSSINOrPFAccountNo = \"\";\r\n                                                }\r\n                                            }\r\n                                            else this.isInterestCalculated = true;\r\n                                        });\r\n                                }\r\n                                else this.benRegDateMinFinancialYear = true;\r\n                            }\r\n                        }\r\n\r\n                        //}\r\n                        //else {\r\n                        //    this.ssinValid = false;\r\n                        //}\r\n                        //----------Ben location code\r\n                        //    } \r\n                        //    else\r\n                        //        this.validBenLocation = true;\r\n                        //}\r\n                        //--------------\r\n\r\n                    }\r\n                    //else {\r\n                    //    this.ssinValid = false;\r\n                    //}\r\n                });\r\n        }\r\n        else {\r\n            this.beneficiary = {} as PFBeneficiaryDetails;\r\n            this.ssinValid = true;\r\n        }\r\n    }\r\n    clearValues() {\r\n        this.beneficiary = {} as PFBeneficiaryDetails;\r\n        this.pfSelectedMonths = [];\r\n        this.collectionDateReq = true;\r\n        this.ssinValid = true;\r\n        this.receiptNoIsValid = true;\r\n        this.bookNoIsValid = true;\r\n        this.pfMonthIsValid = true;\r\n        this.depositedAmountReq = true;\r\n        this.depositBankValid = true;\r\n        this.ARNReq = true;\r\n        this.amountReq = true;\r\n        this.workerTypeReq = true;\r\n    }\r\n    okClick() {\r\n        this.successModal.hide();\r\n        //this.clearValues();\r\n\r\n        //this.pfLegacyMaster = {} as PFLegacyMaster;\r\n        //this.pfLegacyDtl1List =[];\r\n        //this.pfLegacyDtl1 = {} as PFLegacyDtl1;\r\n        //this.pfLegacyDtl2 = {} as PFLegacyDtl2;\r\n        //this.payInSlipCertificate = {} as PayInSlipAttachmentModel;\r\n\r\n        //this.depositDate = null;\r\n        //this.payinSlip = null;\r\n        //this.depositedAmount = null;\r\n        //this.remainingAmount = 0;\r\n        //this.total = 0;\r\n        //this.agentUserId = 0;\r\n        //this.workerTypeId = 0;\r\n        //this.bankId = 0;\r\n        //this.showAddRow = true;\r\n        window.location.href = \"Agent/bulkpfdepositlist\";\r\n    }\r\n    addReceiptBook() {\r\n        window.location.href = \"pfconfig/receiptbook\";\r\n    }\r\n    cancleClick() {\r\n        if (Number(this.user.user.userTpe) == UserType.ServiceProvider || Number(this.user.user.userTpe) == UserType.Others || Number(this.user.user.userTpe) == UserType.CA) {\r\n            window.location.href = \"Agent/bulkpfdepositlist\";//\"Agent/AgentDashboard\";\r\n        }\r\n        else\r\n            window.location.href = \"Home/DeptDashboard\";\r\n    }\r\n    depositedAmountChange(amount: any) {\r\n        if (this.total == 0)\r\n            this.remainingAmount = amount;\r\n        else {\r\n            this.remainingAmount = amount - this.total;\r\n\r\n            if (this.total > 0 && this.total == amount)\r\n                this.showAddRow = false;\r\n            else {\r\n                this.showAddRow = true;\r\n                if (Number(this.depositedAmount) < Number(this.total)) {\r\n                    alert(\"Collection Amount exceeds Deposit Amount\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getWorkerTypeDetails() {\r\n        this.dataService\r\n            .getWorkerTypeMasterData()\r\n            .subscribe((data: any) => {\r\n                this.WorkerTypeList = data;\r\n            });\r\n    }\r\n    depositDateChange(eve) {\r\n        debugger;\r\n        this.todayMinDepositDateReq = false;\r\n        this.disableCollectionDate = false;\r\n        if (eve != undefined) {\r\n            var deposDate = new Date(eve);\r\n            var timeDiff = (this.toDayDate.getTime() - deposDate.getTime());\r\n            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n            if (diffDays >= 0) {\r\n                this.collectionMinDt = eve;\r\n            }\r\n            else this.todayMinDepositDateReq = true;\r\n            this.getfinanacialYearListDetails(deposDate);\r\n        }\r\n    }\r\n    bookChange(args) {\r\n        this.bookId = args.target.value;\r\n        if (this.agentReceiptBooks != null) {\r\n            this.agentReceiptBooks.forEach(x => {\r\n                if (x.id == args.target.value) {\r\n                    this.minDt = new Date(x.date);\r\n                    this.receiptNoFrom = x.receiptNoFrom;\r\n                    this.receiptNoTo = x.receiptNoTo;\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n    onFileChanged(inputValue: any): void {\r\n        var file: File = inputValue.target.files[0];\r\n        if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n            myReader.onloadend = (e) => {\r\n                const model: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = 1;\r\n\r\n                model.attachmentType = AttachmentType.PayinSlip;\r\n                model.createdBy = this.user.user.deptUserid;\r\n\r\n                this.payInSlipCertificate = model;\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n    getActiveFinancialYear() {\r\n        this.dataService\r\n            .getActiveFinancialYear()\r\n            .subscribe((data: any) => {\r\n                this.activeYear = data;\r\n            });\r\n    }\r\n    collectionDateChange(eve) {\r\n        debugger;\r\n        this.colMonths = null;\r\n        this.DepositMinDateReq = this.todayMinCollectionDateReq = this.isColDateinRangeYear = this.benRegDateMinCollectionDate = false;\r\n        if (eve != undefined && this.depositDate != undefined) {\r\n            this.collectionDate = new Date(eve);\r\n            var dDate = new Date(this.depositDate);\r\n            var timeDiff = (dDate.getTime() - this.collectionDate.getTime());\r\n            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n            if (diffDays >= 0) {\r\n                debugger;\r\n                if (this.financialYearId != undefined && this.financialYearId > 0) {\r\n                    this.dataService\r\n                        .isValidCollectionYear(this.financialYearId, this.collectionDate)\r\n                        .subscribe((data1: any) => {\r\n                            debugger;\r\n                            if (data1) {\r\n                                var timeDiff1 = (this.toDayDate.getTime() - this.collectionDate.getTime());\r\n                                var diffDays1 = Math.ceil(timeDiff1 / (1000 * 3600 * 24));\r\n                                if (diffDays1 >= 0) {\r\n                                    //BenRegDate < collection Date\r\n                                    if (this.beneficiary != null && (this.beneficiary.benRegDate != undefined || this.beneficiary.benRegDate != null)) {\r\n                                        var regDate1 = new Date(this.beneficiary.benRegDate);\r\n                                        debugger;\r\n                                        //var regDate = new Date(regDate1.getFullYear(), regDate1.getMonth() + 1, regDate1.getDate());\r\n                                        var regDate = new Date(regDate1.getFullYear(), regDate1.getMonth() + 1, 1);\r\n                                        this.colMonths = new Date(regDate);\r\n                                        var timeDiff2 = (this.collectionDate.getTime() - regDate.getTime());\r\n                                        var diffDays2 = Math.ceil(timeDiff2 / (1000 * 3600 * 24));\r\n                                        if (diffDays2 >= 0) {\r\n                                            //------------------------\r\n                                            this.dataService\r\n                                                .getCollectionFinancialYear(new Date(eve))\r\n                                                .subscribe((data: any) => {\r\n                                                    this.collectionYear = data;\r\n                                                    if (this.collectionYear != null) {\r\n                                                        this.currentyear = new Date(eve).getFullYear();\r\n                                                        let currentMonth = new Date(eve).getMonth() + 1;\r\n                                                        if (currentMonth <= 3) {\r\n                                                            this.fStartYear = this.currentyear - 1;\r\n                                                            this.fEndYear = this.currentyear;\r\n                                                        }\r\n                                                        else {\r\n                                                            this.fStartYear = this.currentyear;\r\n                                                            this.fEndYear = this.currentyear + 1;\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    this.getAgentReceiptBooks(this.agentUserId);\r\n                                                });\r\n                                        }\r\n                                        else this.benRegDateMinCollectionDate = true;\r\n                                    }\r\n\r\n                                }\r\n                                else this.todayMinCollectionDateReq = true;\r\n                            }\r\n                            else {\r\n                                this.isColDateinRangeYear = true;\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n            else {\r\n                this.DepositMinDateReq = true;\r\n            }\r\n        }\r\n    }\r\n    getLegacyPFCollectionDetails(pfLegacyMasterId: number) {\r\n\r\n        let collectionAmount = 0;\r\n        this.dataService\r\n            .getLegacyPFCollectionDetails(pfLegacyMasterId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfLegacyMaster = data;\r\n                if (this.pfLegacyMaster != null) {\r\n                    this.depositDate = new Date(this.pfLegacyMaster.depositDate);\r\n                    if (this.pfLegacyMaster.pfLegacyDtl1List != null && this.pfLegacyMaster.pfLegacyDtl1List.length > 0) {\r\n                        this.agentReceiptBooks = [];\r\n                        var x = this.pfLegacyMaster.pfLegacyDtl1List.sort((a, b) => new Date(b.collectionDate).getTime() - new Date(a.collectionDate).getTime());\r\n                        if (x[this.pfLegacyMaster.pfLegacyDtl1List.length - 1].collectionDate != undefined && this.depositDate != undefined) {\r\n\r\n                            this.dataService\r\n                                .getAgentCollectionBooks(this.agentUserId, new Date(x[this.pfLegacyMaster.pfLegacyDtl1List.length - 1].collectionDate), new Date(this.depositDate))\r\n                                .subscribe((data1: any) => {\r\n                                    this.agentReceiptBooks = data1;\r\n\r\n                                    this.depositedAmount = this.remainingAmount = this.pfLegacyMaster.depositAmount;\r\n                                    this.workerTypeId = this.pfLegacyMaster.workerTypeId;\r\n                                    //this.getSubDivRLOBankDetails(this.agentSubDivId, this.workerTypeId);\r\n                                    this.getLWCBankDetails(this.agentUserId, this.workerTypeId);\r\n                                    //this.bankId = this.pfLegacyMaster.bankId;\r\n                                    this.bankId = this.pfLegacyMaster.lwcBankCode;\r\n                                    this.rloOfficeId = this.pfLegacyMaster.rloOfficeId;//this.bankDetails.find(x => x.rloOfficeBankId == this.pfLegacyMaster.bankId).rloOfficeId;\r\n                                    this.financialYearId = this.pfLegacyMaster.financialYearId;\r\n                                    this.payinSlip = this.pfLegacyMaster.payinSlipNo;\r\n                                    if (this.pfLegacyMaster.payInSlip != null) {\r\n                                        this.payInSlipCertificate = this.pfLegacyMaster.payInSlip;\r\n                                    }\r\n\r\n                                    if (this.pfLegacyMaster.pfLegacyDtl1List != null && this.pfLegacyMaster.pfLegacyDtl1List.length > 0) {\r\n                                        debugger;\r\n                                        this.pfLegacyDtl1List = this.pfLegacyMaster.pfLegacyDtl1List;\r\n                                        for (let i = 0; i < this.pfLegacyMaster.pfLegacyDtl1List.length; i++) {\r\n                                            this.pfLegacyMaster.pfLegacyDtl1List[i].monthList = [];\r\n                                            debugger;\r\n\r\n                                            this.pfLegacyMaster.pfLegacyDtl1List[i].bookName = this.agentReceiptBooks.find(x => x.id == this.pfLegacyMaster.pfLegacyDtl1List[i].bookNo).bookNo;\r\n                                            let newString = this.getSelectedMonths(this.pfLegacyMaster.pfLegacyDtl1List[i].pfLegacyDtl2List);\r\n                                            this.pfLegacyMaster.pfLegacyDtl1List[i].monthName = newString.substr(0, newString.length - 1);\r\n\r\n                                            this.pfLegacyMaster.pfLegacyDtl1List[i].monthList = this.getSelectedMonthList(this.pfLegacyMaster.pfLegacyDtl1List[i].pfLegacyDtl2List);\r\n                                            collectionAmount = collectionAmount + this.pfLegacyMaster.pfLegacyDtl1List[i].amountPaid;\r\n                                            this.pfLegacyMaster.pfLegacyDtl1List[i].selectedMonths = this.getSelectedMonthArray(this.pfLegacyMaster.pfLegacyDtl1List[i].pfLegacyDtl2List);\r\n                                        }\r\n                                        this.remainingAmount = this.remainingAmount - collectionAmount;\r\n                                        this.total = this.total + collectionAmount;\r\n                                        debugger;\r\n                                        var pfDtlList = this.pfLegacyMaster.pfLegacyDtl1List[this.pfLegacyMaster.pfLegacyDtl1List.length - 1];\r\n                                        if (pfDtlList != null) {\r\n                                            this.collectionDate = new Date(pfDtlList.collectionDate);\r\n                                            this.bookId = pfDtlList.bookNo;\r\n                                            this.nextReceiptNo = Number(pfDtlList.receiptNo) + 1;\r\n\r\n                                            this.newAttribute.collectionDate = this.collectionDate;\r\n                                            this.newAttribute.bookNo = this.agentReceiptBooks.find(x => x.id == this.bookId).id;\r\n                                            this.newAttribute.receiptNo = this.nextReceiptNo;\r\n                                        }\r\n                                    }\r\n\r\n\r\n                                    if (this.total > 0 && this.total == this.depositedAmount)\r\n                                        this.showAddRow = false;\r\n                                    else\r\n                                        this.showAddRow = true;\r\n\r\n\r\n                                });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            });\r\n    }\r\n    getfinanacialYearListDetails(deposDate: Date) {\r\n        this.dataService\r\n            .getfinanacialYearListDetails(deposDate)\r\n            .subscribe((data: any) => {\r\n                this.finanacialYearList = data;\r\n                if (this.finanacialYearList != null && this.finanacialYearList.length > 0) {\r\n                    this.financialYearId = this.finanacialYearList[this.finanacialYearList.length - 1].financialYearId;\r\n                }\r\n            });\r\n    }\r\n}\r\n","﻿export class FinancialYearMonths {\r\n    Id: number;\r\n    monthName: string;\r\n    monthId: number;\r\n    \r\n  \r\n}\r\nexport const Months: FinancialYearMonths[] = [\r\n    { Id: 1, monthId:4, monthName: 'April'  },\r\n    { Id: 2, monthId: 5, monthName: 'May' },\r\n    { Id: 3, monthId: 6, monthName: 'June' },\r\n    { Id: 4, monthId: 7, monthName: 'July' },\r\n    { Id: 5, monthId: 8, monthName: 'August' },\r\n    { Id: 6, monthId: 9, monthName: 'September' },\r\n    { Id: 7, monthId: 10,monthName: 'October' },\r\n    { Id: 8, monthId: 11,monthName: 'November' },\r\n    { Id: 9, monthId: 12, monthName: 'December' },\r\n    { Id: 10, monthId: 1, monthName: 'January' },\r\n    { Id: 11, monthId: 2, monthName: 'February' },\r\n    { Id: 12, monthId: 3, monthName: 'March' },\r\n];\r\n\r\nexport const CollectionMonths: FinancialYearMonths[] = [\r\n    { Id: 0, monthId: 0, monthName: 'March' },\r\n    { Id: 1, monthId: 4, monthName: 'April' },\r\n    { Id: 2, monthId: 5, monthName: 'May' },\r\n    { Id: 3, monthId: 6, monthName: 'June' },\r\n    { Id: 4, monthId: 7, monthName: 'July' },\r\n    { Id: 5, monthId: 8, monthName: 'August' },\r\n    { Id: 6, monthId: 9, monthName: 'September' },\r\n    { Id: 7, monthId: 10, monthName: 'October' },\r\n    { Id: 8, monthId: 11, monthName: 'November' },\r\n    { Id: 9, monthId: 12, monthName: 'December' },\r\n    { Id: 10, monthId: 1, monthName: 'January' },\r\n    { Id: 11, monthId: 2, monthName: 'February' },\r\n    { Id: 12, monthId: 3, monthName: 'March' },\r\n   \r\n];\r\n\r\nexport class PfMonths {\r\n    Id: number;\r\n    monthName: string;\r\n    monthId: number;\r\n    amount?: number;\r\n    year?: number;\r\n}\r\n\r\nexport class PfPaidDetails {\r\n    pfCollectionDtlId: number;\r\n    pfCollectionId: null;\r\n    monthPaid: number;\r\n    yearPaid: number;\r\n    amount: null;\r\n    lastPaid: string;\r\n    remarks: null;\r\n    bnRemarks: null;\r\n    description: null;\r\n    depositStatus: null;\r\n}\r\n\r\nexport class PFMasterConfigAmount {\r\n    pfConfigurationId: number;\r\n    dateEffectiveFrom: Date;\r\n    dateEffectiveTo: Date;\r\n    status: number;\r\n    beneficiaryPFContribution: number;\r\n    governmentPFContribution: number;\r\n    agentCollectionLimit: number;\r\n    pfInterestRate: number;\r\n    pfLockingPeriod: Date;\r\n    nonPaymentsMonthsforPFSuspension: number;\r\n    collectionCutoff: number;\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF PayIn Slips Deposited List </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <!--<div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>-->\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"depositfromDateSearch\\\" autocomplete=\\\"off\\\" class=\\\"advancedSearchTextbox\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                   placeholder=\\\"Deposit From Date Search..\\\" [maxDate]=\\\"toDayDate\\\"\\r\\n                                   #depositfromDateSearch=\\\"ngModel\\\" value=\\\"{{ depositFromDate | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"depositFromDate\\\" />\\r\\n                            <input type=\\\"text\\\" name=\\\"deposittoDateSearch\\\" autocomplete=\\\"off\\\" class=\\\"advancedSearchTextbox\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                   placeholder=\\\"Deposit To Date Search..\\\" [maxDate]=\\\"toDayDate\\\" [minDate]=\\\"depositFromDate\\\"\\r\\n                                   #deposittoDateSearch=\\\"ngModel\\\" value=\\\"{{ depositToDate | date: 'dd/MM/yyyy' }}\\\" [(ngModel)]=\\\"depositToDate\\\" />\\r\\n                            <button (click)=\\\"GetResults()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"pFDepositDetails.results\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"agentCode\\\">Agent Code</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"agentName\\\">Agent Name</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositAmount\\\">Deposit Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositDateString\\\">Deposit Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"bankDepositDateString\\\">Bank Deposit Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"transactionType\\\">Transaction Type</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let deposits of mf.data|grdFilter: {agentCode:searchText, agentName: searchText, depositAmount: searchText, depositDateString: searchText, bankDepositDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <a (click)=\\\"viewCollections(deposits.pfDepositId,deposits.transactionType)\\\" title=\\\"View\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                        <a *ngIf=\\\"deposits.transactionType !='Legacy'\\\" (click)=\\\"viewPayInSlip(deposits.pfDepositId,deposits.transactionType)\\\" title=\\\"PayInSlip\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></a>\\r\\n                                        <a (click)=\\\"viewFormIV(deposits)\\\" *ngIf=\\\"deposits.transactionType =='Legacy'\\\"title=\\\"View Form IV\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-file-o\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{deposits.agentCode}}</td>\\r\\n                                    <td>{{deposits.agentName}}</td>\\r\\n                                    <td>{{deposits.depositAmount}}</td>\\r\\n                                    <td>{{deposits.depositDateString}}</td>\\r\\n                                    <td>{{deposits.bankDepositDateString}}</td>\\r\\n                                    <td>{{deposits.transactionType}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"9\\\">\\r\\n                                        <div>\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\" [maxSize]=\\\"10\\\" [rotate]=\\\"true\\\"></ngb-pagination>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Attachment Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"width:100%;padding:5px;overflow:scroll;max-height:470px\\\">\\r\\n                        <accordion>\\r\\n                            <accordion-group heading=\\\"{{item?.fileName}}\\\" *ngFor=\\\"let item of payInSlipCertificate\\\">\\r\\n                            <div *ngIf=\\\"item?.fileName?.split('.')[item?.fileName?.split('.').length-1]!='pdf'\\\">\\r\\n                                <img [src]=\\\"'data:image/'+item?.fileName?.split('.')[item?.fileName?.split('.').length-1]+';base64,'+ item?.fileContent\\\" style=\\\"max-width:100%\\\" />\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item?.fileName?.split('.')[item?.fileName?.split('.').length-1]=='pdf'\\\">\\r\\n                                <object [attr.data]=\\\"item?.attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                            </div>\\r\\n                            </accordion-group>\\r\\n                        </accordion>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #collectionsModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"collectionsModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Collection Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:500px\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n                        <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                            <header>\\r\\n                                <h2>PF Collections </h2>\\r\\n                            </header>\\r\\n                            <!-- widget div-->\\r\\n                            <div>\\r\\n\\r\\n                                <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"widget-body no-padding\\\" *ngIf=\\\"isVisible1\\\">\\r\\n                                    <div class=\\\"ssv-search\\\">\\r\\n                                        <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                                        <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                                    </div>\\r\\n\\r\\n\\r\\n                                    <p></p>\\r\\n\\r\\n                                    <table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                                           [mfData]=\\\"pfCollectionDetails\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"ssI_Number\\\">SSIN</mfDefaultSorter>\\r\\n                                                </th>\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"benFullName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                                                </th>\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"receiptNo\\\">Receipt No</mfDefaultSorter>\\r\\n\\r\\n                                                </th>\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"bookNo\\\">Book No</mfDefaultSorter>\\r\\n\\r\\n                                                </th>\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"collectionDateString\\\">Collection Date</mfDefaultSorter>\\r\\n                                                </th>\\r\\n\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"paidFromMonth\\\">Paid From</mfDefaultSorter>\\r\\n                                                </th>\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"paidToMonth\\\">Paid To</mfDefaultSorter>\\r\\n                                                </th>\\r\\n                                                <th>\\r\\n                                                    <mfDefaultSorter by=\\\"collectionAmount\\\">Amount</mfDefaultSorter>\\r\\n                                                </th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr *ngFor=\\\"let col of mf.data; let i=index;\\\">\\r\\n                                                <td>{{col.ssI_Number}}</td>\\r\\n                                                <td>{{col.benFullName}}</td>\\r\\n                                                <td>{{col.receiptNo}}</td>\\r\\n                                                <td>{{col.bookNo}}</td>\\r\\n                                                <td>{{col.collectionDateString}}</td>\\r\\n                                                <td>{{col.paidFromMonth}}</td>\\r\\n                                                <td>{{col.paidToMonth}}</td>\\r\\n                                                <td>{{col.collectionAmount}}</td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot>\\r\\n                                            <tr>\\r\\n                                                <td colspan=\\\"8\\\">\\r\\n                                                    <div>\\r\\n                                                        <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </article>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"collectionsModal.hide()\\\">\\r\\n                    Ok\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #attachModalFormIV=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" backdrop=\\\"static\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModalFormIV.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Form-IV</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"max-height:600px\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"display:inline-flex;width:100%\\\">\\r\\n                    <div style=\\\"display:inline-flex;width:100%\\\">\\r\\n                        <div style=\\\"width:100%;padding:5px;overflow:scroll;max-height:470px;min-height:inherit\\\">\\r\\n                            <div>\\r\\n                                <!--<img [src]=\\\"ImageSource\\\" style=\\\"max-width:100%\\\" />-->\\r\\n                                <object [attr.data]=\\\"attachmenturl\\\" style=\\\"width:100%;height:400px\\\" type=\\\"application/pdf\\\"></object>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"attachModalFormIV.hide()\\\">\\r\\n                            Ok\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PFDepositDetails, PFDeposits } from '../models/pf.deposit.details.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { pagination, PFDepositeStatus } from '../pipes/constnts.model';\r\nimport { AttachmentType } from '../pipes/constnts.model';\r\nimport { PayInSlipAttachmentModel } from '../models/payinslip-attachment';\r\nimport { ModalDirective, BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { PFCollectionDetailsList } from '../models/pf.collectiondetails.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AttachmentModel } from '../models/attachment.model';\r\nimport { FormIVDetails } from '../models/formIV.model';\r\n\r\n@Component({\r\n    selector: 'app-payinslip-deposited-list',\r\n  templateUrl: './payinslip-deposited-list.component.html',\r\n    styleUrls: ['./payinslip-deposited-list.component.css']\r\n})\r\nexport class PayInSlipDepositedListComponent implements OnInit {\r\n    @ViewChild('attachModal') public attachModal: ModalDirective;\r\n    @ViewChild('collectionsModal') public collectionsModal: ModalDirective;\r\n    @ViewChild('attachModalFormIV') public attachModalFormIV: ModalDirective;\r\n\r\n    toDayDate: Date;\r\n    datePickerConfig: any;\r\n    userName: string;\r\n    userCode: string;\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    pFDepositDetails: PFDeposits = {} as PFDeposits;\r\n\r\n    successMessage: string;\r\n    payInSlipUploaded: boolean = true;\r\n    dateOfDepostValid: boolean = true;\r\n    payInSlipNumberValid: boolean = true;\r\n    bankDepositDate: Date;\r\n    scrollNumber: number;\r\n    payInSlipCertificate: PayInSlipAttachmentModel[] = [];\r\n    depositId: number;\r\n    isVisible: boolean = false;\r\n    isVisible1: boolean = false;\r\n    pfCollectionDetails: PFCollectionDetailsList[] = [];\r\n    depositFromDate: Date;\r\n    strDepositFromDate: string;\r\n    depositToDate: Date;\r\n    strDepositToDate: string;  \r\n    formIVContent: AttachmentModel = {} as AttachmentModel;\r\n    FormIVDetail: FormIVDetails = {} as FormIVDetails;\r\n    attachmenturl: any;\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService, private sanitizer: DomSanitizer) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        this.toDayDate = new Date();\r\n    }\r\n\r\n    ngOnInit() {\r\n        debugger;\r\n        this.getPFDepositedItemsByAgent(this.user.user.deptUserid, Number(this.user.user.userTpe),\"0\",\"0\", this.page, this.pageSize);\r\n        \r\n    }\r\n\r\n    getPFDepositedItemsByAgent(userId: any, userType: any, depositFromDate: any, depositToDate:any, pageNo: any, pageSize: any) {\r\n        this.dataService\r\n            .getPFDepositStatusDetailsByUser(userId, userType, depositFromDate, depositToDate, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pFDepositDetails = data;\r\n                this.totalRows = this.pFDepositDetails.rowCount;\r\n                //this.payInSlipCertificate[0] = this.pFDepositDetails.results[0].payInSlip;\r\n            });\r\n    }\r\n    changepage(page) {\r\n        if (this.depositFromDate != null && this.depositFromDate != undefined)\r\n            this.strDepositFromDate = this.depositFromDate.toISOString();\r\n        else\r\n            this.strDepositFromDate = \"0\";\r\n        if (this.depositToDate != null && this.depositToDate != undefined)\r\n            this.strDepositToDate = this.depositToDate.toISOString();\r\n        else\r\n            this.strDepositToDate = \"0\";\r\n        this.getPFDepositedItemsByAgent(this.user.user.deptUserid, PFDepositeStatus.deposited, this.strDepositFromDate, this.strDepositToDate, page, this.pageSize);\r\n    }\r\n    viewPayInSlipOld(payInSlip: PayInSlipAttachmentModel[]) {\r\n        debugger;\r\n        this.isVisible = true;\r\n        \r\n        //if (payInSlip.fileName.split('.')[payInSlip.fileName.split('.').length - 1] == 'pdf') {\r\n        //    this.payInSlipCertificate.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + payInSlip.fileContent);\r\n        //}\r\n\r\n        if (payInSlip != null && payInSlip.length > 0) {\r\n            for (var j = 0; j < payInSlip.length; j++) {\r\n                //let attachment = this.claim.educationDetails.educationDetailList[i].attachmentDetailsList[j];\r\n                if (payInSlip[j].fileName.split('.')[payInSlip[j].fileName.split('.').length - 1] == 'pdf') {\r\n                    payInSlip[j].attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + payInSlip[j].fileContent);\r\n                }\r\n            }\r\n            this.payInSlipCertificate = payInSlip;\r\n        }\r\n        this.attachModal.show();\r\n    }\r\n    viewPayInSlip(pfDepositId: number, transactionType: string) {\r\n        debugger;\r\n        this.isVisible = true;\r\n        this.dataService.getPFDepositAttachments(pfDepositId)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.payInSlipCertificate = data;\r\n                if (this.payInSlipCertificate != null && this.payInSlipCertificate.length > 0) {\r\n                    for (var j = 0; j < this.payInSlipCertificate.length; j++) {\r\n                        if (this.payInSlipCertificate[j].fileName.split('.')[this.payInSlipCertificate[j].fileName.split('.').length - 1] == 'pdf') {\r\n                            this.payInSlipCertificate[j].attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + this.payInSlipCertificate[j].fileContent);\r\n                        }\r\n                    }\r\n                }\r\n                this.attachModal.show();\r\n            });\r\n       \r\n    }\r\n    viewCollections(pfDepositId: number,transactionType: string) {\r\n        this.isVisible1 = true;\r\n        if (transactionType.toLowerCase() == 'online') {\r\n            this.dataService\r\n                .getCollections(pfDepositId)\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    this.pfCollectionDetails = data;\r\n                    this.collectionsModal.show();\r\n                });\r\n        }\r\n        else {\r\n            this.dataService\r\n                .getLegacyCollections(pfDepositId)\r\n                .subscribe((data: any) => {\r\n                    debugger;\r\n                    this.pfCollectionDetails = data;\r\n                    this.collectionsModal.show();\r\n                });\r\n        }\r\n\r\n    }\r\n    GetResults() {\r\n        if (this.depositFromDate != null && this.depositFromDate != undefined)\r\n            this.strDepositFromDate = this.depositFromDate.toISOString();\r\n        else\r\n            this.strDepositFromDate = \"0\";\r\n        if (this.depositToDate != null && this.depositToDate != undefined)\r\n            this.strDepositToDate = this.depositToDate.toISOString();\r\n        else\r\n            this.strDepositToDate = \"0\";\r\n        if (this.strDepositFromDate == \"0\" || this.strDepositToDate == \"0\" )\r\n            alert(\"please enter the from and to dates\");\r\n       \r\n        this.getPFDepositedItemsByAgent(this.user.user.deptUserid, Number(this.user.user.userTpe), this.strDepositFromDate, this.strDepositToDate, pagination.pageNo, pagination.pageSize);\r\n    }\r\n\r\n    viewFormIV(pfLegacyMasterDetails: PFDepositDetails) {\r\n        debugger;\r\n        this.FormIVDetail.lwfccode = this.userName;\r\n        this.FormIVDetail.bankdepositdate = pfLegacyMasterDetails.depositDate;\r\n        this.FormIVDetail.scrollno = 0;\r\n        this.FormIVDetail.depositId = pfLegacyMasterDetails.pfDepositId;\r\n\r\n        this.dataService\r\n            .genaratePdfLegacyFormIV(this.FormIVDetail)\r\n            .then((data: any) => {\r\n                debugger;\r\n                var blob = new Blob([data.body], { type: 'application/pdf' });\r\n                const blobUrl = URL.createObjectURL(blob);\r\n                //window.location.href = blobUrl;\r\n                window.open(blobUrl, \"_blank\");\r\n                //this.attachmenturl = this.sanitizer.bypassSecurityTrustResourceUrl(blobUrl);\r\n                //this.attachModalFormIV.show();\r\n            });\r\n    }\r\n\r\n}\r\n","export const ApiDictionary = {\r\n    beneficiaryBasicDetails: {\r\n        url: 'GetBeneficiaryBasicDetailsByID',\r\n        params: { id: 'id' }\r\n    },\r\n    beneficiaryBankDetails: {\r\n        url: 'GetBeneficiaryBankDetailsByBeneficiaryID',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    beneficiaryNomineeDetails: {\r\n        url: 'GetBeneficiaryNomineeDetailsByBeneficiaryID',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    beneficiaryFamilyDetails: {\r\n        url: 'GetBeneficiaryFamilyDetailsByBeneficiaryID',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    GetLOVDetailsByLovId: {\r\n        url: 'GetLOVDetailsByLovId',\r\n        params: { lovId: 'lovId' }\r\n    },\r\n    GetClaimConfigDetails: {\r\n        url: 'GetClaimConfigDetailsByCliamMasterId',\r\n        params: { claimMasterId: 'claimMasterId' }\r\n    },\r\n    GetClaimConfigMasterDetails: {\r\n        url: 'GetClaimConfigDetails',\r\n        params: null\r\n    },\r\n    getClaims: {\r\n        url: 'GetAllClaims',\r\n        params: { benSno: 'benSno'}\r\n    },\r\n    GetAllHospitals: {\r\n        url: 'GetAllHospitals',\r\n        params: null\r\n    },\r\n    getAllClaimsByAgentId:{\r\n        url: 'GetAllClaimsByAgentId',\r\n        params: null\r\n    },\r\n    getAllClaimsbByDraft: {\r\n        url: 'GetAllClaimsbByDraft',\r\n        params: null\r\n    },\r\n    getAllClaimsbByAgentDraft: {\r\n        url: 'GetAllClaimsbByAgentDraft',\r\n        params: null\r\n    },\r\n    createClaim: {\r\n        url: 'createClaim',\r\n        params: null\r\n    },\r\n    updateClaim: {\r\n        url: 'updateClaim',\r\n        params: null\r\n    },\r\n    beneficiaryEduCount: {\r\n        url: 'GetBeneficiaryDependentClaimsbyEdu',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    getReceipt: {\r\n        url: 'getReceipt',\r\n        params: null\r\n    },\r\n    getClaimDetailsByClaimId: {\r\n        url: 'getClaimDetails',\r\n        params: { claimId: 'claimId' }\r\n    },\r\n    getClaimDetailsById: {\r\n        url: 'getClaimDetailsByClaimId',\r\n        params: { claimId: 'claimId' }\r\n    },\r\n    getClaimTrackDetailsByTransactionId: {\r\n        url: \"GetWorkflowTransactionLogDetails\",\r\n        params: { baseTransactionId: 'transactionId', transactionType: 'transactionType', wfId: 'wfId' }\r\n    },\r\n    genarateFormV: {\r\n        url: \"getFormV\",\r\n        params: { baseTransactionId: 'transactionId', transactionType: 'transactionType' }\r\n    },\r\n    getAttachment: {\r\n        url: \"getAttachment\",\r\n        params: { baseTransactionId: 'transactionId', transactionType: 'transactionType' }\r\n    },\r\n\r\n    deleteClaimById: {\r\n        url: \"deleteClaim\",\r\n        params: { claimId: 'claimId' }\r\n    },\r\n    getAllBeneficiaryClaimRefers:\r\n    {\r\n        url: \"GetAllBeneficiaryClaimRefers\",\r\n        params: { benSno: 'benSno', entryPoint: 'entrypoint', userType: 'usertype' }\r\n    },\r\n    getAllAgentClaimRefers:\r\n    {\r\n        url: \"GetAllAgentClaimRefers\",\r\n       //params: { agentId: 'agentId', entryPoint: 'entrypoint' }\r\n        params: null\r\n    },\r\n    getActiveFinancialYear:\r\n    {\r\n        url: \"GetActiveFinancialYear\"\r\n    },\r\n    getBeneficiaryHealthClaimAmount: {\r\n        url: \"GetBeneficiaryHealthClaimAmount\",\r\n        params: { benSno: 'benSno', typeOfClaim:'typeOfClaim?'}\r\n    },\r\n    getPackages: {\r\n        url: 'getPackages',\r\n        params: null\r\n    },\r\n    getLegacyClaimsList: {\r\n        url: 'GetLegacyClaimsList',\r\n        params: null\r\n    },\r\n    saveLegacyClaimDetails: {\r\n        url: 'SaveLegacyClaimDetails',\r\n        params: null\r\n    },\r\n    beneficiaryAppliedDisabilities: {\r\n        url: 'getBeneficiaryAppliedDisabilities',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    getPfBalance:\r\n    {\r\n        url: \"GetPfBalance\"\r\n    },\r\n    validatePfSubmit:\r\n    {\r\n        url: \"ValidatePfSubmit\"\r\n    },\r\n\r\n    getLastPaidPfDetails: {\r\n        url: \"getBeneficiaryLastPaidCollectionDetails\",\r\n       // url: 'src/assets/data/PfPaymentDetails.json',\r\n        params: {ssin:'ssin',benSno:'benSno'}\r\n    },\r\n\r\n    getBeneficiaryDetailsBySearch: {\r\n        url: 'getPFBeneficiaryBasicDetailsByID',\r\n        params: { searchId: 'searchId' }\r\n    },\r\n    getLegacyPFBeneficiaryBasicDetailsByID: {\r\n        url: 'GetLegacyPFBeneficiaryBasicDetailsByID',\r\n        params: { searchId: 'searchId' }\r\n    },\r\n\r\n    savePFCollectionDetails: {\r\n        url: 'savePFCollection',\r\n        params: {pfcollectionObj:'pfObj'}\r\n    },\r\n    getPFMasterConfigDetails: {\r\n        url: 'getPFContribution',\r\n    },\r\n    getAgentCollectedAmount: {\r\n        url: 'getMaxCashAtAgent',\r\n        params: {userId:'userId'}\r\n    },\r\n    getPFDepositDetailsByAgentId:{\r\n        url: 'getCollectionMasterDetailsByAgent',\r\n        params: {userid:'id',status:'0/1',page:'1',pageSize:'10'}\r\n    },\r\n    submitPFDepositDetails: {\r\n        url: 'savePFDeposit',\r\n        params: { pfDepositObj: 'pfObj' }\r\n    },\r\n    isBenNomineeClaimSubmitted: {\r\n        url: 'isBenNomineeSubmittedClaim',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    isSameBenNomineeClaimSubmitted: {\r\n        url: 'isSameBenNomineeSubmittedClaim',\r\n        params: { benSno: 'benSno' }\r\n    },\r\n    getNomineeClaimEntryValidation:\r\n    {\r\n        url: \"GetNomineeClaimEntryValidation\"\r\n    },\r\n    getAgentList:\r\n    {\r\n        url: \"GetDeptUsers\"\r\n    },\r\n    getBenefitConfigurationDetails:\r\n    {\r\n        url: \"GetBenefitConfigurationDetails\"\r\n    },\r\n    getPFConfigurationDetails: {\r\n        url: 'getPFConfigurationDetails',\r\n        params: null\r\n    },\r\n    isValidMonthSubmitted: {\r\n        url: 'IsValidMonthSubmitted',\r\n        params: null\r\n    },\r\n    isValidBookReceipt: {\r\n        url: 'IsValidBookReceipt',\r\n        params: null\r\n    },\r\n    submitLegacyPFDetails: {\r\n        url: 'SaveLegacyPFDetails',\r\n        params: null\r\n    },\r\n    getSubDivRLOBankDetails: {\r\n        url: 'GetSubDivRLOBankDetails',\r\n        params: null\r\n    },\r\n    getAgentBooks: {\r\n        url: 'getAgentBooks',\r\n        params: null\r\n    },\r\n    getAgentLocationWise:\r\n    {\r\n        url: \"GetAgentLocationWise\",\r\n        params: null\r\n    },\r\n    //getAgentBooks: {\r\n    //    url: 'getAgentBooks',\r\n    //    params: null\r\n    //},\r\n    getNextReceiptNo: {\r\n        url: 'getNextReceiptNo',\r\n        params: null\r\n    },\r\n    getWorkerTypeDetails: {\r\n        url: 'getWorkerTypeDetails',\r\n        params: null\r\n\r\n    },\r\n    getAgentLegacyPfDetails:\r\n    {\r\n        url: \"GetAgentLegacyPfDetails\",\r\n        params: null\r\n    },\r\n    getAgentDetailsForDeposit: {\r\n        url: 'getAgentDetailsForDeposit',\r\n        params: null\r\n    },\r\n    savePayInSlip: {\r\n        url: 'SavePayInSlip',\r\n        params: null\r\n    },\r\n    getPFDepositStatusDetailsByAgentId: {\r\n        url: 'getDepositMasterDetailsByAgent',\r\n        params: { userid: 'id', status: '0/1', page: '1', pageSize: '10' }\r\n    },\r\n    isAgentAllDepositsPayInSlipsUploaded: {\r\n        url: 'isAgentAllDepositsPayInSlipsUploaded',\r\n        params: null\r\n    },\r\n    getPFDeposits: {\r\n        url: 'getPFDeposits',\r\n        params: null\r\n    },\r\n    getCollections:\r\n    {\r\n        url: 'getCollectionMasterDetailsByDepositId',\r\n        params: null\r\n    },\r\n    getLegacyCollections:\r\n    {\r\n        url: 'getLegacyCollectionMasterDetailsByDepositId',\r\n        params: null\r\n    },\r\n    getPFDepositStatusDetailsByUser: {\r\n        url: 'getDepositMasterDetailsByUser',\r\n        params: null\r\n    },\r\n    getUserDetails: {\r\n        url: 'getUserDetails',\r\n        params: null\r\n    },\r\n    checkReceiptNoForAgentBook: {\r\n        url: 'checkReceiptNoForAgentBook',\r\n        params: null\r\n    },\r\n    \r\n    getCollectionFinancialYear:\r\n    {\r\n        url: \"GetCollectionFinancialYearDetails\",\r\n        params: null\r\n    },\r\n    getBeneficiaryPFDetails:\r\n    {\r\n        url: \"GetBenPFDetails\",\r\n        params: null\r\n    },\r\n    isDuplicateDependentSubmitted:\r\n    {\r\n        url: \"IsDuplicateDependentSubmitted\",\r\n        params: null\r\n    },\r\n    getAgentCollectionBooks:\r\n    {\r\n        url: \"GetAgentCollectionBooks\",\r\n        params: null\r\n    },\r\n    getLegacyPFDetails:\r\n    {\r\n        url: \"GetLegacyPFDetails\",\r\n        params: null\r\n    },\r\n    getLegacyPFCollectionDetails:\r\n    {\r\n        url: \"GetLegacyPFCollectionDetails\",\r\n        params: null\r\n    },\r\n    getLegacyPFCollections:\r\n    {\r\n        url: 'GetLegacyPFCollections',\r\n        params: null\r\n    },\r\n    deleteClaimExceptions:\r\n    {\r\n        url: \"DeleteClaimExceptions\"\r\n    },\r\n    genaratePdfFormIV: {\r\n        url: \"getFormIV\",\r\n        params: null\r\n    },\r\n    genaratePdfLegacyFormIV: {\r\n        url: \"getLegacyFormIV\",\r\n        params: null\r\n    },\r\n    getfinanacialYearListDetails:\r\n    {\r\n        url: \"GetFinanacialYearListDetails\",\r\n        params: null\r\n    },\r\n    isValidCollectionYear:\r\n    {\r\n        url: \"IsValidCollectionYear\",\r\n        params: null\r\n    },\r\n    isInterestCalculatedforBen:\r\n    {\r\n        url: \"IsInterestCalculatedforBen\",\r\n        params: null\r\n    },\r\n    getSubmittedLegacyPFDetails:\r\n    {\r\n        url: \"GetSubmittedLegacyPFDetails\",\r\n        params: null\r\n    },\r\n    saveAdjustment: {\r\n        url: \"saveAdjustment\",\r\n        params: null\r\n    },\r\n    getAdjustmentBeneficiaryBasicDetailsByID: {\r\n        url: \"getAdjustmentBeneficiaryBasicDetailsByID\",\r\n        params: null\r\n    },\r\n    genaratePdfPayInSlip: {\r\n        url: \"getPayInSlip\",\r\n        params: null\r\n    },\r\n    isCAFUpdated:\r\n    {\r\n        url: \"IsCAFUpdated\",\r\n        params: null\r\n    },\r\n    decryptGripsResponse: {\r\n        url: \"decryptGripsResponse\",\r\n        params: null\r\n    },\r\n    decryptGripsDoubleVerificationResponse: {\r\n        url: \"decryptGripsDoubleVerificationResponse\",\r\n        params: null\r\n    },\r\n    repayToGrips: {\r\n        url: \"repayToGrips\",\r\n        params: null\r\n    },\r\n    postDoubleVerificationGrips: {\r\n        url: \"postDoubleVerificationGrips\",\r\n        params: null\r\n    },\r\n    downloadPFDepositDetails: {\r\n        url: \"getPFDepositDetails\",\r\n        params: null\r\n    },\r\n    getRegistrationNumber: {\r\n        url: \"getRegistrationNumber\",\r\n        params: null\r\n    },\r\n    getPFDepositAttachments: {\r\n        url: \"getPFDepositAttachments\",\r\n        params: null\r\n    },\r\n    getLWCBankDetails: {\r\n        url: \"getLWFCBankDetailsByUserId\",\r\n        params: null\r\n    },\r\n    getBeneficiaryPFAccountDetails: {\r\n        url: \"getBeneficiaryPFAccountDetails\",\r\n        params: null\r\n    },\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { DropdownListService } from '../../Services/dropdown-list.service';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { HttpRequest, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { ApiDictionary } from './api-dictionary';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ClaimConfig } from '../../claim/models/claimconfig.model';\r\n\r\n@Injectable()\r\nexport class ClaimDataService {\r\n   \r\n    \r\n    eduConfig: Array<ClaimConfig>;\r\n    constructor(public apiService: ApiService, public _http: HttpClient) { }\r\n\r\n    getBeneficiaryBasicDetailsByNo(id: any, isRegistrationNo?:any) {\r\n        let paramsMap = new Map<any, any>();\r\n        paramsMap.set('ssiNum', id);\r\n        paramsMap.set('isRegistrationNo', isRegistrationNo);\r\n        let params = new HttpParams();\r\n        paramsMap.forEach((value: any, key: any) => {\r\n            params = params.set(key, value);\r\n        });\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryBasicDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryBasicDetailsById(id: any) {\r\n        let paramsMap = new Map<any, any>();\r\n        paramsMap.set('benSno', id);\r\n        let params = new HttpParams();\r\n        paramsMap.forEach((value: any, key: any) => {\r\n            params = params.set(key, value);\r\n        });\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryBasicDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryBankDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryBankDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getBeneficiaryNomineeDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryNomineeDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n\r\n    getBeneficiaryFamilyDetails(id: any, type?: any) {\r\n        let params = new HttpParams();\r\n        if (type == undefined) { type = \"\" };\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryFamilyDetails.url + \"/\" + id + \"/\" + type, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryEduCount(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryEduCount.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getAllHospitals() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetAllHospitals.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getlovDetails(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetLOVDetailsByLovId.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getClaimConfiguration(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetClaimConfigDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimConfigurationMaster() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.GetClaimConfigMasterDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    createClaim(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.createClaim.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    updateClaim(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.createClaim.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimsByBenficiary(id: any, entrypoint: any, userType: any, claimReferenceNoText: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaims.url + \"/\" + id + \"/\" + entrypoint + \"/\" + userType + \"/\" + pageNo + \"/\" + pageSize + \"/\" + claimReferenceNoText, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAllClaimsByAgent(id: any, entrypoint: any, ssinSearchText: any, claimReferenceNoText: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAllClaimsByAgentId.url + \"/\" + id + \"/\" + entrypoint + \"/\" + pageNo + \"/\" + pageSize + \"/\" + ssinSearchText + \"/\" + claimReferenceNoText, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAllDraftClaimsByAgent(id: any, entrypoint: any, ssinSearchText: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAllClaimsbByAgentDraft.url + \"/\" + id + \"/\" + entrypoint + \"/\" + pageNo + \"/\" + pageSize + \"/\" + ssinSearchText, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAllDraftClaimsByBen(id: any, entrypoint: any, userType: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAllClaimsbByDraft.url + \"/\" + id + \"/\" + entrypoint + \"/\" + userType + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n   \r\n    downloadReceipt(benName: any, ssin: any, claimRefernceNo: any, amount: any, name: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getReceipt.url + \"/\" + benName + \"/\" + ssin + \"/\" + claimRefernceNo + \"/\" + amount + \"/\" + name, { params: params });\r\n        return this.apiService.downloadResource(options);\r\n    }\r\n    getClaimDetailsByClaimId(id: any, referenceId:any,claimType:any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimDetailsByClaimId.url + \"/\" + id + \"/\" + referenceId + \"/\" + claimType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getClaimDetailsById(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimDetailsById.url + \"/\" + id , { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getClaimTrackDetailsByTransactionId(id: any, transactionType: any, wfId?: any) {\r\n        let params = new HttpParams();\r\n        if (wfId == undefined) { wfId = \"\"; }\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getClaimTrackDetailsByTransactionId.url + \"/\" + id + \"/\" + transactionType + \"/\" + wfId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    genaratePdfFormV(claim: any) {\r\n        return this.apiService.genaratePdf(ApiDictionary.genarateFormV.url, claim);\r\n    }\r\n\r\n    getAttachment() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAttachment.url , { params: params });\r\n        return this.apiService.downloadResource(options);\r\n    }\r\n\r\n    deleteClaimById(claimId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.deleteClaimById.url + \"/\" + claimId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getAllReferralClaimsByBenficiary(id: any, entrypoint: any, userType: any, claimReferenceNoText: any, pageNo?: any, pageSize?: any): any {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAllBeneficiaryClaimRefers.url+\"/\"+id + \"/\" + entrypoint + \"/\" + userType + \"/\" + pageNo + \"/\" + pageSize + \"/\" + claimReferenceNoText, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAllReferralClaimsByAgent(id: any, entrypoint: any, ssinSearchText: any, claimReferenceNoText: any, pageNo?: any, pageSize?: any): any {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAllAgentClaimRefers.url + \"/\" + id + \"/\" + entrypoint + \"/\" + pageNo + \"/\" + pageSize + \"/\" + ssinSearchText + \"/\" + claimReferenceNoText, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getActiveFinancialYear() {\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getActiveFinancialYear.url);\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPackages() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPackages.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryHealthClaimAmount(benSno: any, typeOfClaim: any): any {\r\n        let params = new HttpParams();\r\n        let options;\r\n        if (typeOfClaim == undefined || typeOfClaim == null) {\r\n            options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryHealthClaimAmount.url + \"/\" + benSno, { params: params });\r\n        }\r\n        else {\r\n            options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryHealthClaimAmount.url + \"/\" + benSno + \"/\" + typeOfClaim, { params: params });\r\n        }\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLegacyClaimsList(id: any, pageNo?: any, pageSize?: any): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLegacyClaimsList.url + \"/\" + id + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    saveLegacyClaimDetails(claim: any) {\r\n        return this.apiService.PostData(ApiDictionary.saveLegacyClaimDetails.url, claim).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryAppliedDisabilities(id: any , claimId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.beneficiaryAppliedDisabilities.url + \"/\" + id + \"/\" + claimId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPfBalance(bensno: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPfBalance.url + \"/\" + bensno, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    validatePfSubmit(ssiNumber: any, nomineeId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.validatePfSubmit.url + \"/\" + ssiNumber + \"/\" + nomineeId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLastPaidPfDetails( benSno: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLastPaidPfDetails.url +  \"/\" + benSno, { params: params });\r\n        // const options = new HttpRequest<any>('GET', ApiDictionary.getLastPaidPfDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => { return res });\r\n    }\r\n    getBeneficiaryDetailsBySearch(searchId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryDetailsBySearch.url + \"/\" + searchId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryDetailsBySearch1(searchId: any, isPFDeposit: boolean) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryDetailsBySearch.url + \"/\" + searchId + \"/\" + isPFDeposit, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLegacyPFBeneficiaryBasicDetailsByID(searchId: any, isPFDeposit: boolean) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLegacyPFBeneficiaryBasicDetailsByID.url + \"/\" + searchId + \"/\" + isPFDeposit, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    savePFCollectionDetails(pfCollection: any) {\r\n        return this.apiService.PostData(ApiDictionary.savePFCollectionDetails.url, pfCollection).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getPFMasterConfigDetails() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFMasterConfigDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getAgentCollectedAmount(userId: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentCollectedAmount.url + \"/\" + userId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n\r\n    getPFDepositDetailsByAgentId(id: any, entrypoint: any,workerTypeId:any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFDepositDetailsByAgentId.url + \"/\" + id + \"/\" + entrypoint + \"/\" + workerTypeId + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    //submitPFDepositDetails(pfDeposit: any) {\r\n    //    return this.apiService.PostData(ApiDictionary.submitPFDepositDetails.url, pfDeposit).then((res: any) => {\r\n    //        return res;\r\n    //    });\r\n    //}\r\n\r\n    submitPFDepositDetails1(userId: any,rloId:any,bankId:any,payInslipNo) {\r\n        return this.apiService.PostData(ApiDictionary.submitPFDepositDetails.url + \"/\" + userId + \"/\" + rloId + \"/\" + bankId + \"/\" + payInslipNo,null).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    submitPFDepositDetails(pfDepositDetails: any) {\r\n        return this.apiService.PostData2(ApiDictionary.submitPFDepositDetails.url, pfDepositDetails).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isBenNomineeClaimSubmitted(benSno : any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isBenNomineeClaimSubmitted.url + \"/\" + benSno, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isSameBenNomineeClaimSubmitted(benSno: any, nomineeId: any, claimType: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isSameBenNomineeClaimSubmitted.url + \"/\" + benSno + \"/\" + nomineeId + \"/\" + claimType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getNomineeClaimEntryValidation(id: any) {\r\n\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getNomineeClaimEntryValidation.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    //getAgentList\r\n    getAgentList(userTypeId: number) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentList.url + \"/\" + userTypeId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBenefitConfigurationDetails(benefitType:any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBenefitConfigurationDetails.url + \"/\" + benefitType, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPFConfigurationDetails(id: number) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFConfigurationDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isValidMonthSubmitted(benSno: any, monthId: any, year: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isValidMonthSubmitted.url + \"/\" + benSno + \"/\" + monthId + \"/\" + year, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isValidBookReceipt(bookId: any, receiptId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isValidBookReceipt.url + \"/\" + bookId + \"/\" + receiptId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    submitLegacyPFDetails(pfCollectionMasterList: any) {\r\n        debugger;\r\n        return this.apiService.PostData(ApiDictionary.submitLegacyPFDetails.url, pfCollectionMasterList).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getSubDivRLOBankDetails(id: any, workerTypeId:any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getSubDivRLOBankDetails.url + \"/\" + id + \"/\" + workerTypeId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    //getAgentBooks(id: any) {\r\n    //    let params = new HttpParams();\r\n    //    const options = new HttpRequest<any>('GET', ApiDictionary.getAgentBooks.url + \"/\" + id, { params: params });\r\n    //    return this.apiService.getDropdownData(options).map((res: any) => {\r\n    //        return res;\r\n    //    });\r\n    //}\r\n    getAgentLocationWise(userTypeId: number,userid:number) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentLocationWise.url + \"/\" + userTypeId + \"/\" + userid, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getAgentBooks(id: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentBooks.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getNextReceiptNo(bookId: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getNextReceiptNo.url + \"/\" + bookId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    savePayInSlip(payInSlip: any) {\r\n        return this.apiService.PostData(ApiDictionary.savePayInSlip.url, payInSlip).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getPFDepositStatusDetailsByAgentId(id: any, entrypoint: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFDepositStatusDetailsByAgentId.url + \"/\" + id + \"/\" + entrypoint + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    isAgentAllDepositsPayInSlipsUploaded(agentId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isAgentAllDepositsPayInSlipsUploaded.url + \"/\" + agentId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getWorkerTypeMasterData() {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getWorkerTypeDetails.url, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAgentLegacyPfDetails(id: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentLegacyPfDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAgentDetailsForDeposit(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentDetailsForDeposit.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPFDeposits(userId: any, userType: any, status: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFDeposits.url + \"/\" + userId + \"/\" + userType + \"/\" + status + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getCollections(pfDepositId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getCollections.url + \"/\" + pfDepositId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLegacyCollections(pfDepositId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLegacyCollections.url + \"/\" + pfDepositId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPFDepositStatusDetailsByUser(id: any, userType: any,depositFromDate:any,depositToDate:any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFDepositStatusDetailsByUser.url + \"/\" + id + \"/\" + userType + \"/\" + depositFromDate + \"/\" + depositToDate+ \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getUserDetails(userId: number) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getUserDetails.url + \"/\" + userId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    checkReceiptNoForAgentBook(bookId: any, receiptNo:any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.checkReceiptNoForAgentBook.url + \"/\" + bookId + \"/\" + receiptNo, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getCollectionFinancialYear(collectionDate: Date) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getCollectionFinancialYear.url + \"/\" + collectionDate.toISOString(), { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryPFDetails(id: any, page?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryPFDetails.url + \"/\" + id + \"/\" + page + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isDuplicateDependentSubmitted(benSno: any, dependentId: any, claimId: any, onBehalfBen? :any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isDuplicateDependentSubmitted.url + \"/\" + benSno + \"/\" + dependentId + \"/\" + claimId + \"/\" + onBehalfBen, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAgentCollectionBooks(id: number, collectionDate: Date, depositDate: Date): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAgentCollectionBooks.url + \"/\" + id + \"/\" + collectionDate.toISOString() + \"/\" + depositDate.toISOString(), { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLegacyPFDetails(id: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLegacyPFDetails.url + \"/\" + id  + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLegacyPFCollectionDetails(id: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLegacyPFCollectionDetails.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getLegacyPFCollections(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLegacyPFCollections.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    deleteClaimExceptions(id: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.deleteClaimExceptions.url + \"/\" + id, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    genaratePdfFormIV(formDetails: any) {\r\n        return this.apiService.genaratePdf(ApiDictionary.genaratePdfFormIV.url, formDetails);\r\n    }\r\n    genaratePdfLegacyFormIV(formDetails: any) {\r\n        return this.apiService.genaratePdf(ApiDictionary.genaratePdfLegacyFormIV.url, formDetails);\r\n    }\r\n    getfinanacialYearListDetails(depositDate: Date) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getfinanacialYearListDetails.url + \"/\" + depositDate.toISOString(), { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isValidCollectionYear(financialYearId: any, collectionDate: Date) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isValidCollectionYear.url + \"/\" + financialYearId + \"/\" + collectionDate.toISOString(), { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    isInterestCalculatedforBen(financialYearId: any, bensno: any) {\r\n        debugger;\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isInterestCalculatedforBen.url + \"/\" + financialYearId + \"/\" + bensno, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getSubmittedLegacyPFDetails(id: any, pageNo?: any, pageSize?: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getSubmittedLegacyPFDetails.url + \"/\" + id + \"/\" + pageNo + \"/\" + pageSize, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    saveAdjustment(adjustment: any) {\r\n        return this.apiService.PostData(ApiDictionary.saveAdjustment.url, adjustment).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getAdjustmentBeneficiaryBasicDetailsByID(searchId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getAdjustmentBeneficiaryBasicDetailsByID.url + \"/\" + searchId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    genaratePdfPayInSlip(formDetails: any) {\r\n        return this.apiService.genaratePdf(ApiDictionary.genaratePdfPayInSlip.url, formDetails);\r\n    }\r\n    isCAFUpdated(id: any, isRegistrationNo: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.isCAFUpdated.url + \"/\" + id + \"/\" + isRegistrationNo, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    decryptGripsResponse(gripsResponse: any) {\r\n        return this.apiService.PostData(ApiDictionary.decryptGripsResponse.url, gripsResponse).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    decryptGripsDoubleVerificationResponse(gripsResponse: any) {\r\n        return this.apiService.PostData(ApiDictionary.decryptGripsDoubleVerificationResponse.url, gripsResponse).then((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    repayToGrips(pfDepositId: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.repayToGrips.url + \"/\" + pfDepositId, { params: params });\r\n        return this.apiService.getDropdownData2(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    postDoubleVerificationGrips(pfDepositId: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.postDoubleVerificationGrips.url + \"/\" + pfDepositId, { params: params });\r\n        return this.apiService.getDropdownData2(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    downloadPFDepositDetails(pfDepositId: number) {\r\n        return this.apiService.genaratePdf(ApiDictionary.downloadPFDepositDetails.url + \"/\" + pfDepositId, pfDepositId);\r\n    }\r\n    getRegistrationNumber(ssin: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getRegistrationNumber.url + \"/\" + ssin, { params: params });\r\n        return this.apiService.getDropdownData2(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getPFDepositAttachments(pfDepositId: number): any {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getPFDepositAttachments.url + \"/\" + pfDepositId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    getLWCBankDetails(userId: any, workerTypeId: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getLWCBankDetails.url + \"/\" + userId + \"/\" + workerTypeId, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n    getBeneficiaryPFAccountDetails(bensno: any) {\r\n        let params = new HttpParams();\r\n        const options = new HttpRequest<any>('GET', ApiDictionary.getBeneficiaryPFAccountDetails.url + \"/\" + bensno, { params: params });\r\n        return this.apiService.getDropdownData(options).map((res: any) => {\r\n            return res;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n            <div class=\\\"jarviswidget jarviswidget-color-blueDark\\\" id=\\\"wid-id-1\\\" data-widget-editbutton=\\\"false\\\" data-widget-sortable=\\\"false\\\">\\r\\n\\r\\n                <header>\\r\\n                    <h2>PF Deposited </h2>\\r\\n                </header>\\r\\n                <!-- widget div-->\\r\\n                <div>\\r\\n\\r\\n                    <div class=\\\"jarviswidget-editbox\\\">\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"widget-body no-padding\\\">\\r\\n                        <div class=\\\"ssv-search\\\">\\r\\n                            <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\" class=\\\"advancedSearchTextbox\\\">\\r\\n                            <button><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <p></p>\\r\\n\\r\\n                        <table class=\\\"table table-striped\\\" [mfData]=\\\"pfDepositDetails\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter>Action</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"legacyNo\\\">Legacy No</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"payinSlipNo\\\">Payin Slip No</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositAmount\\\">Deposit Amount</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <mfDefaultSorter by=\\\"depositDateString\\\">Deposit Date</mfDefaultSorter>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let deposits of mf.data|grdFilter: {depositAmount:searchText, depositDateString: searchText, payinSlipNo: searchText, scrollNumber: searchText, bankDepositDateString: searchText}; let i=index;\\\">\\r\\n                                    <td class=\\\"\\\">\\r\\n                                        <!--<a (click)=\\\"onEditCollection(deposits.pfLegacyMasterId)\\\" *ngIf=\\\"deposits.isEdit\\\" title=\\\"Edit\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>-->\\r\\n                                        <a (click)=\\\"viewCollections(deposits.pfLegacyMasterId)\\\" *ngIf=\\\"!deposits.isEdit\\\" title=\\\"View Collections\\\" class=\\\"txt-color-red\\\"><i class=\\\"fa fa-eye\\\"></i></a>\\r\\n                                    </td>\\r\\n                                    <td>{{deposits.pfLegacyMasterId}}</td>\\r\\n                                    <td>{{deposits.payinSlipNo}}</td>\\r\\n                                    <td>{{deposits.depositAmount}}</td>\\r\\n                                    <td>{{deposits.depositDateString}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"5\\\">\\r\\n                                        <div>\\r\\n                                            <ngb-pagination [collectionSize]=\\\"totalRows\\\" [(pageSize)]=\\\"pageSize\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"changepage($event)\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n                                            <!--<mfBootstrapPaginator></mfBootstrapPaginator>-->\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #payInSlipModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"payInSlipModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <fieldset id=\\\"divUploadPayInSlip\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <label>Bank Deposited Date <span [style.color]=\\\"!dateOfDepostValid?'red':''\\\"><b>*</b></span></label>\\r\\n                            <label class=\\\"input\\\">\\r\\n                                <!--<i class=\\\"icon-append fa fa-calendar\\\"></i>-->\\r\\n                                <input type=\\\"text\\\" name=\\\"depositDate\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\"\\r\\n                                       placeholder=\\\"DD/MM/YYYY\\\"\\r\\n                                       #depositDate=\\\"ngModel\\\"\\r\\n                                       [maxDate]=\\\"toDayDate\\\"\\r\\n                                       [(ngModel)]=\\\"bankDepositDate\\\" readonly\\r\\n                                       value=\\\"{{ depositedDate | date: 'dd/MM/yyyy' }}\\\"\\r\\n                                       [ngClass]=\\\"{'invalid-data':!dateOfDepostValid, 'valid-data': dateOfDepostValid}\\\"\\r\\n                                       required>\\r\\n                            </label>\\r\\n                            <div *ngIf=\\\"!dateOfDepostValid\\\">\\r\\n                                <span style=\\\"color: red;\\\">Deposited Date is required </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"label\\\">Scroll Number <span [style.color]=\\\"!payInSlipNumberValid?'red':''\\\"><b>*</b></span> </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"payInSlip\\\" numbersOnly [(ngModel)]=\\\"scrollNumber\\\" />\\r\\n                                <div *ngIf=\\\"!payInSlipNumberValid\\\">\\r\\n                                    <span style=\\\"color: red;\\\">Scroll Number is required </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-12 smart-form\\\">\\r\\n                            <section class=\\\"col col-6 top-5\\\">\\r\\n                                <label class=\\\"label\\\">PayIn Slip <span [style.color]=\\\"!payInSlipUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event, deposits)\\\">Browse</span>\\r\\n                                    <input type=\\\"text\\\" readonly>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!payInSlipUploaded) && (payInSlipCertificate.fileName =='' || payInSlipCertificate.fileName == undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">PayIn Slip is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>{{payInSlipCertificate.fileName}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </section>\\r\\n                            <section style=\\\"padding-top:30px\\\" class=\\\"col col-6\\\"><label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label></section>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"label\\\">PayIn Slip <span [style.color]=\\\"!payInSlipUploaded?'red':''\\\"><b>*</b></span></label>\\r\\n                                <div class=\\\"input input-file\\\">\\r\\n                                    <span class=\\\"button\\\"><input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"onFileChanged($event, deposits)\\\">Browse</span><input type=\\\"text\\\" readonly>\\r\\n                                    <label class=\\\"label\\\">Document limit is upto 2MB, JPEG/PNG/PDF</label>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"(!payInSlipUploaded) && (payInSlipCertificate.fileName =='' || payInSlipCertificate.fileName == undefined )\\\">\\r\\n                                    <span style=\\\"color: red;\\\">PayIn Slip is required </span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>{{payInSlipCertificate.fileName}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>-->\\r\\n                </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePaySlip()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div bsModal #collectionsModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard:false}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"collectionsModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Status Message</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <!--<div class=\\\"widget-body no-padding\\\">-->\\r\\n                <!--<table id=\\\"datatable_fixed_column\\\" class=\\\"table table-striped table-bordered\\\"\\r\\n                       [mfData]=\\\"pfCollectionDetails\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\" width=\\\"100%\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"ssI_Number\\\">SSIN</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"benFullName\\\">Beneficiary Name</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"receiptNo\\\">Receipt No</mfDefaultSorter>\\r\\n\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"bookNo\\\">Book No</mfDefaultSorter>\\r\\n\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"collectionDateString\\\">Collection Date</mfDefaultSorter>\\r\\n                            </th>\\r\\n\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"paidFromMonth\\\">Paid From</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"paidToMonth\\\">Paid To</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <mfDefaultSorter by=\\\"collectionAmount\\\">Amount</mfDefaultSorter>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let col of mf.data; let i=index;\\\">\\r\\n                            <td>{{col.ssI_Number}}</td>\\r\\n                            <td>{{col.benFullName}}</td>\\r\\n                            <td>{{col.receiptNo}}</td>\\r\\n                            <td>{{col.bookNo}}</td>\\r\\n                            <td>{{col.collectionDateString}}</td>\\r\\n                            <td>{{col.paidFromMonth}}</td>\\r\\n                            <td>{{col.paidToMonth}}</td>\\r\\n                            <td>{{col.collectionAmount}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"8\\\">\\r\\n                                <div>\\r\\n                                    <mfBootstrapPaginator></mfBootstrapPaginator>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>-->\\r\\n                <!--</div>-->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"downloadRecipt()\\\">\\r\\n                    Download Receipt\\r\\n                </button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePaySlip()\\\">\\r\\n                    Submit\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PFDepositDetails, PFDeposits } from '../models/pf.deposit.details.model';\r\nimport { PFCollectionDetailsList } from '../models/pf.collectiondetails.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClaimDataService } from '../services/claim-data.service';\r\nimport { UserService } from 'src/app/UserService';\r\nimport { pagination, PFDepositeStatus } from '../pipes/constnts.model';\r\nimport { AttachmentType } from '../pipes/constnts.model';\r\nimport { PayInSlipAttachmentModel } from '../models/payinslip-attachment';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { PFLegacyMaster } from '../models/pfLegacyMaster.model';\r\n\r\n@Component({\r\n  selector: 'app-submittedlegacypfdetails',\r\n  templateUrl: './submittedlegacypfdetails.component.html',\r\n  styleUrls: ['./submittedlegacypfdetails.component.css']\r\n})\r\nexport class SubmittedlegacypfdetailsComponent implements OnInit {\r\n    @ViewChild('payInSlipModal') public payInSlipModal: ModalDirective;\r\n    @ViewChild('collectionsModal') public collectionsModal: ModalDirective;\r\n    toDayDate: Date;\r\n    datePickerConfig: any;\r\n    userName: string;\r\n    userCode: string;\r\n    page: number = pagination.pageNo;\r\n    totalRows: any;\r\n    pageSize: number = pagination.pageSize;\r\n    pfCollectionDetails: PFCollectionDetailsList[] = [];\r\n    successMessage: string;\r\n    payInSlipUploaded: boolean = true;\r\n    dateOfDepostValid: boolean = true;\r\n    payInSlipNumberValid: boolean = true;\r\n    bankDepositDate: Date;\r\n    scrollNumber: number;\r\n    payInSlipCertificate: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n    depositId: number;\r\n    pfDepositDetails: PFLegacyMaster[] = [];\r\n\r\n    constructor(public router: Router, private route: ActivatedRoute, private dataService: ClaimDataService, private user: UserService) {\r\n        this.datePickerConfig = Object.assign({},\r\n            {\r\n                dateInputFormat: 'DD/MM/YYYY',\r\n                showWeekNumbers: false,\r\n                containerClass: 'theme-dark-blue'\r\n            });\r\n        this.toDayDate = new Date();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userName = this.user.user.userName;\r\n        this.userCode = this.user.user.userTypeName;\r\n\r\n        this.getLegacyPFDetails(this.user.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n    getLegacyPFDetails(userId: any, pageNo: any, pageSize: any) {\r\n        this.dataService\r\n            .getSubmittedLegacyPFDetails(userId, pageNo, pageSize)\r\n            .subscribe((data: any) => {\r\n                debugger;\r\n                this.pfDepositDetails = data.results;\r\n                this.totalRows = data.rowCount;\r\n            });\r\n    }\r\n\r\n    changepage(page) {\r\n        // this.getPFDeposits(this.user.user.deptUserid, Number(this.user.user.userTpe), PFDepositeStatus.deposited, this.page, this.pageSize);\r\n        this.getLegacyPFDetails(this.user.user.deptUserid, this.page, this.pageSize);\r\n    }\r\n\r\n    onFileChanged(inputValue: any): void {\r\n        var file: File = inputValue.target.files[0];\r\n        if (file.type === \"application/pdf\" || file.type.includes(\"image/\")) {\r\n            if (file.size > 2000000) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n            };\r\n            var myReader: FileReader = new FileReader();\r\n            myReader.onloadend = (e) => {\r\n                const model: PayInSlipAttachmentModel = {} as PayInSlipAttachmentModel;\r\n                model.fileName = file.name;\r\n                model.filePath = \"test\";\r\n                model.fileContent = myReader.result.toString().split(',')[1];\r\n                model.statusId = 1;\r\n\r\n                model.attachmentType = AttachmentType.PayinSlip;\r\n                model.pfDepositId = this.depositId;\r\n                model.createdBy = this.user.user.deptUserid;\r\n\r\n                //this.payInSlip = model;\r\n                this.payInSlipCertificate = model;\r\n            }\r\n            myReader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Only accept pdf and images\");\r\n        }\r\n    }\r\n   \r\n    upload(details: PFDepositDetails) {\r\n        this.depositId = details.pfDepositId;\r\n        this.payInSlipModal.show();\r\n    }\r\n    savePaySlip() {\r\n        if (this.validatePayInSlip()) {\r\n            this.payInSlipCertificate.bankDepositDate = this.bankDepositDate;\r\n            this.payInSlipCertificate.scrollNumber = this.scrollNumber;\r\n            if (confirm(\"Are you sure to proceed \")) {\r\n                this.dataService\r\n                    .savePayInSlip(this.payInSlipCertificate)\r\n                    .then((data: any) => {\r\n                        if (data) {\r\n                            this.successMessage = \"PayIn Slip Uploaded successfully\";\r\n                        }\r\n                        else {\r\n                            this.successMessage = \"PayIn Slip Not Uploaded\";\r\n                        }\r\n                        this.payInSlipModal.hide();\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n    validatePayInSlip(): boolean {\r\n        let isValid = true;\r\n        if (this.bankDepositDate == null && this.bankDepositDate == undefined) { isValid = this.dateOfDepostValid = false; }\r\n        if (this.scrollNumber == null && this.scrollNumber == undefined) { isValid = this.payInSlipNumberValid = false; }\r\n        if (this.payInSlipCertificate.fileName == null && this.payInSlipCertificate.fileName == undefined) { isValid = this.payInSlipUploaded = false; }\r\n        return isValid;\r\n    }\r\n\r\n    viewCollections(pfLegacyMasterId: number) {\r\n        this.router.navigate(['claim/bulkpfdepositcollectionlist', { pfLegacyMasterId: pfLegacyMasterId }], { skipLocationChange: true });\r\n    }\r\n    //onEditCollection(pfLegacyMasterId: number) {\r\n    //    this.router.navigate(['claim/bulkpfdeposit', { pfLegacyMasterId: pfLegacyMasterId }], { skipLocationChange: true });\r\n    //}\r\n}\r\n"],"sourceRoot":""}