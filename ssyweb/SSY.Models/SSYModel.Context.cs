//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSY.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SSYEntities : DbContext
    {
        public SSYEntities()
            : base("name=SSYEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LocationType> LocationTypes { get; set; }
        public virtual DbSet<ReadNotification> ReadNotifications { get; set; }
        public virtual DbSet<RegOtp> RegOtps { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TblActionHistory> TblActionHistories { get; set; }
        public virtual DbSet<TblAilment> TblAilments { get; set; }
        public virtual DbSet<TblApprovalPermission> TblApprovalPermissions { get; set; }
        public virtual DbSet<TblAttachement> TblAttachements { get; set; }
        public virtual DbSet<TblBankBranch> TblBankBranches { get; set; }
        public virtual DbSet<TblBankCenter> TblBankCenters { get; set; }
        public virtual DbSet<TblBankDist> TblBankDists { get; set; }
        public virtual DbSet<TblBankMst> TblBankMsts { get; set; }
        public virtual DbSet<TblBenAddress> TblBenAddresses { get; set; }
        public virtual DbSet<TblBenAddress9Lakhs38> TblBenAddress9Lakhs38 { get; set; }
        public virtual DbSet<TblBenAddressCAFUpdateHistory> TblBenAddressCAFUpdateHistories { get; set; }
        public virtual DbSet<TblBenAddressReAppylyHistory> TblBenAddressReAppylyHistories { get; set; }
        public virtual DbSet<TblBeneficiary9Lakhs38> TblBeneficiary9Lakhs38 { get; set; }
        public virtual DbSet<TblBeneficiaryCAFUpdateHistory> TblBeneficiaryCAFUpdateHistories { get; set; }
        public virtual DbSet<TblBeneficiaryReAppylyHistory> TblBeneficiaryReAppylyHistories { get; set; }
        public virtual DbSet<TblBenFamilyMember> TblBenFamilyMembers { get; set; }
        public virtual DbSet<TblBenFamilyMemberCAFUpdateHistory> TblBenFamilyMemberCAFUpdateHistories { get; set; }
        public virtual DbSet<TblBenFamilyMemberReAppylyHistory> TblBenFamilyMemberReAppylyHistories { get; set; }
        public virtual DbSet<TblBenNomineeDtl> TblBenNomineeDtls { get; set; }
        public virtual DbSet<TblBenNomineeDtlsCAFUpdateHistory> TblBenNomineeDtlsCAFUpdateHistories { get; set; }
        public virtual DbSet<TblBenNomineeDtlsReAppylyHistory> TblBenNomineeDtlsReAppylyHistories { get; set; }
        public virtual DbSet<TblBenScheme> TblBenSchemes { get; set; }
        public virtual DbSet<TblBenSchemesDtl> TblBenSchemesDtls { get; set; }
        public virtual DbSet<TblBoard> TblBoards { get; set; }
        public virtual DbSet<TblBoardUser> TblBoardUsers { get; set; }
        public virtual DbSet<TblCheckListDtl> TblCheckListDtls { get; set; }
        public virtual DbSet<TblCheckListHdr> TblCheckListHdrs { get; set; }
        public virtual DbSet<TblClaim> TblClaims { get; set; }
        public virtual DbSet<TblClaimConfigDtl> TblClaimConfigDtls { get; set; }
        public virtual DbSet<TblClaimConfigHdr> TblClaimConfigHdrs { get; set; }
        public virtual DbSet<TblClaimStatu> TblClaimStatus { get; set; }
        public virtual DbSet<TblDeath> TblDeaths { get; set; }
        public virtual DbSet<TblDeathCheckListDetail> TblDeathCheckListDetails { get; set; }
        public virtual DbSet<TblDeathClaimExceptionDetail> TblDeathClaimExceptionDetails { get; set; }
        public virtual DbSet<TblDisabilityCheckListDetail> TblDisabilityCheckListDetails { get; set; }
        public virtual DbSet<TblDisabilityClaimExceptionDetail> TblDisabilityClaimExceptionDetails { get; set; }
        public virtual DbSet<TblDistrictMst> TblDistrictMsts { get; set; }
        public virtual DbSet<TblDownlaodRequest> TblDownlaodRequests { get; set; }
        public virtual DbSet<TblDuplicaterecordIssue> TblDuplicaterecordIssues { get; set; }
        public virtual DbSet<TblEducationCheckListDetail> TblEducationCheckListDetails { get; set; }
        public virtual DbSet<TblEducationClaimExceptionDetail> TblEducationClaimExceptionDetails { get; set; }
        public virtual DbSet<TblEducationHdr> TblEducationHdrs { get; set; }
        public virtual DbSet<TblFamilyTemp> TblFamilyTemps { get; set; }
        public virtual DbSet<TblFinancialYear> TblFinancialYears { get; set; }
        public virtual DbSet<TblFundReleaseOrderDtl> TblFundReleaseOrderDtls { get; set; }
        public virtual DbSet<TblFundReleaseOrderHdr> TblFundReleaseOrderHdrs { get; set; }
        public virtual DbSet<TblFundRequestDtl1> TblFundRequestDtl1 { get; set; }
        public virtual DbSet<TblFundRequestDtl2> TblFundRequestDtl2 { get; set; }
        public virtual DbSet<TblFundRequestExpensesDtl> TblFundRequestExpensesDtls { get; set; }
        public virtual DbSet<TblFundRequestHdr> TblFundRequestHdrs { get; set; }
        public virtual DbSet<TblGPMst> TblGPMsts { get; set; }
        public virtual DbSet<TblHealthFamilyCheckListDetail> TblHealthFamilyCheckListDetails { get; set; }
        public virtual DbSet<TblHealthFamilyClaimExceptionDetail> TblHealthFamilyClaimExceptionDetails { get; set; }
        public virtual DbSet<TblHealthFamilyPackage> TblHealthFamilyPackages { get; set; }
        public virtual DbSet<TblHelp> TblHelps { get; set; }
        public virtual DbSet<TblHospital> TblHospitals { get; set; }
        public virtual DbSet<TblIssuingAuthName> TblIssuingAuthNames { get; set; }
        public virtual DbSet<TblListOfInd> TblListOfInds { get; set; }
        public virtual DbSet<TblLogin> TblLogins { get; set; }
        public virtual DbSet<TblLoginType> TblLoginTypes { get; set; }
        public virtual DbSet<TblLOVDtl> TblLOVDtls { get; set; }
        public virtual DbSet<TblLOVHdr> TblLOVHdrs { get; set; }
        public virtual DbSet<TblMenu> TblMenus { get; set; }
        public virtual DbSet<TblNatureDuty> TblNatureDuties { get; set; }
        public virtual DbSet<TblNatureVehicle> TblNatureVehicles { get; set; }
        public virtual DbSet<TblNewReg> TblNewRegs { get; set; }
        public virtual DbSet<TblOfflineRegReport> TblOfflineRegReports { get; set; }
        public virtual DbSet<TblPackage> TblPackages { get; set; }
        public virtual DbSet<TblPart1ApplicationCountOffline> TblPart1ApplicationCountOffline { get; set; }
        public virtual DbSet<TblPaymentProcessingHdr> TblPaymentProcessingHdrs { get; set; }
        public virtual DbSet<TblPaymentReleaseHdr> TblPaymentReleaseHdrs { get; set; }
        public virtual DbSet<TblPaymodeMst> TblPaymodeMsts { get; set; }
        public virtual DbSet<TblPdfFile> TblPdfFiles { get; set; }
        public virtual DbSet<TblPfDetail> TblPfDetails { get; set; }
        public virtual DbSet<TblPostOfficeData> TblPostOfficeDatas { get; set; }
        public virtual DbSet<TblProvidentFund> TblProvidentFunds { get; set; }
        public virtual DbSet<TblProvidentFundCheckListDetail> TblProvidentFundCheckListDetails { get; set; }
        public virtual DbSet<TblProvidentFundClaimExceptionDetail> TblProvidentFundClaimExceptionDetails { get; set; }
        public virtual DbSet<TblPsMst> TblPsMsts { get; set; }
        public virtual DbSet<TblRelationType> TblRelationTypes { get; set; }
        public virtual DbSet<TblRequiredDoc> TblRequiredDocs { get; set; }
        public virtual DbSet<TblRLOOffice> TblRLOOffices { get; set; }
        public virtual DbSet<TblRLOOfficeBank> TblRLOOfficeBanks { get; set; }
        public virtual DbSet<TblRLOOfficeUser> TblRLOOfficeUsers { get; set; }
        public virtual DbSet<TblRole> TblRoles { get; set; }
        public virtual DbSet<TblSchemeMst> TblSchemeMsts { get; set; }
        public virtual DbSet<TblSitecount> TblSitecounts { get; set; }
        public virtual DbSet<TblSM> TblSMS { get; set; }
        public virtual DbSet<TblSSINMst> TblSSINMsts { get; set; }
        public virtual DbSet<TblSubDivision> TblSubDivisions { get; set; }
        public virtual DbSet<TblSubMenu> TblSubMenus { get; set; }
        public virtual DbSet<TblSummaryReport> TblSummaryReports { get; set; }
        public virtual DbSet<TblTempBenificiaryDetRep> TblTempBenificiaryDetReps { get; set; }
        public virtual DbSet<TblTempDwnld> TblTempDwnlds { get; set; }
        public virtual DbSet<TblTransaction> TblTransactions { get; set; }
        public virtual DbSet<TblTransactionLog> TblTransactionLogs { get; set; }
        public virtual DbSet<TblUserCategory> TblUserCategories { get; set; }
        public virtual DbSet<TblUserGpWardMap> TblUserGpWardMaps { get; set; }
        public virtual DbSet<TblUserType> TblUserTypes { get; set; }
        public virtual DbSet<TblUtilizationCertificateDtl> TblUtilizationCertificateDtls { get; set; }
        public virtual DbSet<TblUtilizationCertificateHdr> TblUtilizationCertificateHdrs { get; set; }
        public virtual DbSet<TblWorkerType> TblWorkerTypes { get; set; }
        public virtual DbSet<TblWorkFlowDtl> TblWorkFlowDtls { get; set; }
        public virtual DbSet<TblWorkFlowHdr> TblWorkFlowHdrs { get; set; }
        public virtual DbSet<TblWorkflowTransactionLog> TblWorkflowTransactionLogs { get; set; }
        public virtual DbSet<TblWorkFlowTransaction> TblWorkFlowTransactions { get; set; }
        public virtual DbSet<TblWorkFlowTransactionStep> TblWorkFlowTransactionSteps { get; set; }
        public virtual DbSet<UserDisMap> UserDisMaps { get; set; }
        public virtual DbSet<UserLocationMap> UserLocationMaps { get; set; }
        public virtual DbSet<UserSubDivMap> UserSubDivMaps { get; set; }
        public virtual DbSet<LocationCodeMissingUniqueData> LocationCodeMissingUniqueDatas { get; set; }
        public virtual DbSet<TableCount> TableCounts { get; set; }
        public virtual DbSet<TblBlockDetailsold> TblBlockDetailsolds { get; set; }
        public virtual DbSet<TblCasteMst> TblCasteMsts { get; set; }
        public virtual DbSet<TblDedupeConditionMst> TblDedupeConditionMsts { get; set; }
        public virtual DbSet<TblDuplicateCardsGenerated> TblDuplicateCardsGenerateds { get; set; }
        public virtual DbSet<TblLabel> TblLabels { get; set; }
        public virtual DbSet<TblMaritalMst> TblMaritalMsts { get; set; }
        public virtual DbSet<TblReligionMst> TblReligionMsts { get; set; }
        public virtual DbSet<TblAgentAdditionalData> TblAgentAdditionalDatas { get; set; }
        public virtual DbSet<TblNotiFication> TblNotiFications { get; set; }
        public virtual DbSet<TblBenPFInterestRegister> TblBenPFInterestRegisters { get; set; }
        public virtual DbSet<TblBlockDetail> TblBlockDetails { get; set; }
        public virtual DbSet<TblEducationDtl> TblEducationDtls { get; set; }
        public virtual DbSet<BenJunkData2> BenJunkData2 { get; set; }
        public virtual DbSet<TblBeneficiary> TblBeneficiaries { get; set; }
        public virtual DbSet<Pftable> Pftables { get; set; }
        public virtual DbSet<TblBenAddressIssue> TblBenAddressIssues { get; set; }
        public virtual DbSet<TblBenAddressIssues2> TblBenAddressIssues2 { get; set; }
        public virtual DbSet<TblBeneficiaryPFAccount> TblBeneficiaryPFAccounts { get; set; }
        public virtual DbSet<TblPFDepositDtl> TblPFDepositDtls { get; set; }
        public virtual DbSet<TblPFDepositMaster> TblPFDepositMasters { get; set; }
        public virtual DbSet<TblBenJUnkAddress> TblBenJUnkAddresses { get; set; }
        public virtual DbSet<tbl_SiteSettings> tbl_SiteSettings { get; set; }
    
        [DbFunction("SSYEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[SSYEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual int AlertDedupeByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlertDedupeByDate");
        }
    
        public virtual int BenForgotPassword(Nullable<int> benId, string benUserKey, string benUserPwd)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(int));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BenForgotPassword", benIdParameter, benUserKeyParameter, benUserPwdParameter);
        }
    
        public virtual int Daywiseregistrationcount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Daywiseregistrationcount");
        }
    
        public virtual int DeptForgotPassword(Nullable<int> userid, string userPwd, string saltKey)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userPwdParameter = userPwd != null ?
                new ObjectParameter("UserPwd", userPwd) :
                new ObjectParameter("UserPwd", typeof(string));
    
            var saltKeyParameter = saltKey != null ?
                new ObjectParameter("SaltKey", saltKey) :
                new ObjectParameter("SaltKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeptForgotPassword", useridParameter, userPwdParameter, saltKeyParameter);
        }
    
        public virtual ObjectResult<DistrictWiseSchemeWiseSSIN_Result> DistrictWiseSchemeWiseSSIN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistrictWiseSchemeWiseSSIN_Result>("DistrictWiseSchemeWiseSSIN");
        }
    
        public virtual ObjectResult<DistWiseSchemWise_Result> DistWiseSchemWise(string distCodes, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string schemes, string distNames)
        {
            var distCodesParameter = distCodes != null ?
                new ObjectParameter("DistCodes", distCodes) :
                new ObjectParameter("DistCodes", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemesParameter = schemes != null ?
                new ObjectParameter("schemes", schemes) :
                new ObjectParameter("schemes", typeof(string));
    
            var distNamesParameter = distNames != null ?
                new ObjectParameter("DistNames", distNames) :
                new ObjectParameter("DistNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistWiseSchemWise_Result>("DistWiseSchemWise", distCodesParameter, fromdateParameter, todateParameter, schemesParameter, distNamesParameter);
        }
    
        public virtual ObjectResult<DistWiseSchemWisebkp_Result> DistWiseSchemWisebkp(string distCodes, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string schemes, string distNames)
        {
            var distCodesParameter = distCodes != null ?
                new ObjectParameter("DistCodes", distCodes) :
                new ObjectParameter("DistCodes", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemesParameter = schemes != null ?
                new ObjectParameter("schemes", schemes) :
                new ObjectParameter("schemes", typeof(string));
    
            var distNamesParameter = distNames != null ?
                new ObjectParameter("DistNames", distNames) :
                new ObjectParameter("DistNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistWiseSchemWisebkp_Result>("DistWiseSchemWisebkp", distCodesParameter, fromdateParameter, todateParameter, schemesParameter, distNamesParameter);
        }
    
        public virtual ObjectResult<DistWiseSubDivwiseBlockWise_Result> DistWiseSubDivwiseBlockWise(string locCodes, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string schemes, string distNames, string subDivName, string locNames)
        {
            var locCodesParameter = locCodes != null ?
                new ObjectParameter("LocCodes", locCodes) :
                new ObjectParameter("LocCodes", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemesParameter = schemes != null ?
                new ObjectParameter("schemes", schemes) :
                new ObjectParameter("schemes", typeof(string));
    
            var distNamesParameter = distNames != null ?
                new ObjectParameter("DistNames", distNames) :
                new ObjectParameter("DistNames", typeof(string));
    
            var subDivNameParameter = subDivName != null ?
                new ObjectParameter("SubDivName", subDivName) :
                new ObjectParameter("SubDivName", typeof(string));
    
            var locNamesParameter = locNames != null ?
                new ObjectParameter("LocNames", locNames) :
                new ObjectParameter("LocNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistWiseSubDivwiseBlockWise_Result>("DistWiseSubDivwiseBlockWise", locCodesParameter, fromdateParameter, todateParameter, schemesParameter, distNamesParameter, subDivNameParameter, locNamesParameter);
        }
    
        public virtual ObjectResult<DistWiseSubDivwiseBlockWisebak_Result> DistWiseSubDivwiseBlockWisebak(string locCodes, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string schemes, string distNames, string subDivName, string locNames)
        {
            var locCodesParameter = locCodes != null ?
                new ObjectParameter("LocCodes", locCodes) :
                new ObjectParameter("LocCodes", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemesParameter = schemes != null ?
                new ObjectParameter("schemes", schemes) :
                new ObjectParameter("schemes", typeof(string));
    
            var distNamesParameter = distNames != null ?
                new ObjectParameter("DistNames", distNames) :
                new ObjectParameter("DistNames", typeof(string));
    
            var subDivNameParameter = subDivName != null ?
                new ObjectParameter("SubDivName", subDivName) :
                new ObjectParameter("SubDivName", typeof(string));
    
            var locNamesParameter = locNames != null ?
                new ObjectParameter("LocNames", locNames) :
                new ObjectParameter("LocNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistWiseSubDivwiseBlockWisebak_Result>("DistWiseSubDivwiseBlockWisebak", locCodesParameter, fromdateParameter, todateParameter, schemesParameter, distNamesParameter, subDivNameParameter, locNamesParameter);
        }
    
        public virtual ObjectResult<Get_BenRevivedDetails_Result> Get_BenRevivedDetails(Nullable<long> benId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_BenRevivedDetails_Result>("Get_BenRevivedDetails", benIdParameter);
        }
    
        public virtual ObjectResult<Get_LoginCounts_Result> Get_LoginCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_LoginCounts_Result>("Get_LoginCounts");
        }
    
        public virtual ObjectResult<GetBenFamilyMemberDet_Result> GetBenFamilyMemberDet(Nullable<long> benId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBenFamilyMemberDet_Result>("GetBenFamilyMemberDet", benIdParameter);
        }
    
        public virtual ObjectResult<GetBenNomineeDtlsDet_Result> GetBenNomineeDtlsDet(Nullable<long> benId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBenNomineeDtlsDet_Result>("GetBenNomineeDtlsDet", benIdParameter);
        }
    
        public virtual ObjectResult<GetBenNomineeDtlsDetForCertificate_Result> GetBenNomineeDtlsDetForCertificate(Nullable<long> benId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBenNomineeDtlsDetForCertificate_Result>("GetBenNomineeDtlsDetForCertificate", benIdParameter);
        }
    
        public virtual ObjectResult<GetDeleteDependentDet_Result> GetDeleteDependentDet(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeleteDependentDet_Result>("GetDeleteDependentDet", idParameter);
        }
    
        public virtual ObjectResult<GetDeleteNomineeDet_Result> GetDeleteNomineeDet(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeleteNomineeDet_Result>("GetDeleteNomineeDet", idParameter);
        }
    
        public virtual ObjectResult<GetDeleteRequests_Result> GetDeleteRequests(Nullable<int> userId, Nullable<int> status)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeleteRequests_Result>("GetDeleteRequests", userIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<GetFamilyTempDet_Result> GetFamilyTempDet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFamilyTempDet_Result>("GetFamilyTempDet", idParameter);
        }
    
        public virtual ObjectResult<string> GetSubGroups(string gRPNO)
        {
            var gRPNOParameter = gRPNO != null ?
                new ObjectParameter("GRPNO", gRPNO) :
                new ObjectParameter("GRPNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSubGroups", gRPNOParameter);
        }
    
        public virtual int LocationWiseAbstract(Nullable<int> subDivisionId)
        {
            var subDivisionIdParameter = subDivisionId.HasValue ?
                new ObjectParameter("SubDivisionId", subDivisionId) :
                new ObjectParameter("SubDivisionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LocationWiseAbstract", subDivisionIdParameter);
        }
    
        public virtual ObjectResult<Report_BeneficiaryApplicationDistrictWiseStaus_Result> Report_BeneficiaryApplicationDistrictWiseStaus(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_BeneficiaryApplicationDistrictWiseStaus_Result>("Report_BeneficiaryApplicationDistrictWiseStaus", districtIdParameter);
        }
    
        public virtual ObjectResult<Report_BeneficiaryApplicationStaus_Result> Report_BeneficiaryApplicationStaus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_BeneficiaryApplicationStaus_Result>("Report_BeneficiaryApplicationStaus");
        }
    
        public virtual ObjectResult<SaveBenfiRegistration_Result> SaveBenfiRegistration(string benData, Nullable<int> createdby, string benUserKey, string benUserPwd)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveBenfiRegistration_Result>("SaveBenfiRegistration", benDataParameter, createdbyParameter, benUserKeyParameter, benUserPwdParameter);
        }
    
        public virtual ObjectResult<SaveBenfiRegistrationPart2_Result> SaveBenfiRegistrationPart2(string benData, string createdby, Nullable<long> bensno)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveBenfiRegistrationPart2_Result>("SaveBenfiRegistrationPart2", benDataParameter, createdbyParameter, bensnoParameter);
        }
    
        public virtual ObjectResult<SaveBenifRegdet_Result> SaveBenifRegdet(string benData, Nullable<int> createdby)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveBenifRegdet_Result>("SaveBenifRegdet", benDataParameter, createdbyParameter);
        }
    
        public virtual int SaveBocw(string schemeData, Nullable<long> createdby, Nullable<long> benid)
        {
            var schemeDataParameter = schemeData != null ?
                new ObjectParameter("SchemeData", schemeData) :
                new ObjectParameter("SchemeData", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(long));
    
            var benidParameter = benid.HasValue ?
                new ObjectParameter("benid", benid) :
                new ObjectParameter("benid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveBocw", schemeDataParameter, createdbyParameter, benidParameter);
        }
    
        public virtual ObjectResult<SaveNomineedepdntTemp_Result> SaveNomineedepdntTemp(string benData, string issueauth, string authorityloc, string authname, Nullable<int> id, Nullable<int> createdBy)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var issueauthParameter = issueauth != null ?
                new ObjectParameter("Issueauth", issueauth) :
                new ObjectParameter("Issueauth", typeof(string));
    
            var authoritylocParameter = authorityloc != null ?
                new ObjectParameter("authorityloc", authorityloc) :
                new ObjectParameter("authorityloc", typeof(string));
    
            var authnameParameter = authname != null ?
                new ObjectParameter("Authname", authname) :
                new ObjectParameter("Authname", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveNomineedepdntTemp_Result>("SaveNomineedepdntTemp", benDataParameter, issueauthParameter, authoritylocParameter, authnameParameter, idParameter, createdByParameter);
        }
    
        public virtual int SaveWBTWSS(Nullable<long> benId, Nullable<int> schemeId, string workerType, string natureOfVehicle, string natureOfDutes, Nullable<System.DateTime> createdDate, Nullable<long> createdBy)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            var schemeIdParameter = schemeId.HasValue ?
                new ObjectParameter("SchemeId", schemeId) :
                new ObjectParameter("SchemeId", typeof(int));
    
            var workerTypeParameter = workerType != null ?
                new ObjectParameter("WorkerType", workerType) :
                new ObjectParameter("WorkerType", typeof(string));
    
            var natureOfVehicleParameter = natureOfVehicle != null ?
                new ObjectParameter("NatureOfVehicle", natureOfVehicle) :
                new ObjectParameter("NatureOfVehicle", typeof(string));
    
            var natureOfDutesParameter = natureOfDutes != null ?
                new ObjectParameter("NatureOfDutes", natureOfDutes) :
                new ObjectParameter("NatureOfDutes", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveWBTWSS", benIdParameter, schemeIdParameter, workerTypeParameter, natureOfVehicleParameter, natureOfDutesParameter, createdDateParameter, createdByParameter);
        }
    
        public virtual ObjectResult<Sp_ActionHistory_Result> Sp_ActionHistory(Nullable<int> userId, Nullable<int> userType)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ActionHistory_Result>("Sp_ActionHistory", userIdParameter, userTypeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Sp_ConvertingRejectedToPending_Result> Sp_ConvertingRejectedToPending(Nullable<int> userId, Nullable<long> benId, string remarks)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ConvertingRejectedToPending_Result>("Sp_ConvertingRejectedToPending", userIdParameter, benIdParameter, remarksParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Sp_DeeDoopActionHistory_Result> Sp_DeeDoopActionHistory(Nullable<int> id, Nullable<int> userId, Nullable<int> userType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DeeDoopActionHistory_Result>("Sp_DeeDoopActionHistory", idParameter, userIdParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<Sp_Deptuserdetails_Result> Sp_Deptuserdetails(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Deptuserdetails_Result>("Sp_Deptuserdetails", useridParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int Sp_GetDistrictWiseSummaryCount(string districtId, string indType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var districtIdParameter = districtId != null ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(string));
    
            var indTypeParameter = indType != null ?
                new ObjectParameter("IndType", indType) :
                new ObjectParameter("IndType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetDistrictWiseSummaryCount", districtIdParameter, indTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Sp_GetFile_Result> Sp_GetFile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetFile_Result>("Sp_GetFile");
        }
    
        public virtual ObjectResult<Sp_GetLocationsByDistrictId_Result> Sp_GetLocationsByDistrictId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetLocationsByDistrictId_Result>("Sp_GetLocationsByDistrictId", idParameter);
        }
    
        public virtual int Sp_GetLocationWiseProfessionCount(string locationID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetLocationWiseProfessionCount", locationIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Sp_GetLocationWiseProfessionCount_New_Result> Sp_GetLocationWiseProfessionCount_New(string locationID, string indType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var indTypeParameter = indType != null ?
                new ObjectParameter("IndType", indType) :
                new ObjectParameter("IndType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetLocationWiseProfessionCount_New_Result>("Sp_GetLocationWiseProfessionCount_New", locationIDParameter, indTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Sp_GetLocationWiseProfessionCount_Testing_Result> Sp_GetLocationWiseProfessionCount_Testing(string locationID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetLocationWiseProfessionCount_Testing_Result>("Sp_GetLocationWiseProfessionCount_Testing", locationIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_GetSchemeDetails_Result> sp_GetSchemeDetails(Nullable<long> benId, Nullable<int> schemeId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            var schemeIdParameter = schemeId.HasValue ?
                new ObjectParameter("SchemeId", schemeId) :
                new ObjectParameter("SchemeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSchemeDetails_Result>("sp_GetSchemeDetails", benIdParameter, schemeIdParameter);
        }
    
        public virtual ObjectResult<sp_GetSchemeDetailsSummery_Result> sp_GetSchemeDetailsSummery(Nullable<int> userType, Nullable<int> userId, Nullable<int> status, Nullable<int> schemeId)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var schemeIdParameter = schemeId.HasValue ?
                new ObjectParameter("SchemeId", schemeId) :
                new ObjectParameter("SchemeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSchemeDetailsSummery_Result>("sp_GetSchemeDetailsSummery", userTypeParameter, userIdParameter, statusParameter, schemeIdParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<Sp_RLOwiseLegacy1and2Count_Result> Sp_RLOwiseLegacy1and2Count(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_RLOwiseLegacy1and2Count_Result>("Sp_RLOwiseLegacy1and2Count", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Sp_RLOwiseRegCount_Result> Sp_RLOwiseRegCount(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string subdivi)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var subdiviParameter = subdivi != null ?
                new ObjectParameter("Subdivi", subdivi) :
                new ObjectParameter("Subdivi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_RLOwiseRegCount_Result>("Sp_RLOwiseRegCount", fromDateParameter, toDateParameter, subdiviParameter);
        }
    
        public virtual int Sp_SaveActionistory(Nullable<int> userId, Nullable<int> benId, string reason, string type, Nullable<int> schemId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var schemIdParameter = schemId.HasValue ?
                new ObjectParameter("SchemId", schemId) :
                new ObjectParameter("SchemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SaveActionistory", userIdParameter, benIdParameter, reasonParameter, typeParameter, schemIdParameter);
        }
    
        public virtual ObjectResult<Sp_SaveBankBranch_Result> Sp_SaveBankBranch(Nullable<int> bankCenterSno, string bankBranchName, string bankIfscCode, string bankAddress)
        {
            var bankCenterSnoParameter = bankCenterSno.HasValue ?
                new ObjectParameter("BankCenterSno", bankCenterSno) :
                new ObjectParameter("BankCenterSno", typeof(int));
    
            var bankBranchNameParameter = bankBranchName != null ?
                new ObjectParameter("BankBranchName", bankBranchName) :
                new ObjectParameter("BankBranchName", typeof(string));
    
            var bankIfscCodeParameter = bankIfscCode != null ?
                new ObjectParameter("BankIfscCode", bankIfscCode) :
                new ObjectParameter("BankIfscCode", typeof(string));
    
            var bankAddressParameter = bankAddress != null ?
                new ObjectParameter("BankAddress", bankAddress) :
                new ObjectParameter("BankAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SaveBankBranch_Result>("Sp_SaveBankBranch", bankCenterSnoParameter, bankBranchNameParameter, bankIfscCodeParameter, bankAddressParameter);
        }
    
        public virtual ObjectResult<Sp_SaveBankCenter_Result> Sp_SaveBankCenter(Nullable<int> districtId, Nullable<int> bankSno, string bankCenter)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var bankSnoParameter = bankSno.HasValue ?
                new ObjectParameter("BankSno", bankSno) :
                new ObjectParameter("BankSno", typeof(int));
    
            var bankCenterParameter = bankCenter != null ?
                new ObjectParameter("BankCenter", bankCenter) :
                new ObjectParameter("BankCenter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SaveBankCenter_Result>("Sp_SaveBankCenter", districtIdParameter, bankSnoParameter, bankCenterParameter);
        }
    
        public virtual ObjectResult<Sp_SaveBankName_Result> Sp_SaveBankName(string bankName)
        {
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SaveBankName_Result>("Sp_SaveBankName", bankNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SSINGenerateCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SSINGenerateCount");
        }
    
        public virtual int Sp_UpdateRegTempdet(Nullable<long> benSno, string benProvisionType, string benProvisionNo, string benEmpType, string benSelfEmployed, string benEstablishedAddress, string benMonthlyIncom, string benEsiNumber, string benOccupation, Nullable<int> pfstatus, Nullable<int> modifiedBy)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var benProvisionTypeParameter = benProvisionType != null ?
                new ObjectParameter("BenProvisionType", benProvisionType) :
                new ObjectParameter("BenProvisionType", typeof(string));
    
            var benProvisionNoParameter = benProvisionNo != null ?
                new ObjectParameter("BenProvisionNo", benProvisionNo) :
                new ObjectParameter("BenProvisionNo", typeof(string));
    
            var benEmpTypeParameter = benEmpType != null ?
                new ObjectParameter("BenEmpType", benEmpType) :
                new ObjectParameter("BenEmpType", typeof(string));
    
            var benSelfEmployedParameter = benSelfEmployed != null ?
                new ObjectParameter("BenSelfEmployed", benSelfEmployed) :
                new ObjectParameter("BenSelfEmployed", typeof(string));
    
            var benEstablishedAddressParameter = benEstablishedAddress != null ?
                new ObjectParameter("BenEstablishedAddress", benEstablishedAddress) :
                new ObjectParameter("BenEstablishedAddress", typeof(string));
    
            var benMonthlyIncomParameter = benMonthlyIncom != null ?
                new ObjectParameter("BenMonthlyIncom", benMonthlyIncom) :
                new ObjectParameter("BenMonthlyIncom", typeof(string));
    
            var benEsiNumberParameter = benEsiNumber != null ?
                new ObjectParameter("BenEsiNumber", benEsiNumber) :
                new ObjectParameter("BenEsiNumber", typeof(string));
    
            var benOccupationParameter = benOccupation != null ?
                new ObjectParameter("BenOccupation", benOccupation) :
                new ObjectParameter("BenOccupation", typeof(string));
    
            var pfstatusParameter = pfstatus.HasValue ?
                new ObjectParameter("pfstatus", pfstatus) :
                new ObjectParameter("pfstatus", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateRegTempdet", benSnoParameter, benProvisionTypeParameter, benProvisionNoParameter, benEmpTypeParameter, benSelfEmployedParameter, benEstablishedAddressParameter, benMonthlyIncomParameter, benEsiNumberParameter, benOccupationParameter, pfstatusParameter, modifiedByParameter);
        }
    
        public virtual int Sp_UpdateSchemeStatus(Nullable<int> schemeBenId, Nullable<int> schemeStatus, string schemeRemarks)
        {
            var schemeBenIdParameter = schemeBenId.HasValue ?
                new ObjectParameter("SchemeBenId", schemeBenId) :
                new ObjectParameter("SchemeBenId", typeof(int));
    
            var schemeStatusParameter = schemeStatus.HasValue ?
                new ObjectParameter("SchemeStatus", schemeStatus) :
                new ObjectParameter("SchemeStatus", typeof(int));
    
            var schemeRemarksParameter = schemeRemarks != null ?
                new ObjectParameter("SchemeRemarks", schemeRemarks) :
                new ObjectParameter("SchemeRemarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateSchemeStatus", schemeBenIdParameter, schemeStatusParameter, schemeRemarksParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SpAgentAdditionalData_Result> SpAgentAdditionalData(Nullable<int> userId, string gender, string address, string pincode, Nullable<System.DateTime> dob, string bankName, string branchName, string accountNumber, string ifscCode, string aadharNumber, string aadharFile, string panNumber, string panFile, string bankDDFile, string marital, string relName, string photo, string signature, string mobileNumber)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("Dob", dob) :
                new ObjectParameter("Dob", typeof(System.DateTime));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var ifscCodeParameter = ifscCode != null ?
                new ObjectParameter("IfscCode", ifscCode) :
                new ObjectParameter("IfscCode", typeof(string));
    
            var aadharNumberParameter = aadharNumber != null ?
                new ObjectParameter("AadharNumber", aadharNumber) :
                new ObjectParameter("AadharNumber", typeof(string));
    
            var aadharFileParameter = aadharFile != null ?
                new ObjectParameter("AadharFile", aadharFile) :
                new ObjectParameter("AadharFile", typeof(string));
    
            var panNumberParameter = panNumber != null ?
                new ObjectParameter("PanNumber", panNumber) :
                new ObjectParameter("PanNumber", typeof(string));
    
            var panFileParameter = panFile != null ?
                new ObjectParameter("PanFile", panFile) :
                new ObjectParameter("PanFile", typeof(string));
    
            var bankDDFileParameter = bankDDFile != null ?
                new ObjectParameter("BankDDFile", bankDDFile) :
                new ObjectParameter("BankDDFile", typeof(string));
    
            var maritalParameter = marital != null ?
                new ObjectParameter("Marital", marital) :
                new ObjectParameter("Marital", typeof(string));
    
            var relNameParameter = relName != null ?
                new ObjectParameter("RelName", relName) :
                new ObjectParameter("RelName", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("Signature", signature) :
                new ObjectParameter("Signature", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpAgentAdditionalData_Result>("SpAgentAdditionalData", userIdParameter, genderParameter, addressParameter, pincodeParameter, dobParameter, bankNameParameter, branchNameParameter, accountNumberParameter, ifscCodeParameter, aadharNumberParameter, aadharFileParameter, panNumberParameter, panFileParameter, bankDDFileParameter, maritalParameter, relNameParameter, photoParameter, signatureParameter, mobileNumberParameter);
        }
    
        public virtual ObjectResult<SpAgentApplicationstatus_Result> SpAgentApplicationstatus(Nullable<int> createdBy)
        {
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpAgentApplicationstatus_Result>("SpAgentApplicationstatus", createdByParameter);
        }
    
        public virtual int SpAgentStatusChange(Nullable<int> id, Nullable<int> status, string reason, string aRNnumber)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var aRNnumberParameter = aRNnumber != null ?
                new ObjectParameter("ARNnumber", aRNnumber) :
                new ObjectParameter("ARNnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpAgentStatusChange", idParameter, statusParameter, reasonParameter, aRNnumberParameter);
        }
    
        public virtual ObjectResult<SpAllDistrictWiseSummary_Result> SpAllDistrictWiseSummary(string district, string schemeName)
        {
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var schemeNameParameter = schemeName != null ?
                new ObjectParameter("SchemeName", schemeName) :
                new ObjectParameter("SchemeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpAllDistrictWiseSummary_Result>("SpAllDistrictWiseSummary", districtParameter, schemeNameParameter);
        }
    
        public virtual ObjectResult<SpApplicationsByAgeForMB_Result> SpApplicationsByAgeForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpApplicationsByAgeForMB_Result>("SpApplicationsByAgeForMB");
        }
    
        public virtual ObjectResult<SpApplicationStatus_Result> SpApplicationStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpApplicationStatus_Result>("SpApplicationStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter);
        }
    
        public virtual ObjectResult<SpApplicationStatusByGenderWiseForMB_Result> SpApplicationStatusByGenderWiseForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpApplicationStatusByGenderWiseForMB_Result>("SpApplicationStatusByGenderWiseForMB");
        }
    
        public virtual ObjectResult<SpAppliedMonths_Result> SpAppliedMonths()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpAppliedMonths_Result>("SpAppliedMonths");
        }
    
        public virtual ObjectResult<Nullable<int>> SpAppliedYears()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpAppliedYears");
        }
    
        public virtual int SpAssignRoles(Nullable<int> roleid, Nullable<int> menuId, string accessLevel, Nullable<int> id)
        {
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var accessLevelParameter = accessLevel != null ?
                new ObjectParameter("AccessLevel", accessLevel) :
                new ObjectParameter("AccessLevel", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpAssignRoles", roleidParameter, menuIdParameter, accessLevelParameter, idParameter);
        }
    
        public virtual ObjectResult<SpAverageConcurrentUsersPerDayReport_Result> SpAverageConcurrentUsersPerDayReport(string month, string year)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpAverageConcurrentUsersPerDayReport_Result>("SpAverageConcurrentUsersPerDayReport", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SpBeniDetailedReport_Result> SpBeniDetailedReport(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, string value)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBeniDetailedReport_Result>("SpBeniDetailedReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, valueParameter);
        }
    
        public virtual int SpBenifPassWordChange(string userPwd, string saltKey, Nullable<int> userid, string userCode, Nullable<int> modifiedBy)
        {
            var userPwdParameter = userPwd != null ?
                new ObjectParameter("UserPwd", userPwd) :
                new ObjectParameter("UserPwd", typeof(string));
    
            var saltKeyParameter = saltKey != null ?
                new ObjectParameter("SaltKey", saltKey) :
                new ObjectParameter("SaltKey", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpBenifPassWordChange", userPwdParameter, saltKeyParameter, useridParameter, userCodeParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<SpBeniLegacyDataReport_Result> SpBeniLegacyDataReport(string distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string scheme, string status)
        {
            var distidParameter = distid != null ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(string));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBeniLegacyDataReport_Result>("SpBeniLegacyDataReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, schemeParameter, statusParameter);
        }
    
        public virtual ObjectResult<SpBenTempAddressDet_Result> SpBenTempAddressDet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBenTempAddressDet_Result>("SpBenTempAddressDet", idParameter);
        }
    
        public virtual ObjectResult<SpCheckBeneRegNoOrSSINo_Result> SpCheckBeneRegNoOrSSINo(string regOrSSI, string fatherName, Nullable<System.DateTime> benDob)
        {
            var regOrSSIParameter = regOrSSI != null ?
                new ObjectParameter("RegOrSSI", regOrSSI) :
                new ObjectParameter("RegOrSSI", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var benDobParameter = benDob.HasValue ?
                new ObjectParameter("BenDob", benDob) :
                new ObjectParameter("BenDob", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCheckBeneRegNoOrSSINo_Result>("SpCheckBeneRegNoOrSSINo", regOrSSIParameter, fatherNameParameter, benDobParameter);
        }
    
        public virtual int SpCheckDedupe(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo, string benTempRegNo, string applicantHusbandName)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupe", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter, benTempRegNoParameter, applicantHusbandNameParameter);
        }
    
        public virtual int SpCheckDedupeNew(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, string address, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupeNew", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, addressParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter);
        }
    
        public virtual int SpCheckDedupeProc(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband, Nullable<int> p4EpicCard, Nullable<long> benSno, string fatherFName, string fatherMName, string fatherLName, string husbandFName, string husbandMName, string husbandLName, Nullable<System.DateTime> deDupeStartDate)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            var p4EpicCardParameter = p4EpicCard.HasValue ?
                new ObjectParameter("P4EpicCard", p4EpicCard) :
                new ObjectParameter("P4EpicCard", typeof(int));
    
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var fatherFNameParameter = fatherFName != null ?
                new ObjectParameter("FatherFName", fatherFName) :
                new ObjectParameter("FatherFName", typeof(string));
    
            var fatherMNameParameter = fatherMName != null ?
                new ObjectParameter("FatherMName", fatherMName) :
                new ObjectParameter("FatherMName", typeof(string));
    
            var fatherLNameParameter = fatherLName != null ?
                new ObjectParameter("FatherLName", fatherLName) :
                new ObjectParameter("FatherLName", typeof(string));
    
            var husbandFNameParameter = husbandFName != null ?
                new ObjectParameter("HusbandFName", husbandFName) :
                new ObjectParameter("HusbandFName", typeof(string));
    
            var husbandMNameParameter = husbandMName != null ?
                new ObjectParameter("HusbandMName", husbandMName) :
                new ObjectParameter("HusbandMName", typeof(string));
    
            var husbandLNameParameter = husbandLName != null ?
                new ObjectParameter("HusbandLName", husbandLName) :
                new ObjectParameter("HusbandLName", typeof(string));
    
            var deDupeStartDateParameter = deDupeStartDate.HasValue ?
                new ObjectParameter("DeDupeStartDate", deDupeStartDate) :
                new ObjectParameter("DeDupeStartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupeProc", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter, p4EpicCardParameter, benSnoParameter, fatherFNameParameter, fatherMNameParameter, fatherLNameParameter, husbandFNameParameter, husbandMNameParameter, husbandLNameParameter, deDupeStartDateParameter);
        }
    
        public virtual int SpCheckDedupeProcBkp(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband, Nullable<int> p4EpicCard)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            var p4EpicCardParameter = p4EpicCard.HasValue ?
                new ObjectParameter("P4EpicCard", p4EpicCard) :
                new ObjectParameter("P4EpicCard", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupeProcBkp", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter, p4EpicCardParameter);
        }
    
        public virtual int SpCheckDedupeProcFor2ndPhase(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupeProcFor2ndPhase", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter);
        }
    
        public virtual int SpCheckDedupeProcFor3rdSet(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupeProcFor3rdSet", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter);
        }
    
        public virtual int SpCheckDedupeProcForLegacyCAFUpdate(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband, Nullable<int> p4EpicCard, Nullable<long> benSno, string fatherFName, string fatherMName, string fatherLName, string husbandFName, string husbandMName, string husbandLName, Nullable<System.DateTime> deDupeStartDate)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            var p4EpicCardParameter = p4EpicCard.HasValue ?
                new ObjectParameter("P4EpicCard", p4EpicCard) :
                new ObjectParameter("P4EpicCard", typeof(int));
    
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var fatherFNameParameter = fatherFName != null ?
                new ObjectParameter("FatherFName", fatherFName) :
                new ObjectParameter("FatherFName", typeof(string));
    
            var fatherMNameParameter = fatherMName != null ?
                new ObjectParameter("FatherMName", fatherMName) :
                new ObjectParameter("FatherMName", typeof(string));
    
            var fatherLNameParameter = fatherLName != null ?
                new ObjectParameter("FatherLName", fatherLName) :
                new ObjectParameter("FatherLName", typeof(string));
    
            var husbandFNameParameter = husbandFName != null ?
                new ObjectParameter("HusbandFName", husbandFName) :
                new ObjectParameter("HusbandFName", typeof(string));
    
            var husbandMNameParameter = husbandMName != null ?
                new ObjectParameter("HusbandMName", husbandMName) :
                new ObjectParameter("HusbandMName", typeof(string));
    
            var husbandLNameParameter = husbandLName != null ?
                new ObjectParameter("HusbandLName", husbandLName) :
                new ObjectParameter("HusbandLName", typeof(string));
    
            var deDupeStartDateParameter = deDupeStartDate.HasValue ?
                new ObjectParameter("DeDupeStartDate", deDupeStartDate) :
                new ObjectParameter("DeDupeStartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupeProcForLegacyCAFUpdate", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter, p4EpicCardParameter, benSnoParameter, fatherFNameParameter, fatherMNameParameter, fatherLNameParameter, husbandFNameParameter, husbandMNameParameter, husbandLNameParameter, deDupeStartDateParameter);
        }
    
        public virtual int SpCheckDedupeProcForLegacyCAFUpdateNew(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband, Nullable<int> p4EpicCard, Nullable<long> benSno, string fatherFName, string fatherMName, string fatherLName, string husbandFName, string husbandMName, string husbandLName)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            var p4EpicCardParameter = p4EpicCard.HasValue ?
                new ObjectParameter("P4EpicCard", p4EpicCard) :
                new ObjectParameter("P4EpicCard", typeof(int));
    
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var fatherFNameParameter = fatherFName != null ?
                new ObjectParameter("FatherFName", fatherFName) :
                new ObjectParameter("FatherFName", typeof(string));
    
            var fatherMNameParameter = fatherMName != null ?
                new ObjectParameter("FatherMName", fatherMName) :
                new ObjectParameter("FatherMName", typeof(string));
    
            var fatherLNameParameter = fatherLName != null ?
                new ObjectParameter("FatherLName", fatherLName) :
                new ObjectParameter("FatherLName", typeof(string));
    
            var husbandFNameParameter = husbandFName != null ?
                new ObjectParameter("HusbandFName", husbandFName) :
                new ObjectParameter("HusbandFName", typeof(string));
    
            var husbandMNameParameter = husbandMName != null ?
                new ObjectParameter("HusbandMName", husbandMName) :
                new ObjectParameter("HusbandMName", typeof(string));
    
            var husbandLNameParameter = husbandLName != null ?
                new ObjectParameter("HusbandLName", husbandLName) :
                new ObjectParameter("HusbandLName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCheckDedupeProcForLegacyCAFUpdateNew", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter, p4EpicCardParameter, benSnoParameter, fatherFNameParameter, fatherMNameParameter, fatherLNameParameter, husbandFNameParameter, husbandMNameParameter, husbandLNameParameter);
        }
    
        public virtual ObjectResult<SpCheckDedupeProcForLegacyCAFUpdateTemp_Result> SpCheckDedupeProcForLegacyCAFUpdateTemp(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband, Nullable<int> p4EpicCard, Nullable<long> benSno, string fatherFName, string fatherMName, string fatherLName, string husbandFName, string husbandMName, string husbandLName, Nullable<System.DateTime> deDupeStartDate)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            var p4EpicCardParameter = p4EpicCard.HasValue ?
                new ObjectParameter("P4EpicCard", p4EpicCard) :
                new ObjectParameter("P4EpicCard", typeof(int));
    
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var fatherFNameParameter = fatherFName != null ?
                new ObjectParameter("FatherFName", fatherFName) :
                new ObjectParameter("FatherFName", typeof(string));
    
            var fatherMNameParameter = fatherMName != null ?
                new ObjectParameter("FatherMName", fatherMName) :
                new ObjectParameter("FatherMName", typeof(string));
    
            var fatherLNameParameter = fatherLName != null ?
                new ObjectParameter("FatherLName", fatherLName) :
                new ObjectParameter("FatherLName", typeof(string));
    
            var husbandFNameParameter = husbandFName != null ?
                new ObjectParameter("HusbandFName", husbandFName) :
                new ObjectParameter("HusbandFName", typeof(string));
    
            var husbandMNameParameter = husbandMName != null ?
                new ObjectParameter("HusbandMName", husbandMName) :
                new ObjectParameter("HusbandMName", typeof(string));
    
            var husbandLNameParameter = husbandLName != null ?
                new ObjectParameter("HusbandLName", husbandLName) :
                new ObjectParameter("HusbandLName", typeof(string));
    
            var deDupeStartDateParameter = deDupeStartDate.HasValue ?
                new ObjectParameter("DeDupeStartDate", deDupeStartDate) :
                new ObjectParameter("DeDupeStartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCheckDedupeProcForLegacyCAFUpdateTemp_Result>("SpCheckDedupeProcForLegacyCAFUpdateTemp", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter, p4EpicCardParameter, benSnoParameter, fatherFNameParameter, fatherMNameParameter, fatherLNameParameter, husbandFNameParameter, husbandMNameParameter, husbandLNameParameter, deDupeStartDateParameter);
        }
    
        public virtual ObjectResult<SpCheckDedupeProcForRealTime_Result> SpCheckDedupeProcForRealTime(string applicantName, string applicantFatherName, Nullable<System.DateTime> applicantDOB, Nullable<int> distID, Nullable<int> subDivisionSno, Nullable<int> blockSno, string benMobileNo, string aadharCardNo, string epicCardNo, string bankAccNo, string benTempRegNo, string applicantHusbandName, Nullable<int> p1Father, Nullable<int> p2DOB, Nullable<int> p3Husband, Nullable<int> p4EpicCard, Nullable<long> benSno, string fatherFName, string fatherMName, string fatherLName, string husbandFName, string husbandMName, string husbandLName, Nullable<System.DateTime> deDupeStartDate)
        {
            var applicantNameParameter = applicantName != null ?
                new ObjectParameter("ApplicantName", applicantName) :
                new ObjectParameter("ApplicantName", typeof(string));
    
            var applicantFatherNameParameter = applicantFatherName != null ?
                new ObjectParameter("ApplicantFatherName", applicantFatherName) :
                new ObjectParameter("ApplicantFatherName", typeof(string));
    
            var applicantDOBParameter = applicantDOB.HasValue ?
                new ObjectParameter("ApplicantDOB", applicantDOB) :
                new ObjectParameter("ApplicantDOB", typeof(System.DateTime));
    
            var distIDParameter = distID.HasValue ?
                new ObjectParameter("DistID", distID) :
                new ObjectParameter("DistID", typeof(int));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var epicCardNoParameter = epicCardNo != null ?
                new ObjectParameter("EpicCardNo", epicCardNo) :
                new ObjectParameter("EpicCardNo", typeof(string));
    
            var bankAccNoParameter = bankAccNo != null ?
                new ObjectParameter("BankAccNo", bankAccNo) :
                new ObjectParameter("BankAccNo", typeof(string));
    
            var benTempRegNoParameter = benTempRegNo != null ?
                new ObjectParameter("BenTempRegNo", benTempRegNo) :
                new ObjectParameter("BenTempRegNo", typeof(string));
    
            var applicantHusbandNameParameter = applicantHusbandName != null ?
                new ObjectParameter("ApplicantHusbandName", applicantHusbandName) :
                new ObjectParameter("ApplicantHusbandName", typeof(string));
    
            var p1FatherParameter = p1Father.HasValue ?
                new ObjectParameter("P1Father", p1Father) :
                new ObjectParameter("P1Father", typeof(int));
    
            var p2DOBParameter = p2DOB.HasValue ?
                new ObjectParameter("P2DOB", p2DOB) :
                new ObjectParameter("P2DOB", typeof(int));
    
            var p3HusbandParameter = p3Husband.HasValue ?
                new ObjectParameter("P3Husband", p3Husband) :
                new ObjectParameter("P3Husband", typeof(int));
    
            var p4EpicCardParameter = p4EpicCard.HasValue ?
                new ObjectParameter("P4EpicCard", p4EpicCard) :
                new ObjectParameter("P4EpicCard", typeof(int));
    
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var fatherFNameParameter = fatherFName != null ?
                new ObjectParameter("FatherFName", fatherFName) :
                new ObjectParameter("FatherFName", typeof(string));
    
            var fatherMNameParameter = fatherMName != null ?
                new ObjectParameter("FatherMName", fatherMName) :
                new ObjectParameter("FatherMName", typeof(string));
    
            var fatherLNameParameter = fatherLName != null ?
                new ObjectParameter("FatherLName", fatherLName) :
                new ObjectParameter("FatherLName", typeof(string));
    
            var husbandFNameParameter = husbandFName != null ?
                new ObjectParameter("HusbandFName", husbandFName) :
                new ObjectParameter("HusbandFName", typeof(string));
    
            var husbandMNameParameter = husbandMName != null ?
                new ObjectParameter("HusbandMName", husbandMName) :
                new ObjectParameter("HusbandMName", typeof(string));
    
            var husbandLNameParameter = husbandLName != null ?
                new ObjectParameter("HusbandLName", husbandLName) :
                new ObjectParameter("HusbandLName", typeof(string));
    
            var deDupeStartDateParameter = deDupeStartDate.HasValue ?
                new ObjectParameter("DeDupeStartDate", deDupeStartDate) :
                new ObjectParameter("DeDupeStartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCheckDedupeProcForRealTime_Result>("SpCheckDedupeProcForRealTime", applicantNameParameter, applicantFatherNameParameter, applicantDOBParameter, distIDParameter, subDivisionSnoParameter, blockSnoParameter, benMobileNoParameter, aadharCardNoParameter, epicCardNoParameter, bankAccNoParameter, benTempRegNoParameter, applicantHusbandNameParameter, p1FatherParameter, p2DOBParameter, p3HusbandParameter, p4EpicCardParameter, benSnoParameter, fatherFNameParameter, fatherMNameParameter, fatherLNameParameter, husbandFNameParameter, husbandMNameParameter, husbandLNameParameter, deDupeStartDateParameter);
        }
    
        public virtual ObjectResult<SpCheckMobileWithDob_Result> SpCheckMobileWithDob(string mobileNo, Nullable<System.DateTime> dob)
        {
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("Dob", dob) :
                new ObjectParameter("Dob", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCheckMobileWithDob_Result>("SpCheckMobileWithDob", mobileNoParameter, dobParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpCheckRegNo(string regNo)
        {
            var regNoParameter = regNo != null ?
                new ObjectParameter("RegNo", regNo) :
                new ObjectParameter("RegNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCheckRegNo", regNoParameter);
        }
    
        public virtual ObjectResult<SpCheckSmsCount_Result> SpCheckSmsCount(string mobileNumber, string sms)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var smsParameter = sms != null ?
                new ObjectParameter("Sms", sms) :
                new ObjectParameter("Sms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCheckSmsCount_Result>("SpCheckSmsCount", mobileNumberParameter, smsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpCheckUserStatus(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCheckUserStatus", userIdParameter);
        }
    
        public virtual int SPClearAllSessions(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPClearAllSessions", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpCountLegacyReport(string distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string scheme, string status, Nullable<int> skip, Nullable<int> page, string serchval)
        {
            var distidParameter = distid != null ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(string));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCountLegacyReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, schemeParameter, statusParameter, skipParameter, pageParameter, serchvalParameter);
        }
    
        public virtual ObjectResult<SpCreateGpWard_Result> SpCreateGpWard(Nullable<int> districtId, Nullable<int> subDivisionId, string gPName)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var subDivisionIdParameter = subDivisionId.HasValue ?
                new ObjectParameter("SubDivisionId", subDivisionId) :
                new ObjectParameter("SubDivisionId", typeof(int));
    
            var gPNameParameter = gPName != null ?
                new ObjectParameter("GPName", gPName) :
                new ObjectParameter("GPName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCreateGpWard_Result>("SpCreateGpWard", districtIdParameter, subDivisionIdParameter, gPNameParameter);
        }
    
        public virtual ObjectResult<SpCreatePoliceStation_Result> SpCreatePoliceStation(Nullable<int> districtId, string pName, string pincode)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var pNameParameter = pName != null ?
                new ObjectParameter("PName", pName) :
                new ObjectParameter("PName", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCreatePoliceStation_Result>("SpCreatePoliceStation", districtIdParameter, pNameParameter, pincodeParameter);
        }
    
        public virtual ObjectResult<SpCreatePostOffices_Result> SpCreatePostOffices(Nullable<int> districtId, string pName, string pincode)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var pNameParameter = pName != null ?
                new ObjectParameter("PName", pName) :
                new ObjectParameter("PName", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCreatePostOffices_Result>("SpCreatePostOffices", districtIdParameter, pNameParameter, pincodeParameter);
        }
    
        public virtual ObjectResult<SpDashPaymentStatus_Result> SpDashPaymentStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashPaymentStatus_Result>("SpDashPaymentStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpDatewiseDistrictWiseSummary_Result> SpDatewiseDistrictWiseSummary(string district, string schemeName)
        {
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var schemeNameParameter = schemeName != null ?
                new ObjectParameter("SchemeName", schemeName) :
                new ObjectParameter("SchemeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDatewiseDistrictWiseSummary_Result>("SpDatewiseDistrictWiseSummary", districtParameter, schemeNameParameter);
        }
    
        public virtual ObjectResult<SpDeatiledAbstractReport_Result> SpDeatiledAbstractReport(Nullable<int> blockid, Nullable<int> status)
        {
            var blockidParameter = blockid.HasValue ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDeatiledAbstractReport_Result>("SpDeatiledAbstractReport", blockidParameter, statusParameter);
        }
    
        public virtual int SpDedupeOffline()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOffline");
        }
    
        public virtual int SpDedupeOffline1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOffline1");
        }
    
        public virtual int SpDedupeOffline2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOffline2");
        }
    
        public virtual int SpDedupeOffline3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOffline3");
        }
    
        public virtual int SpDedupeOffline4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOffline4");
        }
    
        public virtual int SpDedupeOfflineFor2ndPhase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineFor2ndPhase");
        }
    
        public virtual int SpDedupeOfflineFor2ndPhase1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineFor2ndPhase1");
        }
    
        public virtual int SpDedupeOfflineFor2ndPhase2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineFor2ndPhase2");
        }
    
        public virtual int SpDedupeOfflineFor2ndPhase3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineFor2ndPhase3");
        }
    
        public virtual int SpDedupeOfflineFor3rdSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineFor3rdSet");
        }
    
        public virtual int SpDedupeOfflineFor3rdSet1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineFor3rdSet1");
        }
    
        public virtual int SpDedupeOfflineForLegacyCAFUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineForLegacyCAFUpdate");
        }
    
        public virtual int SpDedupeOfflineForLegacyCAFUpdate1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineForLegacyCAFUpdate1");
        }
    
        public virtual int SpDedupeOfflineForLegacyCAFUpdate2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineForLegacyCAFUpdate2");
        }
    
        public virtual int SpDedupeOfflineForLegacyCAFUpdate3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineForLegacyCAFUpdate3");
        }
    
        public virtual int SpDedupeOfflineForLegacyCAFUpdateTemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineForLegacyCAFUpdateTemp");
        }
    
        public virtual ObjectResult<SpDedupeOfflineForLegacyCAFUpdateTemp2_Result> SpDedupeOfflineForLegacyCAFUpdateTemp2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDedupeOfflineForLegacyCAFUpdateTemp2_Result>("SpDedupeOfflineForLegacyCAFUpdateTemp2");
        }
    
        public virtual int SpDedupeOfflineProcess2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineProcess2");
        }
    
        public virtual int SpDedupeOfflineTemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDedupeOfflineTemp");
        }
    
        public virtual ObjectResult<SpDedupSuspectCards_Result> SpDedupSuspectCards(string locCodes, string distNames, string subDivNames, string locaNames)
        {
            var locCodesParameter = locCodes != null ?
                new ObjectParameter("LocCodes", locCodes) :
                new ObjectParameter("LocCodes", typeof(string));
    
            var distNamesParameter = distNames != null ?
                new ObjectParameter("DistNames", distNames) :
                new ObjectParameter("DistNames", typeof(string));
    
            var subDivNamesParameter = subDivNames != null ?
                new ObjectParameter("SubDivNames", subDivNames) :
                new ObjectParameter("SubDivNames", typeof(string));
    
            var locaNamesParameter = locaNames != null ?
                new ObjectParameter("LocaNames", locaNames) :
                new ObjectParameter("LocaNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDedupSuspectCards_Result>("SpDedupSuspectCards", locCodesParameter, distNamesParameter, subDivNamesParameter, locaNamesParameter);
        }
    
        public virtual int SpDeleteBenTempDet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDeleteBenTempDet", idParameter);
        }
    
        public virtual ObjectResult<SpDeleteDependent_Result> SpDeleteDependent(Nullable<long> id, Nullable<long> bensno, string remarks, Nullable<int> type, Nullable<long> deltedBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var deltedByParameter = deltedBy.HasValue ?
                new ObjectParameter("DeltedBy", deltedBy) :
                new ObjectParameter("DeltedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDeleteDependent_Result>("SpDeleteDependent", idParameter, bensnoParameter, remarksParameter, typeParameter, deltedByParameter);
        }
    
        public virtual ObjectResult<SpDeleteNominee_Result> SpDeleteNominee(Nullable<long> id, Nullable<long> bensno, string remarks, Nullable<int> type, Nullable<long> deletedBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var deletedByParameter = deletedBy.HasValue ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDeleteNominee_Result>("SpDeleteNominee", idParameter, bensnoParameter, remarksParameter, typeParameter, deletedByParameter);
        }
    
        public virtual int SpDeleteNotify(Nullable<int> id, Nullable<int> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDeleteNotify", idParameter, statusParameter);
        }
    
        public virtual int SpDeptPassWordChange(string userPwd, string saltKey, Nullable<int> userid, string userCode, Nullable<int> modifiedBy)
        {
            var userPwdParameter = userPwd != null ?
                new ObjectParameter("UserPwd", userPwd) :
                new ObjectParameter("UserPwd", typeof(string));
    
            var saltKeyParameter = saltKey != null ?
                new ObjectParameter("SaltKey", saltKey) :
                new ObjectParameter("SaltKey", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDeptPassWordChange", userPwdParameter, saltKeyParameter, useridParameter, userCodeParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<SpDetailBeniReport_Result> SpDetailBeniReport(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, string value, string fillType)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetailBeniReport_Result>("SpDetailBeniReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, valueParameter, fillTypeParameter);
        }
    
        public virtual ObjectResult<SpDetailedReport_Result> SpDetailedReport(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetailedReport_Result>("SpDetailedReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> SpDetailedReportCount(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("SpDetailedReportCount", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter);
        }
    
        public virtual int SpDetaileReportDownlaod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDetaileReportDownlaod");
        }
    
        public virtual int SpDetaileReportDownlaod1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDetaileReportDownlaod1");
        }
    
        public virtual int SpDetaileReportDownlaod2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDetaileReportDownlaod2");
        }
    
        public virtual ObjectResult<SPDistrictsData_Result> SPDistrictsData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPDistrictsData_Result>("SPDistrictsData");
        }
    
        public virtual int SpDistrictWiseAbstract(string usertype, Nullable<int> deptuserid)
        {
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var deptuseridParameter = deptuserid.HasValue ?
                new ObjectParameter("deptuserid", deptuserid) :
                new ObjectParameter("deptuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDistrictWiseAbstract", usertypeParameter, deptuseridParameter);
        }
    
        public virtual ObjectResult<SpDistrictWiseAbstractReportForMB_Result> SpDistrictWiseAbstractReportForMB(string usertype, Nullable<int> deptuserid)
        {
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var deptuseridParameter = deptuserid.HasValue ?
                new ObjectParameter("deptuserid", deptuserid) :
                new ObjectParameter("deptuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDistrictWiseAbstractReportForMB_Result>("SpDistrictWiseAbstractReportForMB", usertypeParameter, deptuseridParameter);
        }
    
        public virtual ObjectResult<SpDistrictWiseSummary_Result> SpDistrictWiseSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDistrictWiseSummary_Result>("SpDistrictWiseSummary");
        }
    
        public virtual ObjectResult<SpDownloadDetailedReport_Result> SpDownloadDetailedReport(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDownloadDetailedReport_Result>("SpDownloadDetailedReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter);
        }
    
        public virtual ObjectResult<SpDownloadLegacyOfflineReport_Result> SpDownloadLegacyOfflineReport(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDownloadLegacyOfflineReport_Result>("SpDownloadLegacyOfflineReport", requestIdParameter);
        }
    
        public virtual ObjectResult<SpDownloadRegReportOffline_Result> SpDownloadRegReportOffline(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDownloadRegReportOffline_Result>("SpDownloadRegReportOffline", requestIdParameter);
        }
    
        public virtual ObjectResult<SpDuplicateApplicationsByAadhaarNo_Result> SpDuplicateApplicationsByAadhaarNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDuplicateApplicationsByAadhaarNo_Result>("SpDuplicateApplicationsByAadhaarNo");
        }
    
        public virtual ObjectResult<SpDuplicateApplicationsByAadhaarNoAndLocation_Result> SpDuplicateApplicationsByAadhaarNoAndLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDuplicateApplicationsByAadhaarNoAndLocation_Result>("SpDuplicateApplicationsByAadhaarNoAndLocation");
        }
    
        public virtual ObjectResult<SpDuplicateApplicationsByEpic_Result> SpDuplicateApplicationsByEpic()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDuplicateApplicationsByEpic_Result>("SpDuplicateApplicationsByEpic");
        }
    
        public virtual ObjectResult<SpDuplicateApplicationsByEpicNoAndLocation_Result> SpDuplicateApplicationsByEpicNoAndLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDuplicateApplicationsByEpicNoAndLocation_Result>("SpDuplicateApplicationsByEpicNoAndLocation");
        }
    
        public virtual ObjectResult<SpGenerateSSINo_Result> SpGenerateSSINo(Nullable<int> subDivisionSno, Nullable<int> blockSno, string source)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGenerateSSINo_Result>("SpGenerateSSINo", subDivisionSnoParameter, blockSnoParameter, sourceParameter);
        }
    
        public virtual ObjectResult<SpGenerateSSINoWithBeneSno_Result> SpGenerateSSINoWithBeneSno(Nullable<int> subDivisionSno, Nullable<int> blockSno, string source, Nullable<long> beneSno)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var beneSnoParameter = beneSno.HasValue ?
                new ObjectParameter("BeneSno", beneSno) :
                new ObjectParameter("BeneSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGenerateSSINoWithBeneSno_Result>("SpGenerateSSINoWithBeneSno", subDivisionSnoParameter, blockSnoParameter, sourceParameter, beneSnoParameter);
        }
    
        public virtual ObjectResult<SpGenerateTempSSINo_Result> SpGenerateTempSSINo(Nullable<int> subDivisionSno, Nullable<int> blockSno, string source)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGenerateTempSSINo_Result>("SpGenerateTempSSINo", subDivisionSnoParameter, blockSnoParameter, sourceParameter);
        }
    
        public virtual ObjectResult<SpGet_AgentDetails_Result> SpGet_AgentDetails(string location, string status)
        {
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGet_AgentDetails_Result>("SpGet_AgentDetails", locationParameter, statusParameter);
        }
    
        public virtual ObjectResult<SpGetAddressDetails_Result> SpGetAddressDetails(Nullable<long> benId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAddressDetails_Result>("SpGetAddressDetails", benIdParameter);
        }
    
        public virtual ObjectResult<SpGetAgentAdditionalData_Result> SpGetAgentAdditionalData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAgentAdditionalData_Result>("SpGetAgentAdditionalData");
        }
    
        public virtual ObjectResult<SpGetAgents_Result> SpGetAgents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAgents_Result>("SpGetAgents");
        }
    
        public virtual ObjectResult<SpGetBankBranch_Result> SpGetBankBranch(Nullable<int> bankCenterSno)
        {
            var bankCenterSnoParameter = bankCenterSno.HasValue ?
                new ObjectParameter("BankCenterSno", bankCenterSno) :
                new ObjectParameter("BankCenterSno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBankBranch_Result>("SpGetBankBranch", bankCenterSnoParameter);
        }
    
        public virtual ObjectResult<SpGetBankCenter_Result> SpGetBankCenter(Nullable<int> bankSno, Nullable<int> districtId)
        {
            var bankSnoParameter = bankSno.HasValue ?
                new ObjectParameter("BankSno", bankSno) :
                new ObjectParameter("BankSno", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBankCenter_Result>("SpGetBankCenter", bankSnoParameter, districtIdParameter);
        }
    
        public virtual ObjectResult<SpGetBankList_Result> SpGetBankList(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBankList_Result>("SpGetBankList", districtIdParameter);
        }
    
        public virtual ObjectResult<SpGetBenFamilyTemp_Result> SpGetBenFamilyTemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenFamilyTemp_Result>("SpGetBenFamilyTemp", idParameter);
        }
    
        public virtual ObjectResult<SpGetBenfDetailsByAadhaar_Result> SpGetBenfDetailsByAadhaar(string iD, string type)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenfDetailsByAadhaar_Result>("SpGetBenfDetailsByAadhaar", iDParameter, typeParameter);
        }
    
        public virtual ObjectResult<SpGetBenfDetailsByUniqueId_Result> SpGetBenfDetailsByUniqueId(string iD, string type)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenfDetailsByUniqueId_Result>("SpGetBenfDetailsByUniqueId", iDParameter, typeParameter);
        }
    
        public virtual ObjectResult<SpGetBeniDocs_Result> SpGetBeniDocs(Nullable<long> benSno)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBeniDocs_Result>("SpGetBeniDocs", benSnoParameter);
        }
    
        public virtual ObjectResult<SpGetBeniRequests_Result> SpGetBeniRequests(Nullable<long> benSNo)
        {
            var benSNoParameter = benSNo.HasValue ?
                new ObjectParameter("BenSNo", benSNo) :
                new ObjectParameter("BenSNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBeniRequests_Result>("SpGetBeniRequests", benSNoParameter);
        }
    
        public virtual ObjectResult<SpGetBenNomineeTemp_Result> SpGetBenNomineeTemp(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenNomineeTemp_Result>("SpGetBenNomineeTemp", iDParameter);
        }
    
        public virtual ObjectResult<SpGetBlockDetail_Result> SpGetBlockDetail(Nullable<int> subDivisionSno, Nullable<int> typeOfData)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var typeOfDataParameter = typeOfData.HasValue ?
                new ObjectParameter("TypeOfData", typeOfData) :
                new ObjectParameter("TypeOfData", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBlockDetail_Result>("SpGetBlockDetail", subDivisionSnoParameter, typeOfDataParameter);
        }
    
        public virtual ObjectResult<SpGetBlockDetail_New_Result> SpGetBlockDetail_New(Nullable<int> subDivisionSno, string typeOfData)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var typeOfDataParameter = typeOfData != null ?
                new ObjectParameter("TypeOfData", typeOfData) :
                new ObjectParameter("TypeOfData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBlockDetail_New_Result>("SpGetBlockDetail_New", subDivisionSnoParameter, typeOfDataParameter);
        }
    
        public virtual ObjectResult<SpGetBlockDetailbySubdivIds_Result> SpGetBlockDetailbySubdivIds(string subDivisionSno)
        {
            var subDivisionSnoParameter = subDivisionSno != null ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBlockDetailbySubdivIds_Result>("SpGetBlockDetailbySubdivIds", subDivisionSnoParameter);
        }
    
        public virtual ObjectResult<SpGetBlockDetailbySubdivRep_Result> SpGetBlockDetailbySubdivRep(Nullable<int> subDivisionSno)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBlockDetailbySubdivRep_Result>("SpGetBlockDetailbySubdivRep", subDivisionSnoParameter);
        }
    
        public virtual ObjectResult<SpGetCaste_Result> SpGetCaste()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetCaste_Result>("SpGetCaste");
        }
    
        public virtual ObjectResult<SPGetContactDet_Result> SPGetContactDet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetContactDet_Result>("SPGetContactDet", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpgetDatediff(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpgetDatediff", useridParameter);
        }
    
        public virtual ObjectResult<SpGetDeddopBenfDetails_Result> SpGetDeddopBenfDetails(Nullable<long> benSno, Nullable<int> matchingId)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var matchingIdParameter = matchingId.HasValue ?
                new ObjectParameter("MatchingId", matchingId) :
                new ObjectParameter("MatchingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDeddopBenfDetails_Result>("SpGetDeddopBenfDetails", benSnoParameter, matchingIdParameter);
        }
    
        public virtual ObjectResult<SpGetDeedoopDet_Result> SpGetDeedoopDet(Nullable<long> benSon)
        {
            var benSonParameter = benSon.HasValue ?
                new ObjectParameter("BenSon", benSon) :
                new ObjectParameter("BenSon", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDeedoopDet_Result>("SpGetDeedoopDet", benSonParameter);
        }
    
        public virtual ObjectResult<SpGetDetailReport_Result> SpGetDetailReport(string requestId, Nullable<int> userId, Nullable<int> skip, Nullable<int> page, string searchValue)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("Skip", skip) :
                new ObjectParameter("Skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDetailReport_Result>("SpGetDetailReport", requestIdParameter, userIdParameter, skipParameter, pageParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<SpGetDetailsbyRegnum_Result> SpGetDetailsbyRegnum(string val)
        {
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDetailsbyRegnum_Result>("SpGetDetailsbyRegnum", valParameter);
        }
    
        public virtual ObjectResult<SpGetDidsSubDivision_Result> SpGetDidsSubDivision(string districtId)
        {
            var districtIdParameter = districtId != null ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDidsSubDivision_Result>("SpGetDidsSubDivision", districtIdParameter);
        }
    
        public virtual int SpGetDistNames(string districtid)
        {
            var districtidParameter = districtid != null ?
                new ObjectParameter("Districtid", districtid) :
                new ObjectParameter("Districtid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGetDistNames", districtidParameter);
        }
    
        public virtual ObjectResult<SpGetDistrict_Result> SpGetDistrict()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDistrict_Result>("SpGetDistrict");
        }
    
        public virtual ObjectResult<SpGetDistrictsSubDivisionsLocations_Result> SpGetDistrictsSubDivisionsLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDistrictsSubDivisionsLocations_Result>("SpGetDistrictsSubDivisionsLocations");
        }
    
        public virtual int SpGetDistSubLocNames(string location)
        {
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGetDistSubLocNames", locationParameter);
        }
    
        public virtual int SpGetDistSubNames(string subdivisionid)
        {
            var subdivisionidParameter = subdivisionid != null ?
                new ObjectParameter("Subdivisionid", subdivisionid) :
                new ObjectParameter("Subdivisionid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGetDistSubNames", subdivisionidParameter);
        }
    
        public virtual ObjectResult<SpGetDraftApplication_Result> SpGetDraftApplication(Nullable<int> createdBy, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDraftApplication_Result>("SpGetDraftApplication", createdByParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<SpGetEdiNomDep_Result> SpGetEdiNomDep(Nullable<int> userId, Nullable<int> status)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEdiNomDep_Result>("SpGetEdiNomDep", userIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<SpGetGP_Result> SpGetGP(Nullable<int> subDivisionId)
        {
            var subDivisionIdParameter = subDivisionId.HasValue ?
                new ObjectParameter("SubDivisionId", subDivisionId) :
                new ObjectParameter("SubDivisionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGP_Result>("SpGetGP", subDivisionIdParameter);
        }
    
        public virtual ObjectResult<SpGetGpMstRoleWise_Result> SpGetGpMstRoleWise(Nullable<int> userId, Nullable<int> role)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGpMstRoleWise_Result>("SpGetGpMstRoleWise", userIdParameter, roleParameter);
        }
    
        public virtual ObjectResult<SpGetGrievancesReport_Result> SpGetGrievancesReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGrievancesReport_Result>("SpGetGrievancesReport");
        }
    
        public virtual ObjectResult<SpGetGroupDuplicateDetails_Result> SpGetGroupDuplicateDetails(string gRPNO, Nullable<int> userId, Nullable<int> userType)
        {
            var gRPNOParameter = gRPNO != null ?
                new ObjectParameter("GRPNO", gRPNO) :
                new ObjectParameter("GRPNO", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGroupDuplicateDetails_Result>("SpGetGroupDuplicateDetails", gRPNOParameter, userIdParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<string> SpGetGroupIDSList(Nullable<int> grpNo)
        {
            var grpNoParameter = grpNo.HasValue ?
                new ObjectParameter("GrpNo", grpNo) :
                new ObjectParameter("GrpNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetGroupIDSList", grpNoParameter);
        }
    
        public virtual ObjectResult<SpGetGroupUniqueDetails_Result> SpGetGroupUniqueDetails(string gRPNO, Nullable<int> userId, Nullable<int> userType)
        {
            var gRPNOParameter = gRPNO != null ?
                new ObjectParameter("GRPNO", gRPNO) :
                new ObjectParameter("GRPNO", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGroupUniqueDetails_Result>("SpGetGroupUniqueDetails", gRPNOParameter, userIdParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<SpGetGroupWiseActions_Result> SpGetGroupWiseActions(Nullable<int> grpNo)
        {
            var grpNoParameter = grpNo.HasValue ?
                new ObjectParameter("GrpNo", grpNo) :
                new ObjectParameter("GrpNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGroupWiseActions_Result>("SpGetGroupWiseActions", grpNoParameter);
        }
    
        public virtual ObjectResult<SpGetGroupWiseSummary_Result> SpGetGroupWiseSummary(Nullable<int> userType, Nullable<int> userID, string regNo, string groupId, Nullable<int> skip, Nullable<int> pageSize)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var regNoParameter = regNo != null ?
                new ObjectParameter("RegNo", regNo) :
                new ObjectParameter("RegNo", typeof(string));
    
            var groupIdParameter = groupId != null ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGroupWiseSummary_Result>("SpGetGroupWiseSummary", userTypeParameter, userIDParameter, regNoParameter, groupIdParameter, skipParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SpGetIssAuthNames_Result> SpGetIssAuthNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetIssAuthNames_Result>("SpGetIssAuthNames");
        }
    
        public virtual ObjectResult<SpGetJobDistrictWiseDetailed_Result> SpGetJobDistrictWiseDetailed(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetJobDistrictWiseDetailed_Result>("SpGetJobDistrictWiseDetailed", requestIdParameter);
        }
    
        public virtual ObjectResult<SpGetJobDistrictWiseDetailedHeader_Result> SpGetJobDistrictWiseDetailedHeader(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetJobDistrictWiseDetailedHeader_Result>("SpGetJobDistrictWiseDetailedHeader", requestIdParameter);
        }
    
        public virtual ObjectResult<SpGetJobDistrictWiseSummary_Result> SpGetJobDistrictWiseSummary(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetJobDistrictWiseSummary_Result>("SpGetJobDistrictWiseSummary", requestIdParameter);
        }
    
        public virtual ObjectResult<SpGetJobDistrictWiseSummaryHeader_Result> SpGetJobDistrictWiseSummaryHeader(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetJobDistrictWiseSummaryHeader_Result>("SpGetJobDistrictWiseSummaryHeader", requestIdParameter);
        }
    
        public virtual ObjectResult<SPgetlabelNames_Result> SPgetlabelNames(Nullable<int> languageId)
        {
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPgetlabelNames_Result>("SPgetlabelNames", languageIdParameter);
        }
    
        public virtual ObjectResult<SpGetListOfInd_Result> SpGetListOfInd(Nullable<int> indType)
        {
            var indTypeParameter = indType.HasValue ?
                new ObjectParameter("IndType", indType) :
                new ObjectParameter("IndType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetListOfInd_Result>("SpGetListOfInd", indTypeParameter);
        }
    
        public virtual ObjectResult<SpGetLocationBySubDiv_Result> SpGetLocationBySubDiv(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetLocationBySubDiv_Result>("SpGetLocationBySubDiv", idParameter);
        }
    
        public virtual ObjectResult<string> SpGetLocationNames(string codes, string names)
        {
            var codesParameter = codes != null ?
                new ObjectParameter("Codes", codes) :
                new ObjectParameter("Codes", typeof(string));
    
            var namesParameter = names != null ?
                new ObjectParameter("Names", names) :
                new ObjectParameter("Names", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetLocationNames", codesParameter, namesParameter);
        }
    
        public virtual ObjectResult<SpGetLocationsList_Result> SpGetLocationsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetLocationsList_Result>("SpGetLocationsList");
        }
    
        public virtual ObjectResult<SpGetMarital_Result> SpGetMarital()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMarital_Result>("SpGetMarital");
        }
    
        public virtual ObjectResult<SpGetMenuList_Result> SpGetMenuList(Nullable<int> roleid)
        {
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMenuList_Result>("SpGetMenuList", roleidParameter);
        }
    
        public virtual ObjectResult<SpGetMenuListByRole_Result> SpGetMenuListByRole(string menuUrl, Nullable<int> roleid)
        {
            var menuUrlParameter = menuUrl != null ?
                new ObjectParameter("MenuUrl", menuUrl) :
                new ObjectParameter("MenuUrl", typeof(string));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMenuListByRole_Result>("SpGetMenuListByRole", menuUrlParameter, roleidParameter);
        }
    
        public virtual ObjectResult<SpGetMultipleDisbyUser_Result> SpGetMultipleDisbyUser(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMultipleDisbyUser_Result>("SpGetMultipleDisbyUser", uidParameter);
        }
    
        public virtual ObjectResult<SpGetMultipleGpWardbyUser_Result> SpGetMultipleGpWardbyUser(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMultipleGpWardbyUser_Result>("SpGetMultipleGpWardbyUser", uidParameter);
        }
    
        public virtual ObjectResult<SpGetMultipleLocabyUser_Result> SpGetMultipleLocabyUser(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMultipleLocabyUser_Result>("SpGetMultipleLocabyUser", uidParameter);
        }
    
        public virtual ObjectResult<SpGetMultipleSubDivbyUser_Result> SpGetMultipleSubDivbyUser(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMultipleSubDivbyUser_Result>("SpGetMultipleSubDivbyUser", uidParameter);
        }
    
        public virtual ObjectResult<SpGetNames_Result> SpGetNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetNames_Result>("SpGetNames");
        }
    
        public virtual ObjectResult<SpGetNomineeTempDetails_Result> SpGetNomineeTempDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetNomineeTempDetails_Result>("SpGetNomineeTempDetails", idParameter);
        }
    
        public virtual ObjectResult<SpGetNotificationList_Result> SpGetNotificationList(Nullable<int> userType)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetNotificationList_Result>("SpGetNotificationList", userTypeParameter);
        }
    
        public virtual ObjectResult<SpGetOfflineReportHeaders_Result> SpGetOfflineReportHeaders(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetOfflineReportHeaders_Result>("SpGetOfflineReportHeaders", requestIdParameter);
        }
    
        public virtual ObjectResult<SpGetPfDetails_Result> SpGetPfDetails(Nullable<int> bensno)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPfDetails_Result>("SpGetPfDetails", bensnoParameter);
        }
    
        public virtual ObjectResult<SpGetPo_Result> SpGetPo(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPo_Result>("SpGetPo", districtIdParameter);
        }
    
        public virtual ObjectResult<SpGetPsDts_Result> SpGetPsDts(Nullable<int> districtid)
        {
            var districtidParameter = districtid.HasValue ?
                new ObjectParameter("Districtid", districtid) :
                new ObjectParameter("Districtid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPsDts_Result>("SpGetPsDts", districtidParameter);
        }
    
        public virtual ObjectResult<SpGetRejectedhistory_Result> SpGetRejectedhistory(Nullable<long> benSno)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetRejectedhistory_Result>("SpGetRejectedhistory", benSnoParameter);
        }
    
        public virtual ObjectResult<SpGetReligion_Result> SpGetReligion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetReligion_Result>("SpGetReligion");
        }
    
        public virtual ObjectResult<SpGetRequiredDocs_Result> SpGetRequiredDocs(Nullable<long> benSno)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetRequiredDocs_Result>("SpGetRequiredDocs", benSnoParameter);
        }
    
        public virtual ObjectResult<SpGetSingleActionHistory_Result> SpGetSingleActionHistory(string groupNo)
        {
            var groupNoParameter = groupNo != null ?
                new ObjectParameter("GroupNo", groupNo) :
                new ObjectParameter("GroupNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSingleActionHistory_Result>("SpGetSingleActionHistory", groupNoParameter);
        }
    
        public virtual int SpGetsitecount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGetsitecount");
        }
    
        public virtual ObjectResult<SpGetSMSFailureStatus_Result> SpGetSMSFailureStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSMSFailureStatus_Result>("SpGetSMSFailureStatus");
        }
    
        public virtual ObjectResult<SpGetSSYStats_Result> SpGetSSYStats(Nullable<int> userType, Nullable<int> userID)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSSYStats_Result>("SpGetSSYStats", userTypeParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SpGetSubDivision_Result> SpGetSubDivision(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSubDivision_Result>("SpGetSubDivision", districtIdParameter);
        }
    
        public virtual ObjectResult<SpGetSubDivisionList_Result> SpGetSubDivisionList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSubDivisionList_Result>("SpGetSubDivisionList");
        }
    
        public virtual ObjectResult<SpGetSubdivisionsByDistrct_Result> SpGetSubdivisionsByDistrct(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSubdivisionsByDistrct_Result>("SpGetSubdivisionsByDistrct", idParameter);
        }
    
        public virtual ObjectResult<SPGetSubGroupDetails_Result> SPGetSubGroupDetails(string gRPNO, string subGroupID)
        {
            var gRPNOParameter = gRPNO != null ?
                new ObjectParameter("GRPNO", gRPNO) :
                new ObjectParameter("GRPNO", typeof(string));
    
            var subGroupIDParameter = subGroupID != null ?
                new ObjectParameter("SubGroupID", subGroupID) :
                new ObjectParameter("SubGroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetSubGroupDetails_Result>("SPGetSubGroupDetails", gRPNOParameter, subGroupIDParameter);
        }
    
        public virtual ObjectResult<SpGetTempBenDet_Result> SpGetTempBenDet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetTempBenDet_Result>("SpGetTempBenDet", idParameter);
        }
    
        public virtual ObjectResult<SpGetToltalBlockDetail_Result> SpGetToltalBlockDetail(Nullable<int> subDivisionSno)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetToltalBlockDetail_Result>("SpGetToltalBlockDetail", subDivisionSnoParameter);
        }
    
        public virtual ObjectResult<SpGettotalNotificationList_Result> SpGettotalNotificationList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGettotalNotificationList_Result>("SpGettotalNotificationList");
        }
    
        public virtual ObjectResult<SpGetUserInfByUserCode_Result> SpGetUserInfByUserCode(string userCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUserInfByUserCode_Result>("SpGetUserInfByUserCode", userCodeParameter);
        }
    
        public virtual ObjectResult<SpGetUserList_Result> SpGetUserList(string roleids, Nullable<int> districtid, string subdivid, string locid)
        {
            var roleidsParameter = roleids != null ?
                new ObjectParameter("Roleids", roleids) :
                new ObjectParameter("Roleids", typeof(string));
    
            var districtidParameter = districtid.HasValue ?
                new ObjectParameter("Districtid", districtid) :
                new ObjectParameter("Districtid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("Subdivid", subdivid) :
                new ObjectParameter("Subdivid", typeof(string));
    
            var locidParameter = locid != null ?
                new ObjectParameter("Locid", locid) :
                new ObjectParameter("Locid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUserList_Result>("SpGetUserList", roleidsParameter, districtidParameter, subdividParameter, locidParameter);
        }
    
        public virtual ObjectResult<SpGetUserTypes_Result> SpGetUserTypes(string reg)
        {
            var regParameter = reg != null ?
                new ObjectParameter("Reg", reg) :
                new ObjectParameter("Reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUserTypes_Result>("SpGetUserTypes", regParameter);
        }
    
        public virtual int SpInsertAction(Nullable<int> grpNo, string action, Nullable<int> noofRec, Nullable<int> selRec, Nullable<int> createdBy)
        {
            var grpNoParameter = grpNo.HasValue ?
                new ObjectParameter("GrpNo", grpNo) :
                new ObjectParameter("GrpNo", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var noofRecParameter = noofRec.HasValue ?
                new ObjectParameter("NoofRec", noofRec) :
                new ObjectParameter("NoofRec", typeof(int));
    
            var selRecParameter = selRec.HasValue ?
                new ObjectParameter("SelRec", selRec) :
                new ObjectParameter("SelRec", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsertAction", grpNoParameter, actionParameter, noofRecParameter, selRecParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SPInsertPfDet_Result> SPInsertPfDet(Nullable<int> bensno, string pfNum, string esiNum, Nullable<int> pfOption)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(int));
    
            var pfNumParameter = pfNum != null ?
                new ObjectParameter("PfNum", pfNum) :
                new ObjectParameter("PfNum", typeof(string));
    
            var esiNumParameter = esiNum != null ?
                new ObjectParameter("EsiNum", esiNum) :
                new ObjectParameter("EsiNum", typeof(string));
    
            var pfOptionParameter = pfOption.HasValue ?
                new ObjectParameter("PfOption", pfOption) :
                new ObjectParameter("PfOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPInsertPfDet_Result>("SPInsertPfDet", bensnoParameter, pfNumParameter, esiNumParameter, pfOptionParameter);
        }
    
        public virtual int SpJobDistrictWiseDet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpJobDistrictWiseDet");
        }
    
        public virtual int SpJobDistrictWiseSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpJobDistrictWiseSummary");
        }
    
        public virtual int SpJobRegReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpJobRegReport");
        }
    
        public virtual ObjectResult<SpLast6MonthsApplicationsForMB_Result> SpLast6MonthsApplicationsForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLast6MonthsApplicationsForMB_Result>("SpLast6MonthsApplicationsForMB");
        }
    
        public virtual ObjectResult<SpLast6MonthsApprovedApplicationsForMB_Result> SpLast6MonthsApprovedApplicationsForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLast6MonthsApprovedApplicationsForMB_Result>("SpLast6MonthsApprovedApplicationsForMB");
        }
    
        public virtual ObjectResult<SpLast6MonthsPendingApplicationsForMB_Result> SpLast6MonthsPendingApplicationsForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLast6MonthsPendingApplicationsForMB_Result>("SpLast6MonthsPendingApplicationsForMB");
        }
    
        public virtual ObjectResult<SpLast6MonthsRejectedApplicationsForMB_Result> SpLast6MonthsRejectedApplicationsForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLast6MonthsRejectedApplicationsForMB_Result>("SpLast6MonthsRejectedApplicationsForMB");
        }
    
        public virtual ObjectResult<SpLast6MonthsSentbackApplicationsForMB_Result> SpLast6MonthsSentbackApplicationsForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLast6MonthsSentbackApplicationsForMB_Result>("SpLast6MonthsSentbackApplicationsForMB");
        }
    
        public virtual ObjectResult<SpLegacyBeniReport_Result> SpLegacyBeniReport(string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string scheme, string status)
        {
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLegacyBeniReport_Result>("SpLegacyBeniReport", blockidParameter, fromdateParameter, todateParameter, schemeParameter, statusParameter);
        }
    
        public virtual ObjectResult<SpLegacyDataReport_Result> SpLegacyDataReport(string distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string scheme, string status, Nullable<int> skip, Nullable<int> page, Nullable<int> userId, string searchValue)
        {
            var distidParameter = distid != null ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(string));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLegacyDataReport_Result>("SpLegacyDataReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, schemeParameter, statusParameter, skipParameter, pageParameter, userIdParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpLegacyDataReportCount(string distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string scheme, string status)
        {
            var distidParameter = distid != null ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(string));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpLegacyDataReportCount", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, schemeParameter, statusParameter);
        }
    
        public virtual int SpLegacyDwnldReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpLegacyDwnldReport");
        }
    
        public virtual int SpLegacyDwnldReport1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpLegacyDwnldReport1");
        }
    
        public virtual int SpLegacyDwnldReport2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpLegacyDwnldReport2");
        }
    
        public virtual ObjectResult<SpLocationWiseAbstractReportForMB_Result> SpLocationWiseAbstractReportForMB(Nullable<int> subDivisionId)
        {
            var subDivisionIdParameter = subDivisionId.HasValue ?
                new ObjectParameter("SubDivisionId", subDivisionId) :
                new ObjectParameter("SubDivisionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLocationWiseAbstractReportForMB_Result>("SpLocationWiseAbstractReportForMB", subDivisionIdParameter);
        }
    
        public virtual int SPLoginDet(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPLoginDet", useridParameter);
        }
    
        public virtual ObjectResult<SpNewApplicationOfConstructionWorkerStatusForMB_Result> SpNewApplicationOfConstructionWorkerStatusForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpNewApplicationOfConstructionWorkerStatusForMB_Result>("SpNewApplicationOfConstructionWorkerStatusForMB");
        }
    
        public virtual ObjectResult<SpNewApplicationOfOthersStatusForMB_Result> SpNewApplicationOfOthersStatusForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpNewApplicationOfOthersStatusForMB_Result>("SpNewApplicationOfOthersStatusForMB");
        }
    
        public virtual ObjectResult<SpNewApplicationOfTransportWorkerStatusForMB_Result> SpNewApplicationOfTransportWorkerStatusForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpNewApplicationOfTransportWorkerStatusForMB_Result>("SpNewApplicationOfTransportWorkerStatusForMB");
        }
    
        public virtual ObjectResult<SpNewApplicationStatus_Result> SpNewApplicationStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpNewApplicationStatus_Result>("SpNewApplicationStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpNewApplicationStatusForMB_Result> SpNewApplicationStatusForMB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpNewApplicationStatusForMB_Result>("SpNewApplicationStatusForMB");
        }
    
        public virtual ObjectResult<SpNewDashApplicationStatus_Result> SpNewDashApplicationStatus(Nullable<int> usertype, Nullable<int> userid, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpNewDashApplicationStatus_Result>("SpNewDashApplicationStatus", usertypeParameter, useridParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpOfflinePart1FillReport_Result> SpOfflinePart1FillReport(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpOfflinePart1FillReport_Result>("SpOfflinePart1FillReport", requestIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpOtherUserRegistration(string firstname, string lastname, Nullable<int> userType, string userPwd, string saltKey, Nullable<int> createdBy, Nullable<int> location, Nullable<int> distId, Nullable<int> subDivId, string designation, string userCode, Nullable<int> changePwd)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userPwdParameter = userPwd != null ?
                new ObjectParameter("UserPwd", userPwd) :
                new ObjectParameter("UserPwd", typeof(string));
    
            var saltKeyParameter = saltKey != null ?
                new ObjectParameter("SaltKey", saltKey) :
                new ObjectParameter("SaltKey", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var distIdParameter = distId.HasValue ?
                new ObjectParameter("DistId", distId) :
                new ObjectParameter("DistId", typeof(int));
    
            var subDivIdParameter = subDivId.HasValue ?
                new ObjectParameter("SubDivId", subDivId) :
                new ObjectParameter("SubDivId", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var changePwdParameter = changePwd.HasValue ?
                new ObjectParameter("ChangePwd", changePwd) :
                new ObjectParameter("ChangePwd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpOtherUserRegistration", firstnameParameter, lastnameParameter, userTypeParameter, userPwdParameter, saltKeyParameter, createdByParameter, locationParameter, distIdParameter, subDivIdParameter, designationParameter, userCodeParameter, changePwdParameter);
        }
    
        public virtual ObjectResult<SpPart1ApplicationCount_Result> SpPart1ApplicationCount(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string location)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPart1ApplicationCount_Result>("SpPart1ApplicationCount", fromdateParameter, todateParameter, locationParameter);
        }
    
        public virtual int SpPart1ApplicationCountOffline()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpPart1ApplicationCountOffline");
        }
    
        public virtual ObjectResult<SpPaymentReciept_Result> SpPaymentReciept(string transid)
        {
            var transidParameter = transid != null ?
                new ObjectParameter("transid", transid) :
                new ObjectParameter("transid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPaymentReciept_Result>("SpPaymentReciept", transidParameter);
        }
    
        public virtual ObjectResult<SpPaymentReport_Result> SpPaymentReport(Nullable<int> createdby, Nullable<int> beniId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var beniIdParameter = beniId.HasValue ?
                new ObjectParameter("beniId", beniId) :
                new ObjectParameter("beniId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPaymentReport_Result>("SpPaymentReport", createdbyParameter, beniIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int SpPendencyByDistrictColumnWise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpPendencyByDistrictColumnWise");
        }
    
        public virtual ObjectResult<SpPendencyByLocation_Result> SpPendencyByLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPendencyByLocation_Result>("SpPendencyByLocation");
        }
    
        public virtual ObjectResult<SpPfDetails_Result> SpPfDetails(Nullable<int> userId, string status, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPfDetails_Result>("SpPfDetails", userIdParameter, statusParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<SpPfDetailsVerify_Result> SpPfDetailsVerify(Nullable<int> id, Nullable<int> status, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPfDetailsVerify_Result>("SpPfDetailsVerify", idParameter, statusParameter, remarksParameter);
        }
    
        public virtual ObjectResult<SpPfOpted_Result> SpPfOpted(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string district)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPfOpted_Result>("SpPfOpted", fromdateParameter, todateParameter, districtParameter);
        }
    
        public virtual ObjectResult<SpProfessionalSummary_Result> SpProfessionalSummary(string locationID, string indType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var indTypeParameter = indType != null ?
                new ObjectParameter("IndType", indType) :
                new ObjectParameter("IndType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpProfessionalSummary_Result>("SpProfessionalSummary", locationIDParameter, indTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpProfessionalSummaryNew_Result> SpProfessionalSummaryNew(string locationID, string indType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var indTypeParameter = indType != null ?
                new ObjectParameter("IndType", indType) :
                new ObjectParameter("IndType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpProfessionalSummaryNew_Result>("SpProfessionalSummaryNew", locationIDParameter, indTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpProfessionalSummaryNew2_Result> SpProfessionalSummaryNew2(string locationID, string indType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string gender)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var indTypeParameter = indType != null ?
                new ObjectParameter("IndType", indType) :
                new ObjectParameter("IndType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpProfessionalSummaryNew2_Result>("SpProfessionalSummaryNew2", locationIDParameter, indTypeParameter, fromDateParameter, toDateParameter, genderParameter);
        }
    
        public virtual ObjectResult<SpProfessionalSummaryNew3_Result> SpProfessionalSummaryNew3(string locationID, string indType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(string));
    
            var indTypeParameter = indType != null ?
                new ObjectParameter("IndType", indType) :
                new ObjectParameter("IndType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpProfessionalSummaryNew3_Result>("SpProfessionalSummaryNew3", locationIDParameter, indTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SpReadNotifications(Nullable<int> notyId, Nullable<int> userId)
        {
            var notyIdParameter = notyId.HasValue ?
                new ObjectParameter("NotyId", notyId) :
                new ObjectParameter("NotyId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpReadNotifications", notyIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SpReapply_Result> SpReapply(string benData, Nullable<long> modifiedBy, string benUserKey, string benUserPwd, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReapply_Result>("SpReapply", benDataParameter, modifiedByParameter, benUserKeyParameter, benUserPwdParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SpRegistrations_Result> SpRegistrations(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpRegistrations_Result>("SpRegistrations", statusParameter);
        }
    
        public virtual ObjectResult<SpRegistrationsByType_Result> SpRegistrationsByType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpRegistrationsByType_Result>("SpRegistrationsByType");
        }
    
        public virtual ObjectResult<SpRegReport_Result> SpRegReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string subdivi)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var subdiviParameter = subdivi != null ?
                new ObjectParameter("Subdivi", subdivi) :
                new ObjectParameter("Subdivi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpRegReport_Result>("SpRegReport", fromDateParameter, toDateParameter, subdiviParameter);
        }
    
        public virtual int SpRoleCreation(string userTypeName, Nullable<int> createdBy)
        {
            var userTypeNameParameter = userTypeName != null ?
                new ObjectParameter("UserTypeName", userTypeName) :
                new ObjectParameter("UserTypeName", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpRoleCreation", userTypeNameParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpSaveBenfiRegistration_Result> SpSaveBenfiRegistration(string benData, Nullable<int> createdby, string benUserKey, string benUserPwd, Nullable<int> subDivisionSno, Nullable<int> blockSno, string source)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            var blockSnoParameter = blockSno.HasValue ?
                new ObjectParameter("BlockSno", blockSno) :
                new ObjectParameter("BlockSno", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSaveBenfiRegistration_Result>("SpSaveBenfiRegistration", benDataParameter, createdbyParameter, benUserKeyParameter, benUserPwdParameter, subDivisionSnoParameter, blockSnoParameter, sourceParameter);
        }
    
        public virtual int SpSaveNoty(Nullable<int> userType, string notification, string path, Nullable<int> createdBy, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> type, Nullable<int> status, Nullable<int> active, Nullable<int> editId)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var notificationParameter = notification != null ?
                new ObjectParameter("Notification", notification) :
                new ObjectParameter("Notification", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var editIdParameter = editId.HasValue ?
                new ObjectParameter("EditId", editId) :
                new ObjectParameter("EditId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSaveNoty", userTypeParameter, notificationParameter, pathParameter, createdByParameter, startDateParameter, endDateParameter, typeParameter, statusParameter, activeParameter, editIdParameter);
        }
    
        public virtual int SpSaveOTP(string mobilenumber, string otp, string email)
        {
            var mobilenumberParameter = mobilenumber != null ?
                new ObjectParameter("Mobilenumber", mobilenumber) :
                new ObjectParameter("Mobilenumber", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("Otp", otp) :
                new ObjectParameter("Otp", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSaveOTP", mobilenumberParameter, otpParameter, emailParameter);
        }
    
        public virtual ObjectResult<SpSaveReamrks_Result> SpSaveReamrks(string reamrks, string mail)
        {
            var reamrksParameter = reamrks != null ?
                new ObjectParameter("Reamrks", reamrks) :
                new ObjectParameter("Reamrks", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSaveReamrks_Result>("SpSaveReamrks", reamrksParameter, mailParameter);
        }
    
        public virtual int SpSaveRequiredDocs(Nullable<long> benSno, Nullable<int> benPhoto, Nullable<int> benSignature, Nullable<int> benPassBook, Nullable<int> benAadhar, Nullable<int> benIdentity, Nullable<int> benForm, Nullable<int> benOtherDoc, Nullable<int> schemeCertificate)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var benPhotoParameter = benPhoto.HasValue ?
                new ObjectParameter("BenPhoto", benPhoto) :
                new ObjectParameter("BenPhoto", typeof(int));
    
            var benSignatureParameter = benSignature.HasValue ?
                new ObjectParameter("BenSignature", benSignature) :
                new ObjectParameter("BenSignature", typeof(int));
    
            var benPassBookParameter = benPassBook.HasValue ?
                new ObjectParameter("BenPassBook", benPassBook) :
                new ObjectParameter("BenPassBook", typeof(int));
    
            var benAadharParameter = benAadhar.HasValue ?
                new ObjectParameter("BenAadhar", benAadhar) :
                new ObjectParameter("BenAadhar", typeof(int));
    
            var benIdentityParameter = benIdentity.HasValue ?
                new ObjectParameter("BenIdentity", benIdentity) :
                new ObjectParameter("BenIdentity", typeof(int));
    
            var benFormParameter = benForm.HasValue ?
                new ObjectParameter("BenForm", benForm) :
                new ObjectParameter("BenForm", typeof(int));
    
            var benOtherDocParameter = benOtherDoc.HasValue ?
                new ObjectParameter("BenOtherDoc", benOtherDoc) :
                new ObjectParameter("BenOtherDoc", typeof(int));
    
            var schemeCertificateParameter = schemeCertificate.HasValue ?
                new ObjectParameter("SchemeCertificate", schemeCertificate) :
                new ObjectParameter("SchemeCertificate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSaveRequiredDocs", benSnoParameter, benPhotoParameter, benSignatureParameter, benPassBookParameter, benAadharParameter, benIdentityParameter, benFormParameter, benOtherDocParameter, schemeCertificateParameter);
        }
    
        public virtual ObjectResult<SpSchemeNewApplicationStatus_Result> SpSchemeNewApplicationStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSchemeNewApplicationStatus_Result>("SpSchemeNewApplicationStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual int SpSchemepayment(string serviceRequestID, string serviceResponseID, string paidBy, string paidTo, Nullable<double> billAmount, string ip_add, string paymentType, Nullable<int> tenure, string scheme)
        {
            var serviceRequestIDParameter = serviceRequestID != null ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(string));
    
            var serviceResponseIDParameter = serviceResponseID != null ?
                new ObjectParameter("ServiceResponseID", serviceResponseID) :
                new ObjectParameter("ServiceResponseID", typeof(string));
    
            var paidByParameter = paidBy != null ?
                new ObjectParameter("PaidBy", paidBy) :
                new ObjectParameter("PaidBy", typeof(string));
    
            var paidToParameter = paidTo != null ?
                new ObjectParameter("PaidTo", paidTo) :
                new ObjectParameter("PaidTo", typeof(string));
    
            var billAmountParameter = billAmount.HasValue ?
                new ObjectParameter("BillAmount", billAmount) :
                new ObjectParameter("BillAmount", typeof(double));
    
            var ip_addParameter = ip_add != null ?
                new ObjectParameter("ip_add", ip_add) :
                new ObjectParameter("ip_add", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var tenureParameter = tenure.HasValue ?
                new ObjectParameter("Tenure", tenure) :
                new ObjectParameter("Tenure", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSchemepayment", serviceRequestIDParameter, serviceResponseIDParameter, paidByParameter, paidToParameter, billAmountParameter, ip_addParameter, paymentTypeParameter, tenureParameter, schemeParameter);
        }
    
        public virtual int SpSchemepaymentlog(string serviceRequestID, string serviceResponseID, string paidBy, string paidTo, Nullable<double> billAmount, string ip_add, string paymentType)
        {
            var serviceRequestIDParameter = serviceRequestID != null ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(string));
    
            var serviceResponseIDParameter = serviceResponseID != null ?
                new ObjectParameter("ServiceResponseID", serviceResponseID) :
                new ObjectParameter("ServiceResponseID", typeof(string));
    
            var paidByParameter = paidBy != null ?
                new ObjectParameter("PaidBy", paidBy) :
                new ObjectParameter("PaidBy", typeof(string));
    
            var paidToParameter = paidTo != null ?
                new ObjectParameter("PaidTo", paidTo) :
                new ObjectParameter("PaidTo", typeof(string));
    
            var billAmountParameter = billAmount.HasValue ?
                new ObjectParameter("BillAmount", billAmount) :
                new ObjectParameter("BillAmount", typeof(double));
    
            var ip_addParameter = ip_add != null ?
                new ObjectParameter("ip_add", ip_add) :
                new ObjectParameter("ip_add", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSchemepaymentlog", serviceRequestIDParameter, serviceResponseIDParameter, paidByParameter, paidToParameter, billAmountParameter, ip_addParameter, paymentTypeParameter);
        }
    
        public virtual int SpSendSMS(Nullable<long> userId, string message, Nullable<int> status, string messageType, string userType, string requestID, string mobileNum)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var messageTypeParameter = messageType != null ?
                new ObjectParameter("MessageType", messageType) :
                new ObjectParameter("MessageType", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var requestIDParameter = requestID != null ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(string));
    
            var mobileNumParameter = mobileNum != null ?
                new ObjectParameter("MobileNum", mobileNum) :
                new ObjectParameter("MobileNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSendSMS", userIdParameter, messageParameter, statusParameter, messageTypeParameter, userTypeParameter, requestIDParameter, mobileNumParameter);
        }
    
        public virtual int SpSingleActionHistory(Nullable<int> id, string actions, Nullable<int> userId, Nullable<int> userType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var actionsParameter = actions != null ?
                new ObjectParameter("Actions", actions) :
                new ObjectParameter("Actions", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSingleActionHistory", idParameter, actionsParameter, userIdParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<SpSloReport_Result> SpSloReport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> createdby, string applicationType, string applicationTypeValue, string status, string statusValue)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            var applicationTypeParameter = applicationType != null ?
                new ObjectParameter("ApplicationType", applicationType) :
                new ObjectParameter("ApplicationType", typeof(string));
    
            var applicationTypeValueParameter = applicationTypeValue != null ?
                new ObjectParameter("ApplicationTypeValue", applicationTypeValue) :
                new ObjectParameter("ApplicationTypeValue", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var statusValueParameter = statusValue != null ?
                new ObjectParameter("StatusValue", statusValue) :
                new ObjectParameter("StatusValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSloReport_Result>("SpSloReport", fromdateParameter, todateParameter, createdbyParameter, applicationTypeParameter, applicationTypeValueParameter, statusParameter, statusValueParameter);
        }
    
        public virtual ObjectResult<SpSSINDetaledSummary_Result> SpSSINDetaledSummary(string districtName, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string scheme)
        {
            var districtNameParameter = districtName != null ?
                new ObjectParameter("DistrictName", districtName) :
                new ObjectParameter("DistrictName", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSSINDetaledSummary_Result>("SpSSINDetaledSummary", districtNameParameter, fromdateParameter, todateParameter, schemeParameter);
        }
    
        public virtual ObjectResult<SpSSINSummaryReport_Result> SpSSINSummaryReport(string distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype)
        {
            var distidParameter = distid != null ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(string));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSSINSummaryReport_Result>("SpSSINSummaryReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter);
        }
    
        public virtual int SpSSYDiffDatabaseBkp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSSYDiffDatabaseBkp");
        }
    
        public virtual int SpSSYFullDatabaseBkp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSSYFullDatabaseBkp");
        }
    
        public virtual int SpSSYFullDatabaseBkpTemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSSYFullDatabaseBkpTemp");
        }
    
        public virtual int SpSSYFullDatabaseBkpTest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSSYFullDatabaseBkpTest");
        }
    
        public virtual int SpSSYTransactionLogDatabaseBkp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSSYTransactionLogDatabaseBkp");
        }
    
        public virtual ObjectResult<Spsub_Result> Spsub(Nullable<int> distid)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spsub_Result>("Spsub", distidParameter);
        }
    
        public virtual int SpSubDivisionWiseAbstrac(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSubDivisionWiseAbstrac", districtIdParameter);
        }
    
        public virtual ObjectResult<SpSubDivisionWiseAbstractReportForMB_Result> SpSubDivisionWiseAbstractReportForMB(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSubDivisionWiseAbstractReportForMB_Result>("SpSubDivisionWiseAbstractReportForMB", districtIdParameter);
        }
    
        public virtual ObjectResult<SPSubGroupDelete_Result> SPSubGroupDelete(string gRPNO)
        {
            var gRPNOParameter = gRPNO != null ?
                new ObjectParameter("GRPNO", gRPNO) :
                new ObjectParameter("GRPNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPSubGroupDelete_Result>("SPSubGroupDelete", gRPNOParameter);
        }
    
        public virtual ObjectResult<SpSuspectCards_Result> SpSuspectCards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSuspectCards_Result>("SpSuspectCards");
        }
    
        public virtual ObjectResult<Nullable<int>> SpUnReadNotyCount(Nullable<int> userType, Nullable<int> userid)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpUnReadNotyCount", userTypeParameter, useridParameter);
        }
    
        public virtual ObjectResult<SpUnsubmittedApp_Result> SpUnsubmittedApp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUnsubmittedApp_Result>("SpUnsubmittedApp", idParameter);
        }
    
        public virtual ObjectResult<SpUpdateAgentUserDetails_Result> SpUpdateAgentUserDetails(Nullable<int> userid, string firstname, string lastname, string mobileno, string email, Nullable<int> location, Nullable<int> distId, Nullable<int> subDivId, Nullable<int> modifiedBy, string designation, string userCode, string landlineNumber)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("Mobileno", mobileno) :
                new ObjectParameter("Mobileno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var distIdParameter = distId.HasValue ?
                new ObjectParameter("DistId", distId) :
                new ObjectParameter("DistId", typeof(int));
    
            var subDivIdParameter = subDivId.HasValue ?
                new ObjectParameter("SubDivId", subDivId) :
                new ObjectParameter("SubDivId", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var landlineNumberParameter = landlineNumber != null ?
                new ObjectParameter("LandlineNumber", landlineNumber) :
                new ObjectParameter("LandlineNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateAgentUserDetails_Result>("SpUpdateAgentUserDetails", useridParameter, firstnameParameter, lastnameParameter, mobilenoParameter, emailParameter, locationParameter, distIdParameter, subDivIdParameter, modifiedByParameter, designationParameter, userCodeParameter, landlineNumberParameter);
        }
    
        public virtual ObjectResult<SPUpdateAppStatus_Result> SPUpdateAppStatus(Nullable<long> benSno, Nullable<int> status, Nullable<int> modifiedBy, string remark, string sSINNo, string rejDoc, Nullable<System.DateTime> regDate)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var sSINNoParameter = sSINNo != null ?
                new ObjectParameter("SSINNo", sSINNo) :
                new ObjectParameter("SSINNo", typeof(string));
    
            var rejDocParameter = rejDoc != null ?
                new ObjectParameter("RejDoc", rejDoc) :
                new ObjectParameter("RejDoc", typeof(string));
    
            var regDateParameter = regDate.HasValue ?
                new ObjectParameter("RegDate", regDate) :
                new ObjectParameter("RegDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdateAppStatus_Result>("SPUpdateAppStatus", benSnoParameter, statusParameter, modifiedByParameter, remarkParameter, sSINNoParameter, rejDocParameter, regDateParameter);
        }
    
        public virtual int Spupdatebendet(string email, string benMobileNo, Nullable<long> benSno)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var benMobileNoParameter = benMobileNo != null ?
                new ObjectParameter("BenMobileNo", benMobileNo) :
                new ObjectParameter("BenMobileNo", typeof(string));
    
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spupdatebendet", emailParameter, benMobileNoParameter, benSnoParameter);
        }
    
        public virtual int SpUpdateBengaliName(string bengaliName, string sSI_Number)
        {
            var bengaliNameParameter = bengaliName != null ?
                new ObjectParameter("BengaliName", bengaliName) :
                new ObjectParameter("BengaliName", typeof(string));
    
            var sSI_NumberParameter = sSI_Number != null ?
                new ObjectParameter("SSI_Number", sSI_Number) :
                new ObjectParameter("SSI_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateBengaliName", bengaliNameParameter, sSI_NumberParameter);
        }
    
        public virtual int SpUpdateDeDupRecStatus(Nullable<int> pSXID, string revStatus, string recStatus)
        {
            var pSXIDParameter = pSXID.HasValue ?
                new ObjectParameter("PSXID", pSXID) :
                new ObjectParameter("PSXID", typeof(int));
    
            var revStatusParameter = revStatus != null ?
                new ObjectParameter("RevStatus", revStatus) :
                new ObjectParameter("RevStatus", typeof(string));
    
            var recStatusParameter = recStatus != null ?
                new ObjectParameter("RecStatus", recStatus) :
                new ObjectParameter("RecStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateDeDupRecStatus", pSXIDParameter, revStatusParameter, recStatusParameter);
        }
    
        public virtual int SpUpdateDeptUserDetails(Nullable<int> userid, string firstname, string lastname, string mobileno, string email, Nullable<int> userType, Nullable<int> location, Nullable<int> distId, Nullable<int> subDivId, Nullable<int> modifiedBy, string designation, string userCode, string landlineNumber)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("Mobileno", mobileno) :
                new ObjectParameter("Mobileno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var distIdParameter = distId.HasValue ?
                new ObjectParameter("DistId", distId) :
                new ObjectParameter("DistId", typeof(int));
    
            var subDivIdParameter = subDivId.HasValue ?
                new ObjectParameter("SubDivId", subDivId) :
                new ObjectParameter("SubDivId", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var landlineNumberParameter = landlineNumber != null ?
                new ObjectParameter("LandlineNumber", landlineNumber) :
                new ObjectParameter("LandlineNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateDeptUserDetails", useridParameter, firstnameParameter, lastnameParameter, mobilenoParameter, emailParameter, userTypeParameter, locationParameter, distIdParameter, subDivIdParameter, modifiedByParameter, designationParameter, userCodeParameter, landlineNumberParameter);
        }
    
        public virtual int SpUpdateDownlaodRequest(Nullable<int> id, string filePath)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateDownlaodRequest", idParameter, filePathParameter);
        }
    
        public virtual ObjectResult<SpUpdateExistingDeatils_Result> SpUpdateExistingDeatils(string benData, Nullable<long> modifiedBy, string benUserKey, string benUserPwd, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateExistingDeatils_Result>("SpUpdateExistingDeatils", benDataParameter, modifiedByParameter, benUserKeyParameter, benUserPwdParameter, benUseridParameter);
        }
    
        public virtual int SpUpdateFailedSMS(Nullable<int> id, string responseMessage, Nullable<int> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var responseMessageParameter = responseMessage != null ?
                new ObjectParameter("ResponseMessage", responseMessage) :
                new ObjectParameter("ResponseMessage", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateFailedSMS", idParameter, responseMessageParameter, statusParameter);
        }
    
        public virtual int SpUpdateLoginStatus(Nullable<long> id, Nullable<int> status, string type, string sysIp, string sessionId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sysIpParameter = sysIp != null ?
                new ObjectParameter("SysIp", sysIp) :
                new ObjectParameter("SysIp", typeof(string));
    
            var sessionIdParameter = sessionId != null ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateLoginStatus", idParameter, statusParameter, typeParameter, sysIpParameter, sessionIdParameter);
        }
    
        public virtual int SpUpdateMasters(Nullable<int> id, string name, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateMasters", idParameter, nameParameter, typeParameter);
        }
    
        public virtual int SpUpdatenomDepenDeatils(string benData, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdatenomDepenDeatils", benDataParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SpUpdateNomineeDeoendent_Result> SpUpdateNomineeDeoendent(Nullable<int> editId, Nullable<int> status, Nullable<int> verfiedBy, string remarks)
        {
            var editIdParameter = editId.HasValue ?
                new ObjectParameter("EditId", editId) :
                new ObjectParameter("EditId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var verfiedByParameter = verfiedBy.HasValue ?
                new ObjectParameter("VerfiedBy", verfiedBy) :
                new ObjectParameter("VerfiedBy", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateNomineeDeoendent_Result>("SpUpdateNomineeDeoendent", editIdParameter, statusParameter, verfiedByParameter, remarksParameter);
        }
    
        public virtual int SpUpdateSMS(string responseid, string responseMessage, string requestID)
        {
            var responseidParameter = responseid != null ?
                new ObjectParameter("Responseid", responseid) :
                new ObjectParameter("Responseid", typeof(string));
    
            var responseMessageParameter = responseMessage != null ?
                new ObjectParameter("ResponseMessage", responseMessage) :
                new ObjectParameter("ResponseMessage", typeof(string));
    
            var requestIDParameter = requestID != null ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateSMS", responseidParameter, responseMessageParameter, requestIDParameter);
        }
    
        public virtual ObjectResult<string> SPUpdateSubGroupData(string subGroupID, Nullable<int> subGroupStatus, string pSXID)
        {
            var subGroupIDParameter = subGroupID != null ?
                new ObjectParameter("SubGroupID", subGroupID) :
                new ObjectParameter("SubGroupID", typeof(string));
    
            var subGroupStatusParameter = subGroupStatus.HasValue ?
                new ObjectParameter("SubGroupStatus", subGroupStatus) :
                new ObjectParameter("SubGroupStatus", typeof(int));
    
            var pSXIDParameter = pSXID != null ?
                new ObjectParameter("PSXID", pSXID) :
                new ObjectParameter("PSXID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPUpdateSubGroupData", subGroupIDParameter, subGroupStatusParameter, pSXIDParameter);
        }
    
        public virtual int SpUpdateUserMapDetails(Nullable<int> usertype, Nullable<int> userid, Nullable<int> modifiedBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateUserMapDetails", usertypeParameter, useridParameter, modifiedByParameter);
        }
    
        public virtual int SpuplicateCards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpuplicateCards");
        }
    
        public virtual int SpUserDisSave(Nullable<int> userId, Nullable<int> userDist, Nullable<int> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userDistParameter = userDist.HasValue ?
                new ObjectParameter("UserDist", userDist) :
                new ObjectParameter("UserDist", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUserDisSave", userIdParameter, userDistParameter, createdByParameter);
        }
    
        public virtual int SpUserGpWardSave(Nullable<int> userId, Nullable<int> gp, Nullable<int> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var gpParameter = gp.HasValue ?
                new ObjectParameter("Gp", gp) :
                new ObjectParameter("Gp", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUserGpWardSave", userIdParameter, gpParameter, createdByParameter);
        }
    
        public virtual int SpUserLocationSave(Nullable<int> userId, Nullable<int> location, Nullable<int> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUserLocationSave", userIdParameter, locationParameter, createdByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpUserRegistration(string firstname, string lastname, string mobileno, string email, Nullable<int> userType, string userPwd, string saltKey, Nullable<int> createdBy, Nullable<int> location, Nullable<int> distId, Nullable<int> subDivId, string designation, string userCode, Nullable<int> changePwd, string landlineNumber)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("Mobileno", mobileno) :
                new ObjectParameter("Mobileno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userPwdParameter = userPwd != null ?
                new ObjectParameter("UserPwd", userPwd) :
                new ObjectParameter("UserPwd", typeof(string));
    
            var saltKeyParameter = saltKey != null ?
                new ObjectParameter("SaltKey", saltKey) :
                new ObjectParameter("SaltKey", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var distIdParameter = distId.HasValue ?
                new ObjectParameter("DistId", distId) :
                new ObjectParameter("DistId", typeof(int));
    
            var subDivIdParameter = subDivId.HasValue ?
                new ObjectParameter("SubDivId", subDivId) :
                new ObjectParameter("SubDivId", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var changePwdParameter = changePwd.HasValue ?
                new ObjectParameter("ChangePwd", changePwd) :
                new ObjectParameter("ChangePwd", typeof(int));
    
            var landlineNumberParameter = landlineNumber != null ?
                new ObjectParameter("LandlineNumber", landlineNumber) :
                new ObjectParameter("LandlineNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpUserRegistration", firstnameParameter, lastnameParameter, mobilenoParameter, emailParameter, userTypeParameter, userPwdParameter, saltKeyParameter, createdByParameter, locationParameter, distIdParameter, subDivIdParameter, designationParameter, userCodeParameter, changePwdParameter, landlineNumberParameter);
        }
    
        public virtual int SpUserSubDivSave(Nullable<int> userId, Nullable<int> subDivision, Nullable<int> createdBy)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var subDivisionParameter = subDivision.HasValue ?
                new ObjectParameter("SubDivision", subDivision) :
                new ObjectParameter("SubDivision", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUserSubDivSave", userIdParameter, subDivisionParameter, createdByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpVerifyOTP(string mobilenumber, string otp)
        {
            var mobilenumberParameter = mobilenumber != null ?
                new ObjectParameter("Mobilenumber", mobilenumber) :
                new ObjectParameter("Mobilenumber", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("Otp", otp) :
                new ObjectParameter("Otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpVerifyOTP", mobilenumberParameter, otpParameter);
        }
    
        public virtual int SubDivisionWiseAbstracSSRS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubDivisionWiseAbstracSSRS");
        }
    
        public virtual ObjectResult<UpdateDeleteDepRequest_Result> UpdateDeleteDepRequest(Nullable<long> id, Nullable<int> status, string remarks, Nullable<int> verifiedBy, Nullable<long> deleteId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var verifiedByParameter = verifiedBy.HasValue ?
                new ObjectParameter("VerifiedBy", verifiedBy) :
                new ObjectParameter("VerifiedBy", typeof(int));
    
            var deleteIdParameter = deleteId.HasValue ?
                new ObjectParameter("DeleteId", deleteId) :
                new ObjectParameter("DeleteId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateDeleteDepRequest_Result>("UpdateDeleteDepRequest", idParameter, statusParameter, remarksParameter, verifiedByParameter, deleteIdParameter);
        }
    
        public virtual ObjectResult<UpdateDeleteNomineeRequest_Result> UpdateDeleteNomineeRequest(Nullable<long> id, Nullable<int> status, string remarks, Nullable<int> verifiedBy, Nullable<long> deleteId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var verifiedByParameter = verifiedBy.HasValue ?
                new ObjectParameter("VerifiedBy", verifiedBy) :
                new ObjectParameter("VerifiedBy", typeof(int));
    
            var deleteIdParameter = deleteId.HasValue ?
                new ObjectParameter("DeleteId", deleteId) :
                new ObjectParameter("DeleteId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateDeleteNomineeRequest_Result>("UpdateDeleteNomineeRequest", idParameter, statusParameter, remarksParameter, verifiedByParameter, deleteIdParameter);
        }
    
        public virtual int UpdateFile(Nullable<long> bensno, string from)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("bensno", bensno) :
                new ObjectParameter("bensno", typeof(long));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFile", bensnoParameter, fromParameter);
        }
    
        public virtual int usp_Inxed_Statistics_Maintenance(string dBName)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Inxed_Statistics_Maintenance", dBNameParameter);
        }
    
        public virtual ObjectResult<SpDashClaimStatus_Result> SpDashClaimStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashClaimStatus_Result>("SpDashClaimStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpDashFundStatus_Result> SpDashFundStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashFundStatus_Result>("SpDashFundStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpDashOverallClaimStatus_Result> SpDashOverallClaimStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashOverallClaimStatus_Result>("SpDashOverallClaimStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpDashReferStatus_Result> SpDashReferStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashReferStatus_Result>("SpDashReferStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpEditBankDetHistory_Result> SpEditBankDetHistory(Nullable<long> bensno)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEditBankDetHistory_Result>("SpEditBankDetHistory", bensnoParameter);
        }
    
        public virtual ObjectResult<SpGetEditBankDetApp_Result> SpGetEditBankDetApp(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditBankDetApp_Result>("SpGetEditBankDetApp", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpGetEditBankDetAppById_Result> SpGetEditBankDetAppById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditBankDetAppById_Result>("SpGetEditBankDetAppById", idParameter);
        }
    
        public virtual ObjectResult<SpHourlyReg_Result> SpHourlyReg()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpHourlyReg_Result>("SpHourlyReg");
        }
    
        public virtual ObjectResult<SpStatusWiseCount_Result> SpStatusWiseCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpStatusWiseCount_Result>("SpStatusWiseCount");
        }
    
        public virtual ObjectResult<SpRoleWiseNotificationList_Result> SpRoleWiseNotificationList(Nullable<int> userType, Nullable<int> userId)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpRoleWiseNotificationList_Result>("SpRoleWiseNotificationList", userTypeParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SpGetUserInfo_Result> SpGetUserInfo(Nullable<long> benSno)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUserInfo_Result>("SpGetUserInfo", benSnoParameter);
        }
    
        public virtual ObjectResult<SpDashClaimStatusSuperAdmin_Result> SpDashClaimStatusSuperAdmin(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashClaimStatusSuperAdmin_Result>("SpDashClaimStatusSuperAdmin", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpDashFundStatusSuperAdmin_Result> SpDashFundStatusSuperAdmin(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashFundStatusSuperAdmin_Result>("SpDashFundStatusSuperAdmin", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpDashFundReleaseStatus_Result> SpDashFundReleaseStatus(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashFundReleaseStatus_Result>("SpDashFundReleaseStatus", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpGetDownlaodRequests_Result> SpGetDownlaodRequests(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDownlaodRequests_Result>("SpGetDownlaodRequests", userIdParameter);
        }
    
        public virtual ObjectResult<SpEditBenePersonalDetailsExt_Result> SpEditBenePersonalDetailsExt(Nullable<long> benSno, string beneFirstName, string benLastName, string benMiddleName, Nullable<System.DateTime> beneDOB, string documentIDProof, string documentDOBProof, string iDProofExtension, string dOBProofExtension)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var beneFirstNameParameter = beneFirstName != null ?
                new ObjectParameter("BeneFirstName", beneFirstName) :
                new ObjectParameter("BeneFirstName", typeof(string));
    
            var benLastNameParameter = benLastName != null ?
                new ObjectParameter("BenLastName", benLastName) :
                new ObjectParameter("BenLastName", typeof(string));
    
            var benMiddleNameParameter = benMiddleName != null ?
                new ObjectParameter("BenMiddleName", benMiddleName) :
                new ObjectParameter("BenMiddleName", typeof(string));
    
            var beneDOBParameter = beneDOB.HasValue ?
                new ObjectParameter("BeneDOB", beneDOB) :
                new ObjectParameter("BeneDOB", typeof(System.DateTime));
    
            var documentIDProofParameter = documentIDProof != null ?
                new ObjectParameter("DocumentIDProof", documentIDProof) :
                new ObjectParameter("DocumentIDProof", typeof(string));
    
            var documentDOBProofParameter = documentDOBProof != null ?
                new ObjectParameter("DocumentDOBProof", documentDOBProof) :
                new ObjectParameter("DocumentDOBProof", typeof(string));
    
            var iDProofExtensionParameter = iDProofExtension != null ?
                new ObjectParameter("IDProofExtension", iDProofExtension) :
                new ObjectParameter("IDProofExtension", typeof(string));
    
            var dOBProofExtensionParameter = dOBProofExtension != null ?
                new ObjectParameter("DOBProofExtension", dOBProofExtension) :
                new ObjectParameter("DOBProofExtension", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEditBenePersonalDetailsExt_Result>("SpEditBenePersonalDetailsExt", benSnoParameter, beneFirstNameParameter, benLastNameParameter, benMiddleNameParameter, beneDOBParameter, documentIDProofParameter, documentDOBProofParameter, iDProofExtensionParameter, dOBProofExtensionParameter);
        }
    
        public virtual ObjectResult<SpGetBenePersonalDetEditHistory_Result> SpGetBenePersonalDetEditHistory(Nullable<long> bensno)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenePersonalDetEditHistory_Result>("SpGetBenePersonalDetEditHistory", bensnoParameter);
        }
    
        public virtual ObjectResult<SpGetEditPersonalDetApp_Result> SpGetEditPersonalDetApp(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditPersonalDetApp_Result>("SpGetEditPersonalDetApp", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpEditBenePersonalDetails_Result> SpEditBenePersonalDetails(Nullable<long> benSno, string beneFirstName, string benLastName, string benMiddleName, Nullable<System.DateTime> beneDOB, string documentIDProof, string documentDOBProof)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var beneFirstNameParameter = beneFirstName != null ?
                new ObjectParameter("BeneFirstName", beneFirstName) :
                new ObjectParameter("BeneFirstName", typeof(string));
    
            var benLastNameParameter = benLastName != null ?
                new ObjectParameter("BenLastName", benLastName) :
                new ObjectParameter("BenLastName", typeof(string));
    
            var benMiddleNameParameter = benMiddleName != null ?
                new ObjectParameter("BenMiddleName", benMiddleName) :
                new ObjectParameter("BenMiddleName", typeof(string));
    
            var beneDOBParameter = beneDOB.HasValue ?
                new ObjectParameter("BeneDOB", beneDOB) :
                new ObjectParameter("BeneDOB", typeof(System.DateTime));
    
            var documentIDProofParameter = documentIDProof != null ?
                new ObjectParameter("DocumentIDProof", documentIDProof) :
                new ObjectParameter("DocumentIDProof", typeof(string));
    
            var documentDOBProofParameter = documentDOBProof != null ?
                new ObjectParameter("DocumentDOBProof", documentDOBProof) :
                new ObjectParameter("DocumentDOBProof", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEditBenePersonalDetails_Result>("SpEditBenePersonalDetails", benSnoParameter, beneFirstNameParameter, benLastNameParameter, benMiddleNameParameter, beneDOBParameter, documentIDProofParameter, documentDOBProofParameter);
        }
    
        public virtual ObjectResult<SpGetBeneDOBDetEditHistory_Result> SpGetBeneDOBDetEditHistory(Nullable<long> bensno)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBeneDOBDetEditHistory_Result>("SpGetBeneDOBDetEditHistory", bensnoParameter);
        }
    
        public virtual ObjectResult<SpGetEditDOBDetApp_Result> SpGetEditDOBDetApp(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditDOBDetApp_Result>("SpGetEditDOBDetApp", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpGetEditPersonalDetAppById_Result> SpGetEditPersonalDetAppById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditPersonalDetAppById_Result>("SpGetEditPersonalDetAppById", idParameter);
        }
    
        public virtual ObjectResult<SpGetEditPersonalDetAppByIdExt_Result> SpGetEditPersonalDetAppByIdExt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditPersonalDetAppByIdExt_Result>("SpGetEditPersonalDetAppByIdExt", idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> SpDetailedReportCountLatest(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType, string po, string pS, string gpWard, string religion)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("SpDetailedReportCountLatest", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual ObjectResult<SpDetailedReportLatest_Result> SpDetailedReportLatest(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType, string po, string pS, string gpWard, string religion)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetailedReportLatest_Result>("SpDetailedReportLatest", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual ObjectResult<SpGetDownLoadRequestData_Result> SpGetDownLoadRequestData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDownLoadRequestData_Result>("SpGetDownLoadRequestData", idParameter);
        }
    
        public virtual int SpSaveDownlaodRequest(Nullable<int> userId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string districts, string subDivisions, string locations, string applicationStatus, string reportName, string scheme, string uSerType, string userRole, string users, string value, string formStatus, string po, string pS, string gpWard, string religion)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var districtsParameter = districts != null ?
                new ObjectParameter("Districts", districts) :
                new ObjectParameter("Districts", typeof(string));
    
            var subDivisionsParameter = subDivisions != null ?
                new ObjectParameter("SubDivisions", subDivisions) :
                new ObjectParameter("SubDivisions", typeof(string));
    
            var locationsParameter = locations != null ?
                new ObjectParameter("Locations", locations) :
                new ObjectParameter("Locations", typeof(string));
    
            var applicationStatusParameter = applicationStatus != null ?
                new ObjectParameter("ApplicationStatus", applicationStatus) :
                new ObjectParameter("ApplicationStatus", typeof(string));
    
            var reportNameParameter = reportName != null ?
                new ObjectParameter("ReportName", reportName) :
                new ObjectParameter("ReportName", typeof(string));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(string));
    
            var uSerTypeParameter = uSerType != null ?
                new ObjectParameter("USerType", uSerType) :
                new ObjectParameter("USerType", typeof(string));
    
            var userRoleParameter = userRole != null ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(string));
    
            var usersParameter = users != null ?
                new ObjectParameter("Users", users) :
                new ObjectParameter("Users", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var formStatusParameter = formStatus != null ?
                new ObjectParameter("FormStatus", formStatus) :
                new ObjectParameter("FormStatus", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSaveDownlaodRequest", userIdParameter, fromDateParameter, toDateParameter, districtsParameter, subDivisionsParameter, locationsParameter, applicationStatusParameter, reportNameParameter, schemeParameter, uSerTypeParameter, userRoleParameter, usersParameter, valueParameter, formStatusParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual ObjectResult<SpGetConstructTransList_Result> SpGetConstructTransList(string conType)
        {
            var conTypeParameter = conType != null ?
                new ObjectParameter("ConType", conType) :
                new ObjectParameter("ConType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetConstructTransList_Result>("SpGetConstructTransList", conTypeParameter);
        }
    
        public virtual ObjectResult<SpDashClaimStatusDLC_Result> SpDashClaimStatusDLC(Nullable<int> usertype, Nullable<int> location, Nullable<int> subDiv, Nullable<int> district, string fromdate, string todate, string mapping, Nullable<int> createdBy)
        {
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var subDivParameter = subDiv.HasValue ?
                new ObjectParameter("SubDiv", subDiv) :
                new ObjectParameter("SubDiv", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var mappingParameter = mapping != null ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashClaimStatusDLC_Result>("SpDashClaimStatusDLC", usertypeParameter, locationParameter, subDivParameter, districtParameter, fromdateParameter, todateParameter, mappingParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpGetDidsSubDivisionByDLC_Result> SpGetDidsSubDivisionByDLC(string districtId, Nullable<int> dLCID)
        {
            var districtIdParameter = districtId != null ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(string));
    
            var dLCIDParameter = dLCID.HasValue ?
                new ObjectParameter("DLCID", dLCID) :
                new ObjectParameter("DLCID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDidsSubDivisionByDLC_Result>("SpGetDidsSubDivisionByDLC", districtIdParameter, dLCIDParameter);
        }
    
        public virtual ObjectResult<SpGetDutyNature_Result> SpGetDutyNature()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDutyNature_Result>("SpGetDutyNature");
        }
    
        public virtual ObjectResult<SpGetRuralUrban_Result> SpGetRuralUrban()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetRuralUrban_Result>("SpGetRuralUrban");
        }
    
        public virtual ObjectResult<SpGetVehicleNature_Result> SpGetVehicleNature()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetVehicleNature_Result>("SpGetVehicleNature");
        }
    
        public virtual ObjectResult<SpGetWorkerStatus_Result> SpGetWorkerStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetWorkerStatus_Result>("SpGetWorkerStatus");
        }
    
        public virtual ObjectResult<SpGetPoNew_Result> SpGetPoNew(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPoNew_Result>("SpGetPoNew", districtIdParameter);
        }
    
        public virtual ObjectResult<SpGetPsDtsNew_Result> SpGetPsDtsNew(Nullable<int> districtid)
        {
            var districtidParameter = districtid.HasValue ?
                new ObjectParameter("Districtid", districtid) :
                new ObjectParameter("Districtid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPsDtsNew_Result>("SpGetPsDtsNew", districtidParameter);
        }
    
        public virtual ObjectResult<SpGetSubDivisionNew_Result> SpGetSubDivisionNew(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSubDivisionNew_Result>("SpGetSubDivisionNew", districtIdParameter);
        }
    
        public virtual ObjectResult<SpGetToltalBlockDetailNew_Result> SpGetToltalBlockDetailNew(Nullable<int> subDivisionSno)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetToltalBlockDetailNew_Result>("SpGetToltalBlockDetailNew", subDivisionSnoParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> SpDetailedReportCountLatestNew(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType, string po, string pS, string gpWard, string religion)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("SpDetailedReportCountLatestNew", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual ObjectResult<SpDetailedReportLatestNew_Result> SpDetailedReportLatestNew(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType, string po, string pS, string gpWard, string religion)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetailedReportLatestNew_Result>("SpDetailedReportLatestNew", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual ObjectResult<SpGetBlockDetailbySubdivRepNew_Result> SpGetBlockDetailbySubdivRepNew(Nullable<int> subDivisionSno)
        {
            var subDivisionSnoParameter = subDivisionSno.HasValue ?
                new ObjectParameter("SubDivisionSno", subDivisionSno) :
                new ObjectParameter("SubDivisionSno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBlockDetailbySubdivRepNew_Result>("SpGetBlockDetailbySubdivRepNew", subDivisionSnoParameter);
        }
    
        public virtual int SpSaveDownlaodRequestNew(Nullable<int> userId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string districts, string subDivisions, string locations, string applicationStatus, string reportName, string scheme, string uSerType, string userRole, string users, string value, string formStatus, string po, string pS, string gpWard, string religion)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var districtsParameter = districts != null ?
                new ObjectParameter("Districts", districts) :
                new ObjectParameter("Districts", typeof(string));
    
            var subDivisionsParameter = subDivisions != null ?
                new ObjectParameter("SubDivisions", subDivisions) :
                new ObjectParameter("SubDivisions", typeof(string));
    
            var locationsParameter = locations != null ?
                new ObjectParameter("Locations", locations) :
                new ObjectParameter("Locations", typeof(string));
    
            var applicationStatusParameter = applicationStatus != null ?
                new ObjectParameter("ApplicationStatus", applicationStatus) :
                new ObjectParameter("ApplicationStatus", typeof(string));
    
            var reportNameParameter = reportName != null ?
                new ObjectParameter("ReportName", reportName) :
                new ObjectParameter("ReportName", typeof(string));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("Scheme", scheme) :
                new ObjectParameter("Scheme", typeof(string));
    
            var uSerTypeParameter = uSerType != null ?
                new ObjectParameter("USerType", uSerType) :
                new ObjectParameter("USerType", typeof(string));
    
            var userRoleParameter = userRole != null ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(string));
    
            var usersParameter = users != null ?
                new ObjectParameter("Users", users) :
                new ObjectParameter("Users", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var formStatusParameter = formStatus != null ?
                new ObjectParameter("FormStatus", formStatus) :
                new ObjectParameter("FormStatus", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSaveDownlaodRequestNew", userIdParameter, fromDateParameter, toDateParameter, districtsParameter, subDivisionsParameter, locationsParameter, applicationStatusParameter, reportNameParameter, schemeParameter, uSerTypeParameter, userRoleParameter, usersParameter, valueParameter, formStatusParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual ObjectResult<Sp_GetLocationsByDistrictIdNew_Result> Sp_GetLocationsByDistrictIdNew(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetLocationsByDistrictIdNew_Result>("Sp_GetLocationsByDistrictIdNew", idParameter);
        }
    
        public virtual ObjectResult<SpGeteDistrictTransportAllDetails_Result> SpGeteDistrictTransportAllDetails(Nullable<long> benId, string edistRegId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            var edistRegIdParameter = edistRegId != null ?
                new ObjectParameter("EdistRegId", edistRegId) :
                new ObjectParameter("EdistRegId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistrictTransportAllDetails_Result>("SpGeteDistrictTransportAllDetails", benIdParameter, edistRegIdParameter);
        }
    
        public virtual int SpInsertConstructSubscriptDeatils(string benData, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsertConstructSubscriptDeatils", benDataParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SpGetGPNew_Result> SpGetGPNew(Nullable<int> subDivisionId)
        {
            var subDivisionIdParameter = subDivisionId.HasValue ?
                new ObjectParameter("SubDivisionId", subDivisionId) :
                new ObjectParameter("SubDivisionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetGPNew_Result>("SpGetGPNew", subDivisionIdParameter);
        }
    
        public virtual ObjectResult<SpGeteDistRenewelApplications_Result> SpGeteDistRenewelApplications(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistRenewelApplications_Result>("SpGeteDistRenewelApplications", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpVerifiyeDistRenewelDetailsofBene_Result> SpVerifiyeDistRenewelDetailsofBene(string benSno, Nullable<int> status, string remarks, string verifiedBy)
        {
            var benSnoParameter = benSno != null ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var verifiedByParameter = verifiedBy != null ?
                new ObjectParameter("VerifiedBy", verifiedBy) :
                new ObjectParameter("VerifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyeDistRenewelDetailsofBene_Result>("SpVerifiyeDistRenewelDetailsofBene", benSnoParameter, statusParameter, remarksParameter, verifiedByParameter);
        }
    
        public virtual ObjectResult<SpGetConstructionEdistrictDetails_Result> SpGetConstructionEdistrictDetails(string benId)
        {
            var benIdParameter = benId != null ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetConstructionEdistrictDetails_Result>("SpGetConstructionEdistrictDetails", benIdParameter);
        }
    
        public virtual ObjectResult<SpGetTransportWorkerRegDetailsForRenewal_Result> SpGetTransportWorkerRegDetailsForRenewal(Nullable<long> bensno)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetTransportWorkerRegDetailsForRenewal_Result>("SpGetTransportWorkerRegDetailsForRenewal", bensnoParameter);
        }
    
        public virtual ObjectResult<SpInsertTransportBeneRenewalReq_Result> SpInsertTransportBeneRenewalReq(Nullable<long> benSno, string registrationNumber, string subscriptMonth, string subscriptYear, Nullable<decimal> amount, Nullable<System.DateTime> collectionDate, string receiptPageno, string receiptBOokno, string createdBy)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var registrationNumberParameter = registrationNumber != null ?
                new ObjectParameter("RegistrationNumber", registrationNumber) :
                new ObjectParameter("RegistrationNumber", typeof(string));
    
            var subscriptMonthParameter = subscriptMonth != null ?
                new ObjectParameter("SubscriptMonth", subscriptMonth) :
                new ObjectParameter("SubscriptMonth", typeof(string));
    
            var subscriptYearParameter = subscriptYear != null ?
                new ObjectParameter("SubscriptYear", subscriptYear) :
                new ObjectParameter("SubscriptYear", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var collectionDateParameter = collectionDate.HasValue ?
                new ObjectParameter("CollectionDate", collectionDate) :
                new ObjectParameter("CollectionDate", typeof(System.DateTime));
    
            var receiptPagenoParameter = receiptPageno != null ?
                new ObjectParameter("ReceiptPageno", receiptPageno) :
                new ObjectParameter("ReceiptPageno", typeof(string));
    
            var receiptBOoknoParameter = receiptBOokno != null ?
                new ObjectParameter("ReceiptBOokno", receiptBOokno) :
                new ObjectParameter("ReceiptBOokno", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpInsertTransportBeneRenewalReq_Result>("SpInsertTransportBeneRenewalReq", benSnoParameter, registrationNumberParameter, subscriptMonthParameter, subscriptYearParameter, amountParameter, collectionDateParameter, receiptPagenoParameter, receiptBOoknoParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpGeteDistCWDataAppByIdExt_Result> SpGeteDistCWDataAppByIdExt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistCWDataAppByIdExt_Result>("SpGeteDistCWDataAppByIdExt", idParameter);
        }
    
        public virtual ObjectResult<SpGeteDistCWDataApplications_Result> SpGeteDistCWDataApplications(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistCWDataApplications_Result>("SpGeteDistCWDataApplications", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpGeteDistTWDataAppByIdExt_Result> SpGeteDistTWDataAppByIdExt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistTWDataAppByIdExt_Result>("SpGeteDistTWDataAppByIdExt", idParameter);
        }
    
        public virtual ObjectResult<SpVerifiyeDistCWDataApplication_Result> SpVerifiyeDistCWDataApplication(Nullable<long> id, Nullable<int> status, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyeDistCWDataApplication_Result>("SpVerifiyeDistCWDataApplication", idParameter, statusParameter, remarksParameter);
        }
    
        public virtual ObjectResult<SpVerifiyeDistTWDataApplication_Result> SpVerifiyeDistTWDataApplication(Nullable<long> id, Nullable<int> status, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyeDistTWDataApplication_Result>("SpVerifiyeDistTWDataApplication", idParameter, statusParameter, remarksParameter);
        }
    
        public virtual ObjectResult<SpInsertConstructRenewalDeatils_Result> SpInsertConstructRenewalDeatils(Nullable<long> benSSIN, string regoistrationNumber, string name, string receiptBookNumber, string receiptNumber, Nullable<System.DateTime> registrationDate, string receiptAmount, string proofDocumentString, string proofDocumentExtension, string createdBy)
        {
            var benSSINParameter = benSSIN.HasValue ?
                new ObjectParameter("BenSSIN", benSSIN) :
                new ObjectParameter("BenSSIN", typeof(long));
    
            var regoistrationNumberParameter = regoistrationNumber != null ?
                new ObjectParameter("RegoistrationNumber", regoistrationNumber) :
                new ObjectParameter("RegoistrationNumber", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var receiptBookNumberParameter = receiptBookNumber != null ?
                new ObjectParameter("ReceiptBookNumber", receiptBookNumber) :
                new ObjectParameter("ReceiptBookNumber", typeof(string));
    
            var receiptNumberParameter = receiptNumber != null ?
                new ObjectParameter("ReceiptNumber", receiptNumber) :
                new ObjectParameter("ReceiptNumber", typeof(string));
    
            var registrationDateParameter = registrationDate.HasValue ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(System.DateTime));
    
            var receiptAmountParameter = receiptAmount != null ?
                new ObjectParameter("ReceiptAmount", receiptAmount) :
                new ObjectParameter("ReceiptAmount", typeof(string));
    
            var proofDocumentStringParameter = proofDocumentString != null ?
                new ObjectParameter("ProofDocumentString", proofDocumentString) :
                new ObjectParameter("ProofDocumentString", typeof(string));
    
            var proofDocumentExtensionParameter = proofDocumentExtension != null ?
                new ObjectParameter("ProofDocumentExtension", proofDocumentExtension) :
                new ObjectParameter("ProofDocumentExtension", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpInsertConstructRenewalDeatils_Result>("SpInsertConstructRenewalDeatils", benSSINParameter, regoistrationNumberParameter, nameParameter, receiptBookNumberParameter, receiptNumberParameter, registrationDateParameter, receiptAmountParameter, proofDocumentStringParameter, proofDocumentExtensionParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SpGeteDistRenewelApplicationsfromSLO_Result> SpGeteDistRenewelApplicationsfromSLO(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistRenewelApplicationsfromSLO_Result>("SpGeteDistRenewelApplicationsfromSLO", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpGeteDistReneweldatafromSLOById_Result> SpGeteDistReneweldatafromSLOById(string editCWID)
        {
            var editCWIDParameter = editCWID != null ?
                new ObjectParameter("EditCWID", editCWID) :
                new ObjectParameter("EditCWID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistReneweldatafromSLOById_Result>("SpGeteDistReneweldatafromSLOById", editCWIDParameter);
        }
    
        public virtual ObjectResult<SpVerifiyeDistRenewelDetailsofBenefromSLO_Result> SpVerifiyeDistRenewelDetailsofBenefromSLO(string editCWID, Nullable<int> status, string remarks, string verifiedBy)
        {
            var editCWIDParameter = editCWID != null ?
                new ObjectParameter("EditCWID", editCWID) :
                new ObjectParameter("EditCWID", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var verifiedByParameter = verifiedBy != null ?
                new ObjectParameter("VerifiedBy", verifiedBy) :
                new ObjectParameter("VerifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyeDistRenewelDetailsofBenefromSLO_Result>("SpVerifiyeDistRenewelDetailsofBenefromSLO", editCWIDParameter, statusParameter, remarksParameter, verifiedByParameter);
        }
    
        public virtual ObjectResult<SpGetUserListNew_Result> SpGetUserListNew(string roleids, Nullable<int> districtid, string subdivid, string locid)
        {
            var roleidsParameter = roleids != null ?
                new ObjectParameter("Roleids", roleids) :
                new ObjectParameter("Roleids", typeof(string));
    
            var districtidParameter = districtid.HasValue ?
                new ObjectParameter("Districtid", districtid) :
                new ObjectParameter("Districtid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("Subdivid", subdivid) :
                new ObjectParameter("Subdivid", typeof(string));
    
            var locidParameter = locid != null ?
                new ObjectParameter("Locid", locid) :
                new ObjectParameter("Locid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUserListNew_Result>("SpGetUserListNew", roleidsParameter, districtidParameter, subdividParameter, locidParameter);
        }
    
        public virtual ObjectResult<SpGetEdistTransportDetails_Result> SpGetEdistTransportDetails(Nullable<long> benId, string edistRegId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            var edistRegIdParameter = edistRegId != null ?
                new ObjectParameter("EdistRegId", edistRegId) :
                new ObjectParameter("EdistRegId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEdistTransportDetails_Result>("SpGetEdistTransportDetails", benIdParameter, edistRegIdParameter);
        }
    
        public virtual ObjectResult<SpUpdateeDistCWData_Result> SpUpdateeDistCWData(Nullable<long> benSno, string regoistrationNumber, string employernature, string ruralUrban, string employerAddress, string regNoOftheInstitute, string natureoftheJob, Nullable<System.DateTime> employmentStartDate, Nullable<System.DateTime> employmentEndDate, string noOfWorkingDays, string workSpaceDetailsAndAddress, Nullable<decimal> rateofSubsricption, string statusoftheWorker, string eligibilityCertificateFormString, string eligibilityCertificateFormExtension, string statutoryAppform27String, string statutoryAppform27Ext, string copyofSchemeCertificateString, string copyofSchemeCertificateExt, string particularsofdocumentsregardingsubmissionFees, string certificateofIdentificationattached)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var regoistrationNumberParameter = regoistrationNumber != null ?
                new ObjectParameter("RegoistrationNumber", regoistrationNumber) :
                new ObjectParameter("RegoistrationNumber", typeof(string));
    
            var employernatureParameter = employernature != null ?
                new ObjectParameter("Employernature", employernature) :
                new ObjectParameter("Employernature", typeof(string));
    
            var ruralUrbanParameter = ruralUrban != null ?
                new ObjectParameter("RuralUrban", ruralUrban) :
                new ObjectParameter("RuralUrban", typeof(string));
    
            var employerAddressParameter = employerAddress != null ?
                new ObjectParameter("EmployerAddress", employerAddress) :
                new ObjectParameter("EmployerAddress", typeof(string));
    
            var regNoOftheInstituteParameter = regNoOftheInstitute != null ?
                new ObjectParameter("RegNoOftheInstitute", regNoOftheInstitute) :
                new ObjectParameter("RegNoOftheInstitute", typeof(string));
    
            var natureoftheJobParameter = natureoftheJob != null ?
                new ObjectParameter("NatureoftheJob", natureoftheJob) :
                new ObjectParameter("NatureoftheJob", typeof(string));
    
            var employmentStartDateParameter = employmentStartDate.HasValue ?
                new ObjectParameter("EmploymentStartDate", employmentStartDate) :
                new ObjectParameter("EmploymentStartDate", typeof(System.DateTime));
    
            var employmentEndDateParameter = employmentEndDate.HasValue ?
                new ObjectParameter("EmploymentEndDate", employmentEndDate) :
                new ObjectParameter("EmploymentEndDate", typeof(System.DateTime));
    
            var noOfWorkingDaysParameter = noOfWorkingDays != null ?
                new ObjectParameter("NoOfWorkingDays", noOfWorkingDays) :
                new ObjectParameter("NoOfWorkingDays", typeof(string));
    
            var workSpaceDetailsAndAddressParameter = workSpaceDetailsAndAddress != null ?
                new ObjectParameter("WorkSpaceDetailsAndAddress", workSpaceDetailsAndAddress) :
                new ObjectParameter("WorkSpaceDetailsAndAddress", typeof(string));
    
            var rateofSubsricptionParameter = rateofSubsricption.HasValue ?
                new ObjectParameter("RateofSubsricption", rateofSubsricption) :
                new ObjectParameter("RateofSubsricption", typeof(decimal));
    
            var statusoftheWorkerParameter = statusoftheWorker != null ?
                new ObjectParameter("StatusoftheWorker", statusoftheWorker) :
                new ObjectParameter("StatusoftheWorker", typeof(string));
    
            var eligibilityCertificateFormStringParameter = eligibilityCertificateFormString != null ?
                new ObjectParameter("EligibilityCertificateFormString", eligibilityCertificateFormString) :
                new ObjectParameter("EligibilityCertificateFormString", typeof(string));
    
            var eligibilityCertificateFormExtensionParameter = eligibilityCertificateFormExtension != null ?
                new ObjectParameter("EligibilityCertificateFormExtension", eligibilityCertificateFormExtension) :
                new ObjectParameter("EligibilityCertificateFormExtension", typeof(string));
    
            var statutoryAppform27StringParameter = statutoryAppform27String != null ?
                new ObjectParameter("StatutoryAppform27String", statutoryAppform27String) :
                new ObjectParameter("StatutoryAppform27String", typeof(string));
    
            var statutoryAppform27ExtParameter = statutoryAppform27Ext != null ?
                new ObjectParameter("StatutoryAppform27Ext", statutoryAppform27Ext) :
                new ObjectParameter("StatutoryAppform27Ext", typeof(string));
    
            var copyofSchemeCertificateStringParameter = copyofSchemeCertificateString != null ?
                new ObjectParameter("CopyofSchemeCertificateString", copyofSchemeCertificateString) :
                new ObjectParameter("CopyofSchemeCertificateString", typeof(string));
    
            var copyofSchemeCertificateExtParameter = copyofSchemeCertificateExt != null ?
                new ObjectParameter("CopyofSchemeCertificateExt", copyofSchemeCertificateExt) :
                new ObjectParameter("CopyofSchemeCertificateExt", typeof(string));
    
            var particularsofdocumentsregardingsubmissionFeesParameter = particularsofdocumentsregardingsubmissionFees != null ?
                new ObjectParameter("ParticularsofdocumentsregardingsubmissionFees", particularsofdocumentsregardingsubmissionFees) :
                new ObjectParameter("ParticularsofdocumentsregardingsubmissionFees", typeof(string));
    
            var certificateofIdentificationattachedParameter = certificateofIdentificationattached != null ?
                new ObjectParameter("certificateofIdentificationattached", certificateofIdentificationattached) :
                new ObjectParameter("certificateofIdentificationattached", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateeDistCWData_Result>("SpUpdateeDistCWData", benSnoParameter, regoistrationNumberParameter, employernatureParameter, ruralUrbanParameter, employerAddressParameter, regNoOftheInstituteParameter, natureoftheJobParameter, employmentStartDateParameter, employmentEndDateParameter, noOfWorkingDaysParameter, workSpaceDetailsAndAddressParameter, rateofSubsricptionParameter, statusoftheWorkerParameter, eligibilityCertificateFormStringParameter, eligibilityCertificateFormExtensionParameter, statutoryAppform27StringParameter, statutoryAppform27ExtParameter, copyofSchemeCertificateStringParameter, copyofSchemeCertificateExtParameter, particularsofdocumentsregardingsubmissionFeesParameter, certificateofIdentificationattachedParameter);
        }
    
        public virtual ObjectResult<SpUpdateeDistTWData_Result> SpUpdateeDistTWData(Nullable<long> benSno, string regoistrationNumber, string employernature, string ruralUrban, string employerAddress, string regNoOftheInstitute, string natureoftheJob, string workSpaceDetailsAndAddress, string statusoftheWorker, string eligibilityCertificateFormString, string eligibilityCertificateFormExtension, string dependentPassbookString, string dependentPassbookExt, string drivingLicenseString, string drivingLicenseExt, string natureOfthevehicle, string natureofDuty, string certificateofIdentificationAttached, string feeSubmissionParticulars, Nullable<decimal> rateofSubscription)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var regoistrationNumberParameter = regoistrationNumber != null ?
                new ObjectParameter("RegoistrationNumber", regoistrationNumber) :
                new ObjectParameter("RegoistrationNumber", typeof(string));
    
            var employernatureParameter = employernature != null ?
                new ObjectParameter("Employernature", employernature) :
                new ObjectParameter("Employernature", typeof(string));
    
            var ruralUrbanParameter = ruralUrban != null ?
                new ObjectParameter("RuralUrban", ruralUrban) :
                new ObjectParameter("RuralUrban", typeof(string));
    
            var employerAddressParameter = employerAddress != null ?
                new ObjectParameter("EmployerAddress", employerAddress) :
                new ObjectParameter("EmployerAddress", typeof(string));
    
            var regNoOftheInstituteParameter = regNoOftheInstitute != null ?
                new ObjectParameter("RegNoOftheInstitute", regNoOftheInstitute) :
                new ObjectParameter("RegNoOftheInstitute", typeof(string));
    
            var natureoftheJobParameter = natureoftheJob != null ?
                new ObjectParameter("NatureoftheJob", natureoftheJob) :
                new ObjectParameter("NatureoftheJob", typeof(string));
    
            var workSpaceDetailsAndAddressParameter = workSpaceDetailsAndAddress != null ?
                new ObjectParameter("WorkSpaceDetailsAndAddress", workSpaceDetailsAndAddress) :
                new ObjectParameter("WorkSpaceDetailsAndAddress", typeof(string));
    
            var statusoftheWorkerParameter = statusoftheWorker != null ?
                new ObjectParameter("StatusoftheWorker", statusoftheWorker) :
                new ObjectParameter("StatusoftheWorker", typeof(string));
    
            var eligibilityCertificateFormStringParameter = eligibilityCertificateFormString != null ?
                new ObjectParameter("EligibilityCertificateFormString", eligibilityCertificateFormString) :
                new ObjectParameter("EligibilityCertificateFormString", typeof(string));
    
            var eligibilityCertificateFormExtensionParameter = eligibilityCertificateFormExtension != null ?
                new ObjectParameter("EligibilityCertificateFormExtension", eligibilityCertificateFormExtension) :
                new ObjectParameter("EligibilityCertificateFormExtension", typeof(string));
    
            var dependentPassbookStringParameter = dependentPassbookString != null ?
                new ObjectParameter("DependentPassbookString", dependentPassbookString) :
                new ObjectParameter("DependentPassbookString", typeof(string));
    
            var dependentPassbookExtParameter = dependentPassbookExt != null ?
                new ObjectParameter("DependentPassbookExt", dependentPassbookExt) :
                new ObjectParameter("DependentPassbookExt", typeof(string));
    
            var drivingLicenseStringParameter = drivingLicenseString != null ?
                new ObjectParameter("DrivingLicenseString", drivingLicenseString) :
                new ObjectParameter("DrivingLicenseString", typeof(string));
    
            var drivingLicenseExtParameter = drivingLicenseExt != null ?
                new ObjectParameter("DrivingLicenseExt", drivingLicenseExt) :
                new ObjectParameter("DrivingLicenseExt", typeof(string));
    
            var natureOfthevehicleParameter = natureOfthevehicle != null ?
                new ObjectParameter("NatureOfthevehicle", natureOfthevehicle) :
                new ObjectParameter("NatureOfthevehicle", typeof(string));
    
            var natureofDutyParameter = natureofDuty != null ?
                new ObjectParameter("NatureofDuty", natureofDuty) :
                new ObjectParameter("NatureofDuty", typeof(string));
    
            var certificateofIdentificationAttachedParameter = certificateofIdentificationAttached != null ?
                new ObjectParameter("CertificateofIdentificationAttached", certificateofIdentificationAttached) :
                new ObjectParameter("CertificateofIdentificationAttached", typeof(string));
    
            var feeSubmissionParticularsParameter = feeSubmissionParticulars != null ?
                new ObjectParameter("FeeSubmissionParticulars", feeSubmissionParticulars) :
                new ObjectParameter("FeeSubmissionParticulars", typeof(string));
    
            var rateofSubscriptionParameter = rateofSubscription.HasValue ?
                new ObjectParameter("RateofSubscription", rateofSubscription) :
                new ObjectParameter("RateofSubscription", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateeDistTWData_Result>("SpUpdateeDistTWData", benSnoParameter, regoistrationNumberParameter, employernatureParameter, ruralUrbanParameter, employerAddressParameter, regNoOftheInstituteParameter, natureoftheJobParameter, workSpaceDetailsAndAddressParameter, statusoftheWorkerParameter, eligibilityCertificateFormStringParameter, eligibilityCertificateFormExtensionParameter, dependentPassbookStringParameter, dependentPassbookExtParameter, drivingLicenseStringParameter, drivingLicenseExtParameter, natureOfthevehicleParameter, natureofDutyParameter, certificateofIdentificationAttachedParameter, feeSubmissionParticularsParameter, rateofSubscriptionParameter);
        }
    
        public virtual int SpUpdateTransportRenewelDetailsByBene(string benData, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateTransportRenewelDetailsByBene", benDataParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SpGeteDistReneweldataByBenSno_Result> SpGeteDistReneweldataByBenSno(string benSno)
        {
            var benSnoParameter = benSno != null ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistReneweldataByBenSno_Result>("SpGeteDistReneweldataByBenSno", benSnoParameter);
        }
    
        public virtual ObjectResult<SpGeteDistDetailsforDashBoard_Result> SpGeteDistDetailsforDashBoard(Nullable<long> benSno, string sSINumber, string benOccupation, string aINNo, string oldRegNO)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var sSINumberParameter = sSINumber != null ?
                new ObjectParameter("SSINumber", sSINumber) :
                new ObjectParameter("SSINumber", typeof(string));
    
            var benOccupationParameter = benOccupation != null ?
                new ObjectParameter("BenOccupation", benOccupation) :
                new ObjectParameter("BenOccupation", typeof(string));
    
            var aINNoParameter = aINNo != null ?
                new ObjectParameter("AINNo", aINNo) :
                new ObjectParameter("AINNo", typeof(string));
    
            var oldRegNOParameter = oldRegNO != null ?
                new ObjectParameter("OldRegNO", oldRegNO) :
                new ObjectParameter("OldRegNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistDetailsforDashBoard_Result>("SpGeteDistDetailsforDashBoard", benSnoParameter, sSINumberParameter, benOccupationParameter, aINNoParameter, oldRegNOParameter);
        }
    
        public virtual ObjectResult<SpDetailedReportLatestNewExt_Result> SpDetailedReportLatestNewExt(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType, string po, string pS, string gpWard, string religion)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetailedReportLatestNewExt_Result>("SpDetailedReportLatestNewExt", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual ObjectResult<SaveBenfiRegistrationPart2New_Result> SaveBenfiRegistrationPart2New(string benData, string createdby, Nullable<long> bensno)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaveBenfiRegistrationPart2New_Result>("SaveBenfiRegistrationPart2New", benDataParameter, createdbyParameter, bensnoParameter);
        }
    
        public virtual ObjectResult<SpReapplyNew_Result> SpReapplyNew(string benData, Nullable<long> modifiedBy, string benUserKey, string benUserPwd, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReapplyNew_Result>("SpReapplyNew", benDataParameter, modifiedByParameter, benUserKeyParameter, benUserPwdParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SpUpdateExistingDeatilsNew_Result> SpUpdateExistingDeatilsNew(string benData, Nullable<long> modifiedBy, string benUserKey, string benUserPwd, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateExistingDeatilsNew_Result>("SpUpdateExistingDeatilsNew", benDataParameter, modifiedByParameter, benUserKeyParameter, benUserPwdParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SPGeteDistBeneRegDetails_Result> SPGeteDistBeneRegDetails(Nullable<long> benSno)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGeteDistBeneRegDetails_Result>("SPGeteDistBeneRegDetails", benSnoParameter);
        }
    
        public virtual ObjectResult<SPGeteDistBeneRenewalDetails_Result> SPGeteDistBeneRenewalDetails(Nullable<long> benSNo)
        {
            var benSNoParameter = benSNo.HasValue ?
                new ObjectParameter("BenSNo", benSNo) :
                new ObjectParameter("BenSNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGeteDistBeneRenewalDetails_Result>("SPGeteDistBeneRenewalDetails", benSNoParameter);
        }
    
        public virtual ObjectResult<SpGeteDistDetailsforRegistration_Result> SpGeteDistDetailsforRegistration(string benId, string regType)
        {
            var benIdParameter = benId != null ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(string));
    
            var regTypeParameter = regType != null ?
                new ObjectParameter("RegType", regType) :
                new ObjectParameter("RegType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistDetailsforRegistration_Result>("SpGeteDistDetailsforRegistration", benIdParameter, regTypeParameter);
        }
    
        public virtual ObjectResult<SpGetEdistConstructionDetails_Result> SpGetEdistConstructionDetails(Nullable<long> benId, string edistRegId)
        {
            var benIdParameter = benId.HasValue ?
                new ObjectParameter("BenId", benId) :
                new ObjectParameter("BenId", typeof(long));
    
            var edistRegIdParameter = edistRegId != null ?
                new ObjectParameter("EdistRegId", edistRegId) :
                new ObjectParameter("EdistRegId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEdistConstructionDetails_Result>("SpGetEdistConstructionDetails", benIdParameter, edistRegIdParameter);
        }
    
        public virtual ObjectResult<SpUpdateeDistTWDataExt_Result> SpUpdateeDistTWDataExt(Nullable<long> benSno, string regoistrationNumber, string employernature, string ruralUrban, string employerAddress, string regNoOftheInstitute, string natureoftheJob, string workSpaceDetailsAndAddress, string statusoftheWorker, string eligibilityCertificateFormString, string eligibilityCertificateFormExtension, string dependentPassbookString, string dependentPassbookExt, string drivingLicenseString, string drivingLicenseExt, string natureOfthevehicle, string natureofDuty, string certificateofIdentificationAttached, string feeSubmissionParticulars, Nullable<decimal> rateofSubscription, string renewalXML)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var regoistrationNumberParameter = regoistrationNumber != null ?
                new ObjectParameter("RegoistrationNumber", regoistrationNumber) :
                new ObjectParameter("RegoistrationNumber", typeof(string));
    
            var employernatureParameter = employernature != null ?
                new ObjectParameter("Employernature", employernature) :
                new ObjectParameter("Employernature", typeof(string));
    
            var ruralUrbanParameter = ruralUrban != null ?
                new ObjectParameter("RuralUrban", ruralUrban) :
                new ObjectParameter("RuralUrban", typeof(string));
    
            var employerAddressParameter = employerAddress != null ?
                new ObjectParameter("EmployerAddress", employerAddress) :
                new ObjectParameter("EmployerAddress", typeof(string));
    
            var regNoOftheInstituteParameter = regNoOftheInstitute != null ?
                new ObjectParameter("RegNoOftheInstitute", regNoOftheInstitute) :
                new ObjectParameter("RegNoOftheInstitute", typeof(string));
    
            var natureoftheJobParameter = natureoftheJob != null ?
                new ObjectParameter("NatureoftheJob", natureoftheJob) :
                new ObjectParameter("NatureoftheJob", typeof(string));
    
            var workSpaceDetailsAndAddressParameter = workSpaceDetailsAndAddress != null ?
                new ObjectParameter("WorkSpaceDetailsAndAddress", workSpaceDetailsAndAddress) :
                new ObjectParameter("WorkSpaceDetailsAndAddress", typeof(string));
    
            var statusoftheWorkerParameter = statusoftheWorker != null ?
                new ObjectParameter("StatusoftheWorker", statusoftheWorker) :
                new ObjectParameter("StatusoftheWorker", typeof(string));
    
            var eligibilityCertificateFormStringParameter = eligibilityCertificateFormString != null ?
                new ObjectParameter("EligibilityCertificateFormString", eligibilityCertificateFormString) :
                new ObjectParameter("EligibilityCertificateFormString", typeof(string));
    
            var eligibilityCertificateFormExtensionParameter = eligibilityCertificateFormExtension != null ?
                new ObjectParameter("EligibilityCertificateFormExtension", eligibilityCertificateFormExtension) :
                new ObjectParameter("EligibilityCertificateFormExtension", typeof(string));
    
            var dependentPassbookStringParameter = dependentPassbookString != null ?
                new ObjectParameter("DependentPassbookString", dependentPassbookString) :
                new ObjectParameter("DependentPassbookString", typeof(string));
    
            var dependentPassbookExtParameter = dependentPassbookExt != null ?
                new ObjectParameter("DependentPassbookExt", dependentPassbookExt) :
                new ObjectParameter("DependentPassbookExt", typeof(string));
    
            var drivingLicenseStringParameter = drivingLicenseString != null ?
                new ObjectParameter("DrivingLicenseString", drivingLicenseString) :
                new ObjectParameter("DrivingLicenseString", typeof(string));
    
            var drivingLicenseExtParameter = drivingLicenseExt != null ?
                new ObjectParameter("DrivingLicenseExt", drivingLicenseExt) :
                new ObjectParameter("DrivingLicenseExt", typeof(string));
    
            var natureOfthevehicleParameter = natureOfthevehicle != null ?
                new ObjectParameter("NatureOfthevehicle", natureOfthevehicle) :
                new ObjectParameter("NatureOfthevehicle", typeof(string));
    
            var natureofDutyParameter = natureofDuty != null ?
                new ObjectParameter("NatureofDuty", natureofDuty) :
                new ObjectParameter("NatureofDuty", typeof(string));
    
            var certificateofIdentificationAttachedParameter = certificateofIdentificationAttached != null ?
                new ObjectParameter("CertificateofIdentificationAttached", certificateofIdentificationAttached) :
                new ObjectParameter("CertificateofIdentificationAttached", typeof(string));
    
            var feeSubmissionParticularsParameter = feeSubmissionParticulars != null ?
                new ObjectParameter("FeeSubmissionParticulars", feeSubmissionParticulars) :
                new ObjectParameter("FeeSubmissionParticulars", typeof(string));
    
            var rateofSubscriptionParameter = rateofSubscription.HasValue ?
                new ObjectParameter("RateofSubscription", rateofSubscription) :
                new ObjectParameter("RateofSubscription", typeof(decimal));
    
            var renewalXMLParameter = renewalXML != null ?
                new ObjectParameter("RenewalXML", renewalXML) :
                new ObjectParameter("RenewalXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateeDistTWDataExt_Result>("SpUpdateeDistTWDataExt", benSnoParameter, regoistrationNumberParameter, employernatureParameter, ruralUrbanParameter, employerAddressParameter, regNoOftheInstituteParameter, natureoftheJobParameter, workSpaceDetailsAndAddressParameter, statusoftheWorkerParameter, eligibilityCertificateFormStringParameter, eligibilityCertificateFormExtensionParameter, dependentPassbookStringParameter, dependentPassbookExtParameter, drivingLicenseStringParameter, drivingLicenseExtParameter, natureOfthevehicleParameter, natureofDutyParameter, certificateofIdentificationAttachedParameter, feeSubmissionParticularsParameter, rateofSubscriptionParameter, renewalXMLParameter);
        }
    
        public virtual ObjectResult<SpUpdateNomineeCAFDeatils_Result> SpUpdateNomineeCAFDeatils(string benData, Nullable<long> modifiedBy, string benUserKey, string benUserPwd, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateNomineeCAFDeatils_Result>("SpUpdateNomineeCAFDeatils", benDataParameter, modifiedByParameter, benUserKeyParameter, benUserPwdParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SpgetSSI_NumberDetails_Result> SpgetSSI_NumberDetails(string sSI_Number)
        {
            var sSI_NumberParameter = sSI_Number != null ?
                new ObjectParameter("SSI_Number", sSI_Number) :
                new ObjectParameter("SSI_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpgetSSI_NumberDetails_Result>("SpgetSSI_NumberDetails", sSI_NumberParameter);
        }
    
        public virtual ObjectResult<SpSaveMergedSSI_NoDetails_Result> SpSaveMergedSSI_NoDetails(string sSI_Number1, string sSI_Number2, Nullable<long> modifiedBy, string systemIp)
        {
            var sSI_Number1Parameter = sSI_Number1 != null ?
                new ObjectParameter("SSI_Number1", sSI_Number1) :
                new ObjectParameter("SSI_Number1", typeof(string));
    
            var sSI_Number2Parameter = sSI_Number2 != null ?
                new ObjectParameter("SSI_Number2", sSI_Number2) :
                new ObjectParameter("SSI_Number2", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("modifiedBy", modifiedBy) :
                new ObjectParameter("modifiedBy", typeof(long));
    
            var systemIpParameter = systemIp != null ?
                new ObjectParameter("SystemIp", systemIp) :
                new ObjectParameter("SystemIp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSaveMergedSSI_NoDetails_Result>("SpSaveMergedSSI_NoDetails", sSI_Number1Parameter, sSI_Number2Parameter, modifiedByParameter, systemIpParameter);
        }
    
        public virtual ObjectResult<SpUpdateGroupVerificationdetails_Result> SpUpdateGroupVerificationdetails(string benData, Nullable<long> modifiedBy, string benUserKey, string benUserPwd, Nullable<long> benUserid)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateGroupVerificationdetails_Result>("SpUpdateGroupVerificationdetails", benDataParameter, modifiedByParameter, benUserKeyParameter, benUserPwdParameter, benUseridParameter);
        }
    
        public virtual ObjectResult<SPgeteDistFilePaths_Result> SPgeteDistFilePaths(string aINNumber, string regNumber)
        {
            var aINNumberParameter = aINNumber != null ?
                new ObjectParameter("AINNumber", aINNumber) :
                new ObjectParameter("AINNumber", typeof(string));
    
            var regNumberParameter = regNumber != null ?
                new ObjectParameter("RegNumber", regNumber) :
                new ObjectParameter("RegNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPgeteDistFilePaths_Result>("SPgeteDistFilePaths", aINNumberParameter, regNumberParameter);
        }
    
        public virtual ObjectResult<SpGetBeneAddressDetEditHistory_Result> SpGetBeneAddressDetEditHistory(Nullable<long> bensno)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBeneAddressDetEditHistory_Result>("SpGetBeneAddressDetEditHistory", bensnoParameter);
        }
    
        public virtual ObjectResult<SpGetBeneHusbandDetEditHistory_Result> SpGetBeneHusbandDetEditHistory(Nullable<long> bensno)
        {
            var bensnoParameter = bensno.HasValue ?
                new ObjectParameter("Bensno", bensno) :
                new ObjectParameter("Bensno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBeneHusbandDetEditHistory_Result>("SpGetBeneHusbandDetEditHistory", bensnoParameter);
        }
    
        public virtual ObjectResult<SpGetEditPersonalHusbandDetApp_Result> SpGetEditPersonalHusbandDetApp(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditPersonalHusbandDetApp_Result>("SpGetEditPersonalHusbandDetApp", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpGetEditPersonalHusbandDetAppByIdExt_Result> SpGetEditPersonalHusbandDetAppByIdExt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditPersonalHusbandDetAppByIdExt_Result>("SpGetEditPersonalHusbandDetAppByIdExt", idParameter);
        }
    
        public virtual ObjectResult<SpGetEditAddressDetApp_Result> SpGetEditAddressDetApp(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditAddressDetApp_Result>("SpGetEditAddressDetApp", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpGetEditAddressDetAppByIdExt_Result> SpGetEditAddressDetAppByIdExt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditAddressDetAppByIdExt_Result>("SpGetEditAddressDetAppByIdExt", idParameter);
        }
    
        public virtual ObjectResult<SpGeteDistTWDataApplications_Result> SpGeteDistTWDataApplications(Nullable<int> userId, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGeteDistTWDataApplications_Result>("SpGeteDistTWDataApplications", userIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SpGetBenSnoByAddressEditID_Result> SpGetBenSnoByAddressEditID(string addressEditID)
        {
            var addressEditIDParameter = addressEditID != null ?
                new ObjectParameter("AddressEditID", addressEditID) :
                new ObjectParameter("AddressEditID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenSnoByAddressEditID_Result>("SpGetBenSnoByAddressEditID", addressEditIDParameter);
        }
    
        public virtual ObjectResult<SpGetEditPermanentAddressDetAppByIdExt_Result> SpGetEditPermanentAddressDetAppByIdExt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditPermanentAddressDetAppByIdExt_Result>("SpGetEditPermanentAddressDetAppByIdExt", idParameter);
        }
    
        public virtual ObjectResult<SpGetEditPresentAddressDetAppByIdExt_Result> SpGetEditPresentAddressDetAppByIdExt(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditPresentAddressDetAppByIdExt_Result>("SpGetEditPresentAddressDetAppByIdExt", idParameter);
        }
    
        public virtual ObjectResult<SpGetNameChangedDocument_Result> SpGetNameChangedDocument(Nullable<long> benSno)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetNameChangedDocument_Result>("SpGetNameChangedDocument", benSnoParameter);
        }
    
        public virtual ObjectResult<SpGetApllicationSummery_Result> SpGetApllicationSummery(Nullable<int> userType, Nullable<int> userId, Nullable<int> status, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> page, Nullable<int> skip, string searchvalue, string gps, string locationId, string workerType)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("Skip", skip) :
                new ObjectParameter("Skip", typeof(int));
    
            var searchvalueParameter = searchvalue != null ?
                new ObjectParameter("Searchvalue", searchvalue) :
                new ObjectParameter("Searchvalue", typeof(string));
    
            var gpsParameter = gps != null ?
                new ObjectParameter("Gps", gps) :
                new ObjectParameter("Gps", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var workerTypeParameter = workerType != null ?
                new ObjectParameter("WorkerType", workerType) :
                new ObjectParameter("WorkerType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetApllicationSummery_Result>("SpGetApllicationSummery", userTypeParameter, userIdParameter, statusParameter, fromdateParameter, todateParameter, pageParameter, skipParameter, searchvalueParameter, gpsParameter, locationIdParameter, workerTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> SpGetApllicationSummeryCount(Nullable<int> userType, Nullable<int> userId, Nullable<int> status, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string gps)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var gpsParameter = gps != null ?
                new ObjectParameter("Gps", gps) :
                new ObjectParameter("Gps", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("SpGetApllicationSummeryCount", userTypeParameter, userIdParameter, statusParameter, fromdateParameter, todateParameter, gpsParameter);
        }
    
        public virtual ObjectResult<spGetSLOCode_Result> spGetSLOCode(Nullable<long> benSNo)
        {
            var benSNoParameter = benSNo.HasValue ?
                new ObjectParameter("BenSNo", benSNo) :
                new ObjectParameter("BenSNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSLOCode_Result>("spGetSLOCode", benSNoParameter);
        }
    
        public virtual ObjectResult<SpSLOMapping_Result> SpSLOMapping(Nullable<long> benSno, Nullable<int> userId, string sysIp)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var sysIpParameter = sysIp != null ?
                new ObjectParameter("SysIp", sysIp) :
                new ObjectParameter("SysIp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpSLOMapping_Result>("SpSLOMapping", benSnoParameter, userIdParameter, sysIpParameter);
        }
    
        public virtual ObjectResult<SpGetSLOList_Result> SpGetSLOList(Nullable<long> benSNo)
        {
            var benSNoParameter = benSNo.HasValue ?
                new ObjectParameter("benSNo", benSNo) :
                new ObjectParameter("benSNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSLOList_Result>("SpGetSLOList", benSNoParameter);
        }
    
        public virtual ObjectResult<SpEditBankDetails_Result> SpEditBankDetails(Nullable<long> benSno, Nullable<int> district, Nullable<int> location, string benBankName, string benBankBranch, string benBankAccNo, string ifscReason, string benBankIfscCode, string document, string benSystemipAdress)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var benBankNameParameter = benBankName != null ?
                new ObjectParameter("BenBankName", benBankName) :
                new ObjectParameter("BenBankName", typeof(string));
    
            var benBankBranchParameter = benBankBranch != null ?
                new ObjectParameter("BenBankBranch", benBankBranch) :
                new ObjectParameter("BenBankBranch", typeof(string));
    
            var benBankAccNoParameter = benBankAccNo != null ?
                new ObjectParameter("BenBankAccNo", benBankAccNo) :
                new ObjectParameter("BenBankAccNo", typeof(string));
    
            var ifscReasonParameter = ifscReason != null ?
                new ObjectParameter("IfscReason", ifscReason) :
                new ObjectParameter("IfscReason", typeof(string));
    
            var benBankIfscCodeParameter = benBankIfscCode != null ?
                new ObjectParameter("BenBankIfscCode", benBankIfscCode) :
                new ObjectParameter("BenBankIfscCode", typeof(string));
    
            var documentParameter = document != null ?
                new ObjectParameter("Document", document) :
                new ObjectParameter("Document", typeof(string));
    
            var benSystemipAdressParameter = benSystemipAdress != null ?
                new ObjectParameter("BenSystemipAdress", benSystemipAdress) :
                new ObjectParameter("BenSystemipAdress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEditBankDetails_Result>("SpEditBankDetails", benSnoParameter, districtParameter, locationParameter, benBankNameParameter, benBankBranchParameter, benBankAccNoParameter, ifscReasonParameter, benBankIfscCodeParameter, documentParameter, benSystemipAdressParameter);
        }
    
        public virtual ObjectResult<SpEditBenePersonalDetailsExt1_Result> SpEditBenePersonalDetailsExt1(Nullable<long> benSno, string beneFirstName, string benLastName, string benMiddleName, Nullable<System.DateTime> beneDOB, string documentIDProof, string documentDOBProof, string iDProofExtension, string dOBProofExtension, string changeType, string benSystemipAdress)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var beneFirstNameParameter = beneFirstName != null ?
                new ObjectParameter("BeneFirstName", beneFirstName) :
                new ObjectParameter("BeneFirstName", typeof(string));
    
            var benLastNameParameter = benLastName != null ?
                new ObjectParameter("BenLastName", benLastName) :
                new ObjectParameter("BenLastName", typeof(string));
    
            var benMiddleNameParameter = benMiddleName != null ?
                new ObjectParameter("BenMiddleName", benMiddleName) :
                new ObjectParameter("BenMiddleName", typeof(string));
    
            var beneDOBParameter = beneDOB.HasValue ?
                new ObjectParameter("BeneDOB", beneDOB) :
                new ObjectParameter("BeneDOB", typeof(System.DateTime));
    
            var documentIDProofParameter = documentIDProof != null ?
                new ObjectParameter("DocumentIDProof", documentIDProof) :
                new ObjectParameter("DocumentIDProof", typeof(string));
    
            var documentDOBProofParameter = documentDOBProof != null ?
                new ObjectParameter("DocumentDOBProof", documentDOBProof) :
                new ObjectParameter("DocumentDOBProof", typeof(string));
    
            var iDProofExtensionParameter = iDProofExtension != null ?
                new ObjectParameter("IDProofExtension", iDProofExtension) :
                new ObjectParameter("IDProofExtension", typeof(string));
    
            var dOBProofExtensionParameter = dOBProofExtension != null ?
                new ObjectParameter("DOBProofExtension", dOBProofExtension) :
                new ObjectParameter("DOBProofExtension", typeof(string));
    
            var changeTypeParameter = changeType != null ?
                new ObjectParameter("ChangeType", changeType) :
                new ObjectParameter("ChangeType", typeof(string));
    
            var benSystemipAdressParameter = benSystemipAdress != null ?
                new ObjectParameter("BenSystemipAdress", benSystemipAdress) :
                new ObjectParameter("BenSystemipAdress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEditBenePersonalDetailsExt1_Result>("SpEditBenePersonalDetailsExt1", benSnoParameter, beneFirstNameParameter, benLastNameParameter, benMiddleNameParameter, beneDOBParameter, documentIDProofParameter, documentDOBProofParameter, iDProofExtensionParameter, dOBProofExtensionParameter, changeTypeParameter, benSystemipAdressParameter);
        }
    
        public virtual ObjectResult<SpInsertBeneAddressReq_Result> SpInsertBeneAddressReq(Nullable<long> benSno, string perDIstID, string perSubDivID, string perBMC, string perBlock, string perPSID, string perPOID, string perPinCode, string perWard, string perVlg, string preDIstID, string preSubDivID, string preBMC, string preBlock, string prePSID, string prePOID, string prePinCode, string preWard, string preVlg, string createdBy, string proofExtension, string proofString, string benSystemipAdress)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            var perDIstIDParameter = perDIstID != null ?
                new ObjectParameter("PerDIstID", perDIstID) :
                new ObjectParameter("PerDIstID", typeof(string));
    
            var perSubDivIDParameter = perSubDivID != null ?
                new ObjectParameter("PerSubDivID", perSubDivID) :
                new ObjectParameter("PerSubDivID", typeof(string));
    
            var perBMCParameter = perBMC != null ?
                new ObjectParameter("PerBMC", perBMC) :
                new ObjectParameter("PerBMC", typeof(string));
    
            var perBlockParameter = perBlock != null ?
                new ObjectParameter("PerBlock", perBlock) :
                new ObjectParameter("PerBlock", typeof(string));
    
            var perPSIDParameter = perPSID != null ?
                new ObjectParameter("PerPSID", perPSID) :
                new ObjectParameter("PerPSID", typeof(string));
    
            var perPOIDParameter = perPOID != null ?
                new ObjectParameter("PerPOID", perPOID) :
                new ObjectParameter("PerPOID", typeof(string));
    
            var perPinCodeParameter = perPinCode != null ?
                new ObjectParameter("PerPinCode", perPinCode) :
                new ObjectParameter("PerPinCode", typeof(string));
    
            var perWardParameter = perWard != null ?
                new ObjectParameter("PerWard", perWard) :
                new ObjectParameter("PerWard", typeof(string));
    
            var perVlgParameter = perVlg != null ?
                new ObjectParameter("PerVlg", perVlg) :
                new ObjectParameter("PerVlg", typeof(string));
    
            var preDIstIDParameter = preDIstID != null ?
                new ObjectParameter("PreDIstID", preDIstID) :
                new ObjectParameter("PreDIstID", typeof(string));
    
            var preSubDivIDParameter = preSubDivID != null ?
                new ObjectParameter("PreSubDivID", preSubDivID) :
                new ObjectParameter("PreSubDivID", typeof(string));
    
            var preBMCParameter = preBMC != null ?
                new ObjectParameter("PreBMC", preBMC) :
                new ObjectParameter("PreBMC", typeof(string));
    
            var preBlockParameter = preBlock != null ?
                new ObjectParameter("PreBlock", preBlock) :
                new ObjectParameter("PreBlock", typeof(string));
    
            var prePSIDParameter = prePSID != null ?
                new ObjectParameter("PrePSID", prePSID) :
                new ObjectParameter("PrePSID", typeof(string));
    
            var prePOIDParameter = prePOID != null ?
                new ObjectParameter("PrePOID", prePOID) :
                new ObjectParameter("PrePOID", typeof(string));
    
            var prePinCodeParameter = prePinCode != null ?
                new ObjectParameter("PrePinCode", prePinCode) :
                new ObjectParameter("PrePinCode", typeof(string));
    
            var preWardParameter = preWard != null ?
                new ObjectParameter("PreWard", preWard) :
                new ObjectParameter("PreWard", typeof(string));
    
            var preVlgParameter = preVlg != null ?
                new ObjectParameter("PreVlg", preVlg) :
                new ObjectParameter("PreVlg", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var proofExtensionParameter = proofExtension != null ?
                new ObjectParameter("ProofExtension", proofExtension) :
                new ObjectParameter("ProofExtension", typeof(string));
    
            var proofStringParameter = proofString != null ?
                new ObjectParameter("ProofString", proofString) :
                new ObjectParameter("ProofString", typeof(string));
    
            var benSystemipAdressParameter = benSystemipAdress != null ?
                new ObjectParameter("BenSystemipAdress", benSystemipAdress) :
                new ObjectParameter("BenSystemipAdress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpInsertBeneAddressReq_Result>("SpInsertBeneAddressReq", benSnoParameter, perDIstIDParameter, perSubDivIDParameter, perBMCParameter, perBlockParameter, perPSIDParameter, perPOIDParameter, perPinCodeParameter, perWardParameter, perVlgParameter, preDIstIDParameter, preSubDivIDParameter, preBMCParameter, preBlockParameter, prePSIDParameter, prePOIDParameter, prePinCodeParameter, preWardParameter, preVlgParameter, createdByParameter, proofExtensionParameter, proofStringParameter, benSystemipAdressParameter);
        }
    
        public virtual ObjectResult<SpVerifiyAddressDetails_Result> SpVerifiyAddressDetails(Nullable<long> id, Nullable<int> status, string remarks, Nullable<int> userId, string userIpAddress)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userIpAddressParameter = userIpAddress != null ?
                new ObjectParameter("UserIpAddress", userIpAddress) :
                new ObjectParameter("UserIpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyAddressDetails_Result>("SpVerifiyAddressDetails", idParameter, statusParameter, remarksParameter, userIdParameter, userIpAddressParameter);
        }
    
        public virtual ObjectResult<SpVerifiyBankDetails_Result> SpVerifiyBankDetails(Nullable<long> id, Nullable<int> status, string remarks, Nullable<int> userId, string userIpAddress)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userIpAddressParameter = userIpAddress != null ?
                new ObjectParameter("UserIpAddress", userIpAddress) :
                new ObjectParameter("UserIpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyBankDetails_Result>("SpVerifiyBankDetails", idParameter, statusParameter, remarksParameter, userIdParameter, userIpAddressParameter);
        }
    
        public virtual ObjectResult<SpVerifiyDOBDetails_Result> SpVerifiyDOBDetails(Nullable<long> id, Nullable<int> status, string remarks, Nullable<int> userId, string userIpAddress)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userIpAddressParameter = userIpAddress != null ?
                new ObjectParameter("UserIpAddress", userIpAddress) :
                new ObjectParameter("UserIpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyDOBDetails_Result>("SpVerifiyDOBDetails", idParameter, statusParameter, remarksParameter, userIdParameter, userIpAddressParameter);
        }
    
        public virtual ObjectResult<SpVerifiyPersonalDetails_Result> SpVerifiyPersonalDetails(Nullable<long> id, Nullable<int> status, string remarks, string bengaliName, Nullable<int> userId, string userIpAddress)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var bengaliNameParameter = bengaliName != null ?
                new ObjectParameter("BengaliName", bengaliName) :
                new ObjectParameter("BengaliName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userIpAddressParameter = userIpAddress != null ?
                new ObjectParameter("UserIpAddress", userIpAddress) :
                new ObjectParameter("UserIpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyPersonalDetails_Result>("SpVerifiyPersonalDetails", idParameter, statusParameter, remarksParameter, bengaliNameParameter, userIdParameter, userIpAddressParameter);
        }
    
        public virtual ObjectResult<SpVerifiyPersonalHusbandDetails_Result> SpVerifiyPersonalHusbandDetails(Nullable<long> id, Nullable<int> status, string remarks, string bengaliName, Nullable<int> userId, string userIpAddress)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var bengaliNameParameter = bengaliName != null ?
                new ObjectParameter("BengaliName", bengaliName) :
                new ObjectParameter("BengaliName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userIpAddressParameter = userIpAddress != null ?
                new ObjectParameter("UserIpAddress", userIpAddress) :
                new ObjectParameter("UserIpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVerifiyPersonalHusbandDetails_Result>("SpVerifiyPersonalHusbandDetails", idParameter, statusParameter, remarksParameter, bengaliNameParameter, userIdParameter, userIpAddressParameter);
        }
    
        public virtual ObjectResult<SpDashClaimStatusSLO_Result> SpDashClaimStatusSLO(Nullable<int> mapping)
        {
            var mappingParameter = mapping.HasValue ?
                new ObjectParameter("Mapping", mapping) :
                new ObjectParameter("Mapping", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDashClaimStatusSLO_Result>("SpDashClaimStatusSLO", mappingParameter);
        }
    
        public virtual ObjectResult<SpGetApllicationSummeryExt_Result> SpGetApllicationSummeryExt(Nullable<int> userType, Nullable<int> userId, Nullable<int> status, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> page, Nullable<int> skip, string searchvalue, string gps, string locationId, string workerType, string benRegTyp)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("Skip", skip) :
                new ObjectParameter("Skip", typeof(int));
    
            var searchvalueParameter = searchvalue != null ?
                new ObjectParameter("Searchvalue", searchvalue) :
                new ObjectParameter("Searchvalue", typeof(string));
    
            var gpsParameter = gps != null ?
                new ObjectParameter("Gps", gps) :
                new ObjectParameter("Gps", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var workerTypeParameter = workerType != null ?
                new ObjectParameter("WorkerType", workerType) :
                new ObjectParameter("WorkerType", typeof(string));
    
            var benRegTypParameter = benRegTyp != null ?
                new ObjectParameter("BenRegTyp", benRegTyp) :
                new ObjectParameter("BenRegTyp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetApllicationSummeryExt_Result>("SpGetApllicationSummeryExt", userTypeParameter, userIdParameter, statusParameter, fromdateParameter, todateParameter, pageParameter, skipParameter, searchvalueParameter, gpsParameter, locationIdParameter, workerTypeParameter, benRegTypParameter);
        }
    
        public virtual ObjectResult<SpUpdateNomineeCAFDeatilsext_Result> SpUpdateNomineeCAFDeatilsext(string benData, Nullable<long> modifiedBy, string benUserKey, string benUserPwd, Nullable<long> benUserid, string regNumber)
        {
            var benDataParameter = benData != null ?
                new ObjectParameter("benData", benData) :
                new ObjectParameter("benData", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var benUserKeyParameter = benUserKey != null ?
                new ObjectParameter("BenUserKey", benUserKey) :
                new ObjectParameter("BenUserKey", typeof(string));
    
            var benUserPwdParameter = benUserPwd != null ?
                new ObjectParameter("BenUserPwd", benUserPwd) :
                new ObjectParameter("BenUserPwd", typeof(string));
    
            var benUseridParameter = benUserid.HasValue ?
                new ObjectParameter("BenUserid", benUserid) :
                new ObjectParameter("BenUserid", typeof(long));
    
            var regNumberParameter = regNumber != null ?
                new ObjectParameter("RegNumber", regNumber) :
                new ObjectParameter("RegNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateNomineeCAFDeatilsext_Result>("SpUpdateNomineeCAFDeatilsext", benDataParameter, modifiedByParameter, benUserKeyParameter, benUserPwdParameter, benUseridParameter, regNumberParameter);
        }
    
        public virtual ObjectResult<SpGetBenfDetails_Result> SpGetBenfDetails(Nullable<long> benSno)
        {
            var benSnoParameter = benSno.HasValue ?
                new ObjectParameter("BenSno", benSno) :
                new ObjectParameter("BenSno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenfDetails_Result>("SpGetBenfDetails", benSnoParameter);
        }
    
        public virtual ObjectResult<SPGetPFBalanceExt_Result> SPGetPFBalanceExt(string pFAccountNumber)
        {
            var pFAccountNumberParameter = pFAccountNumber != null ?
                new ObjectParameter("PFAccountNumber", pFAccountNumber) :
                new ObjectParameter("PFAccountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetPFBalanceExt_Result>("SPGetPFBalanceExt", pFAccountNumberParameter);
        }
    
        public virtual int SP_UpdateUserPassword(Nullable<long> userId, string userpwd, string saltKey)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            var userpwdParameter = userpwd != null ?
                new ObjectParameter("Userpwd", userpwd) :
                new ObjectParameter("Userpwd", typeof(string));
    
            var saltKeyParameter = saltKey != null ?
                new ObjectParameter("SaltKey", saltKey) :
                new ObjectParameter("SaltKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateUserPassword", userIdParameter, userpwdParameter, saltKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetSiteCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetSiteCount");
        }
    
        public virtual ObjectResult<SP_DeailedReport_Result> SP_DeailedReport(Nullable<int> distid, string subdivid, string blockid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> occupation, string scheme, Nullable<int> usertype, string status, Nullable<int> userCategoryId, Nullable<int> selectedUserType, Nullable<int> userid, string userLst, Nullable<int> skip, Nullable<int> page, string serchval, string value, string fillType, string po, string pS, string gpWard, string religion)
        {
            var distidParameter = distid.HasValue ?
                new ObjectParameter("distid", distid) :
                new ObjectParameter("distid", typeof(int));
    
            var subdividParameter = subdivid != null ?
                new ObjectParameter("subdivid", subdivid) :
                new ObjectParameter("subdivid", typeof(string));
    
            var blockidParameter = blockid != null ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var occupationParameter = occupation.HasValue ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(int));
    
            var schemeParameter = scheme != null ?
                new ObjectParameter("scheme", scheme) :
                new ObjectParameter("scheme", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            var selectedUserTypeParameter = selectedUserType.HasValue ?
                new ObjectParameter("SelectedUserType", selectedUserType) :
                new ObjectParameter("SelectedUserType", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var userLstParameter = userLst != null ?
                new ObjectParameter("UserLst", userLst) :
                new ObjectParameter("UserLst", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var serchvalParameter = serchval != null ?
                new ObjectParameter("serchval", serchval) :
                new ObjectParameter("serchval", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var fillTypeParameter = fillType != null ?
                new ObjectParameter("FillType", fillType) :
                new ObjectParameter("FillType", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("Po", po) :
                new ObjectParameter("Po", typeof(string));
    
            var pSParameter = pS != null ?
                new ObjectParameter("PS", pS) :
                new ObjectParameter("PS", typeof(string));
    
            var gpWardParameter = gpWard != null ?
                new ObjectParameter("GpWard", gpWard) :
                new ObjectParameter("GpWard", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DeailedReport_Result>("SP_DeailedReport", distidParameter, subdividParameter, blockidParameter, fromdateParameter, todateParameter, occupationParameter, schemeParameter, usertypeParameter, statusParameter, userCategoryIdParameter, selectedUserTypeParameter, useridParameter, userLstParameter, skipParameter, pageParameter, serchvalParameter, valueParameter, fillTypeParameter, poParameter, pSParameter, gpWardParameter, religionParameter);
        }
    
        public virtual int SP_CreateMenu(Nullable<int> subMenuId, string menuName, string menuUrl, string @class, Nullable<int> order, string roleIds)
        {
            var subMenuIdParameter = subMenuId.HasValue ?
                new ObjectParameter("SubMenuId", subMenuId) :
                new ObjectParameter("SubMenuId", typeof(int));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            var menuUrlParameter = menuUrl != null ?
                new ObjectParameter("MenuUrl", menuUrl) :
                new ObjectParameter("MenuUrl", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var roleIdsParameter = roleIds != null ?
                new ObjectParameter("RoleIds", roleIds) :
                new ObjectParameter("RoleIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateMenu", subMenuIdParameter, menuNameParameter, menuUrlParameter, classParameter, orderParameter, roleIdsParameter);
        }
    
        public virtual int SP_CreateRole(string userTypeName, string reg, Nullable<int> order, Nullable<bool> isActive, Nullable<int> userCategoryId)
        {
            var userTypeNameParameter = userTypeName != null ?
                new ObjectParameter("UserTypeName", userTypeName) :
                new ObjectParameter("UserTypeName", typeof(string));
    
            var regParameter = reg != null ?
                new ObjectParameter("reg", reg) :
                new ObjectParameter("reg", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var userCategoryIdParameter = userCategoryId.HasValue ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateRole", userTypeNameParameter, regParameter, orderParameter, isActiveParameter, userCategoryIdParameter);
        }
    }
}
